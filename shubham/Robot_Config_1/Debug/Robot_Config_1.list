
Robot_Config_1.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001c4  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0000d0cc  080001d0  080001d0  000011d0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000006e0  0800d2a0  0800d2a0  0000e2a0  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  0800d980  0800d980  0000f1fc  2**0
                  CONTENTS
  4 .ARM          00000008  0800d980  0800d980  0000e980  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  0800d988  0800d988  0000f1fc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  0800d988  0800d988  0000e988  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  0800d98c  0800d98c  0000e98c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         000001fc  20000000  0800d990  0000f000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000064c  200001fc  0800db8c  0000f1fc  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  20000848  0800db8c  0000f848  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  0000f1fc  2**0
                  CONTENTS, READONLY
 12 .debug_info   00012b63  00000000  00000000  0000f22c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00002823  00000000  00000000  00021d8f  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00001248  00000000  00000000  000245b8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_rnglists 00000e73  00000000  00000000  00025800  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00024156  00000000  00000000  00026673  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   000162f1  00000000  00000000  0004a7c9  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    000d878f  00000000  00000000  00060aba  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000043  00000000  00000000  00139249  2**0
                  CONTENTS, READONLY
 20 .debug_frame  000063f0  00000000  00000000  0013928c  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 0000006c  00000000  00000000  0013f67c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001d0 <__do_global_dtors_aux>:
 80001d0:	b510      	push	{r4, lr}
 80001d2:	4c05      	ldr	r4, [pc, #20]	@ (80001e8 <__do_global_dtors_aux+0x18>)
 80001d4:	7823      	ldrb	r3, [r4, #0]
 80001d6:	b933      	cbnz	r3, 80001e6 <__do_global_dtors_aux+0x16>
 80001d8:	4b04      	ldr	r3, [pc, #16]	@ (80001ec <__do_global_dtors_aux+0x1c>)
 80001da:	b113      	cbz	r3, 80001e2 <__do_global_dtors_aux+0x12>
 80001dc:	4804      	ldr	r0, [pc, #16]	@ (80001f0 <__do_global_dtors_aux+0x20>)
 80001de:	f3af 8000 	nop.w
 80001e2:	2301      	movs	r3, #1
 80001e4:	7023      	strb	r3, [r4, #0]
 80001e6:	bd10      	pop	{r4, pc}
 80001e8:	200001fc 	.word	0x200001fc
 80001ec:	00000000 	.word	0x00000000
 80001f0:	0800d284 	.word	0x0800d284

080001f4 <frame_dummy>:
 80001f4:	b508      	push	{r3, lr}
 80001f6:	4b03      	ldr	r3, [pc, #12]	@ (8000204 <frame_dummy+0x10>)
 80001f8:	b11b      	cbz	r3, 8000202 <frame_dummy+0xe>
 80001fa:	4903      	ldr	r1, [pc, #12]	@ (8000208 <frame_dummy+0x14>)
 80001fc:	4803      	ldr	r0, [pc, #12]	@ (800020c <frame_dummy+0x18>)
 80001fe:	f3af 8000 	nop.w
 8000202:	bd08      	pop	{r3, pc}
 8000204:	00000000 	.word	0x00000000
 8000208:	20000200 	.word	0x20000200
 800020c:	0800d284 	.word	0x0800d284

08000210 <memchr>:
 8000210:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 8000214:	2a10      	cmp	r2, #16
 8000216:	db2b      	blt.n	8000270 <memchr+0x60>
 8000218:	f010 0f07 	tst.w	r0, #7
 800021c:	d008      	beq.n	8000230 <memchr+0x20>
 800021e:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000222:	3a01      	subs	r2, #1
 8000224:	428b      	cmp	r3, r1
 8000226:	d02d      	beq.n	8000284 <memchr+0x74>
 8000228:	f010 0f07 	tst.w	r0, #7
 800022c:	b342      	cbz	r2, 8000280 <memchr+0x70>
 800022e:	d1f6      	bne.n	800021e <memchr+0xe>
 8000230:	b4f0      	push	{r4, r5, r6, r7}
 8000232:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000236:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800023a:	f022 0407 	bic.w	r4, r2, #7
 800023e:	f07f 0700 	mvns.w	r7, #0
 8000242:	2300      	movs	r3, #0
 8000244:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000248:	3c08      	subs	r4, #8
 800024a:	ea85 0501 	eor.w	r5, r5, r1
 800024e:	ea86 0601 	eor.w	r6, r6, r1
 8000252:	fa85 f547 	uadd8	r5, r5, r7
 8000256:	faa3 f587 	sel	r5, r3, r7
 800025a:	fa86 f647 	uadd8	r6, r6, r7
 800025e:	faa5 f687 	sel	r6, r5, r7
 8000262:	b98e      	cbnz	r6, 8000288 <memchr+0x78>
 8000264:	d1ee      	bne.n	8000244 <memchr+0x34>
 8000266:	bcf0      	pop	{r4, r5, r6, r7}
 8000268:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 800026c:	f002 0207 	and.w	r2, r2, #7
 8000270:	b132      	cbz	r2, 8000280 <memchr+0x70>
 8000272:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000276:	3a01      	subs	r2, #1
 8000278:	ea83 0301 	eor.w	r3, r3, r1
 800027c:	b113      	cbz	r3, 8000284 <memchr+0x74>
 800027e:	d1f8      	bne.n	8000272 <memchr+0x62>
 8000280:	2000      	movs	r0, #0
 8000282:	4770      	bx	lr
 8000284:	3801      	subs	r0, #1
 8000286:	4770      	bx	lr
 8000288:	2d00      	cmp	r5, #0
 800028a:	bf06      	itte	eq
 800028c:	4635      	moveq	r5, r6
 800028e:	3803      	subeq	r0, #3
 8000290:	3807      	subne	r0, #7
 8000292:	f015 0f01 	tst.w	r5, #1
 8000296:	d107      	bne.n	80002a8 <memchr+0x98>
 8000298:	3001      	adds	r0, #1
 800029a:	f415 7f80 	tst.w	r5, #256	@ 0x100
 800029e:	bf02      	ittt	eq
 80002a0:	3001      	addeq	r0, #1
 80002a2:	f415 3fc0 	tsteq.w	r5, #98304	@ 0x18000
 80002a6:	3001      	addeq	r0, #1
 80002a8:	bcf0      	pop	{r4, r5, r6, r7}
 80002aa:	3801      	subs	r0, #1
 80002ac:	4770      	bx	lr
 80002ae:	bf00      	nop

080002b0 <strlen>:
 80002b0:	4603      	mov	r3, r0
 80002b2:	f813 2b01 	ldrb.w	r2, [r3], #1
 80002b6:	2a00      	cmp	r2, #0
 80002b8:	d1fb      	bne.n	80002b2 <strlen+0x2>
 80002ba:	1a18      	subs	r0, r3, r0
 80002bc:	3801      	subs	r0, #1
 80002be:	4770      	bx	lr

080002c0 <__aeabi_drsub>:
 80002c0:	f081 4100 	eor.w	r1, r1, #2147483648	@ 0x80000000
 80002c4:	e002      	b.n	80002cc <__adddf3>
 80002c6:	bf00      	nop

080002c8 <__aeabi_dsub>:
 80002c8:	f083 4300 	eor.w	r3, r3, #2147483648	@ 0x80000000

080002cc <__adddf3>:
 80002cc:	b530      	push	{r4, r5, lr}
 80002ce:	ea4f 0441 	mov.w	r4, r1, lsl #1
 80002d2:	ea4f 0543 	mov.w	r5, r3, lsl #1
 80002d6:	ea94 0f05 	teq	r4, r5
 80002da:	bf08      	it	eq
 80002dc:	ea90 0f02 	teqeq	r0, r2
 80002e0:	bf1f      	itttt	ne
 80002e2:	ea54 0c00 	orrsne.w	ip, r4, r0
 80002e6:	ea55 0c02 	orrsne.w	ip, r5, r2
 80002ea:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 80002ee:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80002f2:	f000 80e2 	beq.w	80004ba <__adddf3+0x1ee>
 80002f6:	ea4f 5454 	mov.w	r4, r4, lsr #21
 80002fa:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 80002fe:	bfb8      	it	lt
 8000300:	426d      	neglt	r5, r5
 8000302:	dd0c      	ble.n	800031e <__adddf3+0x52>
 8000304:	442c      	add	r4, r5
 8000306:	ea80 0202 	eor.w	r2, r0, r2
 800030a:	ea81 0303 	eor.w	r3, r1, r3
 800030e:	ea82 0000 	eor.w	r0, r2, r0
 8000312:	ea83 0101 	eor.w	r1, r3, r1
 8000316:	ea80 0202 	eor.w	r2, r0, r2
 800031a:	ea81 0303 	eor.w	r3, r1, r3
 800031e:	2d36      	cmp	r5, #54	@ 0x36
 8000320:	bf88      	it	hi
 8000322:	bd30      	pophi	{r4, r5, pc}
 8000324:	f011 4f00 	tst.w	r1, #2147483648	@ 0x80000000
 8000328:	ea4f 3101 	mov.w	r1, r1, lsl #12
 800032c:	f44f 1c80 	mov.w	ip, #1048576	@ 0x100000
 8000330:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 8000334:	d002      	beq.n	800033c <__adddf3+0x70>
 8000336:	4240      	negs	r0, r0
 8000338:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 800033c:	f013 4f00 	tst.w	r3, #2147483648	@ 0x80000000
 8000340:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000344:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 8000348:	d002      	beq.n	8000350 <__adddf3+0x84>
 800034a:	4252      	negs	r2, r2
 800034c:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000350:	ea94 0f05 	teq	r4, r5
 8000354:	f000 80a7 	beq.w	80004a6 <__adddf3+0x1da>
 8000358:	f1a4 0401 	sub.w	r4, r4, #1
 800035c:	f1d5 0e20 	rsbs	lr, r5, #32
 8000360:	db0d      	blt.n	800037e <__adddf3+0xb2>
 8000362:	fa02 fc0e 	lsl.w	ip, r2, lr
 8000366:	fa22 f205 	lsr.w	r2, r2, r5
 800036a:	1880      	adds	r0, r0, r2
 800036c:	f141 0100 	adc.w	r1, r1, #0
 8000370:	fa03 f20e 	lsl.w	r2, r3, lr
 8000374:	1880      	adds	r0, r0, r2
 8000376:	fa43 f305 	asr.w	r3, r3, r5
 800037a:	4159      	adcs	r1, r3
 800037c:	e00e      	b.n	800039c <__adddf3+0xd0>
 800037e:	f1a5 0520 	sub.w	r5, r5, #32
 8000382:	f10e 0e20 	add.w	lr, lr, #32
 8000386:	2a01      	cmp	r2, #1
 8000388:	fa03 fc0e 	lsl.w	ip, r3, lr
 800038c:	bf28      	it	cs
 800038e:	f04c 0c02 	orrcs.w	ip, ip, #2
 8000392:	fa43 f305 	asr.w	r3, r3, r5
 8000396:	18c0      	adds	r0, r0, r3
 8000398:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 800039c:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 80003a0:	d507      	bpl.n	80003b2 <__adddf3+0xe6>
 80003a2:	f04f 0e00 	mov.w	lr, #0
 80003a6:	f1dc 0c00 	rsbs	ip, ip, #0
 80003aa:	eb7e 0000 	sbcs.w	r0, lr, r0
 80003ae:	eb6e 0101 	sbc.w	r1, lr, r1
 80003b2:	f5b1 1f80 	cmp.w	r1, #1048576	@ 0x100000
 80003b6:	d31b      	bcc.n	80003f0 <__adddf3+0x124>
 80003b8:	f5b1 1f00 	cmp.w	r1, #2097152	@ 0x200000
 80003bc:	d30c      	bcc.n	80003d8 <__adddf3+0x10c>
 80003be:	0849      	lsrs	r1, r1, #1
 80003c0:	ea5f 0030 	movs.w	r0, r0, rrx
 80003c4:	ea4f 0c3c 	mov.w	ip, ip, rrx
 80003c8:	f104 0401 	add.w	r4, r4, #1
 80003cc:	ea4f 5244 	mov.w	r2, r4, lsl #21
 80003d0:	f512 0f80 	cmn.w	r2, #4194304	@ 0x400000
 80003d4:	f080 809a 	bcs.w	800050c <__adddf3+0x240>
 80003d8:	f1bc 4f00 	cmp.w	ip, #2147483648	@ 0x80000000
 80003dc:	bf08      	it	eq
 80003de:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80003e2:	f150 0000 	adcs.w	r0, r0, #0
 80003e6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80003ea:	ea41 0105 	orr.w	r1, r1, r5
 80003ee:	bd30      	pop	{r4, r5, pc}
 80003f0:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 80003f4:	4140      	adcs	r0, r0
 80003f6:	eb41 0101 	adc.w	r1, r1, r1
 80003fa:	3c01      	subs	r4, #1
 80003fc:	bf28      	it	cs
 80003fe:	f5b1 1f80 	cmpcs.w	r1, #1048576	@ 0x100000
 8000402:	d2e9      	bcs.n	80003d8 <__adddf3+0x10c>
 8000404:	f091 0f00 	teq	r1, #0
 8000408:	bf04      	itt	eq
 800040a:	4601      	moveq	r1, r0
 800040c:	2000      	moveq	r0, #0
 800040e:	fab1 f381 	clz	r3, r1
 8000412:	bf08      	it	eq
 8000414:	3320      	addeq	r3, #32
 8000416:	f1a3 030b 	sub.w	r3, r3, #11
 800041a:	f1b3 0220 	subs.w	r2, r3, #32
 800041e:	da0c      	bge.n	800043a <__adddf3+0x16e>
 8000420:	320c      	adds	r2, #12
 8000422:	dd08      	ble.n	8000436 <__adddf3+0x16a>
 8000424:	f102 0c14 	add.w	ip, r2, #20
 8000428:	f1c2 020c 	rsb	r2, r2, #12
 800042c:	fa01 f00c 	lsl.w	r0, r1, ip
 8000430:	fa21 f102 	lsr.w	r1, r1, r2
 8000434:	e00c      	b.n	8000450 <__adddf3+0x184>
 8000436:	f102 0214 	add.w	r2, r2, #20
 800043a:	bfd8      	it	le
 800043c:	f1c2 0c20 	rsble	ip, r2, #32
 8000440:	fa01 f102 	lsl.w	r1, r1, r2
 8000444:	fa20 fc0c 	lsr.w	ip, r0, ip
 8000448:	bfdc      	itt	le
 800044a:	ea41 010c 	orrle.w	r1, r1, ip
 800044e:	4090      	lslle	r0, r2
 8000450:	1ae4      	subs	r4, r4, r3
 8000452:	bfa2      	ittt	ge
 8000454:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 8000458:	4329      	orrge	r1, r5
 800045a:	bd30      	popge	{r4, r5, pc}
 800045c:	ea6f 0404 	mvn.w	r4, r4
 8000460:	3c1f      	subs	r4, #31
 8000462:	da1c      	bge.n	800049e <__adddf3+0x1d2>
 8000464:	340c      	adds	r4, #12
 8000466:	dc0e      	bgt.n	8000486 <__adddf3+0x1ba>
 8000468:	f104 0414 	add.w	r4, r4, #20
 800046c:	f1c4 0220 	rsb	r2, r4, #32
 8000470:	fa20 f004 	lsr.w	r0, r0, r4
 8000474:	fa01 f302 	lsl.w	r3, r1, r2
 8000478:	ea40 0003 	orr.w	r0, r0, r3
 800047c:	fa21 f304 	lsr.w	r3, r1, r4
 8000480:	ea45 0103 	orr.w	r1, r5, r3
 8000484:	bd30      	pop	{r4, r5, pc}
 8000486:	f1c4 040c 	rsb	r4, r4, #12
 800048a:	f1c4 0220 	rsb	r2, r4, #32
 800048e:	fa20 f002 	lsr.w	r0, r0, r2
 8000492:	fa01 f304 	lsl.w	r3, r1, r4
 8000496:	ea40 0003 	orr.w	r0, r0, r3
 800049a:	4629      	mov	r1, r5
 800049c:	bd30      	pop	{r4, r5, pc}
 800049e:	fa21 f004 	lsr.w	r0, r1, r4
 80004a2:	4629      	mov	r1, r5
 80004a4:	bd30      	pop	{r4, r5, pc}
 80004a6:	f094 0f00 	teq	r4, #0
 80004aa:	f483 1380 	eor.w	r3, r3, #1048576	@ 0x100000
 80004ae:	bf06      	itte	eq
 80004b0:	f481 1180 	eoreq.w	r1, r1, #1048576	@ 0x100000
 80004b4:	3401      	addeq	r4, #1
 80004b6:	3d01      	subne	r5, #1
 80004b8:	e74e      	b.n	8000358 <__adddf3+0x8c>
 80004ba:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80004be:	bf18      	it	ne
 80004c0:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80004c4:	d029      	beq.n	800051a <__adddf3+0x24e>
 80004c6:	ea94 0f05 	teq	r4, r5
 80004ca:	bf08      	it	eq
 80004cc:	ea90 0f02 	teqeq	r0, r2
 80004d0:	d005      	beq.n	80004de <__adddf3+0x212>
 80004d2:	ea54 0c00 	orrs.w	ip, r4, r0
 80004d6:	bf04      	itt	eq
 80004d8:	4619      	moveq	r1, r3
 80004da:	4610      	moveq	r0, r2
 80004dc:	bd30      	pop	{r4, r5, pc}
 80004de:	ea91 0f03 	teq	r1, r3
 80004e2:	bf1e      	ittt	ne
 80004e4:	2100      	movne	r1, #0
 80004e6:	2000      	movne	r0, #0
 80004e8:	bd30      	popne	{r4, r5, pc}
 80004ea:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 80004ee:	d105      	bne.n	80004fc <__adddf3+0x230>
 80004f0:	0040      	lsls	r0, r0, #1
 80004f2:	4149      	adcs	r1, r1
 80004f4:	bf28      	it	cs
 80004f6:	f041 4100 	orrcs.w	r1, r1, #2147483648	@ 0x80000000
 80004fa:	bd30      	pop	{r4, r5, pc}
 80004fc:	f514 0480 	adds.w	r4, r4, #4194304	@ 0x400000
 8000500:	bf3c      	itt	cc
 8000502:	f501 1180 	addcc.w	r1, r1, #1048576	@ 0x100000
 8000506:	bd30      	popcc	{r4, r5, pc}
 8000508:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 800050c:	f045 41fe 	orr.w	r1, r5, #2130706432	@ 0x7f000000
 8000510:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 8000514:	f04f 0000 	mov.w	r0, #0
 8000518:	bd30      	pop	{r4, r5, pc}
 800051a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800051e:	bf1a      	itte	ne
 8000520:	4619      	movne	r1, r3
 8000522:	4610      	movne	r0, r2
 8000524:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 8000528:	bf1c      	itt	ne
 800052a:	460b      	movne	r3, r1
 800052c:	4602      	movne	r2, r0
 800052e:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8000532:	bf06      	itte	eq
 8000534:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 8000538:	ea91 0f03 	teqeq	r1, r3
 800053c:	f441 2100 	orrne.w	r1, r1, #524288	@ 0x80000
 8000540:	bd30      	pop	{r4, r5, pc}
 8000542:	bf00      	nop

08000544 <__aeabi_ui2d>:
 8000544:	f090 0f00 	teq	r0, #0
 8000548:	bf04      	itt	eq
 800054a:	2100      	moveq	r1, #0
 800054c:	4770      	bxeq	lr
 800054e:	b530      	push	{r4, r5, lr}
 8000550:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 8000554:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 8000558:	f04f 0500 	mov.w	r5, #0
 800055c:	f04f 0100 	mov.w	r1, #0
 8000560:	e750      	b.n	8000404 <__adddf3+0x138>
 8000562:	bf00      	nop

08000564 <__aeabi_i2d>:
 8000564:	f090 0f00 	teq	r0, #0
 8000568:	bf04      	itt	eq
 800056a:	2100      	moveq	r1, #0
 800056c:	4770      	bxeq	lr
 800056e:	b530      	push	{r4, r5, lr}
 8000570:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 8000574:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 8000578:	f010 4500 	ands.w	r5, r0, #2147483648	@ 0x80000000
 800057c:	bf48      	it	mi
 800057e:	4240      	negmi	r0, r0
 8000580:	f04f 0100 	mov.w	r1, #0
 8000584:	e73e      	b.n	8000404 <__adddf3+0x138>
 8000586:	bf00      	nop

08000588 <__aeabi_f2d>:
 8000588:	0042      	lsls	r2, r0, #1
 800058a:	ea4f 01e2 	mov.w	r1, r2, asr #3
 800058e:	ea4f 0131 	mov.w	r1, r1, rrx
 8000592:	ea4f 7002 	mov.w	r0, r2, lsl #28
 8000596:	bf1f      	itttt	ne
 8000598:	f012 437f 	andsne.w	r3, r2, #4278190080	@ 0xff000000
 800059c:	f093 4f7f 	teqne	r3, #4278190080	@ 0xff000000
 80005a0:	f081 5160 	eorne.w	r1, r1, #939524096	@ 0x38000000
 80005a4:	4770      	bxne	lr
 80005a6:	f032 427f 	bics.w	r2, r2, #4278190080	@ 0xff000000
 80005aa:	bf08      	it	eq
 80005ac:	4770      	bxeq	lr
 80005ae:	f093 4f7f 	teq	r3, #4278190080	@ 0xff000000
 80005b2:	bf04      	itt	eq
 80005b4:	f441 2100 	orreq.w	r1, r1, #524288	@ 0x80000
 80005b8:	4770      	bxeq	lr
 80005ba:	b530      	push	{r4, r5, lr}
 80005bc:	f44f 7460 	mov.w	r4, #896	@ 0x380
 80005c0:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 80005c4:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
 80005c8:	e71c      	b.n	8000404 <__adddf3+0x138>
 80005ca:	bf00      	nop

080005cc <__aeabi_ul2d>:
 80005cc:	ea50 0201 	orrs.w	r2, r0, r1
 80005d0:	bf08      	it	eq
 80005d2:	4770      	bxeq	lr
 80005d4:	b530      	push	{r4, r5, lr}
 80005d6:	f04f 0500 	mov.w	r5, #0
 80005da:	e00a      	b.n	80005f2 <__aeabi_l2d+0x16>

080005dc <__aeabi_l2d>:
 80005dc:	ea50 0201 	orrs.w	r2, r0, r1
 80005e0:	bf08      	it	eq
 80005e2:	4770      	bxeq	lr
 80005e4:	b530      	push	{r4, r5, lr}
 80005e6:	f011 4500 	ands.w	r5, r1, #2147483648	@ 0x80000000
 80005ea:	d502      	bpl.n	80005f2 <__aeabi_l2d+0x16>
 80005ec:	4240      	negs	r0, r0
 80005ee:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80005f2:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 80005f6:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 80005fa:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 80005fe:	f43f aed8 	beq.w	80003b2 <__adddf3+0xe6>
 8000602:	f04f 0203 	mov.w	r2, #3
 8000606:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 800060a:	bf18      	it	ne
 800060c:	3203      	addne	r2, #3
 800060e:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 8000612:	bf18      	it	ne
 8000614:	3203      	addne	r2, #3
 8000616:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 800061a:	f1c2 0320 	rsb	r3, r2, #32
 800061e:	fa00 fc03 	lsl.w	ip, r0, r3
 8000622:	fa20 f002 	lsr.w	r0, r0, r2
 8000626:	fa01 fe03 	lsl.w	lr, r1, r3
 800062a:	ea40 000e 	orr.w	r0, r0, lr
 800062e:	fa21 f102 	lsr.w	r1, r1, r2
 8000632:	4414      	add	r4, r2
 8000634:	e6bd      	b.n	80003b2 <__adddf3+0xe6>
 8000636:	bf00      	nop

08000638 <__aeabi_dmul>:
 8000638:	b570      	push	{r4, r5, r6, lr}
 800063a:	f04f 0cff 	mov.w	ip, #255	@ 0xff
 800063e:	f44c 6ce0 	orr.w	ip, ip, #1792	@ 0x700
 8000642:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 8000646:	bf1d      	ittte	ne
 8000648:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 800064c:	ea94 0f0c 	teqne	r4, ip
 8000650:	ea95 0f0c 	teqne	r5, ip
 8000654:	f000 f8de 	bleq	8000814 <__aeabi_dmul+0x1dc>
 8000658:	442c      	add	r4, r5
 800065a:	ea81 0603 	eor.w	r6, r1, r3
 800065e:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 8000662:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 8000666:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 800066a:	bf18      	it	ne
 800066c:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8000670:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 8000674:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 8000678:	d038      	beq.n	80006ec <__aeabi_dmul+0xb4>
 800067a:	fba0 ce02 	umull	ip, lr, r0, r2
 800067e:	f04f 0500 	mov.w	r5, #0
 8000682:	fbe1 e502 	umlal	lr, r5, r1, r2
 8000686:	f006 4200 	and.w	r2, r6, #2147483648	@ 0x80000000
 800068a:	fbe0 e503 	umlal	lr, r5, r0, r3
 800068e:	f04f 0600 	mov.w	r6, #0
 8000692:	fbe1 5603 	umlal	r5, r6, r1, r3
 8000696:	f09c 0f00 	teq	ip, #0
 800069a:	bf18      	it	ne
 800069c:	f04e 0e01 	orrne.w	lr, lr, #1
 80006a0:	f1a4 04ff 	sub.w	r4, r4, #255	@ 0xff
 80006a4:	f5b6 7f00 	cmp.w	r6, #512	@ 0x200
 80006a8:	f564 7440 	sbc.w	r4, r4, #768	@ 0x300
 80006ac:	d204      	bcs.n	80006b8 <__aeabi_dmul+0x80>
 80006ae:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 80006b2:	416d      	adcs	r5, r5
 80006b4:	eb46 0606 	adc.w	r6, r6, r6
 80006b8:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 80006bc:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 80006c0:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 80006c4:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 80006c8:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 80006cc:	f1b4 0cfd 	subs.w	ip, r4, #253	@ 0xfd
 80006d0:	bf88      	it	hi
 80006d2:	f5bc 6fe0 	cmphi.w	ip, #1792	@ 0x700
 80006d6:	d81e      	bhi.n	8000716 <__aeabi_dmul+0xde>
 80006d8:	f1be 4f00 	cmp.w	lr, #2147483648	@ 0x80000000
 80006dc:	bf08      	it	eq
 80006de:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 80006e2:	f150 0000 	adcs.w	r0, r0, #0
 80006e6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80006ea:	bd70      	pop	{r4, r5, r6, pc}
 80006ec:	f006 4600 	and.w	r6, r6, #2147483648	@ 0x80000000
 80006f0:	ea46 0101 	orr.w	r1, r6, r1
 80006f4:	ea40 0002 	orr.w	r0, r0, r2
 80006f8:	ea81 0103 	eor.w	r1, r1, r3
 80006fc:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 8000700:	bfc2      	ittt	gt
 8000702:	ebd4 050c 	rsbsgt	r5, r4, ip
 8000706:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 800070a:	bd70      	popgt	{r4, r5, r6, pc}
 800070c:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 8000710:	f04f 0e00 	mov.w	lr, #0
 8000714:	3c01      	subs	r4, #1
 8000716:	f300 80ab 	bgt.w	8000870 <__aeabi_dmul+0x238>
 800071a:	f114 0f36 	cmn.w	r4, #54	@ 0x36
 800071e:	bfde      	ittt	le
 8000720:	2000      	movle	r0, #0
 8000722:	f001 4100 	andle.w	r1, r1, #2147483648	@ 0x80000000
 8000726:	bd70      	pople	{r4, r5, r6, pc}
 8000728:	f1c4 0400 	rsb	r4, r4, #0
 800072c:	3c20      	subs	r4, #32
 800072e:	da35      	bge.n	800079c <__aeabi_dmul+0x164>
 8000730:	340c      	adds	r4, #12
 8000732:	dc1b      	bgt.n	800076c <__aeabi_dmul+0x134>
 8000734:	f104 0414 	add.w	r4, r4, #20
 8000738:	f1c4 0520 	rsb	r5, r4, #32
 800073c:	fa00 f305 	lsl.w	r3, r0, r5
 8000740:	fa20 f004 	lsr.w	r0, r0, r4
 8000744:	fa01 f205 	lsl.w	r2, r1, r5
 8000748:	ea40 0002 	orr.w	r0, r0, r2
 800074c:	f001 4200 	and.w	r2, r1, #2147483648	@ 0x80000000
 8000750:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
 8000754:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8000758:	fa21 f604 	lsr.w	r6, r1, r4
 800075c:	eb42 0106 	adc.w	r1, r2, r6
 8000760:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000764:	bf08      	it	eq
 8000766:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800076a:	bd70      	pop	{r4, r5, r6, pc}
 800076c:	f1c4 040c 	rsb	r4, r4, #12
 8000770:	f1c4 0520 	rsb	r5, r4, #32
 8000774:	fa00 f304 	lsl.w	r3, r0, r4
 8000778:	fa20 f005 	lsr.w	r0, r0, r5
 800077c:	fa01 f204 	lsl.w	r2, r1, r4
 8000780:	ea40 0002 	orr.w	r0, r0, r2
 8000784:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 8000788:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 800078c:	f141 0100 	adc.w	r1, r1, #0
 8000790:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000794:	bf08      	it	eq
 8000796:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800079a:	bd70      	pop	{r4, r5, r6, pc}
 800079c:	f1c4 0520 	rsb	r5, r4, #32
 80007a0:	fa00 f205 	lsl.w	r2, r0, r5
 80007a4:	ea4e 0e02 	orr.w	lr, lr, r2
 80007a8:	fa20 f304 	lsr.w	r3, r0, r4
 80007ac:	fa01 f205 	lsl.w	r2, r1, r5
 80007b0:	ea43 0302 	orr.w	r3, r3, r2
 80007b4:	fa21 f004 	lsr.w	r0, r1, r4
 80007b8:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 80007bc:	fa21 f204 	lsr.w	r2, r1, r4
 80007c0:	ea20 0002 	bic.w	r0, r0, r2
 80007c4:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 80007c8:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 80007cc:	bf08      	it	eq
 80007ce:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80007d2:	bd70      	pop	{r4, r5, r6, pc}
 80007d4:	f094 0f00 	teq	r4, #0
 80007d8:	d10f      	bne.n	80007fa <__aeabi_dmul+0x1c2>
 80007da:	f001 4600 	and.w	r6, r1, #2147483648	@ 0x80000000
 80007de:	0040      	lsls	r0, r0, #1
 80007e0:	eb41 0101 	adc.w	r1, r1, r1
 80007e4:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 80007e8:	bf08      	it	eq
 80007ea:	3c01      	subeq	r4, #1
 80007ec:	d0f7      	beq.n	80007de <__aeabi_dmul+0x1a6>
 80007ee:	ea41 0106 	orr.w	r1, r1, r6
 80007f2:	f095 0f00 	teq	r5, #0
 80007f6:	bf18      	it	ne
 80007f8:	4770      	bxne	lr
 80007fa:	f003 4600 	and.w	r6, r3, #2147483648	@ 0x80000000
 80007fe:	0052      	lsls	r2, r2, #1
 8000800:	eb43 0303 	adc.w	r3, r3, r3
 8000804:	f413 1f80 	tst.w	r3, #1048576	@ 0x100000
 8000808:	bf08      	it	eq
 800080a:	3d01      	subeq	r5, #1
 800080c:	d0f7      	beq.n	80007fe <__aeabi_dmul+0x1c6>
 800080e:	ea43 0306 	orr.w	r3, r3, r6
 8000812:	4770      	bx	lr
 8000814:	ea94 0f0c 	teq	r4, ip
 8000818:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 800081c:	bf18      	it	ne
 800081e:	ea95 0f0c 	teqne	r5, ip
 8000822:	d00c      	beq.n	800083e <__aeabi_dmul+0x206>
 8000824:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000828:	bf18      	it	ne
 800082a:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800082e:	d1d1      	bne.n	80007d4 <__aeabi_dmul+0x19c>
 8000830:	ea81 0103 	eor.w	r1, r1, r3
 8000834:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 8000838:	f04f 0000 	mov.w	r0, #0
 800083c:	bd70      	pop	{r4, r5, r6, pc}
 800083e:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000842:	bf06      	itte	eq
 8000844:	4610      	moveq	r0, r2
 8000846:	4619      	moveq	r1, r3
 8000848:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800084c:	d019      	beq.n	8000882 <__aeabi_dmul+0x24a>
 800084e:	ea94 0f0c 	teq	r4, ip
 8000852:	d102      	bne.n	800085a <__aeabi_dmul+0x222>
 8000854:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 8000858:	d113      	bne.n	8000882 <__aeabi_dmul+0x24a>
 800085a:	ea95 0f0c 	teq	r5, ip
 800085e:	d105      	bne.n	800086c <__aeabi_dmul+0x234>
 8000860:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 8000864:	bf1c      	itt	ne
 8000866:	4610      	movne	r0, r2
 8000868:	4619      	movne	r1, r3
 800086a:	d10a      	bne.n	8000882 <__aeabi_dmul+0x24a>
 800086c:	ea81 0103 	eor.w	r1, r1, r3
 8000870:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 8000874:	f041 41fe 	orr.w	r1, r1, #2130706432	@ 0x7f000000
 8000878:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 800087c:	f04f 0000 	mov.w	r0, #0
 8000880:	bd70      	pop	{r4, r5, r6, pc}
 8000882:	f041 41fe 	orr.w	r1, r1, #2130706432	@ 0x7f000000
 8000886:	f441 0178 	orr.w	r1, r1, #16252928	@ 0xf80000
 800088a:	bd70      	pop	{r4, r5, r6, pc}

0800088c <__aeabi_ddiv>:
 800088c:	b570      	push	{r4, r5, r6, lr}
 800088e:	f04f 0cff 	mov.w	ip, #255	@ 0xff
 8000892:	f44c 6ce0 	orr.w	ip, ip, #1792	@ 0x700
 8000896:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800089a:	bf1d      	ittte	ne
 800089c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 80008a0:	ea94 0f0c 	teqne	r4, ip
 80008a4:	ea95 0f0c 	teqne	r5, ip
 80008a8:	f000 f8a7 	bleq	80009fa <__aeabi_ddiv+0x16e>
 80008ac:	eba4 0405 	sub.w	r4, r4, r5
 80008b0:	ea81 0e03 	eor.w	lr, r1, r3
 80008b4:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 80008b8:	ea4f 3101 	mov.w	r1, r1, lsl #12
 80008bc:	f000 8088 	beq.w	80009d0 <__aeabi_ddiv+0x144>
 80008c0:	ea4f 3303 	mov.w	r3, r3, lsl #12
 80008c4:	f04f 5580 	mov.w	r5, #268435456	@ 0x10000000
 80008c8:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 80008cc:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 80008d0:	ea4f 2202 	mov.w	r2, r2, lsl #8
 80008d4:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 80008d8:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 80008dc:	ea4f 2600 	mov.w	r6, r0, lsl #8
 80008e0:	f00e 4100 	and.w	r1, lr, #2147483648	@ 0x80000000
 80008e4:	429d      	cmp	r5, r3
 80008e6:	bf08      	it	eq
 80008e8:	4296      	cmpeq	r6, r2
 80008ea:	f144 04fd 	adc.w	r4, r4, #253	@ 0xfd
 80008ee:	f504 7440 	add.w	r4, r4, #768	@ 0x300
 80008f2:	d202      	bcs.n	80008fa <__aeabi_ddiv+0x6e>
 80008f4:	085b      	lsrs	r3, r3, #1
 80008f6:	ea4f 0232 	mov.w	r2, r2, rrx
 80008fa:	1ab6      	subs	r6, r6, r2
 80008fc:	eb65 0503 	sbc.w	r5, r5, r3
 8000900:	085b      	lsrs	r3, r3, #1
 8000902:	ea4f 0232 	mov.w	r2, r2, rrx
 8000906:	f44f 1080 	mov.w	r0, #1048576	@ 0x100000
 800090a:	f44f 2c00 	mov.w	ip, #524288	@ 0x80000
 800090e:	ebb6 0e02 	subs.w	lr, r6, r2
 8000912:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000916:	bf22      	ittt	cs
 8000918:	1ab6      	subcs	r6, r6, r2
 800091a:	4675      	movcs	r5, lr
 800091c:	ea40 000c 	orrcs.w	r0, r0, ip
 8000920:	085b      	lsrs	r3, r3, #1
 8000922:	ea4f 0232 	mov.w	r2, r2, rrx
 8000926:	ebb6 0e02 	subs.w	lr, r6, r2
 800092a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800092e:	bf22      	ittt	cs
 8000930:	1ab6      	subcs	r6, r6, r2
 8000932:	4675      	movcs	r5, lr
 8000934:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 8000938:	085b      	lsrs	r3, r3, #1
 800093a:	ea4f 0232 	mov.w	r2, r2, rrx
 800093e:	ebb6 0e02 	subs.w	lr, r6, r2
 8000942:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000946:	bf22      	ittt	cs
 8000948:	1ab6      	subcs	r6, r6, r2
 800094a:	4675      	movcs	r5, lr
 800094c:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8000950:	085b      	lsrs	r3, r3, #1
 8000952:	ea4f 0232 	mov.w	r2, r2, rrx
 8000956:	ebb6 0e02 	subs.w	lr, r6, r2
 800095a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800095e:	bf22      	ittt	cs
 8000960:	1ab6      	subcs	r6, r6, r2
 8000962:	4675      	movcs	r5, lr
 8000964:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000968:	ea55 0e06 	orrs.w	lr, r5, r6
 800096c:	d018      	beq.n	80009a0 <__aeabi_ddiv+0x114>
 800096e:	ea4f 1505 	mov.w	r5, r5, lsl #4
 8000972:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 8000976:	ea4f 1606 	mov.w	r6, r6, lsl #4
 800097a:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 800097e:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 8000982:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8000986:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 800098a:	d1c0      	bne.n	800090e <__aeabi_ddiv+0x82>
 800098c:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 8000990:	d10b      	bne.n	80009aa <__aeabi_ddiv+0x11e>
 8000992:	ea41 0100 	orr.w	r1, r1, r0
 8000996:	f04f 0000 	mov.w	r0, #0
 800099a:	f04f 4c00 	mov.w	ip, #2147483648	@ 0x80000000
 800099e:	e7b6      	b.n	800090e <__aeabi_ddiv+0x82>
 80009a0:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 80009a4:	bf04      	itt	eq
 80009a6:	4301      	orreq	r1, r0
 80009a8:	2000      	moveq	r0, #0
 80009aa:	f1b4 0cfd 	subs.w	ip, r4, #253	@ 0xfd
 80009ae:	bf88      	it	hi
 80009b0:	f5bc 6fe0 	cmphi.w	ip, #1792	@ 0x700
 80009b4:	f63f aeaf 	bhi.w	8000716 <__aeabi_dmul+0xde>
 80009b8:	ebb5 0c03 	subs.w	ip, r5, r3
 80009bc:	bf04      	itt	eq
 80009be:	ebb6 0c02 	subseq.w	ip, r6, r2
 80009c2:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80009c6:	f150 0000 	adcs.w	r0, r0, #0
 80009ca:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80009ce:	bd70      	pop	{r4, r5, r6, pc}
 80009d0:	f00e 4e00 	and.w	lr, lr, #2147483648	@ 0x80000000
 80009d4:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 80009d8:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 80009dc:	bfc2      	ittt	gt
 80009de:	ebd4 050c 	rsbsgt	r5, r4, ip
 80009e2:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80009e6:	bd70      	popgt	{r4, r5, r6, pc}
 80009e8:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 80009ec:	f04f 0e00 	mov.w	lr, #0
 80009f0:	3c01      	subs	r4, #1
 80009f2:	e690      	b.n	8000716 <__aeabi_dmul+0xde>
 80009f4:	ea45 0e06 	orr.w	lr, r5, r6
 80009f8:	e68d      	b.n	8000716 <__aeabi_dmul+0xde>
 80009fa:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80009fe:	ea94 0f0c 	teq	r4, ip
 8000a02:	bf08      	it	eq
 8000a04:	ea95 0f0c 	teqeq	r5, ip
 8000a08:	f43f af3b 	beq.w	8000882 <__aeabi_dmul+0x24a>
 8000a0c:	ea94 0f0c 	teq	r4, ip
 8000a10:	d10a      	bne.n	8000a28 <__aeabi_ddiv+0x19c>
 8000a12:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8000a16:	f47f af34 	bne.w	8000882 <__aeabi_dmul+0x24a>
 8000a1a:	ea95 0f0c 	teq	r5, ip
 8000a1e:	f47f af25 	bne.w	800086c <__aeabi_dmul+0x234>
 8000a22:	4610      	mov	r0, r2
 8000a24:	4619      	mov	r1, r3
 8000a26:	e72c      	b.n	8000882 <__aeabi_dmul+0x24a>
 8000a28:	ea95 0f0c 	teq	r5, ip
 8000a2c:	d106      	bne.n	8000a3c <__aeabi_ddiv+0x1b0>
 8000a2e:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000a32:	f43f aefd 	beq.w	8000830 <__aeabi_dmul+0x1f8>
 8000a36:	4610      	mov	r0, r2
 8000a38:	4619      	mov	r1, r3
 8000a3a:	e722      	b.n	8000882 <__aeabi_dmul+0x24a>
 8000a3c:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000a40:	bf18      	it	ne
 8000a42:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000a46:	f47f aec5 	bne.w	80007d4 <__aeabi_dmul+0x19c>
 8000a4a:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 8000a4e:	f47f af0d 	bne.w	800086c <__aeabi_dmul+0x234>
 8000a52:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 8000a56:	f47f aeeb 	bne.w	8000830 <__aeabi_dmul+0x1f8>
 8000a5a:	e712      	b.n	8000882 <__aeabi_dmul+0x24a>

08000a5c <__gedf2>:
 8000a5c:	f04f 3cff 	mov.w	ip, #4294967295
 8000a60:	e006      	b.n	8000a70 <__cmpdf2+0x4>
 8000a62:	bf00      	nop

08000a64 <__ledf2>:
 8000a64:	f04f 0c01 	mov.w	ip, #1
 8000a68:	e002      	b.n	8000a70 <__cmpdf2+0x4>
 8000a6a:	bf00      	nop

08000a6c <__cmpdf2>:
 8000a6c:	f04f 0c01 	mov.w	ip, #1
 8000a70:	f84d cd04 	str.w	ip, [sp, #-4]!
 8000a74:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a78:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a7c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a80:	bf18      	it	ne
 8000a82:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
 8000a86:	d01b      	beq.n	8000ac0 <__cmpdf2+0x54>
 8000a88:	b001      	add	sp, #4
 8000a8a:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
 8000a8e:	bf0c      	ite	eq
 8000a90:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
 8000a94:	ea91 0f03 	teqne	r1, r3
 8000a98:	bf02      	ittt	eq
 8000a9a:	ea90 0f02 	teqeq	r0, r2
 8000a9e:	2000      	moveq	r0, #0
 8000aa0:	4770      	bxeq	lr
 8000aa2:	f110 0f00 	cmn.w	r0, #0
 8000aa6:	ea91 0f03 	teq	r1, r3
 8000aaa:	bf58      	it	pl
 8000aac:	4299      	cmppl	r1, r3
 8000aae:	bf08      	it	eq
 8000ab0:	4290      	cmpeq	r0, r2
 8000ab2:	bf2c      	ite	cs
 8000ab4:	17d8      	asrcs	r0, r3, #31
 8000ab6:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
 8000aba:	f040 0001 	orr.w	r0, r0, #1
 8000abe:	4770      	bx	lr
 8000ac0:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000ac4:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000ac8:	d102      	bne.n	8000ad0 <__cmpdf2+0x64>
 8000aca:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000ace:	d107      	bne.n	8000ae0 <__cmpdf2+0x74>
 8000ad0:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000ad4:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000ad8:	d1d6      	bne.n	8000a88 <__cmpdf2+0x1c>
 8000ada:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000ade:	d0d3      	beq.n	8000a88 <__cmpdf2+0x1c>
 8000ae0:	f85d 0b04 	ldr.w	r0, [sp], #4
 8000ae4:	4770      	bx	lr
 8000ae6:	bf00      	nop

08000ae8 <__aeabi_cdrcmple>:
 8000ae8:	4684      	mov	ip, r0
 8000aea:	4610      	mov	r0, r2
 8000aec:	4662      	mov	r2, ip
 8000aee:	468c      	mov	ip, r1
 8000af0:	4619      	mov	r1, r3
 8000af2:	4663      	mov	r3, ip
 8000af4:	e000      	b.n	8000af8 <__aeabi_cdcmpeq>
 8000af6:	bf00      	nop

08000af8 <__aeabi_cdcmpeq>:
 8000af8:	b501      	push	{r0, lr}
 8000afa:	f7ff ffb7 	bl	8000a6c <__cmpdf2>
 8000afe:	2800      	cmp	r0, #0
 8000b00:	bf48      	it	mi
 8000b02:	f110 0f00 	cmnmi.w	r0, #0
 8000b06:	bd01      	pop	{r0, pc}

08000b08 <__aeabi_dcmpeq>:
 8000b08:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b0c:	f7ff fff4 	bl	8000af8 <__aeabi_cdcmpeq>
 8000b10:	bf0c      	ite	eq
 8000b12:	2001      	moveq	r0, #1
 8000b14:	2000      	movne	r0, #0
 8000b16:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b1a:	bf00      	nop

08000b1c <__aeabi_dcmplt>:
 8000b1c:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b20:	f7ff ffea 	bl	8000af8 <__aeabi_cdcmpeq>
 8000b24:	bf34      	ite	cc
 8000b26:	2001      	movcc	r0, #1
 8000b28:	2000      	movcs	r0, #0
 8000b2a:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b2e:	bf00      	nop

08000b30 <__aeabi_dcmple>:
 8000b30:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b34:	f7ff ffe0 	bl	8000af8 <__aeabi_cdcmpeq>
 8000b38:	bf94      	ite	ls
 8000b3a:	2001      	movls	r0, #1
 8000b3c:	2000      	movhi	r0, #0
 8000b3e:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b42:	bf00      	nop

08000b44 <__aeabi_dcmpge>:
 8000b44:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b48:	f7ff ffce 	bl	8000ae8 <__aeabi_cdrcmple>
 8000b4c:	bf94      	ite	ls
 8000b4e:	2001      	movls	r0, #1
 8000b50:	2000      	movhi	r0, #0
 8000b52:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b56:	bf00      	nop

08000b58 <__aeabi_dcmpgt>:
 8000b58:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b5c:	f7ff ffc4 	bl	8000ae8 <__aeabi_cdrcmple>
 8000b60:	bf34      	ite	cc
 8000b62:	2001      	movcc	r0, #1
 8000b64:	2000      	movcs	r0, #0
 8000b66:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b6a:	bf00      	nop

08000b6c <__aeabi_dcmpun>:
 8000b6c:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000b70:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b74:	d102      	bne.n	8000b7c <__aeabi_dcmpun+0x10>
 8000b76:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000b7a:	d10a      	bne.n	8000b92 <__aeabi_dcmpun+0x26>
 8000b7c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000b80:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b84:	d102      	bne.n	8000b8c <__aeabi_dcmpun+0x20>
 8000b86:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000b8a:	d102      	bne.n	8000b92 <__aeabi_dcmpun+0x26>
 8000b8c:	f04f 0000 	mov.w	r0, #0
 8000b90:	4770      	bx	lr
 8000b92:	f04f 0001 	mov.w	r0, #1
 8000b96:	4770      	bx	lr

08000b98 <__aeabi_d2iz>:
 8000b98:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000b9c:	f512 1200 	adds.w	r2, r2, #2097152	@ 0x200000
 8000ba0:	d215      	bcs.n	8000bce <__aeabi_d2iz+0x36>
 8000ba2:	d511      	bpl.n	8000bc8 <__aeabi_d2iz+0x30>
 8000ba4:	f46f 7378 	mvn.w	r3, #992	@ 0x3e0
 8000ba8:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000bac:	d912      	bls.n	8000bd4 <__aeabi_d2iz+0x3c>
 8000bae:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000bb2:	f043 4300 	orr.w	r3, r3, #2147483648	@ 0x80000000
 8000bb6:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000bba:	f011 4f00 	tst.w	r1, #2147483648	@ 0x80000000
 8000bbe:	fa23 f002 	lsr.w	r0, r3, r2
 8000bc2:	bf18      	it	ne
 8000bc4:	4240      	negne	r0, r0
 8000bc6:	4770      	bx	lr
 8000bc8:	f04f 0000 	mov.w	r0, #0
 8000bcc:	4770      	bx	lr
 8000bce:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000bd2:	d105      	bne.n	8000be0 <__aeabi_d2iz+0x48>
 8000bd4:	f011 4000 	ands.w	r0, r1, #2147483648	@ 0x80000000
 8000bd8:	bf08      	it	eq
 8000bda:	f06f 4000 	mvneq.w	r0, #2147483648	@ 0x80000000
 8000bde:	4770      	bx	lr
 8000be0:	f04f 0000 	mov.w	r0, #0
 8000be4:	4770      	bx	lr
 8000be6:	bf00      	nop

08000be8 <__aeabi_d2uiz>:
 8000be8:	004a      	lsls	r2, r1, #1
 8000bea:	d211      	bcs.n	8000c10 <__aeabi_d2uiz+0x28>
 8000bec:	f512 1200 	adds.w	r2, r2, #2097152	@ 0x200000
 8000bf0:	d211      	bcs.n	8000c16 <__aeabi_d2uiz+0x2e>
 8000bf2:	d50d      	bpl.n	8000c10 <__aeabi_d2uiz+0x28>
 8000bf4:	f46f 7378 	mvn.w	r3, #992	@ 0x3e0
 8000bf8:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000bfc:	d40e      	bmi.n	8000c1c <__aeabi_d2uiz+0x34>
 8000bfe:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000c02:	f043 4300 	orr.w	r3, r3, #2147483648	@ 0x80000000
 8000c06:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000c0a:	fa23 f002 	lsr.w	r0, r3, r2
 8000c0e:	4770      	bx	lr
 8000c10:	f04f 0000 	mov.w	r0, #0
 8000c14:	4770      	bx	lr
 8000c16:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000c1a:	d102      	bne.n	8000c22 <__aeabi_d2uiz+0x3a>
 8000c1c:	f04f 30ff 	mov.w	r0, #4294967295
 8000c20:	4770      	bx	lr
 8000c22:	f04f 0000 	mov.w	r0, #0
 8000c26:	4770      	bx	lr

08000c28 <__aeabi_d2f>:
 8000c28:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000c2c:	f1b2 43e0 	subs.w	r3, r2, #1879048192	@ 0x70000000
 8000c30:	bf24      	itt	cs
 8000c32:	f5b3 1c00 	subscs.w	ip, r3, #2097152	@ 0x200000
 8000c36:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	@ 0x1fc00000
 8000c3a:	d90d      	bls.n	8000c58 <__aeabi_d2f+0x30>
 8000c3c:	f001 4c00 	and.w	ip, r1, #2147483648	@ 0x80000000
 8000c40:	ea4f 02c0 	mov.w	r2, r0, lsl #3
 8000c44:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
 8000c48:	f1b2 4f00 	cmp.w	r2, #2147483648	@ 0x80000000
 8000c4c:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
 8000c50:	bf08      	it	eq
 8000c52:	f020 0001 	biceq.w	r0, r0, #1
 8000c56:	4770      	bx	lr
 8000c58:	f011 4f80 	tst.w	r1, #1073741824	@ 0x40000000
 8000c5c:	d121      	bne.n	8000ca2 <__aeabi_d2f+0x7a>
 8000c5e:	f113 7238 	adds.w	r2, r3, #48234496	@ 0x2e00000
 8000c62:	bfbc      	itt	lt
 8000c64:	f001 4000 	andlt.w	r0, r1, #2147483648	@ 0x80000000
 8000c68:	4770      	bxlt	lr
 8000c6a:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 8000c6e:	ea4f 5252 	mov.w	r2, r2, lsr #21
 8000c72:	f1c2 0218 	rsb	r2, r2, #24
 8000c76:	f1c2 0c20 	rsb	ip, r2, #32
 8000c7a:	fa10 f30c 	lsls.w	r3, r0, ip
 8000c7e:	fa20 f002 	lsr.w	r0, r0, r2
 8000c82:	bf18      	it	ne
 8000c84:	f040 0001 	orrne.w	r0, r0, #1
 8000c88:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000c8c:	ea4f 23d3 	mov.w	r3, r3, lsr #11
 8000c90:	fa03 fc0c 	lsl.w	ip, r3, ip
 8000c94:	ea40 000c 	orr.w	r0, r0, ip
 8000c98:	fa23 f302 	lsr.w	r3, r3, r2
 8000c9c:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8000ca0:	e7cc      	b.n	8000c3c <__aeabi_d2f+0x14>
 8000ca2:	ea7f 5362 	mvns.w	r3, r2, asr #21
 8000ca6:	d107      	bne.n	8000cb8 <__aeabi_d2f+0x90>
 8000ca8:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
 8000cac:	bf1e      	ittt	ne
 8000cae:	f04f 40fe 	movne.w	r0, #2130706432	@ 0x7f000000
 8000cb2:	f440 0040 	orrne.w	r0, r0, #12582912	@ 0xc00000
 8000cb6:	4770      	bxne	lr
 8000cb8:	f001 4000 	and.w	r0, r1, #2147483648	@ 0x80000000
 8000cbc:	f040 40fe 	orr.w	r0, r0, #2130706432	@ 0x7f000000
 8000cc0:	f440 0000 	orr.w	r0, r0, #8388608	@ 0x800000
 8000cc4:	4770      	bx	lr
 8000cc6:	bf00      	nop

08000cc8 <__aeabi_uldivmod>:
 8000cc8:	b953      	cbnz	r3, 8000ce0 <__aeabi_uldivmod+0x18>
 8000cca:	b94a      	cbnz	r2, 8000ce0 <__aeabi_uldivmod+0x18>
 8000ccc:	2900      	cmp	r1, #0
 8000cce:	bf08      	it	eq
 8000cd0:	2800      	cmpeq	r0, #0
 8000cd2:	bf1c      	itt	ne
 8000cd4:	f04f 31ff 	movne.w	r1, #4294967295
 8000cd8:	f04f 30ff 	movne.w	r0, #4294967295
 8000cdc:	f000 b9a0 	b.w	8001020 <__aeabi_idiv0>
 8000ce0:	f1ad 0c08 	sub.w	ip, sp, #8
 8000ce4:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 8000ce8:	f000 f83c 	bl	8000d64 <__udivmoddi4>
 8000cec:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000cf0:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8000cf4:	b004      	add	sp, #16
 8000cf6:	4770      	bx	lr

08000cf8 <__aeabi_d2lz>:
 8000cf8:	b538      	push	{r3, r4, r5, lr}
 8000cfa:	2200      	movs	r2, #0
 8000cfc:	2300      	movs	r3, #0
 8000cfe:	4604      	mov	r4, r0
 8000d00:	460d      	mov	r5, r1
 8000d02:	f7ff ff0b 	bl	8000b1c <__aeabi_dcmplt>
 8000d06:	b928      	cbnz	r0, 8000d14 <__aeabi_d2lz+0x1c>
 8000d08:	4620      	mov	r0, r4
 8000d0a:	4629      	mov	r1, r5
 8000d0c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8000d10:	f000 b80a 	b.w	8000d28 <__aeabi_d2ulz>
 8000d14:	4620      	mov	r0, r4
 8000d16:	f105 4100 	add.w	r1, r5, #2147483648	@ 0x80000000
 8000d1a:	f000 f805 	bl	8000d28 <__aeabi_d2ulz>
 8000d1e:	4240      	negs	r0, r0
 8000d20:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000d24:	bd38      	pop	{r3, r4, r5, pc}
 8000d26:	bf00      	nop

08000d28 <__aeabi_d2ulz>:
 8000d28:	b5d0      	push	{r4, r6, r7, lr}
 8000d2a:	4b0c      	ldr	r3, [pc, #48]	@ (8000d5c <__aeabi_d2ulz+0x34>)
 8000d2c:	2200      	movs	r2, #0
 8000d2e:	4606      	mov	r6, r0
 8000d30:	460f      	mov	r7, r1
 8000d32:	f7ff fc81 	bl	8000638 <__aeabi_dmul>
 8000d36:	f7ff ff57 	bl	8000be8 <__aeabi_d2uiz>
 8000d3a:	4604      	mov	r4, r0
 8000d3c:	f7ff fc02 	bl	8000544 <__aeabi_ui2d>
 8000d40:	4b07      	ldr	r3, [pc, #28]	@ (8000d60 <__aeabi_d2ulz+0x38>)
 8000d42:	2200      	movs	r2, #0
 8000d44:	f7ff fc78 	bl	8000638 <__aeabi_dmul>
 8000d48:	4602      	mov	r2, r0
 8000d4a:	460b      	mov	r3, r1
 8000d4c:	4630      	mov	r0, r6
 8000d4e:	4639      	mov	r1, r7
 8000d50:	f7ff faba 	bl	80002c8 <__aeabi_dsub>
 8000d54:	f7ff ff48 	bl	8000be8 <__aeabi_d2uiz>
 8000d58:	4621      	mov	r1, r4
 8000d5a:	bdd0      	pop	{r4, r6, r7, pc}
 8000d5c:	3df00000 	.word	0x3df00000
 8000d60:	41f00000 	.word	0x41f00000

08000d64 <__udivmoddi4>:
 8000d64:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000d68:	9d08      	ldr	r5, [sp, #32]
 8000d6a:	460c      	mov	r4, r1
 8000d6c:	2b00      	cmp	r3, #0
 8000d6e:	d14e      	bne.n	8000e0e <__udivmoddi4+0xaa>
 8000d70:	4694      	mov	ip, r2
 8000d72:	458c      	cmp	ip, r1
 8000d74:	4686      	mov	lr, r0
 8000d76:	fab2 f282 	clz	r2, r2
 8000d7a:	d962      	bls.n	8000e42 <__udivmoddi4+0xde>
 8000d7c:	b14a      	cbz	r2, 8000d92 <__udivmoddi4+0x2e>
 8000d7e:	f1c2 0320 	rsb	r3, r2, #32
 8000d82:	4091      	lsls	r1, r2
 8000d84:	fa20 f303 	lsr.w	r3, r0, r3
 8000d88:	fa0c fc02 	lsl.w	ip, ip, r2
 8000d8c:	4319      	orrs	r1, r3
 8000d8e:	fa00 fe02 	lsl.w	lr, r0, r2
 8000d92:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8000d96:	fa1f f68c 	uxth.w	r6, ip
 8000d9a:	fbb1 f4f7 	udiv	r4, r1, r7
 8000d9e:	ea4f 431e 	mov.w	r3, lr, lsr #16
 8000da2:	fb07 1114 	mls	r1, r7, r4, r1
 8000da6:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8000daa:	fb04 f106 	mul.w	r1, r4, r6
 8000dae:	4299      	cmp	r1, r3
 8000db0:	d90a      	bls.n	8000dc8 <__udivmoddi4+0x64>
 8000db2:	eb1c 0303 	adds.w	r3, ip, r3
 8000db6:	f104 30ff 	add.w	r0, r4, #4294967295
 8000dba:	f080 8112 	bcs.w	8000fe2 <__udivmoddi4+0x27e>
 8000dbe:	4299      	cmp	r1, r3
 8000dc0:	f240 810f 	bls.w	8000fe2 <__udivmoddi4+0x27e>
 8000dc4:	3c02      	subs	r4, #2
 8000dc6:	4463      	add	r3, ip
 8000dc8:	1a59      	subs	r1, r3, r1
 8000dca:	fa1f f38e 	uxth.w	r3, lr
 8000dce:	fbb1 f0f7 	udiv	r0, r1, r7
 8000dd2:	fb07 1110 	mls	r1, r7, r0, r1
 8000dd6:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8000dda:	fb00 f606 	mul.w	r6, r0, r6
 8000dde:	429e      	cmp	r6, r3
 8000de0:	d90a      	bls.n	8000df8 <__udivmoddi4+0x94>
 8000de2:	eb1c 0303 	adds.w	r3, ip, r3
 8000de6:	f100 31ff 	add.w	r1, r0, #4294967295
 8000dea:	f080 80fc 	bcs.w	8000fe6 <__udivmoddi4+0x282>
 8000dee:	429e      	cmp	r6, r3
 8000df0:	f240 80f9 	bls.w	8000fe6 <__udivmoddi4+0x282>
 8000df4:	4463      	add	r3, ip
 8000df6:	3802      	subs	r0, #2
 8000df8:	1b9b      	subs	r3, r3, r6
 8000dfa:	ea40 4004 	orr.w	r0, r0, r4, lsl #16
 8000dfe:	2100      	movs	r1, #0
 8000e00:	b11d      	cbz	r5, 8000e0a <__udivmoddi4+0xa6>
 8000e02:	40d3      	lsrs	r3, r2
 8000e04:	2200      	movs	r2, #0
 8000e06:	e9c5 3200 	strd	r3, r2, [r5]
 8000e0a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000e0e:	428b      	cmp	r3, r1
 8000e10:	d905      	bls.n	8000e1e <__udivmoddi4+0xba>
 8000e12:	b10d      	cbz	r5, 8000e18 <__udivmoddi4+0xb4>
 8000e14:	e9c5 0100 	strd	r0, r1, [r5]
 8000e18:	2100      	movs	r1, #0
 8000e1a:	4608      	mov	r0, r1
 8000e1c:	e7f5      	b.n	8000e0a <__udivmoddi4+0xa6>
 8000e1e:	fab3 f183 	clz	r1, r3
 8000e22:	2900      	cmp	r1, #0
 8000e24:	d146      	bne.n	8000eb4 <__udivmoddi4+0x150>
 8000e26:	42a3      	cmp	r3, r4
 8000e28:	d302      	bcc.n	8000e30 <__udivmoddi4+0xcc>
 8000e2a:	4290      	cmp	r0, r2
 8000e2c:	f0c0 80f0 	bcc.w	8001010 <__udivmoddi4+0x2ac>
 8000e30:	1a86      	subs	r6, r0, r2
 8000e32:	eb64 0303 	sbc.w	r3, r4, r3
 8000e36:	2001      	movs	r0, #1
 8000e38:	2d00      	cmp	r5, #0
 8000e3a:	d0e6      	beq.n	8000e0a <__udivmoddi4+0xa6>
 8000e3c:	e9c5 6300 	strd	r6, r3, [r5]
 8000e40:	e7e3      	b.n	8000e0a <__udivmoddi4+0xa6>
 8000e42:	2a00      	cmp	r2, #0
 8000e44:	f040 8090 	bne.w	8000f68 <__udivmoddi4+0x204>
 8000e48:	eba1 040c 	sub.w	r4, r1, ip
 8000e4c:	ea4f 481c 	mov.w	r8, ip, lsr #16
 8000e50:	fa1f f78c 	uxth.w	r7, ip
 8000e54:	2101      	movs	r1, #1
 8000e56:	fbb4 f6f8 	udiv	r6, r4, r8
 8000e5a:	ea4f 431e 	mov.w	r3, lr, lsr #16
 8000e5e:	fb08 4416 	mls	r4, r8, r6, r4
 8000e62:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
 8000e66:	fb07 f006 	mul.w	r0, r7, r6
 8000e6a:	4298      	cmp	r0, r3
 8000e6c:	d908      	bls.n	8000e80 <__udivmoddi4+0x11c>
 8000e6e:	eb1c 0303 	adds.w	r3, ip, r3
 8000e72:	f106 34ff 	add.w	r4, r6, #4294967295
 8000e76:	d202      	bcs.n	8000e7e <__udivmoddi4+0x11a>
 8000e78:	4298      	cmp	r0, r3
 8000e7a:	f200 80cd 	bhi.w	8001018 <__udivmoddi4+0x2b4>
 8000e7e:	4626      	mov	r6, r4
 8000e80:	1a1c      	subs	r4, r3, r0
 8000e82:	fa1f f38e 	uxth.w	r3, lr
 8000e86:	fbb4 f0f8 	udiv	r0, r4, r8
 8000e8a:	fb08 4410 	mls	r4, r8, r0, r4
 8000e8e:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
 8000e92:	fb00 f707 	mul.w	r7, r0, r7
 8000e96:	429f      	cmp	r7, r3
 8000e98:	d908      	bls.n	8000eac <__udivmoddi4+0x148>
 8000e9a:	eb1c 0303 	adds.w	r3, ip, r3
 8000e9e:	f100 34ff 	add.w	r4, r0, #4294967295
 8000ea2:	d202      	bcs.n	8000eaa <__udivmoddi4+0x146>
 8000ea4:	429f      	cmp	r7, r3
 8000ea6:	f200 80b0 	bhi.w	800100a <__udivmoddi4+0x2a6>
 8000eaa:	4620      	mov	r0, r4
 8000eac:	1bdb      	subs	r3, r3, r7
 8000eae:	ea40 4006 	orr.w	r0, r0, r6, lsl #16
 8000eb2:	e7a5      	b.n	8000e00 <__udivmoddi4+0x9c>
 8000eb4:	f1c1 0620 	rsb	r6, r1, #32
 8000eb8:	408b      	lsls	r3, r1
 8000eba:	fa22 f706 	lsr.w	r7, r2, r6
 8000ebe:	431f      	orrs	r7, r3
 8000ec0:	fa20 fc06 	lsr.w	ip, r0, r6
 8000ec4:	fa04 f301 	lsl.w	r3, r4, r1
 8000ec8:	ea43 030c 	orr.w	r3, r3, ip
 8000ecc:	40f4      	lsrs	r4, r6
 8000ece:	fa00 f801 	lsl.w	r8, r0, r1
 8000ed2:	0c38      	lsrs	r0, r7, #16
 8000ed4:	ea4f 4913 	mov.w	r9, r3, lsr #16
 8000ed8:	fbb4 fef0 	udiv	lr, r4, r0
 8000edc:	fa1f fc87 	uxth.w	ip, r7
 8000ee0:	fb00 441e 	mls	r4, r0, lr, r4
 8000ee4:	ea49 4404 	orr.w	r4, r9, r4, lsl #16
 8000ee8:	fb0e f90c 	mul.w	r9, lr, ip
 8000eec:	45a1      	cmp	r9, r4
 8000eee:	fa02 f201 	lsl.w	r2, r2, r1
 8000ef2:	d90a      	bls.n	8000f0a <__udivmoddi4+0x1a6>
 8000ef4:	193c      	adds	r4, r7, r4
 8000ef6:	f10e 3aff 	add.w	sl, lr, #4294967295
 8000efa:	f080 8084 	bcs.w	8001006 <__udivmoddi4+0x2a2>
 8000efe:	45a1      	cmp	r9, r4
 8000f00:	f240 8081 	bls.w	8001006 <__udivmoddi4+0x2a2>
 8000f04:	f1ae 0e02 	sub.w	lr, lr, #2
 8000f08:	443c      	add	r4, r7
 8000f0a:	eba4 0409 	sub.w	r4, r4, r9
 8000f0e:	fa1f f983 	uxth.w	r9, r3
 8000f12:	fbb4 f3f0 	udiv	r3, r4, r0
 8000f16:	fb00 4413 	mls	r4, r0, r3, r4
 8000f1a:	ea49 4404 	orr.w	r4, r9, r4, lsl #16
 8000f1e:	fb03 fc0c 	mul.w	ip, r3, ip
 8000f22:	45a4      	cmp	ip, r4
 8000f24:	d907      	bls.n	8000f36 <__udivmoddi4+0x1d2>
 8000f26:	193c      	adds	r4, r7, r4
 8000f28:	f103 30ff 	add.w	r0, r3, #4294967295
 8000f2c:	d267      	bcs.n	8000ffe <__udivmoddi4+0x29a>
 8000f2e:	45a4      	cmp	ip, r4
 8000f30:	d965      	bls.n	8000ffe <__udivmoddi4+0x29a>
 8000f32:	3b02      	subs	r3, #2
 8000f34:	443c      	add	r4, r7
 8000f36:	ea43 400e 	orr.w	r0, r3, lr, lsl #16
 8000f3a:	fba0 9302 	umull	r9, r3, r0, r2
 8000f3e:	eba4 040c 	sub.w	r4, r4, ip
 8000f42:	429c      	cmp	r4, r3
 8000f44:	46ce      	mov	lr, r9
 8000f46:	469c      	mov	ip, r3
 8000f48:	d351      	bcc.n	8000fee <__udivmoddi4+0x28a>
 8000f4a:	d04e      	beq.n	8000fea <__udivmoddi4+0x286>
 8000f4c:	b155      	cbz	r5, 8000f64 <__udivmoddi4+0x200>
 8000f4e:	ebb8 030e 	subs.w	r3, r8, lr
 8000f52:	eb64 040c 	sbc.w	r4, r4, ip
 8000f56:	fa04 f606 	lsl.w	r6, r4, r6
 8000f5a:	40cb      	lsrs	r3, r1
 8000f5c:	431e      	orrs	r6, r3
 8000f5e:	40cc      	lsrs	r4, r1
 8000f60:	e9c5 6400 	strd	r6, r4, [r5]
 8000f64:	2100      	movs	r1, #0
 8000f66:	e750      	b.n	8000e0a <__udivmoddi4+0xa6>
 8000f68:	f1c2 0320 	rsb	r3, r2, #32
 8000f6c:	fa20 f103 	lsr.w	r1, r0, r3
 8000f70:	fa0c fc02 	lsl.w	ip, ip, r2
 8000f74:	fa24 f303 	lsr.w	r3, r4, r3
 8000f78:	4094      	lsls	r4, r2
 8000f7a:	430c      	orrs	r4, r1
 8000f7c:	ea4f 481c 	mov.w	r8, ip, lsr #16
 8000f80:	fa00 fe02 	lsl.w	lr, r0, r2
 8000f84:	fa1f f78c 	uxth.w	r7, ip
 8000f88:	fbb3 f0f8 	udiv	r0, r3, r8
 8000f8c:	fb08 3110 	mls	r1, r8, r0, r3
 8000f90:	0c23      	lsrs	r3, r4, #16
 8000f92:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8000f96:	fb00 f107 	mul.w	r1, r0, r7
 8000f9a:	4299      	cmp	r1, r3
 8000f9c:	d908      	bls.n	8000fb0 <__udivmoddi4+0x24c>
 8000f9e:	eb1c 0303 	adds.w	r3, ip, r3
 8000fa2:	f100 36ff 	add.w	r6, r0, #4294967295
 8000fa6:	d22c      	bcs.n	8001002 <__udivmoddi4+0x29e>
 8000fa8:	4299      	cmp	r1, r3
 8000faa:	d92a      	bls.n	8001002 <__udivmoddi4+0x29e>
 8000fac:	3802      	subs	r0, #2
 8000fae:	4463      	add	r3, ip
 8000fb0:	1a5b      	subs	r3, r3, r1
 8000fb2:	b2a4      	uxth	r4, r4
 8000fb4:	fbb3 f1f8 	udiv	r1, r3, r8
 8000fb8:	fb08 3311 	mls	r3, r8, r1, r3
 8000fbc:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
 8000fc0:	fb01 f307 	mul.w	r3, r1, r7
 8000fc4:	42a3      	cmp	r3, r4
 8000fc6:	d908      	bls.n	8000fda <__udivmoddi4+0x276>
 8000fc8:	eb1c 0404 	adds.w	r4, ip, r4
 8000fcc:	f101 36ff 	add.w	r6, r1, #4294967295
 8000fd0:	d213      	bcs.n	8000ffa <__udivmoddi4+0x296>
 8000fd2:	42a3      	cmp	r3, r4
 8000fd4:	d911      	bls.n	8000ffa <__udivmoddi4+0x296>
 8000fd6:	3902      	subs	r1, #2
 8000fd8:	4464      	add	r4, ip
 8000fda:	1ae4      	subs	r4, r4, r3
 8000fdc:	ea41 4100 	orr.w	r1, r1, r0, lsl #16
 8000fe0:	e739      	b.n	8000e56 <__udivmoddi4+0xf2>
 8000fe2:	4604      	mov	r4, r0
 8000fe4:	e6f0      	b.n	8000dc8 <__udivmoddi4+0x64>
 8000fe6:	4608      	mov	r0, r1
 8000fe8:	e706      	b.n	8000df8 <__udivmoddi4+0x94>
 8000fea:	45c8      	cmp	r8, r9
 8000fec:	d2ae      	bcs.n	8000f4c <__udivmoddi4+0x1e8>
 8000fee:	ebb9 0e02 	subs.w	lr, r9, r2
 8000ff2:	eb63 0c07 	sbc.w	ip, r3, r7
 8000ff6:	3801      	subs	r0, #1
 8000ff8:	e7a8      	b.n	8000f4c <__udivmoddi4+0x1e8>
 8000ffa:	4631      	mov	r1, r6
 8000ffc:	e7ed      	b.n	8000fda <__udivmoddi4+0x276>
 8000ffe:	4603      	mov	r3, r0
 8001000:	e799      	b.n	8000f36 <__udivmoddi4+0x1d2>
 8001002:	4630      	mov	r0, r6
 8001004:	e7d4      	b.n	8000fb0 <__udivmoddi4+0x24c>
 8001006:	46d6      	mov	lr, sl
 8001008:	e77f      	b.n	8000f0a <__udivmoddi4+0x1a6>
 800100a:	4463      	add	r3, ip
 800100c:	3802      	subs	r0, #2
 800100e:	e74d      	b.n	8000eac <__udivmoddi4+0x148>
 8001010:	4606      	mov	r6, r0
 8001012:	4623      	mov	r3, r4
 8001014:	4608      	mov	r0, r1
 8001016:	e70f      	b.n	8000e38 <__udivmoddi4+0xd4>
 8001018:	3e02      	subs	r6, #2
 800101a:	4463      	add	r3, ip
 800101c:	e730      	b.n	8000e80 <__udivmoddi4+0x11c>
 800101e:	bf00      	nop

08001020 <__aeabi_idiv0>:
 8001020:	4770      	bx	lr
 8001022:	bf00      	nop

08001024 <bno055_setPage>:
 8001024:	b580      	push	{r7, lr}
 8001026:	b082      	sub	sp, #8
 8001028:	af00      	add	r7, sp, #0
 800102a:	4603      	mov	r3, r0
 800102c:	71fb      	strb	r3, [r7, #7]
 800102e:	79fb      	ldrb	r3, [r7, #7]
 8001030:	4619      	mov	r1, r3
 8001032:	2007      	movs	r0, #7
 8001034:	f000 f87a 	bl	800112c <bno055_writeData>
 8001038:	bf00      	nop
 800103a:	3708      	adds	r7, #8
 800103c:	46bd      	mov	sp, r7
 800103e:	bd80      	pop	{r7, pc}

08001040 <bno055_setOperationMode>:
 8001040:	b580      	push	{r7, lr}
 8001042:	b082      	sub	sp, #8
 8001044:	af00      	add	r7, sp, #0
 8001046:	4603      	mov	r3, r0
 8001048:	71fb      	strb	r3, [r7, #7]
 800104a:	79fb      	ldrb	r3, [r7, #7]
 800104c:	4619      	mov	r1, r3
 800104e:	203d      	movs	r0, #61	@ 0x3d
 8001050:	f000 f86c 	bl	800112c <bno055_writeData>
 8001054:	79fb      	ldrb	r3, [r7, #7]
 8001056:	2b00      	cmp	r3, #0
 8001058:	d103      	bne.n	8001062 <bno055_setOperationMode+0x22>
 800105a:	2013      	movs	r0, #19
 800105c:	f000 f85a 	bl	8001114 <bno055_delay>
 8001060:	e002      	b.n	8001068 <bno055_setOperationMode+0x28>
 8001062:	2007      	movs	r0, #7
 8001064:	f000 f856 	bl	8001114 <bno055_delay>
 8001068:	bf00      	nop
 800106a:	3708      	adds	r7, #8
 800106c:	46bd      	mov	sp, r7
 800106e:	bd80      	pop	{r7, pc}

08001070 <bno055_setOperationModeConfig>:
 8001070:	b580      	push	{r7, lr}
 8001072:	af00      	add	r7, sp, #0
 8001074:	2000      	movs	r0, #0
 8001076:	f7ff ffe3 	bl	8001040 <bno055_setOperationMode>
 800107a:	bf00      	nop
 800107c:	bd80      	pop	{r7, pc}

0800107e <bno055_setOperationModeNDOF>:
 800107e:	b580      	push	{r7, lr}
 8001080:	af00      	add	r7, sp, #0
 8001082:	200c      	movs	r0, #12
 8001084:	f7ff ffdc 	bl	8001040 <bno055_setOperationMode>
 8001088:	bf00      	nop
 800108a:	bd80      	pop	{r7, pc}

0800108c <bno055_reset>:
 800108c:	b580      	push	{r7, lr}
 800108e:	af00      	add	r7, sp, #0
 8001090:	2120      	movs	r1, #32
 8001092:	203f      	movs	r0, #63	@ 0x3f
 8001094:	f000 f84a 	bl	800112c <bno055_writeData>
 8001098:	f44f 702f 	mov.w	r0, #700	@ 0x2bc
 800109c:	f000 f83a 	bl	8001114 <bno055_delay>
 80010a0:	bf00      	nop
 80010a2:	bd80      	pop	{r7, pc}

080010a4 <bno055_setup>:
 80010a4:	b580      	push	{r7, lr}
 80010a6:	b082      	sub	sp, #8
 80010a8:	af00      	add	r7, sp, #0
 80010aa:	f7ff ffef 	bl	800108c <bno055_reset>
 80010ae:	2300      	movs	r3, #0
 80010b0:	71fb      	strb	r3, [r7, #7]
 80010b2:	1dfb      	adds	r3, r7, #7
 80010b4:	2201      	movs	r2, #1
 80010b6:	4619      	mov	r1, r3
 80010b8:	2000      	movs	r0, #0
 80010ba:	f000 f923 	bl	8001304 <bno055_readData>
 80010be:	79fb      	ldrb	r3, [r7, #7]
 80010c0:	2ba0      	cmp	r3, #160	@ 0xa0
 80010c2:	d004      	beq.n	80010ce <bno055_setup+0x2a>
 80010c4:	79fb      	ldrb	r3, [r7, #7]
 80010c6:	4619      	mov	r1, r3
 80010c8:	4809      	ldr	r0, [pc, #36]	@ (80010f0 <bno055_setup+0x4c>)
 80010ca:	f008 fc2f 	bl	800992c <iprintf>
 80010ce:	2000      	movs	r0, #0
 80010d0:	f7ff ffa8 	bl	8001024 <bno055_setPage>
 80010d4:	2100      	movs	r1, #0
 80010d6:	203f      	movs	r0, #63	@ 0x3f
 80010d8:	f000 f828 	bl	800112c <bno055_writeData>
 80010dc:	f7ff ffc8 	bl	8001070 <bno055_setOperationModeConfig>
 80010e0:	200a      	movs	r0, #10
 80010e2:	f000 f817 	bl	8001114 <bno055_delay>
 80010e6:	bf00      	nop
 80010e8:	3708      	adds	r7, #8
 80010ea:	46bd      	mov	sp, r7
 80010ec:	bd80      	pop	{r7, pc}
 80010ee:	bf00      	nop
 80010f0:	0800d2a0 	.word	0x0800d2a0

080010f4 <bno055_assignI2C>:

#include "bno055.h"

I2C_HandleTypeDef *_bno055_i2c_port;

void bno055_assignI2C(I2C_HandleTypeDef *hi2c_device) {
 80010f4:	b480      	push	{r7}
 80010f6:	b083      	sub	sp, #12
 80010f8:	af00      	add	r7, sp, #0
 80010fa:	6078      	str	r0, [r7, #4]
  _bno055_i2c_port = hi2c_device;
 80010fc:	4a04      	ldr	r2, [pc, #16]	@ (8001110 <bno055_assignI2C+0x1c>)
 80010fe:	687b      	ldr	r3, [r7, #4]
 8001100:	6013      	str	r3, [r2, #0]
}
 8001102:	bf00      	nop
 8001104:	370c      	adds	r7, #12
 8001106:	46bd      	mov	sp, r7
 8001108:	f85d 7b04 	ldr.w	r7, [sp], #4
 800110c:	4770      	bx	lr
 800110e:	bf00      	nop
 8001110:	20000218 	.word	0x20000218

08001114 <bno055_delay>:

void bno055_delay(int time) {
 8001114:	b580      	push	{r7, lr}
 8001116:	b082      	sub	sp, #8
 8001118:	af00      	add	r7, sp, #0
 800111a:	6078      	str	r0, [r7, #4]
#ifdef FREERTOS_ENABLED
  osDelay(time);
#else
  HAL_Delay(time);
 800111c:	687b      	ldr	r3, [r7, #4]
 800111e:	4618      	mov	r0, r3
 8001120:	f002 fc60 	bl	80039e4 <HAL_Delay>
#endif
}
 8001124:	bf00      	nop
 8001126:	3708      	adds	r7, #8
 8001128:	46bd      	mov	sp, r7
 800112a:	bd80      	pop	{r7, pc}

0800112c <bno055_writeData>:

void bno055_writeData(uint8_t reg, uint8_t data) {
 800112c:	b580      	push	{r7, lr}
 800112e:	b088      	sub	sp, #32
 8001130:	af02      	add	r7, sp, #8
 8001132:	4603      	mov	r3, r0
 8001134:	460a      	mov	r2, r1
 8001136:	71fb      	strb	r3, [r7, #7]
 8001138:	4613      	mov	r3, r2
 800113a:	71bb      	strb	r3, [r7, #6]
  uint8_t txdata[2] = {reg, data};
 800113c:	79fb      	ldrb	r3, [r7, #7]
 800113e:	733b      	strb	r3, [r7, #12]
 8001140:	79bb      	ldrb	r3, [r7, #6]
 8001142:	737b      	strb	r3, [r7, #13]
  uint8_t status;
  status = HAL_I2C_Master_Transmit(_bno055_i2c_port, BNO055_I2C_ADDR << 1,
 8001144:	4b5a      	ldr	r3, [pc, #360]	@ (80012b0 <bno055_writeData+0x184>)
 8001146:	6818      	ldr	r0, [r3, #0]
 8001148:	f107 020c 	add.w	r2, r7, #12
 800114c:	230a      	movs	r3, #10
 800114e:	9300      	str	r3, [sp, #0]
 8001150:	2302      	movs	r3, #2
 8001152:	2150      	movs	r1, #80	@ 0x50
 8001154:	f003 fc70 	bl	8004a38 <HAL_I2C_Master_Transmit>
 8001158:	4603      	mov	r3, r0
 800115a:	75fb      	strb	r3, [r7, #23]
                                   txdata, sizeof(txdata), 10);
  if (status == HAL_OK) {
 800115c:	7dfb      	ldrb	r3, [r7, #23]
 800115e:	2b00      	cmp	r3, #0
 8001160:	f000 80a0 	beq.w	80012a4 <bno055_writeData+0x178>
    return;
  }

  if (status == HAL_ERROR) {
 8001164:	7dfb      	ldrb	r3, [r7, #23]
 8001166:	2b01      	cmp	r3, #1
 8001168:	d103      	bne.n	8001172 <bno055_writeData+0x46>
    printf("HAL_I2C_Master_Transmit HAL_ERROR\r\n");
 800116a:	4852      	ldr	r0, [pc, #328]	@ (80012b4 <bno055_writeData+0x188>)
 800116c:	f008 fc46 	bl	80099fc <puts>
 8001170:	e012      	b.n	8001198 <bno055_writeData+0x6c>
  } else if (status == HAL_TIMEOUT) {
 8001172:	7dfb      	ldrb	r3, [r7, #23]
 8001174:	2b03      	cmp	r3, #3
 8001176:	d103      	bne.n	8001180 <bno055_writeData+0x54>
    printf("HAL_I2C_Master_Transmit HAL_TIMEOUT\r\n");
 8001178:	484f      	ldr	r0, [pc, #316]	@ (80012b8 <bno055_writeData+0x18c>)
 800117a:	f008 fc3f 	bl	80099fc <puts>
 800117e:	e00b      	b.n	8001198 <bno055_writeData+0x6c>
  } else if (status == HAL_BUSY) {
 8001180:	7dfb      	ldrb	r3, [r7, #23]
 8001182:	2b02      	cmp	r3, #2
 8001184:	d103      	bne.n	800118e <bno055_writeData+0x62>
    printf("HAL_I2C_Master_Transmit HAL_BUSY\r\n");
 8001186:	484d      	ldr	r0, [pc, #308]	@ (80012bc <bno055_writeData+0x190>)
 8001188:	f008 fc38 	bl	80099fc <puts>
 800118c:	e004      	b.n	8001198 <bno055_writeData+0x6c>
  } else {
    printf("Unknown status data %d", status);
 800118e:	7dfb      	ldrb	r3, [r7, #23]
 8001190:	4619      	mov	r1, r3
 8001192:	484b      	ldr	r0, [pc, #300]	@ (80012c0 <bno055_writeData+0x194>)
 8001194:	f008 fbca 	bl	800992c <iprintf>
  }

  uint32_t error = HAL_I2C_GetError(_bno055_i2c_port);
 8001198:	4b45      	ldr	r3, [pc, #276]	@ (80012b0 <bno055_writeData+0x184>)
 800119a:	681b      	ldr	r3, [r3, #0]
 800119c:	4618      	mov	r0, r3
 800119e:	f003 ff89 	bl	80050b4 <HAL_I2C_GetError>
 80011a2:	6138      	str	r0, [r7, #16]
  if (error == HAL_I2C_ERROR_NONE) {
 80011a4:	693b      	ldr	r3, [r7, #16]
 80011a6:	2b00      	cmp	r3, #0
 80011a8:	d07e      	beq.n	80012a8 <bno055_writeData+0x17c>
    return;
  } else if (error == HAL_I2C_ERROR_BERR) {
 80011aa:	693b      	ldr	r3, [r7, #16]
 80011ac:	2b01      	cmp	r3, #1
 80011ae:	d103      	bne.n	80011b8 <bno055_writeData+0x8c>
    printf("HAL_I2C_ERROR_BERR\r\n");
 80011b0:	4844      	ldr	r0, [pc, #272]	@ (80012c4 <bno055_writeData+0x198>)
 80011b2:	f008 fc23 	bl	80099fc <puts>
 80011b6:	e021      	b.n	80011fc <bno055_writeData+0xd0>
  } else if (error == HAL_I2C_ERROR_ARLO) {
 80011b8:	693b      	ldr	r3, [r7, #16]
 80011ba:	2b02      	cmp	r3, #2
 80011bc:	d103      	bne.n	80011c6 <bno055_writeData+0x9a>
    printf("HAL_I2C_ERROR_ARLO\r\n");
 80011be:	4842      	ldr	r0, [pc, #264]	@ (80012c8 <bno055_writeData+0x19c>)
 80011c0:	f008 fc1c 	bl	80099fc <puts>
 80011c4:	e01a      	b.n	80011fc <bno055_writeData+0xd0>
  } else if (error == HAL_I2C_ERROR_AF) {
 80011c6:	693b      	ldr	r3, [r7, #16]
 80011c8:	2b04      	cmp	r3, #4
 80011ca:	d103      	bne.n	80011d4 <bno055_writeData+0xa8>
    printf("HAL_I2C_ERROR_AF\r\n");
 80011cc:	483f      	ldr	r0, [pc, #252]	@ (80012cc <bno055_writeData+0x1a0>)
 80011ce:	f008 fc15 	bl	80099fc <puts>
 80011d2:	e013      	b.n	80011fc <bno055_writeData+0xd0>
  } else if (error == HAL_I2C_ERROR_OVR) {
 80011d4:	693b      	ldr	r3, [r7, #16]
 80011d6:	2b08      	cmp	r3, #8
 80011d8:	d103      	bne.n	80011e2 <bno055_writeData+0xb6>
    printf("HAL_I2C_ERROR_OVR\r\n");
 80011da:	483d      	ldr	r0, [pc, #244]	@ (80012d0 <bno055_writeData+0x1a4>)
 80011dc:	f008 fc0e 	bl	80099fc <puts>
 80011e0:	e00c      	b.n	80011fc <bno055_writeData+0xd0>
  } else if (error == HAL_I2C_ERROR_DMA) {
 80011e2:	693b      	ldr	r3, [r7, #16]
 80011e4:	2b10      	cmp	r3, #16
 80011e6:	d103      	bne.n	80011f0 <bno055_writeData+0xc4>
    printf("HAL_I2C_ERROR_DMA\r\n");
 80011e8:	483a      	ldr	r0, [pc, #232]	@ (80012d4 <bno055_writeData+0x1a8>)
 80011ea:	f008 fc07 	bl	80099fc <puts>
 80011ee:	e005      	b.n	80011fc <bno055_writeData+0xd0>
  } else if (error == HAL_I2C_ERROR_TIMEOUT) {
 80011f0:	693b      	ldr	r3, [r7, #16]
 80011f2:	2b20      	cmp	r3, #32
 80011f4:	d102      	bne.n	80011fc <bno055_writeData+0xd0>
    printf("HAL_I2C_ERROR_TIMEOUT\r\n");
 80011f6:	4838      	ldr	r0, [pc, #224]	@ (80012d8 <bno055_writeData+0x1ac>)
 80011f8:	f008 fc00 	bl	80099fc <puts>
  }

  HAL_I2C_StateTypeDef state = HAL_I2C_GetState(_bno055_i2c_port);
 80011fc:	4b2c      	ldr	r3, [pc, #176]	@ (80012b0 <bno055_writeData+0x184>)
 80011fe:	681b      	ldr	r3, [r3, #0]
 8001200:	4618      	mov	r0, r3
 8001202:	f003 ff49 	bl	8005098 <HAL_I2C_GetState>
 8001206:	4603      	mov	r3, r0
 8001208:	73fb      	strb	r3, [r7, #15]
  if (state == HAL_I2C_STATE_RESET) {
 800120a:	7bfb      	ldrb	r3, [r7, #15]
 800120c:	2b00      	cmp	r3, #0
 800120e:	d103      	bne.n	8001218 <bno055_writeData+0xec>
    printf("HAL_I2C_STATE_RESET\r\n");
 8001210:	4832      	ldr	r0, [pc, #200]	@ (80012dc <bno055_writeData+0x1b0>)
 8001212:	f008 fbf3 	bl	80099fc <puts>
 8001216:	e048      	b.n	80012aa <bno055_writeData+0x17e>
  } else if (state == HAL_I2C_STATE_READY) {
 8001218:	7bfb      	ldrb	r3, [r7, #15]
 800121a:	2b20      	cmp	r3, #32
 800121c:	d103      	bne.n	8001226 <bno055_writeData+0xfa>
    printf("HAL_I2C_STATE_RESET\r\n");
 800121e:	482f      	ldr	r0, [pc, #188]	@ (80012dc <bno055_writeData+0x1b0>)
 8001220:	f008 fbec 	bl	80099fc <puts>
 8001224:	e041      	b.n	80012aa <bno055_writeData+0x17e>
  } else if (state == HAL_I2C_STATE_BUSY) {
 8001226:	7bfb      	ldrb	r3, [r7, #15]
 8001228:	2b24      	cmp	r3, #36	@ 0x24
 800122a:	d103      	bne.n	8001234 <bno055_writeData+0x108>
    printf("HAL_I2C_STATE_BUSY\r\n");
 800122c:	482c      	ldr	r0, [pc, #176]	@ (80012e0 <bno055_writeData+0x1b4>)
 800122e:	f008 fbe5 	bl	80099fc <puts>
 8001232:	e03a      	b.n	80012aa <bno055_writeData+0x17e>
  } else if (state == HAL_I2C_STATE_BUSY_TX) {
 8001234:	7bfb      	ldrb	r3, [r7, #15]
 8001236:	2b21      	cmp	r3, #33	@ 0x21
 8001238:	d103      	bne.n	8001242 <bno055_writeData+0x116>
    printf("HAL_I2C_STATE_BUSY_TX\r\n");
 800123a:	482a      	ldr	r0, [pc, #168]	@ (80012e4 <bno055_writeData+0x1b8>)
 800123c:	f008 fbde 	bl	80099fc <puts>
 8001240:	e033      	b.n	80012aa <bno055_writeData+0x17e>
  } else if (state == HAL_I2C_STATE_BUSY_RX) {
 8001242:	7bfb      	ldrb	r3, [r7, #15]
 8001244:	2b22      	cmp	r3, #34	@ 0x22
 8001246:	d103      	bne.n	8001250 <bno055_writeData+0x124>
    printf("HAL_I2C_STATE_BUSY_RX\r\n");
 8001248:	4827      	ldr	r0, [pc, #156]	@ (80012e8 <bno055_writeData+0x1bc>)
 800124a:	f008 fbd7 	bl	80099fc <puts>
 800124e:	e02c      	b.n	80012aa <bno055_writeData+0x17e>
  } else if (state == HAL_I2C_STATE_LISTEN) {
 8001250:	7bfb      	ldrb	r3, [r7, #15]
 8001252:	2b28      	cmp	r3, #40	@ 0x28
 8001254:	d103      	bne.n	800125e <bno055_writeData+0x132>
    printf("HAL_I2C_STATE_LISTEN\r\n");
 8001256:	4825      	ldr	r0, [pc, #148]	@ (80012ec <bno055_writeData+0x1c0>)
 8001258:	f008 fbd0 	bl	80099fc <puts>
 800125c:	e025      	b.n	80012aa <bno055_writeData+0x17e>
  } else if (state == HAL_I2C_STATE_BUSY_TX_LISTEN) {
 800125e:	7bfb      	ldrb	r3, [r7, #15]
 8001260:	2b29      	cmp	r3, #41	@ 0x29
 8001262:	d103      	bne.n	800126c <bno055_writeData+0x140>
    printf("HAL_I2C_STATE_BUSY_TX_LISTEN\r\n");
 8001264:	4822      	ldr	r0, [pc, #136]	@ (80012f0 <bno055_writeData+0x1c4>)
 8001266:	f008 fbc9 	bl	80099fc <puts>
 800126a:	e01e      	b.n	80012aa <bno055_writeData+0x17e>
  } else if (state == HAL_I2C_STATE_BUSY_RX_LISTEN) {
 800126c:	7bfb      	ldrb	r3, [r7, #15]
 800126e:	2b2a      	cmp	r3, #42	@ 0x2a
 8001270:	d103      	bne.n	800127a <bno055_writeData+0x14e>
    printf("HAL_I2C_STATE_BUSY_RX_LISTEN\r\n");
 8001272:	4820      	ldr	r0, [pc, #128]	@ (80012f4 <bno055_writeData+0x1c8>)
 8001274:	f008 fbc2 	bl	80099fc <puts>
 8001278:	e017      	b.n	80012aa <bno055_writeData+0x17e>
  } else if (state == HAL_I2C_STATE_ABORT) {
 800127a:	7bfb      	ldrb	r3, [r7, #15]
 800127c:	2b60      	cmp	r3, #96	@ 0x60
 800127e:	d103      	bne.n	8001288 <bno055_writeData+0x15c>
    printf("HAL_I2C_STATE_ABORT\r\n");
 8001280:	481d      	ldr	r0, [pc, #116]	@ (80012f8 <bno055_writeData+0x1cc>)
 8001282:	f008 fbbb 	bl	80099fc <puts>
 8001286:	e010      	b.n	80012aa <bno055_writeData+0x17e>
  } else if (state == HAL_I2C_STATE_TIMEOUT) {
 8001288:	7bfb      	ldrb	r3, [r7, #15]
 800128a:	2ba0      	cmp	r3, #160	@ 0xa0
 800128c:	d103      	bne.n	8001296 <bno055_writeData+0x16a>
    printf("HAL_I2C_STATE_TIMEOUT\r\n");
 800128e:	481b      	ldr	r0, [pc, #108]	@ (80012fc <bno055_writeData+0x1d0>)
 8001290:	f008 fbb4 	bl	80099fc <puts>
 8001294:	e009      	b.n	80012aa <bno055_writeData+0x17e>
  } else if (state == HAL_I2C_STATE_ERROR) {
 8001296:	7bfb      	ldrb	r3, [r7, #15]
 8001298:	2be0      	cmp	r3, #224	@ 0xe0
 800129a:	d106      	bne.n	80012aa <bno055_writeData+0x17e>
    printf("HAL_I2C_STATE_ERROR\r\n");
 800129c:	4818      	ldr	r0, [pc, #96]	@ (8001300 <bno055_writeData+0x1d4>)
 800129e:	f008 fbad 	bl	80099fc <puts>
 80012a2:	e002      	b.n	80012aa <bno055_writeData+0x17e>
    return;
 80012a4:	bf00      	nop
 80012a6:	e000      	b.n	80012aa <bno055_writeData+0x17e>
    return;
 80012a8:	bf00      	nop
  }
  // while (HAL_I2C_GetState(_bno055_i2c_port) != HAL_I2C_STATE_READY) {}
  // return;
}
 80012aa:	3718      	adds	r7, #24
 80012ac:	46bd      	mov	sp, r7
 80012ae:	bd80      	pop	{r7, pc}
 80012b0:	20000218 	.word	0x20000218
 80012b4:	0800d2dc 	.word	0x0800d2dc
 80012b8:	0800d300 	.word	0x0800d300
 80012bc:	0800d328 	.word	0x0800d328
 80012c0:	0800d34c 	.word	0x0800d34c
 80012c4:	0800d364 	.word	0x0800d364
 80012c8:	0800d378 	.word	0x0800d378
 80012cc:	0800d38c 	.word	0x0800d38c
 80012d0:	0800d3a0 	.word	0x0800d3a0
 80012d4:	0800d3b4 	.word	0x0800d3b4
 80012d8:	0800d3c8 	.word	0x0800d3c8
 80012dc:	0800d3e0 	.word	0x0800d3e0
 80012e0:	0800d3f8 	.word	0x0800d3f8
 80012e4:	0800d40c 	.word	0x0800d40c
 80012e8:	0800d424 	.word	0x0800d424
 80012ec:	0800d43c 	.word	0x0800d43c
 80012f0:	0800d454 	.word	0x0800d454
 80012f4:	0800d474 	.word	0x0800d474
 80012f8:	0800d494 	.word	0x0800d494
 80012fc:	0800d4ac 	.word	0x0800d4ac
 8001300:	0800d4c4 	.word	0x0800d4c4

08001304 <bno055_readData>:

void bno055_readData(uint8_t reg, uint8_t *data, uint8_t len) {
 8001304:	b580      	push	{r7, lr}
 8001306:	b084      	sub	sp, #16
 8001308:	af02      	add	r7, sp, #8
 800130a:	4603      	mov	r3, r0
 800130c:	6039      	str	r1, [r7, #0]
 800130e:	71fb      	strb	r3, [r7, #7]
 8001310:	4613      	mov	r3, r2
 8001312:	71bb      	strb	r3, [r7, #6]
  HAL_I2C_Master_Transmit(_bno055_i2c_port, BNO055_I2C_ADDR << 1, &reg, 1,
 8001314:	4b0b      	ldr	r3, [pc, #44]	@ (8001344 <bno055_readData+0x40>)
 8001316:	6818      	ldr	r0, [r3, #0]
 8001318:	1dfa      	adds	r2, r7, #7
 800131a:	2364      	movs	r3, #100	@ 0x64
 800131c:	9300      	str	r3, [sp, #0]
 800131e:	2301      	movs	r3, #1
 8001320:	2150      	movs	r1, #80	@ 0x50
 8001322:	f003 fb89 	bl	8004a38 <HAL_I2C_Master_Transmit>
                          100);
  HAL_I2C_Master_Receive(_bno055_i2c_port, BNO055_I2C_ADDR << 1, data, len,
 8001326:	4b07      	ldr	r3, [pc, #28]	@ (8001344 <bno055_readData+0x40>)
 8001328:	6818      	ldr	r0, [r3, #0]
 800132a:	79bb      	ldrb	r3, [r7, #6]
 800132c:	b29b      	uxth	r3, r3
 800132e:	2264      	movs	r2, #100	@ 0x64
 8001330:	9200      	str	r2, [sp, #0]
 8001332:	683a      	ldr	r2, [r7, #0]
 8001334:	2150      	movs	r1, #80	@ 0x50
 8001336:	f003 fc7d 	bl	8004c34 <HAL_I2C_Master_Receive>
                         100);
  // HAL_I2C_Mem_Read(_bno055_i2c_port, BNO055_I2C_ADDR_LO<<1, reg,
  // I2C_MEMADD_SIZE_8BIT, data, len, 100);
}
 800133a:	bf00      	nop
 800133c:	3708      	adds	r7, #8
 800133e:	46bd      	mov	sp, r7
 8001340:	bd80      	pop	{r7, pc}
 8001342:	bf00      	nop
 8001344:	20000218 	.word	0x20000218

08001348 <HAL_UART_RxCpltCallback>:
// Encoder state
volatile int32_t prev_encoder5 = 0;
volatile int32_t prev_encoder10 = 0;
volatile int32_t prev_encoder11 = 0;

void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart) {
 8001348:	b580      	push	{r7, lr}
 800134a:	b082      	sub	sp, #8
 800134c:	af00      	add	r7, sp, #0
 800134e:	6078      	str	r0, [r7, #4]
	HAL_UART_Receive_DMA(&huart4, rxbuff, 16);
 8001350:	2210      	movs	r2, #16
 8001352:	4904      	ldr	r1, [pc, #16]	@ (8001364 <HAL_UART_RxCpltCallback+0x1c>)
 8001354:	4804      	ldr	r0, [pc, #16]	@ (8001368 <HAL_UART_RxCpltCallback+0x20>)
 8001356:	f006 faae 	bl	80078b6 <HAL_UART_Receive_DMA>
}
 800135a:	bf00      	nop
 800135c:	3708      	adds	r7, #8
 800135e:	46bd      	mov	sp, r7
 8001360:	bd80      	pop	{r7, pc}
 8001362:	bf00      	nop
 8001364:	20000688 	.word	0x20000688
 8001368:	20000540 	.word	0x20000540

0800136c <map>:
long map(long x, long in_min, long in_max, long out_min, long out_max) {
 800136c:	b480      	push	{r7}
 800136e:	b085      	sub	sp, #20
 8001370:	af00      	add	r7, sp, #0
 8001372:	60f8      	str	r0, [r7, #12]
 8001374:	60b9      	str	r1, [r7, #8]
 8001376:	607a      	str	r2, [r7, #4]
 8001378:	603b      	str	r3, [r7, #0]

	return (x - in_min) * (out_max - out_min) / (in_max - in_min) + out_min;
 800137a:	68fa      	ldr	r2, [r7, #12]
 800137c:	68bb      	ldr	r3, [r7, #8]
 800137e:	1ad3      	subs	r3, r2, r3
 8001380:	69b9      	ldr	r1, [r7, #24]
 8001382:	683a      	ldr	r2, [r7, #0]
 8001384:	1a8a      	subs	r2, r1, r2
 8001386:	fb03 f202 	mul.w	r2, r3, r2
 800138a:	6879      	ldr	r1, [r7, #4]
 800138c:	68bb      	ldr	r3, [r7, #8]
 800138e:	1acb      	subs	r3, r1, r3
 8001390:	fb92 f2f3 	sdiv	r2, r2, r3
 8001394:	683b      	ldr	r3, [r7, #0]
 8001396:	4413      	add	r3, r2

}
 8001398:	4618      	mov	r0, r3
 800139a:	3714      	adds	r7, #20
 800139c:	46bd      	mov	sp, r7
 800139e:	f85d 7b04 	ldr.w	r7, [sp], #4
 80013a2:	4770      	bx	lr
 80013a4:	0000      	movs	r0, r0
	...

080013a8 <update_odometry>:

void update_odometry(int16_t encoder1, int32_t encoder2, int16_t encoder3) {
 80013a8:	b580      	push	{r7, lr}
 80013aa:	b088      	sub	sp, #32
 80013ac:	af00      	add	r7, sp, #0
 80013ae:	4603      	mov	r3, r0
 80013b0:	6039      	str	r1, [r7, #0]
 80013b2:	80fb      	strh	r3, [r7, #6]
 80013b4:	4613      	mov	r3, r2
 80013b6:	80bb      	strh	r3, [r7, #4]
	// Calculate the change in encoder values
	int16_t delta1 = encoder1 - last_encoder1;
 80013b8:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 80013bc:	ee07 3a90 	vmov	s15, r3
 80013c0:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 80013c4:	4b8c      	ldr	r3, [pc, #560]	@ (80015f8 <update_odometry+0x250>)
 80013c6:	edd3 7a00 	vldr	s15, [r3]
 80013ca:	ee77 7a67 	vsub.f32	s15, s14, s15
 80013ce:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80013d2:	ee17 3a90 	vmov	r3, s15
 80013d6:	83fb      	strh	r3, [r7, #30]
	int32_t delta2 = encoder2 - last_encoder2;
 80013d8:	683b      	ldr	r3, [r7, #0]
 80013da:	ee07 3a90 	vmov	s15, r3
 80013de:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 80013e2:	4b86      	ldr	r3, [pc, #536]	@ (80015fc <update_odometry+0x254>)
 80013e4:	edd3 7a00 	vldr	s15, [r3]
 80013e8:	ee77 7a67 	vsub.f32	s15, s14, s15
 80013ec:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80013f0:	ee17 3a90 	vmov	r3, s15
 80013f4:	61bb      	str	r3, [r7, #24]
	int16_t delta3 = encoder3 - last_encoder3;
 80013f6:	f9b7 3004 	ldrsh.w	r3, [r7, #4]
 80013fa:	ee07 3a90 	vmov	s15, r3
 80013fe:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8001402:	4b7f      	ldr	r3, [pc, #508]	@ (8001600 <update_odometry+0x258>)
 8001404:	edd3 7a00 	vldr	s15, [r3]
 8001408:	ee77 7a67 	vsub.f32	s15, s14, s15
 800140c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8001410:	ee17 3a90 	vmov	r3, s15
 8001414:	82fb      	strh	r3, [r7, #22]

	// Calculate distance per encoder count
	float wheel_circumference = 2 * M_PI * WHEEL_RADIUS;
 8001416:	4b7b      	ldr	r3, [pc, #492]	@ (8001604 <update_odometry+0x25c>)
 8001418:	613b      	str	r3, [r7, #16]
	float distance_per_count = (1.0 / ENCODER_COUNTS_PER_REV)
			* (wheel_circumference / 1000);
 800141a:	edd7 7a04 	vldr	s15, [r7, #16]
 800141e:	ed9f 7a7a 	vldr	s14, [pc, #488]	@ 8001608 <update_odometry+0x260>
 8001422:	eec7 6a87 	vdiv.f32	s13, s15, s14
 8001426:	ee16 0a90 	vmov	r0, s13
 800142a:	f7ff f8ad 	bl	8000588 <__aeabi_f2d>
 800142e:	a370      	add	r3, pc, #448	@ (adr r3, 80015f0 <update_odometry+0x248>)
 8001430:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001434:	f7ff f900 	bl	8000638 <__aeabi_dmul>
 8001438:	4602      	mov	r2, r0
 800143a:	460b      	mov	r3, r1
	float distance_per_count = (1.0 / ENCODER_COUNTS_PER_REV)
 800143c:	4610      	mov	r0, r2
 800143e:	4619      	mov	r1, r3
 8001440:	f7ff fbf2 	bl	8000c28 <__aeabi_d2f>
 8001444:	4603      	mov	r3, r0
 8001446:	60fb      	str	r3, [r7, #12]

	// Compute average delta for forward/backward encoders (without abs)
	float avgDelta12 = (delta1 + delta2) / 2.0;
 8001448:	f9b7 201e 	ldrsh.w	r2, [r7, #30]
 800144c:	69bb      	ldr	r3, [r7, #24]
 800144e:	4413      	add	r3, r2
 8001450:	4618      	mov	r0, r3
 8001452:	f7ff f887 	bl	8000564 <__aeabi_i2d>
 8001456:	f04f 0200 	mov.w	r2, #0
 800145a:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 800145e:	f7ff fa15 	bl	800088c <__aeabi_ddiv>
 8001462:	4602      	mov	r2, r0
 8001464:	460b      	mov	r3, r1
 8001466:	4610      	mov	r0, r2
 8001468:	4619      	mov	r1, r3
 800146a:	f7ff fbdd 	bl	8000c28 <__aeabi_d2f>
 800146e:	4603      	mov	r3, r0
 8001470:	60bb      	str	r3, [r7, #8]

	// Check movement direction based on joystick
	if (ly >= Buff1 && (lx <= BuffP && lx >= BuffN)) {
 8001472:	4b66      	ldr	r3, [pc, #408]	@ (800160c <update_odometry+0x264>)
 8001474:	681a      	ldr	r2, [r3, #0]
 8001476:	4b66      	ldr	r3, [pc, #408]	@ (8001610 <update_odometry+0x268>)
 8001478:	681b      	ldr	r3, [r3, #0]
 800147a:	429a      	cmp	r2, r3
 800147c:	db1a      	blt.n	80014b4 <update_odometry+0x10c>
 800147e:	4b65      	ldr	r3, [pc, #404]	@ (8001614 <update_odometry+0x26c>)
 8001480:	681a      	ldr	r2, [r3, #0]
 8001482:	4b65      	ldr	r3, [pc, #404]	@ (8001618 <update_odometry+0x270>)
 8001484:	681b      	ldr	r3, [r3, #0]
 8001486:	429a      	cmp	r2, r3
 8001488:	dc14      	bgt.n	80014b4 <update_odometry+0x10c>
 800148a:	4b62      	ldr	r3, [pc, #392]	@ (8001614 <update_odometry+0x26c>)
 800148c:	681a      	ldr	r2, [r3, #0]
 800148e:	4b63      	ldr	r3, [pc, #396]	@ (800161c <update_odometry+0x274>)
 8001490:	681b      	ldr	r3, [r3, #0]
 8001492:	429a      	cmp	r2, r3
 8001494:	db0e      	blt.n	80014b4 <update_odometry+0x10c>
		// Forward motion - use the actual delta (with sign) to track position
		x += distance_per_count * avgDelta12;
 8001496:	ed97 7a03 	vldr	s14, [r7, #12]
 800149a:	edd7 7a02 	vldr	s15, [r7, #8]
 800149e:	ee27 7a27 	vmul.f32	s14, s14, s15
 80014a2:	4b5f      	ldr	r3, [pc, #380]	@ (8001620 <update_odometry+0x278>)
 80014a4:	edd3 7a00 	vldr	s15, [r3]
 80014a8:	ee77 7a27 	vadd.f32	s15, s14, s15
 80014ac:	4b5c      	ldr	r3, [pc, #368]	@ (8001620 <update_odometry+0x278>)
 80014ae:	edc3 7a00 	vstr	s15, [r3]
 80014b2:	e01f      	b.n	80014f4 <update_odometry+0x14c>
	} else if (ly <= Buff2 && (lx <= BuffP && lx >= BuffN)) {
 80014b4:	4b55      	ldr	r3, [pc, #340]	@ (800160c <update_odometry+0x264>)
 80014b6:	681a      	ldr	r2, [r3, #0]
 80014b8:	4b5a      	ldr	r3, [pc, #360]	@ (8001624 <update_odometry+0x27c>)
 80014ba:	681b      	ldr	r3, [r3, #0]
 80014bc:	429a      	cmp	r2, r3
 80014be:	dc19      	bgt.n	80014f4 <update_odometry+0x14c>
 80014c0:	4b54      	ldr	r3, [pc, #336]	@ (8001614 <update_odometry+0x26c>)
 80014c2:	681a      	ldr	r2, [r3, #0]
 80014c4:	4b54      	ldr	r3, [pc, #336]	@ (8001618 <update_odometry+0x270>)
 80014c6:	681b      	ldr	r3, [r3, #0]
 80014c8:	429a      	cmp	r2, r3
 80014ca:	dc13      	bgt.n	80014f4 <update_odometry+0x14c>
 80014cc:	4b51      	ldr	r3, [pc, #324]	@ (8001614 <update_odometry+0x26c>)
 80014ce:	681a      	ldr	r2, [r3, #0]
 80014d0:	4b52      	ldr	r3, [pc, #328]	@ (800161c <update_odometry+0x274>)
 80014d2:	681b      	ldr	r3, [r3, #0]
 80014d4:	429a      	cmp	r2, r3
 80014d6:	db0d      	blt.n	80014f4 <update_odometry+0x14c>
		// Backward motion - use the actual delta (with sign) to track position
		x += distance_per_count * avgDelta12; // Will be negative when going backward
 80014d8:	ed97 7a03 	vldr	s14, [r7, #12]
 80014dc:	edd7 7a02 	vldr	s15, [r7, #8]
 80014e0:	ee27 7a27 	vmul.f32	s14, s14, s15
 80014e4:	4b4e      	ldr	r3, [pc, #312]	@ (8001620 <update_odometry+0x278>)
 80014e6:	edd3 7a00 	vldr	s15, [r3]
 80014ea:	ee77 7a27 	vadd.f32	s15, s14, s15
 80014ee:	4b4c      	ldr	r3, [pc, #304]	@ (8001620 <update_odometry+0x278>)
 80014f0:	edc3 7a00 	vstr	s15, [r3]
	}

	if (lx >= Buff1 && (ly <= BuffP && ly >= BuffN)) {
 80014f4:	4b47      	ldr	r3, [pc, #284]	@ (8001614 <update_odometry+0x26c>)
 80014f6:	681a      	ldr	r2, [r3, #0]
 80014f8:	4b45      	ldr	r3, [pc, #276]	@ (8001610 <update_odometry+0x268>)
 80014fa:	681b      	ldr	r3, [r3, #0]
 80014fc:	429a      	cmp	r2, r3
 80014fe:	db28      	blt.n	8001552 <update_odometry+0x1aa>
 8001500:	4b42      	ldr	r3, [pc, #264]	@ (800160c <update_odometry+0x264>)
 8001502:	681a      	ldr	r2, [r3, #0]
 8001504:	4b44      	ldr	r3, [pc, #272]	@ (8001618 <update_odometry+0x270>)
 8001506:	681b      	ldr	r3, [r3, #0]
 8001508:	429a      	cmp	r2, r3
 800150a:	dc22      	bgt.n	8001552 <update_odometry+0x1aa>
 800150c:	4b3f      	ldr	r3, [pc, #252]	@ (800160c <update_odometry+0x264>)
 800150e:	681a      	ldr	r2, [r3, #0]
 8001510:	4b42      	ldr	r3, [pc, #264]	@ (800161c <update_odometry+0x274>)
 8001512:	681b      	ldr	r3, [r3, #0]
 8001514:	429a      	cmp	r2, r3
 8001516:	db1c      	blt.n	8001552 <update_odometry+0x1aa>
		dist3 = distance_per_count * abs(delta3);  // Using delta3 for y-axis
 8001518:	f9b7 3016 	ldrsh.w	r3, [r7, #22]
 800151c:	2b00      	cmp	r3, #0
 800151e:	bfb8      	it	lt
 8001520:	425b      	neglt	r3, r3
 8001522:	b29b      	uxth	r3, r3
 8001524:	ee07 3a90 	vmov	s15, r3
 8001528:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 800152c:	edd7 7a03 	vldr	s15, [r7, #12]
 8001530:	ee67 7a27 	vmul.f32	s15, s14, s15
 8001534:	4b3c      	ldr	r3, [pc, #240]	@ (8001628 <update_odometry+0x280>)
 8001536:	edc3 7a00 	vstr	s15, [r3]
		y += dist3;
 800153a:	4b3c      	ldr	r3, [pc, #240]	@ (800162c <update_odometry+0x284>)
 800153c:	ed93 7a00 	vldr	s14, [r3]
 8001540:	4b39      	ldr	r3, [pc, #228]	@ (8001628 <update_odometry+0x280>)
 8001542:	edd3 7a00 	vldr	s15, [r3]
 8001546:	ee77 7a27 	vadd.f32	s15, s14, s15
 800154a:	4b38      	ldr	r3, [pc, #224]	@ (800162c <update_odometry+0x284>)
 800154c:	edc3 7a00 	vstr	s15, [r3]
 8001550:	e02d      	b.n	80015ae <update_odometry+0x206>
	} else if (lx <= Buff2 && (ly <= BuffP && ly >= BuffN)) {
 8001552:	4b30      	ldr	r3, [pc, #192]	@ (8001614 <update_odometry+0x26c>)
 8001554:	681a      	ldr	r2, [r3, #0]
 8001556:	4b33      	ldr	r3, [pc, #204]	@ (8001624 <update_odometry+0x27c>)
 8001558:	681b      	ldr	r3, [r3, #0]
 800155a:	429a      	cmp	r2, r3
 800155c:	dc27      	bgt.n	80015ae <update_odometry+0x206>
 800155e:	4b2b      	ldr	r3, [pc, #172]	@ (800160c <update_odometry+0x264>)
 8001560:	681a      	ldr	r2, [r3, #0]
 8001562:	4b2d      	ldr	r3, [pc, #180]	@ (8001618 <update_odometry+0x270>)
 8001564:	681b      	ldr	r3, [r3, #0]
 8001566:	429a      	cmp	r2, r3
 8001568:	dc21      	bgt.n	80015ae <update_odometry+0x206>
 800156a:	4b28      	ldr	r3, [pc, #160]	@ (800160c <update_odometry+0x264>)
 800156c:	681a      	ldr	r2, [r3, #0]
 800156e:	4b2b      	ldr	r3, [pc, #172]	@ (800161c <update_odometry+0x274>)
 8001570:	681b      	ldr	r3, [r3, #0]
 8001572:	429a      	cmp	r2, r3
 8001574:	db1b      	blt.n	80015ae <update_odometry+0x206>
		dist4 = distance_per_count * abs(delta3);
 8001576:	f9b7 3016 	ldrsh.w	r3, [r7, #22]
 800157a:	2b00      	cmp	r3, #0
 800157c:	bfb8      	it	lt
 800157e:	425b      	neglt	r3, r3
 8001580:	b29b      	uxth	r3, r3
 8001582:	ee07 3a90 	vmov	s15, r3
 8001586:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 800158a:	edd7 7a03 	vldr	s15, [r7, #12]
 800158e:	ee67 7a27 	vmul.f32	s15, s14, s15
 8001592:	4b27      	ldr	r3, [pc, #156]	@ (8001630 <update_odometry+0x288>)
 8001594:	edc3 7a00 	vstr	s15, [r3]
		y -= dist4;
 8001598:	4b24      	ldr	r3, [pc, #144]	@ (800162c <update_odometry+0x284>)
 800159a:	ed93 7a00 	vldr	s14, [r3]
 800159e:	4b24      	ldr	r3, [pc, #144]	@ (8001630 <update_odometry+0x288>)
 80015a0:	edd3 7a00 	vldr	s15, [r3]
 80015a4:	ee77 7a67 	vsub.f32	s15, s14, s15
 80015a8:	4b20      	ldr	r3, [pc, #128]	@ (800162c <update_odometry+0x284>)
 80015aa:	edc3 7a00 	vstr	s15, [r3]
	}

	// Update last encoder values for the next iteration
	last_encoder1 = encoder1;
 80015ae:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 80015b2:	ee07 3a90 	vmov	s15, r3
 80015b6:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80015ba:	4b0f      	ldr	r3, [pc, #60]	@ (80015f8 <update_odometry+0x250>)
 80015bc:	edc3 7a00 	vstr	s15, [r3]
	last_encoder2 = encoder2;
 80015c0:	683b      	ldr	r3, [r7, #0]
 80015c2:	ee07 3a90 	vmov	s15, r3
 80015c6:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80015ca:	4b0c      	ldr	r3, [pc, #48]	@ (80015fc <update_odometry+0x254>)
 80015cc:	edc3 7a00 	vstr	s15, [r3]
	last_encoder3 = encoder3;
 80015d0:	f9b7 3004 	ldrsh.w	r3, [r7, #4]
 80015d4:	ee07 3a90 	vmov	s15, r3
 80015d8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80015dc:	4b08      	ldr	r3, [pc, #32]	@ (8001600 <update_odometry+0x258>)
 80015de:	edc3 7a00 	vstr	s15, [r3]
}
 80015e2:	bf00      	nop
 80015e4:	3720      	adds	r7, #32
 80015e6:	46bd      	mov	sp, r7
 80015e8:	bd80      	pop	{r7, pc}
 80015ea:	bf00      	nop
 80015ec:	f3af 8000 	nop.w
 80015f0:	1afb8a9d 	.word	0x1afb8a9d
 80015f4:	3f676821 	.word	0x3f676821
 80015f8:	200006e0 	.word	0x200006e0
 80015fc:	200006e4 	.word	0x200006e4
 8001600:	200006e8 	.word	0x200006e8
 8001604:	43c77dbb 	.word	0x43c77dbb
 8001608:	447a0000 	.word	0x447a0000
 800160c:	2000069c 	.word	0x2000069c
 8001610:	20000014 	.word	0x20000014
 8001614:	20000698 	.word	0x20000698
 8001618:	2000001c 	.word	0x2000001c
 800161c:	20000020 	.word	0x20000020
 8001620:	200006ec 	.word	0x200006ec
 8001624:	20000018 	.word	0x20000018
 8001628:	200006d8 	.word	0x200006d8
 800162c:	200006f0 	.word	0x200006f0
 8001630:	200006dc 	.word	0x200006dc

08001634 <stopEncoders>:
	__HAL_TIM_SET_COUNTER(&htim1, 0);
	__HAL_TIM_SET_COUNTER(&htim2, 0);
	__HAL_TIM_SET_COUNTER(&htim3, 0);
}

void stopEncoders() {
 8001634:	b580      	push	{r7, lr}
 8001636:	af00      	add	r7, sp, #0
	HAL_TIM_Encoder_Stop(&htim1, TIM_CHANNEL_ALL);
 8001638:	213c      	movs	r1, #60	@ 0x3c
 800163a:	4806      	ldr	r0, [pc, #24]	@ (8001654 <stopEncoders+0x20>)
 800163c:	f005 f9f8 	bl	8006a30 <HAL_TIM_Encoder_Stop>
	HAL_TIM_Encoder_Stop(&htim2, TIM_CHANNEL_ALL);
 8001640:	213c      	movs	r1, #60	@ 0x3c
 8001642:	4805      	ldr	r0, [pc, #20]	@ (8001658 <stopEncoders+0x24>)
 8001644:	f005 f9f4 	bl	8006a30 <HAL_TIM_Encoder_Stop>
	HAL_TIM_Encoder_Stop(&htim3, TIM_CHANNEL_ALL);
 8001648:	213c      	movs	r1, #60	@ 0x3c
 800164a:	4804      	ldr	r0, [pc, #16]	@ (800165c <stopEncoders+0x28>)
 800164c:	f005 f9f0 	bl	8006a30 <HAL_TIM_Encoder_Stop>
}
 8001650:	bf00      	nop
 8001652:	bd80      	pop	{r7, pc}
 8001654:	20000270 	.word	0x20000270
 8001658:	200002b8 	.word	0x200002b8
 800165c:	20000300 	.word	0x20000300

08001660 <startEncoders>:

void startEncoders() {
 8001660:	b580      	push	{r7, lr}
 8001662:	af00      	add	r7, sp, #0
	HAL_TIM_Encoder_Start(&htim1, TIM_CHANNEL_ALL);
 8001664:	213c      	movs	r1, #60	@ 0x3c
 8001666:	4806      	ldr	r0, [pc, #24]	@ (8001680 <startEncoders+0x20>)
 8001668:	f005 f954 	bl	8006914 <HAL_TIM_Encoder_Start>
	HAL_TIM_Encoder_Start(&htim2, TIM_CHANNEL_ALL);
 800166c:	213c      	movs	r1, #60	@ 0x3c
 800166e:	4805      	ldr	r0, [pc, #20]	@ (8001684 <startEncoders+0x24>)
 8001670:	f005 f950 	bl	8006914 <HAL_TIM_Encoder_Start>
	HAL_TIM_Encoder_Start(&htim3, TIM_CHANNEL_ALL);
 8001674:	213c      	movs	r1, #60	@ 0x3c
 8001676:	4804      	ldr	r0, [pc, #16]	@ (8001688 <startEncoders+0x28>)
 8001678:	f005 f94c 	bl	8006914 <HAL_TIM_Encoder_Start>
}
 800167c:	bf00      	nop
 800167e:	bd80      	pop	{r7, pc}
 8001680:	20000270 	.word	0x20000270
 8001684:	200002b8 	.word	0x200002b8
 8001688:	20000300 	.word	0x20000300

0800168c <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 800168c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800168e:	b095      	sub	sp, #84	@ 0x54
 8001690:	af0a      	add	r7, sp, #40	@ 0x28
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 8001692:	f002 f935 	bl	8003900 <HAL_Init>
  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 8001696:	f000 fe23 	bl	80022e0 <SystemClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 800169a:	f001 fb2f 	bl	8002cfc <MX_GPIO_Init>
  MX_DMA_Init();
 800169e:	f001 fb0d 	bl	8002cbc <MX_DMA_Init>
  MX_USART2_UART_Init();
 80016a2:	f001 fae1 	bl	8002c68 <MX_USART2_UART_Init>
  MX_UART4_Init();
 80016a6:	f001 fab5 	bl	8002c14 <MX_UART4_Init>
  MX_TIM1_Init();
 80016aa:	f000 feb9 	bl	8002420 <MX_TIM1_Init>
  MX_TIM8_Init();
 80016ae:	f001 f8b3 	bl	8002818 <MX_TIM8_Init>
  MX_I2C1_Init();
 80016b2:	f000 fe87 	bl	80023c4 <MX_I2C1_Init>
  MX_TIM5_Init();
 80016b6:	f001 f82d 	bl	8002714 <MX_TIM5_Init>
  MX_TIM10_Init();
 80016ba:	f001 f905 	bl	80028c8 <MX_TIM10_Init>
  MX_TIM11_Init();
 80016be:	f001 f951 	bl	8002964 <MX_TIM11_Init>
  MX_TIM13_Init();
 80016c2:	f001 fa0b 	bl	8002adc <MX_TIM13_Init>
  MX_TIM2_Init();
 80016c6:	f000 ff53 	bl	8002570 <MX_TIM2_Init>
  MX_TIM3_Init();
 80016ca:	f000 ffa5 	bl	8002618 <MX_TIM3_Init>
  MX_TIM12_Init();
 80016ce:	f001 f997 	bl	8002a00 <MX_TIM12_Init>
  MX_TIM14_Init();
 80016d2:	f001 fa51 	bl	8002b78 <MX_TIM14_Init>
  /* USER CODE BEGIN 2 */
	HAL_UART_Receive_DMA(&huart4, rxbuff, 16);
 80016d6:	2210      	movs	r2, #16
 80016d8:	497b      	ldr	r1, [pc, #492]	@ (80018c8 <main+0x23c>)
 80016da:	487c      	ldr	r0, [pc, #496]	@ (80018cc <main+0x240>)
 80016dc:	f006 f8eb 	bl	80078b6 <HAL_UART_Receive_DMA>
	HAL_TIM_Encoder_Start(&htim1, TIM_CHANNEL_ALL);
 80016e0:	213c      	movs	r1, #60	@ 0x3c
 80016e2:	487b      	ldr	r0, [pc, #492]	@ (80018d0 <main+0x244>)
 80016e4:	f005 f916 	bl	8006914 <HAL_TIM_Encoder_Start>
	HAL_TIM_Encoder_Start(&htim2, TIM_CHANNEL_ALL);
 80016e8:	213c      	movs	r1, #60	@ 0x3c
 80016ea:	487a      	ldr	r0, [pc, #488]	@ (80018d4 <main+0x248>)
 80016ec:	f005 f912 	bl	8006914 <HAL_TIM_Encoder_Start>
	HAL_TIM_Encoder_Start(&htim3, TIM_CHANNEL_ALL);
 80016f0:	213c      	movs	r1, #60	@ 0x3c
 80016f2:	4879      	ldr	r0, [pc, #484]	@ (80018d8 <main+0x24c>)
 80016f4:	f005 f90e 	bl	8006914 <HAL_TIM_Encoder_Start>
	bno055_assignI2C(&hi2c1);
 80016f8:	4878      	ldr	r0, [pc, #480]	@ (80018dc <main+0x250>)
 80016fa:	f7ff fcfb 	bl	80010f4 <bno055_assignI2C>
	bno055_setup();
 80016fe:	f7ff fcd1 	bl	80010a4 <bno055_setup>
	bno055_setOperationModeNDOF();
 8001702:	f7ff fcbc 	bl	800107e <bno055_setOperationModeNDOF>
	HAL_TIM_PWM_Start(&htim3, TIM_CHANNEL_3);
 8001706:	2108      	movs	r1, #8
 8001708:	4873      	ldr	r0, [pc, #460]	@ (80018d8 <main+0x24c>)
 800170a:	f004 ff95 	bl	8006638 <HAL_TIM_PWM_Start>
	while (1) {
    /* USER CODE END WHILE */

    /* USER CODE BEGIN 3 */
		/* ps5 controller */
		lx = (rxbuff[0] & 0x80) ?
 800170e:	4b6e      	ldr	r3, [pc, #440]	@ (80018c8 <main+0x23c>)
 8001710:	781b      	ldrb	r3, [r3, #0]
 8001712:	b25b      	sxtb	r3, r3
				(int32_t) rxbuff[0] - 256 : (int32_t) rxbuff[0];
 8001714:	2b00      	cmp	r3, #0
 8001716:	da04      	bge.n	8001722 <main+0x96>
 8001718:	4b6b      	ldr	r3, [pc, #428]	@ (80018c8 <main+0x23c>)
 800171a:	781b      	ldrb	r3, [r3, #0]
 800171c:	f5a3 7380 	sub.w	r3, r3, #256	@ 0x100
 8001720:	e001      	b.n	8001726 <main+0x9a>
 8001722:	4b69      	ldr	r3, [pc, #420]	@ (80018c8 <main+0x23c>)
 8001724:	781b      	ldrb	r3, [r3, #0]
		lx = (rxbuff[0] & 0x80) ?
 8001726:	4a6e      	ldr	r2, [pc, #440]	@ (80018e0 <main+0x254>)
 8001728:	6013      	str	r3, [r2, #0]
		ly = (rxbuff[1] & 0x80) ?
 800172a:	4b67      	ldr	r3, [pc, #412]	@ (80018c8 <main+0x23c>)
 800172c:	785b      	ldrb	r3, [r3, #1]
 800172e:	b25b      	sxtb	r3, r3
				(int32_t) rxbuff[1] - 256 : (int32_t) rxbuff[1];
 8001730:	2b00      	cmp	r3, #0
 8001732:	da04      	bge.n	800173e <main+0xb2>
 8001734:	4b64      	ldr	r3, [pc, #400]	@ (80018c8 <main+0x23c>)
 8001736:	785b      	ldrb	r3, [r3, #1]
 8001738:	f5a3 7380 	sub.w	r3, r3, #256	@ 0x100
 800173c:	e001      	b.n	8001742 <main+0xb6>
 800173e:	4b62      	ldr	r3, [pc, #392]	@ (80018c8 <main+0x23c>)
 8001740:	785b      	ldrb	r3, [r3, #1]
		ly = (rxbuff[1] & 0x80) ?
 8001742:	4a68      	ldr	r2, [pc, #416]	@ (80018e4 <main+0x258>)
 8001744:	6013      	str	r3, [r2, #0]
		rx = (rxbuff[2] & 0x80) ?
 8001746:	4b60      	ldr	r3, [pc, #384]	@ (80018c8 <main+0x23c>)
 8001748:	789b      	ldrb	r3, [r3, #2]
 800174a:	b25b      	sxtb	r3, r3
				(int32_t) rxbuff[2] - 256 : (int32_t) rxbuff[2];
 800174c:	2b00      	cmp	r3, #0
 800174e:	da04      	bge.n	800175a <main+0xce>
 8001750:	4b5d      	ldr	r3, [pc, #372]	@ (80018c8 <main+0x23c>)
 8001752:	789b      	ldrb	r3, [r3, #2]
 8001754:	f5a3 7380 	sub.w	r3, r3, #256	@ 0x100
 8001758:	e001      	b.n	800175e <main+0xd2>
 800175a:	4b5b      	ldr	r3, [pc, #364]	@ (80018c8 <main+0x23c>)
 800175c:	789b      	ldrb	r3, [r3, #2]
		rx = (rxbuff[2] & 0x80) ?
 800175e:	4a62      	ldr	r2, [pc, #392]	@ (80018e8 <main+0x25c>)
 8001760:	6013      	str	r3, [r2, #0]
		ry = (rxbuff[3] & 0x80) ?
 8001762:	4b59      	ldr	r3, [pc, #356]	@ (80018c8 <main+0x23c>)
 8001764:	78db      	ldrb	r3, [r3, #3]
 8001766:	b25b      	sxtb	r3, r3
				(int32_t) rxbuff[3] - 256 : (int32_t) rxbuff[3];
 8001768:	2b00      	cmp	r3, #0
 800176a:	da04      	bge.n	8001776 <main+0xea>
 800176c:	4b56      	ldr	r3, [pc, #344]	@ (80018c8 <main+0x23c>)
 800176e:	78db      	ldrb	r3, [r3, #3]
 8001770:	f5a3 7380 	sub.w	r3, r3, #256	@ 0x100
 8001774:	e001      	b.n	800177a <main+0xee>
 8001776:	4b54      	ldr	r3, [pc, #336]	@ (80018c8 <main+0x23c>)
 8001778:	78db      	ldrb	r3, [r3, #3]
		ry = (rxbuff[3] & 0x80) ?
 800177a:	4a5c      	ldr	r2, [pc, #368]	@ (80018ec <main+0x260>)
 800177c:	6013      	str	r3, [r2, #0]
		cro = (rxbuff[4] & 0x80) ?
 800177e:	4b52      	ldr	r3, [pc, #328]	@ (80018c8 <main+0x23c>)
 8001780:	791b      	ldrb	r3, [r3, #4]
 8001782:	b25b      	sxtb	r3, r3
				(int32_t) rxbuff[4] - 256 : (int32_t) rxbuff[4];
 8001784:	2b00      	cmp	r3, #0
 8001786:	da04      	bge.n	8001792 <main+0x106>
 8001788:	4b4f      	ldr	r3, [pc, #316]	@ (80018c8 <main+0x23c>)
 800178a:	791b      	ldrb	r3, [r3, #4]
 800178c:	f5a3 7380 	sub.w	r3, r3, #256	@ 0x100
 8001790:	e001      	b.n	8001796 <main+0x10a>
 8001792:	4b4d      	ldr	r3, [pc, #308]	@ (80018c8 <main+0x23c>)
 8001794:	791b      	ldrb	r3, [r3, #4]
		cro = (rxbuff[4] & 0x80) ?
 8001796:	4a56      	ldr	r2, [pc, #344]	@ (80018f0 <main+0x264>)
 8001798:	6013      	str	r3, [r2, #0]
		squ = (rxbuff[5] & 0x80) ?
 800179a:	4b4b      	ldr	r3, [pc, #300]	@ (80018c8 <main+0x23c>)
 800179c:	795b      	ldrb	r3, [r3, #5]
 800179e:	b25b      	sxtb	r3, r3
				(int32_t) rxbuff[5] - 256 : (int32_t) rxbuff[5];
 80017a0:	2b00      	cmp	r3, #0
 80017a2:	da04      	bge.n	80017ae <main+0x122>
 80017a4:	4b48      	ldr	r3, [pc, #288]	@ (80018c8 <main+0x23c>)
 80017a6:	795b      	ldrb	r3, [r3, #5]
 80017a8:	f5a3 7380 	sub.w	r3, r3, #256	@ 0x100
 80017ac:	e001      	b.n	80017b2 <main+0x126>
 80017ae:	4b46      	ldr	r3, [pc, #280]	@ (80018c8 <main+0x23c>)
 80017b0:	795b      	ldrb	r3, [r3, #5]
		squ = (rxbuff[5] & 0x80) ?
 80017b2:	4a50      	ldr	r2, [pc, #320]	@ (80018f4 <main+0x268>)
 80017b4:	6013      	str	r3, [r2, #0]
		tri = (rxbuff[6] & 0x80) ?
 80017b6:	4b44      	ldr	r3, [pc, #272]	@ (80018c8 <main+0x23c>)
 80017b8:	799b      	ldrb	r3, [r3, #6]
 80017ba:	b25b      	sxtb	r3, r3
				(int32_t) rxbuff[6] - 256 : (int32_t) rxbuff[6];
 80017bc:	2b00      	cmp	r3, #0
 80017be:	da04      	bge.n	80017ca <main+0x13e>
 80017c0:	4b41      	ldr	r3, [pc, #260]	@ (80018c8 <main+0x23c>)
 80017c2:	799b      	ldrb	r3, [r3, #6]
 80017c4:	f5a3 7380 	sub.w	r3, r3, #256	@ 0x100
 80017c8:	e001      	b.n	80017ce <main+0x142>
 80017ca:	4b3f      	ldr	r3, [pc, #252]	@ (80018c8 <main+0x23c>)
 80017cc:	799b      	ldrb	r3, [r3, #6]
		tri = (rxbuff[6] & 0x80) ?
 80017ce:	4a4a      	ldr	r2, [pc, #296]	@ (80018f8 <main+0x26c>)
 80017d0:	6013      	str	r3, [r2, #0]
		cir = (rxbuff[7] & 0x80) ?
 80017d2:	4b3d      	ldr	r3, [pc, #244]	@ (80018c8 <main+0x23c>)
 80017d4:	79db      	ldrb	r3, [r3, #7]
 80017d6:	b25b      	sxtb	r3, r3
				(int32_t) rxbuff[7] - 256 : (int32_t) rxbuff[7];
 80017d8:	2b00      	cmp	r3, #0
 80017da:	da04      	bge.n	80017e6 <main+0x15a>
 80017dc:	4b3a      	ldr	r3, [pc, #232]	@ (80018c8 <main+0x23c>)
 80017de:	79db      	ldrb	r3, [r3, #7]
 80017e0:	f5a3 7380 	sub.w	r3, r3, #256	@ 0x100
 80017e4:	e001      	b.n	80017ea <main+0x15e>
 80017e6:	4b38      	ldr	r3, [pc, #224]	@ (80018c8 <main+0x23c>)
 80017e8:	79db      	ldrb	r3, [r3, #7]
		cir = (rxbuff[7] & 0x80) ?
 80017ea:	4a44      	ldr	r2, [pc, #272]	@ (80018fc <main+0x270>)
 80017ec:	6013      	str	r3, [r2, #0]
		up = (rxbuff[8] & 0x80) ?
 80017ee:	4b36      	ldr	r3, [pc, #216]	@ (80018c8 <main+0x23c>)
 80017f0:	7a1b      	ldrb	r3, [r3, #8]
 80017f2:	b25b      	sxtb	r3, r3
				(int32_t) rxbuff[8] - 256 : (int32_t) rxbuff[8];
 80017f4:	2b00      	cmp	r3, #0
 80017f6:	da04      	bge.n	8001802 <main+0x176>
 80017f8:	4b33      	ldr	r3, [pc, #204]	@ (80018c8 <main+0x23c>)
 80017fa:	7a1b      	ldrb	r3, [r3, #8]
 80017fc:	f5a3 7380 	sub.w	r3, r3, #256	@ 0x100
 8001800:	e001      	b.n	8001806 <main+0x17a>
 8001802:	4b31      	ldr	r3, [pc, #196]	@ (80018c8 <main+0x23c>)
 8001804:	7a1b      	ldrb	r3, [r3, #8]
		up = (rxbuff[8] & 0x80) ?
 8001806:	4a3e      	ldr	r2, [pc, #248]	@ (8001900 <main+0x274>)
 8001808:	6013      	str	r3, [r2, #0]
		down = (rxbuff[9] & 0x80) ?
 800180a:	4b2f      	ldr	r3, [pc, #188]	@ (80018c8 <main+0x23c>)
 800180c:	7a5b      	ldrb	r3, [r3, #9]
 800180e:	b25b      	sxtb	r3, r3
				(int32_t) rxbuff[9] - 256 : (int32_t) rxbuff[9];
 8001810:	2b00      	cmp	r3, #0
 8001812:	da04      	bge.n	800181e <main+0x192>
 8001814:	4b2c      	ldr	r3, [pc, #176]	@ (80018c8 <main+0x23c>)
 8001816:	7a5b      	ldrb	r3, [r3, #9]
 8001818:	f5a3 7380 	sub.w	r3, r3, #256	@ 0x100
 800181c:	e001      	b.n	8001822 <main+0x196>
 800181e:	4b2a      	ldr	r3, [pc, #168]	@ (80018c8 <main+0x23c>)
 8001820:	7a5b      	ldrb	r3, [r3, #9]
		down = (rxbuff[9] & 0x80) ?
 8001822:	4a38      	ldr	r2, [pc, #224]	@ (8001904 <main+0x278>)
 8001824:	6013      	str	r3, [r2, #0]
		left = (rxbuff[10] & 0x80) ?
 8001826:	4b28      	ldr	r3, [pc, #160]	@ (80018c8 <main+0x23c>)
 8001828:	7a9b      	ldrb	r3, [r3, #10]
 800182a:	b25b      	sxtb	r3, r3
				(int32_t) rxbuff[10] - 256 : (int32_t) rxbuff[10];
 800182c:	2b00      	cmp	r3, #0
 800182e:	da04      	bge.n	800183a <main+0x1ae>
 8001830:	4b25      	ldr	r3, [pc, #148]	@ (80018c8 <main+0x23c>)
 8001832:	7a9b      	ldrb	r3, [r3, #10]
 8001834:	f5a3 7380 	sub.w	r3, r3, #256	@ 0x100
 8001838:	e001      	b.n	800183e <main+0x1b2>
 800183a:	4b23      	ldr	r3, [pc, #140]	@ (80018c8 <main+0x23c>)
 800183c:	7a9b      	ldrb	r3, [r3, #10]
		left = (rxbuff[10] & 0x80) ?
 800183e:	4a32      	ldr	r2, [pc, #200]	@ (8001908 <main+0x27c>)
 8001840:	6013      	str	r3, [r2, #0]
		right = (rxbuff[11] & 0x80) ?
 8001842:	4b21      	ldr	r3, [pc, #132]	@ (80018c8 <main+0x23c>)
 8001844:	7adb      	ldrb	r3, [r3, #11]
 8001846:	b25b      	sxtb	r3, r3
				(int32_t) rxbuff[11] - 256 : (int32_t) rxbuff[11];
 8001848:	2b00      	cmp	r3, #0
 800184a:	da04      	bge.n	8001856 <main+0x1ca>
 800184c:	4b1e      	ldr	r3, [pc, #120]	@ (80018c8 <main+0x23c>)
 800184e:	7adb      	ldrb	r3, [r3, #11]
 8001850:	f5a3 7380 	sub.w	r3, r3, #256	@ 0x100
 8001854:	e001      	b.n	800185a <main+0x1ce>
 8001856:	4b1c      	ldr	r3, [pc, #112]	@ (80018c8 <main+0x23c>)
 8001858:	7adb      	ldrb	r3, [r3, #11]
		right = (rxbuff[11] & 0x80) ?
 800185a:	4a2c      	ldr	r2, [pc, #176]	@ (800190c <main+0x280>)
 800185c:	6013      	str	r3, [r2, #0]
		ll1 = (rxbuff[12] & 0x80) ?
 800185e:	4b1a      	ldr	r3, [pc, #104]	@ (80018c8 <main+0x23c>)
 8001860:	7b1b      	ldrb	r3, [r3, #12]
 8001862:	b25b      	sxtb	r3, r3
				(int32_t) rxbuff[12] - 256 : (int32_t) rxbuff[12];
 8001864:	2b00      	cmp	r3, #0
 8001866:	da04      	bge.n	8001872 <main+0x1e6>
 8001868:	4b17      	ldr	r3, [pc, #92]	@ (80018c8 <main+0x23c>)
 800186a:	7b1b      	ldrb	r3, [r3, #12]
 800186c:	f5a3 7380 	sub.w	r3, r3, #256	@ 0x100
 8001870:	e001      	b.n	8001876 <main+0x1ea>
 8001872:	4b15      	ldr	r3, [pc, #84]	@ (80018c8 <main+0x23c>)
 8001874:	7b1b      	ldrb	r3, [r3, #12]
		ll1 = (rxbuff[12] & 0x80) ?
 8001876:	4a26      	ldr	r2, [pc, #152]	@ (8001910 <main+0x284>)
 8001878:	6013      	str	r3, [r2, #0]
		ll2 = (rxbuff[13] & 0x80) ?
 800187a:	4b13      	ldr	r3, [pc, #76]	@ (80018c8 <main+0x23c>)
 800187c:	7b5b      	ldrb	r3, [r3, #13]
 800187e:	b25b      	sxtb	r3, r3
				(int32_t) rxbuff[13] - 256 : (int32_t) rxbuff[13];
 8001880:	2b00      	cmp	r3, #0
 8001882:	da04      	bge.n	800188e <main+0x202>
 8001884:	4b10      	ldr	r3, [pc, #64]	@ (80018c8 <main+0x23c>)
 8001886:	7b5b      	ldrb	r3, [r3, #13]
 8001888:	f5a3 7380 	sub.w	r3, r3, #256	@ 0x100
 800188c:	e001      	b.n	8001892 <main+0x206>
 800188e:	4b0e      	ldr	r3, [pc, #56]	@ (80018c8 <main+0x23c>)
 8001890:	7b5b      	ldrb	r3, [r3, #13]
		ll2 = (rxbuff[13] & 0x80) ?
 8001892:	4a20      	ldr	r2, [pc, #128]	@ (8001914 <main+0x288>)
 8001894:	6013      	str	r3, [r2, #0]
		rr1 = (rxbuff[14] & 0x80) ?
 8001896:	4b0c      	ldr	r3, [pc, #48]	@ (80018c8 <main+0x23c>)
 8001898:	7b9b      	ldrb	r3, [r3, #14]
 800189a:	b25b      	sxtb	r3, r3
				(int32_t) rxbuff[14] - 256 : (int32_t) rxbuff[14];
 800189c:	2b00      	cmp	r3, #0
 800189e:	da04      	bge.n	80018aa <main+0x21e>
 80018a0:	4b09      	ldr	r3, [pc, #36]	@ (80018c8 <main+0x23c>)
 80018a2:	7b9b      	ldrb	r3, [r3, #14]
 80018a4:	f5a3 7380 	sub.w	r3, r3, #256	@ 0x100
 80018a8:	e001      	b.n	80018ae <main+0x222>
 80018aa:	4b07      	ldr	r3, [pc, #28]	@ (80018c8 <main+0x23c>)
 80018ac:	7b9b      	ldrb	r3, [r3, #14]
		rr1 = (rxbuff[14] & 0x80) ?
 80018ae:	4a1a      	ldr	r2, [pc, #104]	@ (8001918 <main+0x28c>)
 80018b0:	6013      	str	r3, [r2, #0]
		rr2 = (rxbuff[15] & 0x80) ?
 80018b2:	4b05      	ldr	r3, [pc, #20]	@ (80018c8 <main+0x23c>)
 80018b4:	7bdb      	ldrb	r3, [r3, #15]
 80018b6:	b25b      	sxtb	r3, r3
				(int32_t) rxbuff[15] - 256 : (int32_t) rxbuff[15];
 80018b8:	2b00      	cmp	r3, #0
 80018ba:	da2f      	bge.n	800191c <main+0x290>
 80018bc:	4b02      	ldr	r3, [pc, #8]	@ (80018c8 <main+0x23c>)
 80018be:	7bdb      	ldrb	r3, [r3, #15]
 80018c0:	f5a3 7380 	sub.w	r3, r3, #256	@ 0x100
 80018c4:	e02c      	b.n	8001920 <main+0x294>
 80018c6:	bf00      	nop
 80018c8:	20000688 	.word	0x20000688
 80018cc:	20000540 	.word	0x20000540
 80018d0:	20000270 	.word	0x20000270
 80018d4:	200002b8 	.word	0x200002b8
 80018d8:	20000300 	.word	0x20000300
 80018dc:	2000021c 	.word	0x2000021c
 80018e0:	20000698 	.word	0x20000698
 80018e4:	2000069c 	.word	0x2000069c
 80018e8:	200006a0 	.word	0x200006a0
 80018ec:	200006a4 	.word	0x200006a4
 80018f0:	200006a8 	.word	0x200006a8
 80018f4:	200006ac 	.word	0x200006ac
 80018f8:	200006b0 	.word	0x200006b0
 80018fc:	200006b4 	.word	0x200006b4
 8001900:	200006b8 	.word	0x200006b8
 8001904:	200006bc 	.word	0x200006bc
 8001908:	200006c0 	.word	0x200006c0
 800190c:	200006c4 	.word	0x200006c4
 8001910:	200006c8 	.word	0x200006c8
 8001914:	200006d0 	.word	0x200006d0
 8001918:	200006cc 	.word	0x200006cc
 800191c:	4b80      	ldr	r3, [pc, #512]	@ (8001b20 <main+0x494>)
 800191e:	7bdb      	ldrb	r3, [r3, #15]
		rr2 = (rxbuff[15] & 0x80) ?
 8001920:	4a80      	ldr	r2, [pc, #512]	@ (8001b24 <main+0x498>)
 8001922:	6013      	str	r3, [r2, #0]

		//		printf("Received Integers: %ld %ld %ld %ld %ld %ld %ld %ld %ld %ld\r\n",
		//				lx, ly, rx, ry, cro, squ, tri, cir, ll1, rr1);
		printf("Received Integers: %ld %ld %ld %ld %ld %ld %ld %ld %d %d %d %d\r\n",
 8001924:	4b80      	ldr	r3, [pc, #512]	@ (8001b28 <main+0x49c>)
 8001926:	681b      	ldr	r3, [r3, #0]
 8001928:	617b      	str	r3, [r7, #20]
 800192a:	4b80      	ldr	r3, [pc, #512]	@ (8001b2c <main+0x4a0>)
 800192c:	681a      	ldr	r2, [r3, #0]
 800192e:	613a      	str	r2, [r7, #16]
 8001930:	4b7f      	ldr	r3, [pc, #508]	@ (8001b30 <main+0x4a4>)
 8001932:	6818      	ldr	r0, [r3, #0]
 8001934:	60f8      	str	r0, [r7, #12]
 8001936:	4b7f      	ldr	r3, [pc, #508]	@ (8001b34 <main+0x4a8>)
 8001938:	681b      	ldr	r3, [r3, #0]
 800193a:	4a7f      	ldr	r2, [pc, #508]	@ (8001b38 <main+0x4ac>)
 800193c:	6812      	ldr	r2, [r2, #0]
 800193e:	497f      	ldr	r1, [pc, #508]	@ (8001b3c <main+0x4b0>)
 8001940:	6809      	ldr	r1, [r1, #0]
 8001942:	487f      	ldr	r0, [pc, #508]	@ (8001b40 <main+0x4b4>)
 8001944:	6800      	ldr	r0, [r0, #0]
 8001946:	4c7f      	ldr	r4, [pc, #508]	@ (8001b44 <main+0x4b8>)
 8001948:	6824      	ldr	r4, [r4, #0]
 800194a:	60bc      	str	r4, [r7, #8]
 800194c:	4d7e      	ldr	r5, [pc, #504]	@ (8001b48 <main+0x4bc>)
 800194e:	682d      	ldr	r5, [r5, #0]
 8001950:	4e7e      	ldr	r6, [pc, #504]	@ (8001b4c <main+0x4c0>)
 8001952:	6836      	ldr	r6, [r6, #0]
 8001954:	4c7e      	ldr	r4, [pc, #504]	@ (8001b50 <main+0x4c4>)
 8001956:	6824      	ldr	r4, [r4, #0]
 8001958:	607c      	str	r4, [r7, #4]
 800195a:	4c7e      	ldr	r4, [pc, #504]	@ (8001b54 <main+0x4c8>)
 800195c:	6824      	ldr	r4, [r4, #0]
 800195e:	9408      	str	r4, [sp, #32]
 8001960:	687c      	ldr	r4, [r7, #4]
 8001962:	9407      	str	r4, [sp, #28]
 8001964:	9606      	str	r6, [sp, #24]
 8001966:	9505      	str	r5, [sp, #20]
 8001968:	68bc      	ldr	r4, [r7, #8]
 800196a:	9404      	str	r4, [sp, #16]
 800196c:	9003      	str	r0, [sp, #12]
 800196e:	9102      	str	r1, [sp, #8]
 8001970:	9201      	str	r2, [sp, #4]
 8001972:	9300      	str	r3, [sp, #0]
 8001974:	68fb      	ldr	r3, [r7, #12]
 8001976:	693a      	ldr	r2, [r7, #16]
 8001978:	6979      	ldr	r1, [r7, #20]
 800197a:	4877      	ldr	r0, [pc, #476]	@ (8001b58 <main+0x4cc>)
 800197c:	f007 ffd6 	bl	800992c <iprintf>
				lx, ly, rx, ry, cro, squ, tri, cir, left, right, pneumatic_open, drib_speed);

		/* 3 encoders */
		uint16_t raw_counter1 = __HAL_TIM_GET_COUNTER(&htim1);
 8001980:	4b76      	ldr	r3, [pc, #472]	@ (8001b5c <main+0x4d0>)
 8001982:	681b      	ldr	r3, [r3, #0]
 8001984:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8001986:	84bb      	strh	r3, [r7, #36]	@ 0x24
		uint32_t raw_counter2 = __HAL_TIM_GET_COUNTER(&htim2);
 8001988:	4b75      	ldr	r3, [pc, #468]	@ (8001b60 <main+0x4d4>)
 800198a:	681b      	ldr	r3, [r3, #0]
 800198c:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800198e:	623b      	str	r3, [r7, #32]
		uint16_t raw_counter3 = __HAL_TIM_GET_COUNTER(&htim3);
 8001990:	4b74      	ldr	r3, [pc, #464]	@ (8001b64 <main+0x4d8>)
 8001992:	681b      	ldr	r3, [r3, #0]
 8001994:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8001996:	83fb      	strh	r3, [r7, #30]

		// Convert to signed values
		signed_counter1 =
				(raw_counter1 < 32768) ?
						(int16_t) raw_counter1 :
 8001998:	f9b7 2024 	ldrsh.w	r2, [r7, #36]	@ 0x24
		signed_counter1 =
 800199c:	4b72      	ldr	r3, [pc, #456]	@ (8001b68 <main+0x4dc>)
 800199e:	801a      	strh	r2, [r3, #0]
						(int16_t) (raw_counter1 - 65536);
		signed_counter2 =
				(raw_counter2 < 2147483648) ?
						(int32_t) raw_counter2 :
 80019a0:	6a3b      	ldr	r3, [r7, #32]
		signed_counter2 =
 80019a2:	4a72      	ldr	r2, [pc, #456]	@ (8001b6c <main+0x4e0>)
 80019a4:	6013      	str	r3, [r2, #0]
						(int32_t) (raw_counter2 - 4294967296);
		signed_counter3 =
				(raw_counter3 < 32768) ?
						(int16_t) raw_counter3 :
 80019a6:	f9b7 201e 	ldrsh.w	r2, [r7, #30]
		signed_counter3 =
 80019aa:	4b71      	ldr	r3, [pc, #452]	@ (8001b70 <main+0x4e4>)
 80019ac:	801a      	strh	r2, [r3, #0]
//		printf("Encoder position: %d %d %d X: %.2f Y: %.2f\r\n",
//				signed_counter1, signed_counter2, signed_counter3, x, y);
		/* 3 wheel */
		uint16_t dutycycle;

		dutycycle = 0;
 80019ae:	2300      	movs	r3, #0
 80019b0:	83bb      	strh	r3, [r7, #28]
		MovementState current_state = STOP;
 80019b2:	2300      	movs	r3, #0
 80019b4:	f887 3027 	strb.w	r3, [r7, #39]	@ 0x27
		/* chassis */
		//motors stop
		if (ly >= Buff2 && ly <= Buff1 && lx >= Buff2 && lx <= Buff1
 80019b8:	4b5c      	ldr	r3, [pc, #368]	@ (8001b2c <main+0x4a0>)
 80019ba:	681a      	ldr	r2, [r3, #0]
 80019bc:	4b6d      	ldr	r3, [pc, #436]	@ (8001b74 <main+0x4e8>)
 80019be:	681b      	ldr	r3, [r3, #0]
 80019c0:	429a      	cmp	r2, r3
 80019c2:	db35      	blt.n	8001a30 <main+0x3a4>
 80019c4:	4b59      	ldr	r3, [pc, #356]	@ (8001b2c <main+0x4a0>)
 80019c6:	681a      	ldr	r2, [r3, #0]
 80019c8:	4b6b      	ldr	r3, [pc, #428]	@ (8001b78 <main+0x4ec>)
 80019ca:	681b      	ldr	r3, [r3, #0]
 80019cc:	429a      	cmp	r2, r3
 80019ce:	dc2f      	bgt.n	8001a30 <main+0x3a4>
 80019d0:	4b55      	ldr	r3, [pc, #340]	@ (8001b28 <main+0x49c>)
 80019d2:	681a      	ldr	r2, [r3, #0]
 80019d4:	4b67      	ldr	r3, [pc, #412]	@ (8001b74 <main+0x4e8>)
 80019d6:	681b      	ldr	r3, [r3, #0]
 80019d8:	429a      	cmp	r2, r3
 80019da:	db29      	blt.n	8001a30 <main+0x3a4>
 80019dc:	4b52      	ldr	r3, [pc, #328]	@ (8001b28 <main+0x49c>)
 80019de:	681a      	ldr	r2, [r3, #0]
 80019e0:	4b65      	ldr	r3, [pc, #404]	@ (8001b78 <main+0x4ec>)
 80019e2:	681b      	ldr	r3, [r3, #0]
 80019e4:	429a      	cmp	r2, r3
 80019e6:	dc23      	bgt.n	8001a30 <main+0x3a4>
				&& rx >= Buff2 && rx <= Buff1) {
 80019e8:	4b51      	ldr	r3, [pc, #324]	@ (8001b30 <main+0x4a4>)
 80019ea:	681a      	ldr	r2, [r3, #0]
 80019ec:	4b61      	ldr	r3, [pc, #388]	@ (8001b74 <main+0x4e8>)
 80019ee:	681b      	ldr	r3, [r3, #0]
 80019f0:	429a      	cmp	r2, r3
 80019f2:	db1d      	blt.n	8001a30 <main+0x3a4>
 80019f4:	4b4e      	ldr	r3, [pc, #312]	@ (8001b30 <main+0x4a4>)
 80019f6:	681a      	ldr	r2, [r3, #0]
 80019f8:	4b5f      	ldr	r3, [pc, #380]	@ (8001b78 <main+0x4ec>)
 80019fa:	681b      	ldr	r3, [r3, #0]
 80019fc:	429a      	cmp	r2, r3
 80019fe:	dc17      	bgt.n	8001a30 <main+0x3a4>

			dutycycle = 0;
 8001a00:	2300      	movs	r3, #0
 8001a02:	83bb      	strh	r3, [r7, #28]

			TIM12->CCR1 = dutycycle;
 8001a04:	4a5d      	ldr	r2, [pc, #372]	@ (8001b7c <main+0x4f0>)
 8001a06:	8bbb      	ldrh	r3, [r7, #28]
 8001a08:	6353      	str	r3, [r2, #52]	@ 0x34
			TIM10->CCR1 = dutycycle;
 8001a0a:	4a5d      	ldr	r2, [pc, #372]	@ (8001b80 <main+0x4f4>)
 8001a0c:	8bbb      	ldrh	r3, [r7, #28]
 8001a0e:	6353      	str	r3, [r2, #52]	@ 0x34
			TIM11->CCR1 = dutycycle;
 8001a10:	4a5c      	ldr	r2, [pc, #368]	@ (8001b84 <main+0x4f8>)
 8001a12:	8bbb      	ldrh	r3, [r7, #28]
 8001a14:	6353      	str	r3, [r2, #52]	@ 0x34
			HAL_TIM_PWM_Start(&htim12, TIM_CHANNEL_1);
 8001a16:	2100      	movs	r1, #0
 8001a18:	485b      	ldr	r0, [pc, #364]	@ (8001b88 <main+0x4fc>)
 8001a1a:	f004 fe0d 	bl	8006638 <HAL_TIM_PWM_Start>
			HAL_TIM_PWM_Start(&htim10, TIM_CHANNEL_1);
 8001a1e:	2100      	movs	r1, #0
 8001a20:	485a      	ldr	r0, [pc, #360]	@ (8001b8c <main+0x500>)
 8001a22:	f004 fe09 	bl	8006638 <HAL_TIM_PWM_Start>
			HAL_TIM_PWM_Start(&htim11, TIM_CHANNEL_1);
 8001a26:	2100      	movs	r1, #0
 8001a28:	4859      	ldr	r0, [pc, #356]	@ (8001b90 <main+0x504>)
 8001a2a:	f004 fe05 	bl	8006638 <HAL_TIM_PWM_Start>
 8001a2e:	e22b      	b.n	8001e88 <main+0x7fc>

		}

		//	  	//forward

		else if (ly >= Buff1 && (lx <= BuffP && lx >= BuffN))
 8001a30:	4b3e      	ldr	r3, [pc, #248]	@ (8001b2c <main+0x4a0>)
 8001a32:	681a      	ldr	r2, [r3, #0]
 8001a34:	4b50      	ldr	r3, [pc, #320]	@ (8001b78 <main+0x4ec>)
 8001a36:	681b      	ldr	r3, [r3, #0]
 8001a38:	429a      	cmp	r2, r3
 8001a3a:	db34      	blt.n	8001aa6 <main+0x41a>
 8001a3c:	4b3a      	ldr	r3, [pc, #232]	@ (8001b28 <main+0x49c>)
 8001a3e:	681a      	ldr	r2, [r3, #0]
 8001a40:	4b54      	ldr	r3, [pc, #336]	@ (8001b94 <main+0x508>)
 8001a42:	681b      	ldr	r3, [r3, #0]
 8001a44:	429a      	cmp	r2, r3
 8001a46:	dc2e      	bgt.n	8001aa6 <main+0x41a>
 8001a48:	4b37      	ldr	r3, [pc, #220]	@ (8001b28 <main+0x49c>)
 8001a4a:	681a      	ldr	r2, [r3, #0]
 8001a4c:	4b52      	ldr	r3, [pc, #328]	@ (8001b98 <main+0x50c>)
 8001a4e:	681b      	ldr	r3, [r3, #0]
 8001a50:	429a      	cmp	r2, r3
 8001a52:	db28      	blt.n	8001aa6 <main+0x41a>

		{

			dutycycle = map(ly, Buff1, 127, 0, fast);
 8001a54:	4b35      	ldr	r3, [pc, #212]	@ (8001b2c <main+0x4a0>)
 8001a56:	6818      	ldr	r0, [r3, #0]
 8001a58:	4b47      	ldr	r3, [pc, #284]	@ (8001b78 <main+0x4ec>)
 8001a5a:	6819      	ldr	r1, [r3, #0]
 8001a5c:	4b4f      	ldr	r3, [pc, #316]	@ (8001b9c <main+0x510>)
 8001a5e:	681b      	ldr	r3, [r3, #0]
 8001a60:	9300      	str	r3, [sp, #0]
 8001a62:	2300      	movs	r3, #0
 8001a64:	227f      	movs	r2, #127	@ 0x7f
 8001a66:	f7ff fc81 	bl	800136c <map>
 8001a6a:	4603      	mov	r3, r0
 8001a6c:	83bb      	strh	r3, [r7, #28]

			TIM10->CCR1 = dutycycle;
 8001a6e:	4a44      	ldr	r2, [pc, #272]	@ (8001b80 <main+0x4f4>)
 8001a70:	8bbb      	ldrh	r3, [r7, #28]
 8001a72:	6353      	str	r3, [r2, #52]	@ 0x34
			TIM11->CCR1 = dutycycle;
 8001a74:	4a43      	ldr	r2, [pc, #268]	@ (8001b84 <main+0x4f8>)
 8001a76:	8bbb      	ldrh	r3, [r7, #28]
 8001a78:	6353      	str	r3, [r2, #52]	@ 0x34
			HAL_TIM_PWM_Start(&htim10, TIM_CHANNEL_1);
 8001a7a:	2100      	movs	r1, #0
 8001a7c:	4843      	ldr	r0, [pc, #268]	@ (8001b8c <main+0x500>)
 8001a7e:	f004 fddb 	bl	8006638 <HAL_TIM_PWM_Start>
			HAL_TIM_PWM_Start(&htim11, TIM_CHANNEL_1);
 8001a82:	2100      	movs	r1, #0
 8001a84:	4842      	ldr	r0, [pc, #264]	@ (8001b90 <main+0x504>)
 8001a86:	f004 fdd7 	bl	8006638 <HAL_TIM_PWM_Start>

//			HAL_GPIO_WritePin(GPIOC, GPIO_PIN_0, GPIO_PIN_RESET);

			HAL_GPIO_WritePin(GPIOC, GPIO_PIN_1, GPIO_PIN_RESET);
 8001a8a:	2200      	movs	r2, #0
 8001a8c:	2102      	movs	r1, #2
 8001a8e:	4844      	ldr	r0, [pc, #272]	@ (8001ba0 <main+0x514>)
 8001a90:	f002 fe74 	bl	800477c <HAL_GPIO_WritePin>

			HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001a94:	2201      	movs	r2, #1
 8001a96:	2104      	movs	r1, #4
 8001a98:	4841      	ldr	r0, [pc, #260]	@ (8001ba0 <main+0x514>)
 8001a9a:	f002 fe6f 	bl	800477c <HAL_GPIO_WritePin>
			current_state = FORWARD;
 8001a9e:	2301      	movs	r3, #1
 8001aa0:	f887 3027 	strb.w	r3, [r7, #39]	@ 0x27
 8001aa4:	e1f0      	b.n	8001e88 <main+0x7fc>

		}

		// backward

		else if (ly <= Buff2 && (lx <= BuffP && lx >= BuffN))
 8001aa6:	4b21      	ldr	r3, [pc, #132]	@ (8001b2c <main+0x4a0>)
 8001aa8:	681a      	ldr	r2, [r3, #0]
 8001aaa:	4b32      	ldr	r3, [pc, #200]	@ (8001b74 <main+0x4e8>)
 8001aac:	681b      	ldr	r3, [r3, #0]
 8001aae:	429a      	cmp	r2, r3
 8001ab0:	dc78      	bgt.n	8001ba4 <main+0x518>
 8001ab2:	4b1d      	ldr	r3, [pc, #116]	@ (8001b28 <main+0x49c>)
 8001ab4:	681a      	ldr	r2, [r3, #0]
 8001ab6:	4b37      	ldr	r3, [pc, #220]	@ (8001b94 <main+0x508>)
 8001ab8:	681b      	ldr	r3, [r3, #0]
 8001aba:	429a      	cmp	r2, r3
 8001abc:	dc72      	bgt.n	8001ba4 <main+0x518>
 8001abe:	4b1a      	ldr	r3, [pc, #104]	@ (8001b28 <main+0x49c>)
 8001ac0:	681a      	ldr	r2, [r3, #0]
 8001ac2:	4b35      	ldr	r3, [pc, #212]	@ (8001b98 <main+0x50c>)
 8001ac4:	681b      	ldr	r3, [r3, #0]
 8001ac6:	429a      	cmp	r2, r3
 8001ac8:	db6c      	blt.n	8001ba4 <main+0x518>

		{

			dutycycle = map(ly, -128, Buff2, fast, 0);
 8001aca:	4b18      	ldr	r3, [pc, #96]	@ (8001b2c <main+0x4a0>)
 8001acc:	6818      	ldr	r0, [r3, #0]
 8001ace:	4b29      	ldr	r3, [pc, #164]	@ (8001b74 <main+0x4e8>)
 8001ad0:	681a      	ldr	r2, [r3, #0]
 8001ad2:	4b32      	ldr	r3, [pc, #200]	@ (8001b9c <main+0x510>)
 8001ad4:	681b      	ldr	r3, [r3, #0]
 8001ad6:	2100      	movs	r1, #0
 8001ad8:	9100      	str	r1, [sp, #0]
 8001ada:	f06f 017f 	mvn.w	r1, #127	@ 0x7f
 8001ade:	f7ff fc45 	bl	800136c <map>
 8001ae2:	4603      	mov	r3, r0
 8001ae4:	83bb      	strh	r3, [r7, #28]

			TIM10->CCR1 = dutycycle;
 8001ae6:	4a26      	ldr	r2, [pc, #152]	@ (8001b80 <main+0x4f4>)
 8001ae8:	8bbb      	ldrh	r3, [r7, #28]
 8001aea:	6353      	str	r3, [r2, #52]	@ 0x34
			TIM11->CCR1 = dutycycle;
 8001aec:	4a25      	ldr	r2, [pc, #148]	@ (8001b84 <main+0x4f8>)
 8001aee:	8bbb      	ldrh	r3, [r7, #28]
 8001af0:	6353      	str	r3, [r2, #52]	@ 0x34
			HAL_TIM_PWM_Start(&htim10, TIM_CHANNEL_1);
 8001af2:	2100      	movs	r1, #0
 8001af4:	4825      	ldr	r0, [pc, #148]	@ (8001b8c <main+0x500>)
 8001af6:	f004 fd9f 	bl	8006638 <HAL_TIM_PWM_Start>
			HAL_TIM_PWM_Start(&htim11, TIM_CHANNEL_1);
 8001afa:	2100      	movs	r1, #0
 8001afc:	4824      	ldr	r0, [pc, #144]	@ (8001b90 <main+0x504>)
 8001afe:	f004 fd9b 	bl	8006638 <HAL_TIM_PWM_Start>

//			HAL_GPIO_WritePin(GPIOC, GPIO_PIN_0, GPIO_PIN_RESET);

			HAL_GPIO_WritePin(GPIOC, GPIO_PIN_1, GPIO_PIN_SET);
 8001b02:	2201      	movs	r2, #1
 8001b04:	2102      	movs	r1, #2
 8001b06:	4826      	ldr	r0, [pc, #152]	@ (8001ba0 <main+0x514>)
 8001b08:	f002 fe38 	bl	800477c <HAL_GPIO_WritePin>

			HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001b0c:	2200      	movs	r2, #0
 8001b0e:	2104      	movs	r1, #4
 8001b10:	4823      	ldr	r0, [pc, #140]	@ (8001ba0 <main+0x514>)
 8001b12:	f002 fe33 	bl	800477c <HAL_GPIO_WritePin>

//			HAL_GPIO_WritePin(GPIOC, GPIO_PIN_3, GPIO_PIN_SET);
			current_state = BACKWARD;
 8001b16:	2302      	movs	r3, #2
 8001b18:	f887 3027 	strb.w	r3, [r7, #39]	@ 0x27
 8001b1c:	e1b4      	b.n	8001e88 <main+0x7fc>
 8001b1e:	bf00      	nop
 8001b20:	20000688 	.word	0x20000688
 8001b24:	200006d4 	.word	0x200006d4
 8001b28:	20000698 	.word	0x20000698
 8001b2c:	2000069c 	.word	0x2000069c
 8001b30:	200006a0 	.word	0x200006a0
 8001b34:	200006a4 	.word	0x200006a4
 8001b38:	200006a8 	.word	0x200006a8
 8001b3c:	200006ac 	.word	0x200006ac
 8001b40:	200006b0 	.word	0x200006b0
 8001b44:	200006b4 	.word	0x200006b4
 8001b48:	200006c0 	.word	0x200006c0
 8001b4c:	200006c4 	.word	0x200006c4
 8001b50:	20000684 	.word	0x20000684
 8001b54:	2000000c 	.word	0x2000000c
 8001b58:	0800d4dc 	.word	0x0800d4dc
 8001b5c:	20000270 	.word	0x20000270
 8001b60:	200002b8 	.word	0x200002b8
 8001b64:	20000300 	.word	0x20000300
 8001b68:	20000678 	.word	0x20000678
 8001b6c:	2000067c 	.word	0x2000067c
 8001b70:	20000680 	.word	0x20000680
 8001b74:	20000018 	.word	0x20000018
 8001b78:	20000014 	.word	0x20000014
 8001b7c:	40001800 	.word	0x40001800
 8001b80:	40014400 	.word	0x40014400
 8001b84:	40014800 	.word	0x40014800
 8001b88:	20000468 	.word	0x20000468
 8001b8c:	200003d8 	.word	0x200003d8
 8001b90:	20000420 	.word	0x20000420
 8001b94:	2000001c 	.word	0x2000001c
 8001b98:	20000020 	.word	0x20000020
 8001b9c:	20000010 	.word	0x20000010
 8001ba0:	40020800 	.word	0x40020800

		}

		//	right

		else if (lx >= Buff1 && (ly <= BuffP && ly >= BuffN))
 8001ba4:	4b84      	ldr	r3, [pc, #528]	@ (8001db8 <main+0x72c>)
 8001ba6:	681a      	ldr	r2, [r3, #0]
 8001ba8:	4b84      	ldr	r3, [pc, #528]	@ (8001dbc <main+0x730>)
 8001baa:	681b      	ldr	r3, [r3, #0]
 8001bac:	429a      	cmp	r2, r3
 8001bae:	db5a      	blt.n	8001c66 <main+0x5da>
 8001bb0:	4b83      	ldr	r3, [pc, #524]	@ (8001dc0 <main+0x734>)
 8001bb2:	681a      	ldr	r2, [r3, #0]
 8001bb4:	4b83      	ldr	r3, [pc, #524]	@ (8001dc4 <main+0x738>)
 8001bb6:	681b      	ldr	r3, [r3, #0]
 8001bb8:	429a      	cmp	r2, r3
 8001bba:	dc54      	bgt.n	8001c66 <main+0x5da>
 8001bbc:	4b80      	ldr	r3, [pc, #512]	@ (8001dc0 <main+0x734>)
 8001bbe:	681a      	ldr	r2, [r3, #0]
 8001bc0:	4b81      	ldr	r3, [pc, #516]	@ (8001dc8 <main+0x73c>)
 8001bc2:	681b      	ldr	r3, [r3, #0]
 8001bc4:	429a      	cmp	r2, r3
 8001bc6:	db4e      	blt.n	8001c66 <main+0x5da>

		{

			dutycycle = map(lx, Buff1, 127, 0, fast);
 8001bc8:	4b7b      	ldr	r3, [pc, #492]	@ (8001db8 <main+0x72c>)
 8001bca:	6818      	ldr	r0, [r3, #0]
 8001bcc:	4b7b      	ldr	r3, [pc, #492]	@ (8001dbc <main+0x730>)
 8001bce:	6819      	ldr	r1, [r3, #0]
 8001bd0:	4b7e      	ldr	r3, [pc, #504]	@ (8001dcc <main+0x740>)
 8001bd2:	681b      	ldr	r3, [r3, #0]
 8001bd4:	9300      	str	r3, [sp, #0]
 8001bd6:	2300      	movs	r3, #0
 8001bd8:	227f      	movs	r2, #127	@ 0x7f
 8001bda:	f7ff fbc7 	bl	800136c <map>
 8001bde:	4603      	mov	r3, r0
 8001be0:	83bb      	strh	r3, [r7, #28]

			TIM12->CCR1 = dutycycle;
 8001be2:	4a7b      	ldr	r2, [pc, #492]	@ (8001dd0 <main+0x744>)
 8001be4:	8bbb      	ldrh	r3, [r7, #28]
 8001be6:	6353      	str	r3, [r2, #52]	@ 0x34
			TIM10->CCR1 = cos30 * dutycycle;
 8001be8:	8bbb      	ldrh	r3, [r7, #28]
 8001bea:	ee07 3a90 	vmov	s15, r3
 8001bee:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8001bf2:	4b78      	ldr	r3, [pc, #480]	@ (8001dd4 <main+0x748>)
 8001bf4:	edd3 7a00 	vldr	s15, [r3]
 8001bf8:	ee67 7a27 	vmul.f32	s15, s14, s15
 8001bfc:	4b76      	ldr	r3, [pc, #472]	@ (8001dd8 <main+0x74c>)
 8001bfe:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8001c02:	ee17 2a90 	vmov	r2, s15
 8001c06:	635a      	str	r2, [r3, #52]	@ 0x34
			TIM11->CCR1 = cos30 * dutycycle;
 8001c08:	8bbb      	ldrh	r3, [r7, #28]
 8001c0a:	ee07 3a90 	vmov	s15, r3
 8001c0e:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8001c12:	4b70      	ldr	r3, [pc, #448]	@ (8001dd4 <main+0x748>)
 8001c14:	edd3 7a00 	vldr	s15, [r3]
 8001c18:	ee67 7a27 	vmul.f32	s15, s14, s15
 8001c1c:	4b6f      	ldr	r3, [pc, #444]	@ (8001ddc <main+0x750>)
 8001c1e:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8001c22:	ee17 2a90 	vmov	r2, s15
 8001c26:	635a      	str	r2, [r3, #52]	@ 0x34
			HAL_TIM_PWM_Start(&htim12, TIM_CHANNEL_1);
 8001c28:	2100      	movs	r1, #0
 8001c2a:	486d      	ldr	r0, [pc, #436]	@ (8001de0 <main+0x754>)
 8001c2c:	f004 fd04 	bl	8006638 <HAL_TIM_PWM_Start>
			HAL_TIM_PWM_Start(&htim10, TIM_CHANNEL_1);
 8001c30:	2100      	movs	r1, #0
 8001c32:	486c      	ldr	r0, [pc, #432]	@ (8001de4 <main+0x758>)
 8001c34:	f004 fd00 	bl	8006638 <HAL_TIM_PWM_Start>
			HAL_TIM_PWM_Start(&htim11, TIM_CHANNEL_1);
 8001c38:	2100      	movs	r1, #0
 8001c3a:	486b      	ldr	r0, [pc, #428]	@ (8001de8 <main+0x75c>)
 8001c3c:	f004 fcfc 	bl	8006638 <HAL_TIM_PWM_Start>

			HAL_GPIO_WritePin(GPIOC, GPIO_PIN_0, GPIO_PIN_SET);
 8001c40:	2201      	movs	r2, #1
 8001c42:	2101      	movs	r1, #1
 8001c44:	4869      	ldr	r0, [pc, #420]	@ (8001dec <main+0x760>)
 8001c46:	f002 fd99 	bl	800477c <HAL_GPIO_WritePin>

			HAL_GPIO_WritePin(GPIOC, GPIO_PIN_1, GPIO_PIN_RESET);
 8001c4a:	2200      	movs	r2, #0
 8001c4c:	2102      	movs	r1, #2
 8001c4e:	4867      	ldr	r0, [pc, #412]	@ (8001dec <main+0x760>)
 8001c50:	f002 fd94 	bl	800477c <HAL_GPIO_WritePin>

			HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001c54:	2200      	movs	r2, #0
 8001c56:	2104      	movs	r1, #4
 8001c58:	4864      	ldr	r0, [pc, #400]	@ (8001dec <main+0x760>)
 8001c5a:	f002 fd8f 	bl	800477c <HAL_GPIO_WritePin>

//			HAL_GPIO_WritePin(GPIOC, GPIO_PIN_3, GPIO_PIN_SET);
			current_state = RIGHT;
 8001c5e:	2303      	movs	r3, #3
 8001c60:	f887 3027 	strb.w	r3, [r7, #39]	@ 0x27
 8001c64:	e110      	b.n	8001e88 <main+0x7fc>

		}

		// left

		else if (lx <= Buff2 && (ly <= BuffP && ly >= BuffN))
 8001c66:	4b54      	ldr	r3, [pc, #336]	@ (8001db8 <main+0x72c>)
 8001c68:	681a      	ldr	r2, [r3, #0]
 8001c6a:	4b61      	ldr	r3, [pc, #388]	@ (8001df0 <main+0x764>)
 8001c6c:	681b      	ldr	r3, [r3, #0]
 8001c6e:	429a      	cmp	r2, r3
 8001c70:	dc5b      	bgt.n	8001d2a <main+0x69e>
 8001c72:	4b53      	ldr	r3, [pc, #332]	@ (8001dc0 <main+0x734>)
 8001c74:	681a      	ldr	r2, [r3, #0]
 8001c76:	4b53      	ldr	r3, [pc, #332]	@ (8001dc4 <main+0x738>)
 8001c78:	681b      	ldr	r3, [r3, #0]
 8001c7a:	429a      	cmp	r2, r3
 8001c7c:	dc55      	bgt.n	8001d2a <main+0x69e>
 8001c7e:	4b50      	ldr	r3, [pc, #320]	@ (8001dc0 <main+0x734>)
 8001c80:	681a      	ldr	r2, [r3, #0]
 8001c82:	4b51      	ldr	r3, [pc, #324]	@ (8001dc8 <main+0x73c>)
 8001c84:	681b      	ldr	r3, [r3, #0]
 8001c86:	429a      	cmp	r2, r3
 8001c88:	db4f      	blt.n	8001d2a <main+0x69e>

		{

			dutycycle = map(lx, -128, Buff2, fast, 0);
 8001c8a:	4b4b      	ldr	r3, [pc, #300]	@ (8001db8 <main+0x72c>)
 8001c8c:	6818      	ldr	r0, [r3, #0]
 8001c8e:	4b58      	ldr	r3, [pc, #352]	@ (8001df0 <main+0x764>)
 8001c90:	681a      	ldr	r2, [r3, #0]
 8001c92:	4b4e      	ldr	r3, [pc, #312]	@ (8001dcc <main+0x740>)
 8001c94:	681b      	ldr	r3, [r3, #0]
 8001c96:	2100      	movs	r1, #0
 8001c98:	9100      	str	r1, [sp, #0]
 8001c9a:	f06f 017f 	mvn.w	r1, #127	@ 0x7f
 8001c9e:	f7ff fb65 	bl	800136c <map>
 8001ca2:	4603      	mov	r3, r0
 8001ca4:	83bb      	strh	r3, [r7, #28]

			TIM12->CCR1 = dutycycle;
 8001ca6:	4a4a      	ldr	r2, [pc, #296]	@ (8001dd0 <main+0x744>)
 8001ca8:	8bbb      	ldrh	r3, [r7, #28]
 8001caa:	6353      	str	r3, [r2, #52]	@ 0x34
			TIM10->CCR1 = cos30 * dutycycle;
 8001cac:	8bbb      	ldrh	r3, [r7, #28]
 8001cae:	ee07 3a90 	vmov	s15, r3
 8001cb2:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8001cb6:	4b47      	ldr	r3, [pc, #284]	@ (8001dd4 <main+0x748>)
 8001cb8:	edd3 7a00 	vldr	s15, [r3]
 8001cbc:	ee67 7a27 	vmul.f32	s15, s14, s15
 8001cc0:	4b45      	ldr	r3, [pc, #276]	@ (8001dd8 <main+0x74c>)
 8001cc2:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8001cc6:	ee17 2a90 	vmov	r2, s15
 8001cca:	635a      	str	r2, [r3, #52]	@ 0x34
			TIM11->CCR1 = cos30 * dutycycle;
 8001ccc:	8bbb      	ldrh	r3, [r7, #28]
 8001cce:	ee07 3a90 	vmov	s15, r3
 8001cd2:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8001cd6:	4b3f      	ldr	r3, [pc, #252]	@ (8001dd4 <main+0x748>)
 8001cd8:	edd3 7a00 	vldr	s15, [r3]
 8001cdc:	ee67 7a27 	vmul.f32	s15, s14, s15
 8001ce0:	4b3e      	ldr	r3, [pc, #248]	@ (8001ddc <main+0x750>)
 8001ce2:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8001ce6:	ee17 2a90 	vmov	r2, s15
 8001cea:	635a      	str	r2, [r3, #52]	@ 0x34
			HAL_TIM_PWM_Start(&htim12, TIM_CHANNEL_1);
 8001cec:	2100      	movs	r1, #0
 8001cee:	483c      	ldr	r0, [pc, #240]	@ (8001de0 <main+0x754>)
 8001cf0:	f004 fca2 	bl	8006638 <HAL_TIM_PWM_Start>
			HAL_TIM_PWM_Start(&htim10, TIM_CHANNEL_1);
 8001cf4:	2100      	movs	r1, #0
 8001cf6:	483b      	ldr	r0, [pc, #236]	@ (8001de4 <main+0x758>)
 8001cf8:	f004 fc9e 	bl	8006638 <HAL_TIM_PWM_Start>
			HAL_TIM_PWM_Start(&htim11, TIM_CHANNEL_1);
 8001cfc:	2100      	movs	r1, #0
 8001cfe:	483a      	ldr	r0, [pc, #232]	@ (8001de8 <main+0x75c>)
 8001d00:	f004 fc9a 	bl	8006638 <HAL_TIM_PWM_Start>

			HAL_GPIO_WritePin(GPIOC, GPIO_PIN_0, GPIO_PIN_RESET);
 8001d04:	2200      	movs	r2, #0
 8001d06:	2101      	movs	r1, #1
 8001d08:	4838      	ldr	r0, [pc, #224]	@ (8001dec <main+0x760>)
 8001d0a:	f002 fd37 	bl	800477c <HAL_GPIO_WritePin>

			HAL_GPIO_WritePin(GPIOC, GPIO_PIN_1, GPIO_PIN_SET);
 8001d0e:	2201      	movs	r2, #1
 8001d10:	2102      	movs	r1, #2
 8001d12:	4836      	ldr	r0, [pc, #216]	@ (8001dec <main+0x760>)
 8001d14:	f002 fd32 	bl	800477c <HAL_GPIO_WritePin>

			HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001d18:	2201      	movs	r2, #1
 8001d1a:	2104      	movs	r1, #4
 8001d1c:	4833      	ldr	r0, [pc, #204]	@ (8001dec <main+0x760>)
 8001d1e:	f002 fd2d 	bl	800477c <HAL_GPIO_WritePin>
			current_state = LEFT;
 8001d22:	2304      	movs	r3, #4
 8001d24:	f887 3027 	strb.w	r3, [r7, #39]	@ 0x27
 8001d28:	e0ae      	b.n	8001e88 <main+0x7fc>

		}

		//clockwise

		else if (rx >= Buff1 && (ry <= BuffP && ry >= BuffN)) {
 8001d2a:	4b32      	ldr	r3, [pc, #200]	@ (8001df4 <main+0x768>)
 8001d2c:	681a      	ldr	r2, [r3, #0]
 8001d2e:	4b23      	ldr	r3, [pc, #140]	@ (8001dbc <main+0x730>)
 8001d30:	681b      	ldr	r3, [r3, #0]
 8001d32:	429a      	cmp	r2, r3
 8001d34:	db62      	blt.n	8001dfc <main+0x770>
 8001d36:	4b30      	ldr	r3, [pc, #192]	@ (8001df8 <main+0x76c>)
 8001d38:	681a      	ldr	r2, [r3, #0]
 8001d3a:	4b22      	ldr	r3, [pc, #136]	@ (8001dc4 <main+0x738>)
 8001d3c:	681b      	ldr	r3, [r3, #0]
 8001d3e:	429a      	cmp	r2, r3
 8001d40:	dc5c      	bgt.n	8001dfc <main+0x770>
 8001d42:	4b2d      	ldr	r3, [pc, #180]	@ (8001df8 <main+0x76c>)
 8001d44:	681a      	ldr	r2, [r3, #0]
 8001d46:	4b20      	ldr	r3, [pc, #128]	@ (8001dc8 <main+0x73c>)
 8001d48:	681b      	ldr	r3, [r3, #0]
 8001d4a:	429a      	cmp	r2, r3
 8001d4c:	db56      	blt.n	8001dfc <main+0x770>

			dutycycle = map(rx, Buff1, 127, 0, 100);
 8001d4e:	4b29      	ldr	r3, [pc, #164]	@ (8001df4 <main+0x768>)
 8001d50:	6818      	ldr	r0, [r3, #0]
 8001d52:	4b1a      	ldr	r3, [pc, #104]	@ (8001dbc <main+0x730>)
 8001d54:	6819      	ldr	r1, [r3, #0]
 8001d56:	2364      	movs	r3, #100	@ 0x64
 8001d58:	9300      	str	r3, [sp, #0]
 8001d5a:	2300      	movs	r3, #0
 8001d5c:	227f      	movs	r2, #127	@ 0x7f
 8001d5e:	f7ff fb05 	bl	800136c <map>
 8001d62:	4603      	mov	r3, r0
 8001d64:	83bb      	strh	r3, [r7, #28]

			TIM12->CCR1 = dutycycle;
 8001d66:	4a1a      	ldr	r2, [pc, #104]	@ (8001dd0 <main+0x744>)
 8001d68:	8bbb      	ldrh	r3, [r7, #28]
 8001d6a:	6353      	str	r3, [r2, #52]	@ 0x34
			TIM10->CCR1 = dutycycle;
 8001d6c:	4a1a      	ldr	r2, [pc, #104]	@ (8001dd8 <main+0x74c>)
 8001d6e:	8bbb      	ldrh	r3, [r7, #28]
 8001d70:	6353      	str	r3, [r2, #52]	@ 0x34
			TIM11->CCR1 = dutycycle;
 8001d72:	4a1a      	ldr	r2, [pc, #104]	@ (8001ddc <main+0x750>)
 8001d74:	8bbb      	ldrh	r3, [r7, #28]
 8001d76:	6353      	str	r3, [r2, #52]	@ 0x34
			HAL_TIM_PWM_Start(&htim12, TIM_CHANNEL_1);
 8001d78:	2100      	movs	r1, #0
 8001d7a:	4819      	ldr	r0, [pc, #100]	@ (8001de0 <main+0x754>)
 8001d7c:	f004 fc5c 	bl	8006638 <HAL_TIM_PWM_Start>
			HAL_TIM_PWM_Start(&htim10, TIM_CHANNEL_1);
 8001d80:	2100      	movs	r1, #0
 8001d82:	4818      	ldr	r0, [pc, #96]	@ (8001de4 <main+0x758>)
 8001d84:	f004 fc58 	bl	8006638 <HAL_TIM_PWM_Start>
			HAL_TIM_PWM_Start(&htim11, TIM_CHANNEL_1);
 8001d88:	2100      	movs	r1, #0
 8001d8a:	4817      	ldr	r0, [pc, #92]	@ (8001de8 <main+0x75c>)
 8001d8c:	f004 fc54 	bl	8006638 <HAL_TIM_PWM_Start>

			HAL_GPIO_WritePin(GPIOC, GPIO_PIN_0, GPIO_PIN_RESET);
 8001d90:	2200      	movs	r2, #0
 8001d92:	2101      	movs	r1, #1
 8001d94:	4815      	ldr	r0, [pc, #84]	@ (8001dec <main+0x760>)
 8001d96:	f002 fcf1 	bl	800477c <HAL_GPIO_WritePin>

			HAL_GPIO_WritePin(GPIOC, GPIO_PIN_1, GPIO_PIN_RESET);
 8001d9a:	2200      	movs	r2, #0
 8001d9c:	2102      	movs	r1, #2
 8001d9e:	4813      	ldr	r0, [pc, #76]	@ (8001dec <main+0x760>)
 8001da0:	f002 fcec 	bl	800477c <HAL_GPIO_WritePin>

			HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001da4:	2200      	movs	r2, #0
 8001da6:	2104      	movs	r1, #4
 8001da8:	4810      	ldr	r0, [pc, #64]	@ (8001dec <main+0x760>)
 8001daa:	f002 fce7 	bl	800477c <HAL_GPIO_WritePin>
			current_state = CLOCKWISE;
 8001dae:	2305      	movs	r3, #5
 8001db0:	f887 3027 	strb.w	r3, [r7, #39]	@ 0x27
 8001db4:	e068      	b.n	8001e88 <main+0x7fc>
 8001db6:	bf00      	nop
 8001db8:	20000698 	.word	0x20000698
 8001dbc:	20000014 	.word	0x20000014
 8001dc0:	2000069c 	.word	0x2000069c
 8001dc4:	2000001c 	.word	0x2000001c
 8001dc8:	20000020 	.word	0x20000020
 8001dcc:	20000010 	.word	0x20000010
 8001dd0:	40001800 	.word	0x40001800
 8001dd4:	20000024 	.word	0x20000024
 8001dd8:	40014400 	.word	0x40014400
 8001ddc:	40014800 	.word	0x40014800
 8001de0:	20000468 	.word	0x20000468
 8001de4:	200003d8 	.word	0x200003d8
 8001de8:	20000420 	.word	0x20000420
 8001dec:	40020800 	.word	0x40020800
 8001df0:	20000018 	.word	0x20000018
 8001df4:	200006a0 	.word	0x200006a0
 8001df8:	200006a4 	.word	0x200006a4

		}

		// anticlockwise

		else if (rx <= Buff2 && (ry <= BuffP && ry >= BuffN)) {
 8001dfc:	4b97      	ldr	r3, [pc, #604]	@ (800205c <main+0x9d0>)
 8001dfe:	681a      	ldr	r2, [r3, #0]
 8001e00:	4b97      	ldr	r3, [pc, #604]	@ (8002060 <main+0x9d4>)
 8001e02:	681b      	ldr	r3, [r3, #0]
 8001e04:	429a      	cmp	r2, r3
 8001e06:	dc3f      	bgt.n	8001e88 <main+0x7fc>
 8001e08:	4b96      	ldr	r3, [pc, #600]	@ (8002064 <main+0x9d8>)
 8001e0a:	681a      	ldr	r2, [r3, #0]
 8001e0c:	4b96      	ldr	r3, [pc, #600]	@ (8002068 <main+0x9dc>)
 8001e0e:	681b      	ldr	r3, [r3, #0]
 8001e10:	429a      	cmp	r2, r3
 8001e12:	dc39      	bgt.n	8001e88 <main+0x7fc>
 8001e14:	4b93      	ldr	r3, [pc, #588]	@ (8002064 <main+0x9d8>)
 8001e16:	681a      	ldr	r2, [r3, #0]
 8001e18:	4b94      	ldr	r3, [pc, #592]	@ (800206c <main+0x9e0>)
 8001e1a:	681b      	ldr	r3, [r3, #0]
 8001e1c:	429a      	cmp	r2, r3
 8001e1e:	db33      	blt.n	8001e88 <main+0x7fc>

			dutycycle = map(rx, -128, Buff2, 100, 0);
 8001e20:	4b8e      	ldr	r3, [pc, #568]	@ (800205c <main+0x9d0>)
 8001e22:	6818      	ldr	r0, [r3, #0]
 8001e24:	4b8e      	ldr	r3, [pc, #568]	@ (8002060 <main+0x9d4>)
 8001e26:	681a      	ldr	r2, [r3, #0]
 8001e28:	2300      	movs	r3, #0
 8001e2a:	9300      	str	r3, [sp, #0]
 8001e2c:	2364      	movs	r3, #100	@ 0x64
 8001e2e:	f06f 017f 	mvn.w	r1, #127	@ 0x7f
 8001e32:	f7ff fa9b 	bl	800136c <map>
 8001e36:	4603      	mov	r3, r0
 8001e38:	83bb      	strh	r3, [r7, #28]

			TIM12->CCR1 = dutycycle;
 8001e3a:	4a8d      	ldr	r2, [pc, #564]	@ (8002070 <main+0x9e4>)
 8001e3c:	8bbb      	ldrh	r3, [r7, #28]
 8001e3e:	6353      	str	r3, [r2, #52]	@ 0x34
			TIM10->CCR1 = dutycycle;
 8001e40:	4a8c      	ldr	r2, [pc, #560]	@ (8002074 <main+0x9e8>)
 8001e42:	8bbb      	ldrh	r3, [r7, #28]
 8001e44:	6353      	str	r3, [r2, #52]	@ 0x34
			TIM11->CCR1 = dutycycle;
 8001e46:	4a8c      	ldr	r2, [pc, #560]	@ (8002078 <main+0x9ec>)
 8001e48:	8bbb      	ldrh	r3, [r7, #28]
 8001e4a:	6353      	str	r3, [r2, #52]	@ 0x34
			HAL_TIM_PWM_Start(&htim12, TIM_CHANNEL_1);
 8001e4c:	2100      	movs	r1, #0
 8001e4e:	488b      	ldr	r0, [pc, #556]	@ (800207c <main+0x9f0>)
 8001e50:	f004 fbf2 	bl	8006638 <HAL_TIM_PWM_Start>
			HAL_TIM_PWM_Start(&htim10, TIM_CHANNEL_1);
 8001e54:	2100      	movs	r1, #0
 8001e56:	488a      	ldr	r0, [pc, #552]	@ (8002080 <main+0x9f4>)
 8001e58:	f004 fbee 	bl	8006638 <HAL_TIM_PWM_Start>
			HAL_TIM_PWM_Start(&htim11, TIM_CHANNEL_1);
 8001e5c:	2100      	movs	r1, #0
 8001e5e:	4889      	ldr	r0, [pc, #548]	@ (8002084 <main+0x9f8>)
 8001e60:	f004 fbea 	bl	8006638 <HAL_TIM_PWM_Start>

			HAL_GPIO_WritePin(GPIOC, GPIO_PIN_0, GPIO_PIN_SET);
 8001e64:	2201      	movs	r2, #1
 8001e66:	2101      	movs	r1, #1
 8001e68:	4887      	ldr	r0, [pc, #540]	@ (8002088 <main+0x9fc>)
 8001e6a:	f002 fc87 	bl	800477c <HAL_GPIO_WritePin>

			HAL_GPIO_WritePin(GPIOC, GPIO_PIN_1, GPIO_PIN_SET);
 8001e6e:	2201      	movs	r2, #1
 8001e70:	2102      	movs	r1, #2
 8001e72:	4885      	ldr	r0, [pc, #532]	@ (8002088 <main+0x9fc>)
 8001e74:	f002 fc82 	bl	800477c <HAL_GPIO_WritePin>

			HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001e78:	2201      	movs	r2, #1
 8001e7a:	2104      	movs	r1, #4
 8001e7c:	4882      	ldr	r0, [pc, #520]	@ (8002088 <main+0x9fc>)
 8001e7e:	f002 fc7d 	bl	800477c <HAL_GPIO_WritePin>
			current_state = ANTICLOCKWISE;
 8001e82:	2306      	movs	r3, #6
 8001e84:	f887 3027 	strb.w	r3, [r7, #39]	@ 0x27

//			HAL_GPIO_WritePin(GPIOC, GPIO_PIN_3, GPIO_PIN_RESET);

		}

		if (current_state == CLOCKWISE || current_state == ANTICLOCKWISE) {
 8001e88:	f897 3027 	ldrb.w	r3, [r7, #39]	@ 0x27
 8001e8c:	2b05      	cmp	r3, #5
 8001e8e:	d003      	beq.n	8001e98 <main+0x80c>
 8001e90:	f897 3027 	ldrb.w	r3, [r7, #39]	@ 0x27
 8001e94:	2b06      	cmp	r3, #6
 8001e96:	d102      	bne.n	8001e9e <main+0x812>
			stopEncoders();
 8001e98:	f7ff fbcc 	bl	8001634 <stopEncoders>
 8001e9c:	e001      	b.n	8001ea2 <main+0x816>
		} else {
			startEncoders();
 8001e9e:	f7ff fbdf 	bl	8001660 <startEncoders>
		}

		update_odometry(signed_counter1, signed_counter2, signed_counter3);
 8001ea2:	4b7a      	ldr	r3, [pc, #488]	@ (800208c <main+0xa00>)
 8001ea4:	f9b3 3000 	ldrsh.w	r3, [r3]
 8001ea8:	4a79      	ldr	r2, [pc, #484]	@ (8002090 <main+0xa04>)
 8001eaa:	6811      	ldr	r1, [r2, #0]
 8001eac:	4a79      	ldr	r2, [pc, #484]	@ (8002094 <main+0xa08>)
 8001eae:	f9b2 2000 	ldrsh.w	r2, [r2]
 8001eb2:	4618      	mov	r0, r3
 8001eb4:	f7ff fa78 	bl	80013a8 <update_odometry>

		/* Stepper */
//		stepper_running1 = 1;
		HAL_GPIO_WritePin(GPIOC, GPIO_PIN_3,
 8001eb8:	4b77      	ldr	r3, [pc, #476]	@ (8002098 <main+0xa0c>)
 8001eba:	681b      	ldr	r3, [r3, #0]
 8001ebc:	2b00      	cmp	r3, #0
 8001ebe:	bf14      	ite	ne
 8001ec0:	2301      	movne	r3, #1
 8001ec2:	2300      	moveq	r3, #0
 8001ec4:	b2db      	uxtb	r3, r3
 8001ec6:	461a      	mov	r2, r3
 8001ec8:	2108      	movs	r1, #8
 8001eca:	486f      	ldr	r0, [pc, #444]	@ (8002088 <main+0x9fc>)
 8001ecc:	f002 fc56 	bl	800477c <HAL_GPIO_WritePin>
				direction1 ? GPIO_PIN_SET : GPIO_PIN_RESET);
		HAL_GPIO_WritePin(GPIOC, GPIO_PIN_6,
 8001ed0:	4b71      	ldr	r3, [pc, #452]	@ (8002098 <main+0xa0c>)
 8001ed2:	681b      	ldr	r3, [r3, #0]
 8001ed4:	2b00      	cmp	r3, #0
 8001ed6:	bf0c      	ite	eq
 8001ed8:	2301      	moveq	r3, #1
 8001eda:	2300      	movne	r3, #0
 8001edc:	b2db      	uxtb	r3, r3
 8001ede:	461a      	mov	r2, r3
 8001ee0:	2140      	movs	r1, #64	@ 0x40
 8001ee2:	4869      	ldr	r0, [pc, #420]	@ (8002088 <main+0x9fc>)
 8001ee4:	f002 fc4a 	bl	800477c <HAL_GPIO_WritePin>
				!direction1 ? GPIO_PIN_SET : GPIO_PIN_RESET);

		if (ll1 == 1 && !prev_ll1) {  // LL1 button pressed
 8001ee8:	4b6c      	ldr	r3, [pc, #432]	@ (800209c <main+0xa10>)
 8001eea:	681b      	ldr	r3, [r3, #0]
 8001eec:	2b01      	cmp	r3, #1
 8001eee:	d117      	bne.n	8001f20 <main+0x894>
 8001ef0:	4b6b      	ldr	r3, [pc, #428]	@ (80020a0 <main+0xa14>)
 8001ef2:	681b      	ldr	r3, [r3, #0]
 8001ef4:	2b00      	cmp	r3, #0
 8001ef6:	d113      	bne.n	8001f20 <main+0x894>
			direction1 = 1;  // Set to Anti-clockwise
 8001ef8:	4b67      	ldr	r3, [pc, #412]	@ (8002098 <main+0xa0c>)
 8001efa:	2201      	movs	r2, #1
 8001efc:	601a      	str	r2, [r3, #0]
			stepper_running = 1;
 8001efe:	4b69      	ldr	r3, [pc, #420]	@ (80020a4 <main+0xa18>)
 8001f00:	2201      	movs	r2, #1
 8001f02:	601a      	str	r2, [r3, #0]
			stepper_running1 = 1;
 8001f04:	4b68      	ldr	r3, [pc, #416]	@ (80020a8 <main+0xa1c>)
 8001f06:	2201      	movs	r2, #1
 8001f08:	601a      	str	r2, [r3, #0]
			target_steps = STEPS;
 8001f0a:	4b68      	ldr	r3, [pc, #416]	@ (80020ac <main+0xa20>)
 8001f0c:	22f0      	movs	r2, #240	@ 0xf0
 8001f0e:	601a      	str	r2, [r3, #0]
			target_steps1 = STEPS;
 8001f10:	4b67      	ldr	r3, [pc, #412]	@ (80020b0 <main+0xa24>)
 8001f12:	22f0      	movs	r2, #240	@ 0xf0
 8001f14:	601a      	str	r2, [r3, #0]
			HAL_GPIO_WritePin(GPIOC, GPIO_PIN_7, GPIO_PIN_RESET);
 8001f16:	2200      	movs	r2, #0
 8001f18:	2180      	movs	r1, #128	@ 0x80
 8001f1a:	485b      	ldr	r0, [pc, #364]	@ (8002088 <main+0x9fc>)
 8001f1c:	f002 fc2e 	bl	800477c <HAL_GPIO_WritePin>
		}
		if (rr1 == 1 && !prev_rr1) {  // RR1 button pressed
 8001f20:	4b64      	ldr	r3, [pc, #400]	@ (80020b4 <main+0xa28>)
 8001f22:	681b      	ldr	r3, [r3, #0]
 8001f24:	2b01      	cmp	r3, #1
 8001f26:	d117      	bne.n	8001f58 <main+0x8cc>
 8001f28:	4b63      	ldr	r3, [pc, #396]	@ (80020b8 <main+0xa2c>)
 8001f2a:	681b      	ldr	r3, [r3, #0]
 8001f2c:	2b00      	cmp	r3, #0
 8001f2e:	d113      	bne.n	8001f58 <main+0x8cc>
			direction1 = 0;  // Set to Clockwise
 8001f30:	4b59      	ldr	r3, [pc, #356]	@ (8002098 <main+0xa0c>)
 8001f32:	2200      	movs	r2, #0
 8001f34:	601a      	str	r2, [r3, #0]
			stepper_running = 1;
 8001f36:	4b5b      	ldr	r3, [pc, #364]	@ (80020a4 <main+0xa18>)
 8001f38:	2201      	movs	r2, #1
 8001f3a:	601a      	str	r2, [r3, #0]
			stepper_running1 = 1;
 8001f3c:	4b5a      	ldr	r3, [pc, #360]	@ (80020a8 <main+0xa1c>)
 8001f3e:	2201      	movs	r2, #1
 8001f40:	601a      	str	r2, [r3, #0]
			target_steps = STEPS;
 8001f42:	4b5a      	ldr	r3, [pc, #360]	@ (80020ac <main+0xa20>)
 8001f44:	22f0      	movs	r2, #240	@ 0xf0
 8001f46:	601a      	str	r2, [r3, #0]
			target_steps1 = STEPS;
 8001f48:	4b59      	ldr	r3, [pc, #356]	@ (80020b0 <main+0xa24>)
 8001f4a:	22f0      	movs	r2, #240	@ 0xf0
 8001f4c:	601a      	str	r2, [r3, #0]
			HAL_GPIO_WritePin(GPIOC, GPIO_PIN_7, GPIO_PIN_RESET);
 8001f4e:	2200      	movs	r2, #0
 8001f50:	2180      	movs	r1, #128	@ 0x80
 8001f52:	484d      	ldr	r0, [pc, #308]	@ (8002088 <main+0x9fc>)
 8001f54:	f002 fc12 	bl	800477c <HAL_GPIO_WritePin>
		}
		if (cir == 1 && !prev_cir) {
 8001f58:	4b58      	ldr	r3, [pc, #352]	@ (80020bc <main+0xa30>)
 8001f5a:	681b      	ldr	r3, [r3, #0]
 8001f5c:	2b01      	cmp	r3, #1
 8001f5e:	d111      	bne.n	8001f84 <main+0x8f8>
 8001f60:	4b57      	ldr	r3, [pc, #348]	@ (80020c0 <main+0xa34>)
 8001f62:	681b      	ldr	r3, [r3, #0]
 8001f64:	2b00      	cmp	r3, #0
 8001f66:	d10d      	bne.n	8001f84 <main+0x8f8>
			stepper_running1 = 0;
 8001f68:	4b4f      	ldr	r3, [pc, #316]	@ (80020a8 <main+0xa1c>)
 8001f6a:	2200      	movs	r2, #0
 8001f6c:	601a      	str	r2, [r3, #0]
			current_steps = 0;
 8001f6e:	4b55      	ldr	r3, [pc, #340]	@ (80020c4 <main+0xa38>)
 8001f70:	2200      	movs	r2, #0
 8001f72:	601a      	str	r2, [r3, #0]
			current_steps1 = 0;
 8001f74:	4b54      	ldr	r3, [pc, #336]	@ (80020c8 <main+0xa3c>)
 8001f76:	2200      	movs	r2, #0
 8001f78:	601a      	str	r2, [r3, #0]
			HAL_GPIO_WritePin(GPIOC, GPIO_PIN_7, GPIO_PIN_SET);
 8001f7a:	2201      	movs	r2, #1
 8001f7c:	2180      	movs	r1, #128	@ 0x80
 8001f7e:	4842      	ldr	r0, [pc, #264]	@ (8002088 <main+0x9fc>)
 8001f80:	f002 fbfc 	bl	800477c <HAL_GPIO_WritePin>
		}
		prev_ll1 = ll1;
 8001f84:	4b45      	ldr	r3, [pc, #276]	@ (800209c <main+0xa10>)
 8001f86:	681b      	ldr	r3, [r3, #0]
 8001f88:	4a45      	ldr	r2, [pc, #276]	@ (80020a0 <main+0xa14>)
 8001f8a:	6013      	str	r3, [r2, #0]
		prev_rr1 = rr1;
 8001f8c:	4b49      	ldr	r3, [pc, #292]	@ (80020b4 <main+0xa28>)
 8001f8e:	681b      	ldr	r3, [r3, #0]
 8001f90:	4a49      	ldr	r2, [pc, #292]	@ (80020b8 <main+0xa2c>)
 8001f92:	6013      	str	r3, [r2, #0]
		prev_cir = cir;
 8001f94:	4b49      	ldr	r3, [pc, #292]	@ (80020bc <main+0xa30>)
 8001f96:	681b      	ldr	r3, [r3, #0]
 8001f98:	4a49      	ldr	r2, [pc, #292]	@ (80020c0 <main+0xa34>)
 8001f9a:	6013      	str	r3, [r2, #0]
		if (stepper_running && (HAL_GetTick() - last_step_time) >= step_delay
 8001f9c:	4b41      	ldr	r3, [pc, #260]	@ (80020a4 <main+0xa18>)
 8001f9e:	681b      	ldr	r3, [r3, #0]
 8001fa0:	2b00      	cmp	r3, #0
 8001fa2:	d02e      	beq.n	8002002 <main+0x976>
 8001fa4:	f001 fd12 	bl	80039cc <HAL_GetTick>
 8001fa8:	4602      	mov	r2, r0
 8001faa:	4b48      	ldr	r3, [pc, #288]	@ (80020cc <main+0xa40>)
 8001fac:	681b      	ldr	r3, [r3, #0]
 8001fae:	1ad3      	subs	r3, r2, r3
 8001fb0:	4a47      	ldr	r2, [pc, #284]	@ (80020d0 <main+0xa44>)
 8001fb2:	6812      	ldr	r2, [r2, #0]
 8001fb4:	4293      	cmp	r3, r2
 8001fb6:	d324      	bcc.n	8002002 <main+0x976>
				&& current_steps < target_steps) {
 8001fb8:	4b42      	ldr	r3, [pc, #264]	@ (80020c4 <main+0xa38>)
 8001fba:	681a      	ldr	r2, [r3, #0]
 8001fbc:	4b3b      	ldr	r3, [pc, #236]	@ (80020ac <main+0xa20>)
 8001fbe:	681b      	ldr	r3, [r3, #0]
 8001fc0:	429a      	cmp	r2, r3
 8001fc2:	d21e      	bcs.n	8002002 <main+0x976>
			last_step_time = HAL_GetTick(); // Update last step time
 8001fc4:	f001 fd02 	bl	80039cc <HAL_GetTick>
 8001fc8:	4603      	mov	r3, r0
 8001fca:	4a40      	ldr	r2, [pc, #256]	@ (80020cc <main+0xa40>)
 8001fcc:	6013      	str	r3, [r2, #0]

			if (step_state == 0) {
 8001fce:	4b41      	ldr	r3, [pc, #260]	@ (80020d4 <main+0xa48>)
 8001fd0:	681b      	ldr	r3, [r3, #0]
 8001fd2:	2b00      	cmp	r3, #0
 8001fd4:	d10d      	bne.n	8001ff2 <main+0x966>
				HAL_GPIO_WritePin(GPIOC, GPIO_PIN_5, GPIO_PIN_SET); // Step HIGH
 8001fd6:	2201      	movs	r2, #1
 8001fd8:	2120      	movs	r1, #32
 8001fda:	482b      	ldr	r0, [pc, #172]	@ (8002088 <main+0x9fc>)
 8001fdc:	f002 fbce 	bl	800477c <HAL_GPIO_WritePin>
				step_state = 1;
 8001fe0:	4b3c      	ldr	r3, [pc, #240]	@ (80020d4 <main+0xa48>)
 8001fe2:	2201      	movs	r2, #1
 8001fe4:	601a      	str	r2, [r3, #0]
				current_steps++;
 8001fe6:	4b37      	ldr	r3, [pc, #220]	@ (80020c4 <main+0xa38>)
 8001fe8:	681b      	ldr	r3, [r3, #0]
 8001fea:	3301      	adds	r3, #1
 8001fec:	4a35      	ldr	r2, [pc, #212]	@ (80020c4 <main+0xa38>)
 8001fee:	6013      	str	r3, [r2, #0]
 8001ff0:	e007      	b.n	8002002 <main+0x976>
			} else {
				HAL_GPIO_WritePin(GPIOC, GPIO_PIN_5, GPIO_PIN_RESET); // Step LOW
 8001ff2:	2200      	movs	r2, #0
 8001ff4:	2120      	movs	r1, #32
 8001ff6:	4824      	ldr	r0, [pc, #144]	@ (8002088 <main+0x9fc>)
 8001ff8:	f002 fbc0 	bl	800477c <HAL_GPIO_WritePin>
				step_state = 0;
 8001ffc:	4b35      	ldr	r3, [pc, #212]	@ (80020d4 <main+0xa48>)
 8001ffe:	2200      	movs	r2, #0
 8002000:	601a      	str	r2, [r3, #0]
			}
		}
		if (stepper_running1 && (HAL_GetTick() - last_step_time1) >= step_delay1
 8002002:	4b29      	ldr	r3, [pc, #164]	@ (80020a8 <main+0xa1c>)
 8002004:	681b      	ldr	r3, [r3, #0]
 8002006:	2b00      	cmp	r3, #0
 8002008:	d077      	beq.n	80020fa <main+0xa6e>
 800200a:	f001 fcdf 	bl	80039cc <HAL_GetTick>
 800200e:	4602      	mov	r2, r0
 8002010:	4b31      	ldr	r3, [pc, #196]	@ (80020d8 <main+0xa4c>)
 8002012:	681b      	ldr	r3, [r3, #0]
 8002014:	1ad3      	subs	r3, r2, r3
 8002016:	4a31      	ldr	r2, [pc, #196]	@ (80020dc <main+0xa50>)
 8002018:	6812      	ldr	r2, [r2, #0]
 800201a:	4293      	cmp	r3, r2
 800201c:	d36d      	bcc.n	80020fa <main+0xa6e>
				&& current_steps1 < target_steps1) {
 800201e:	4b2a      	ldr	r3, [pc, #168]	@ (80020c8 <main+0xa3c>)
 8002020:	681a      	ldr	r2, [r3, #0]
 8002022:	4b23      	ldr	r3, [pc, #140]	@ (80020b0 <main+0xa24>)
 8002024:	681b      	ldr	r3, [r3, #0]
 8002026:	429a      	cmp	r2, r3
 8002028:	d267      	bcs.n	80020fa <main+0xa6e>
			last_step_time1 = HAL_GetTick(); // Update last step time
 800202a:	f001 fccf 	bl	80039cc <HAL_GetTick>
 800202e:	4603      	mov	r3, r0
 8002030:	4a29      	ldr	r2, [pc, #164]	@ (80020d8 <main+0xa4c>)
 8002032:	6013      	str	r3, [r2, #0]

			if (step_state1 == 0) {
 8002034:	4b2a      	ldr	r3, [pc, #168]	@ (80020e0 <main+0xa54>)
 8002036:	681b      	ldr	r3, [r3, #0]
 8002038:	2b00      	cmp	r3, #0
 800203a:	d155      	bne.n	80020e8 <main+0xa5c>
				HAL_GPIO_WritePin(GPIOB, GPIO_PIN_15, GPIO_PIN_SET); // Step HIGH
 800203c:	2201      	movs	r2, #1
 800203e:	f44f 4100 	mov.w	r1, #32768	@ 0x8000
 8002042:	4828      	ldr	r0, [pc, #160]	@ (80020e4 <main+0xa58>)
 8002044:	f002 fb9a 	bl	800477c <HAL_GPIO_WritePin>
				step_state1 = 1;
 8002048:	4b25      	ldr	r3, [pc, #148]	@ (80020e0 <main+0xa54>)
 800204a:	2201      	movs	r2, #1
 800204c:	601a      	str	r2, [r3, #0]
				current_steps1++;
 800204e:	4b1e      	ldr	r3, [pc, #120]	@ (80020c8 <main+0xa3c>)
 8002050:	681b      	ldr	r3, [r3, #0]
 8002052:	3301      	adds	r3, #1
 8002054:	4a1c      	ldr	r2, [pc, #112]	@ (80020c8 <main+0xa3c>)
 8002056:	6013      	str	r3, [r2, #0]
 8002058:	e04f      	b.n	80020fa <main+0xa6e>
 800205a:	bf00      	nop
 800205c:	200006a0 	.word	0x200006a0
 8002060:	20000018 	.word	0x20000018
 8002064:	200006a4 	.word	0x200006a4
 8002068:	2000001c 	.word	0x2000001c
 800206c:	20000020 	.word	0x20000020
 8002070:	40001800 	.word	0x40001800
 8002074:	40014400 	.word	0x40014400
 8002078:	40014800 	.word	0x40014800
 800207c:	20000468 	.word	0x20000468
 8002080:	200003d8 	.word	0x200003d8
 8002084:	20000420 	.word	0x20000420
 8002088:	40020800 	.word	0x40020800
 800208c:	20000678 	.word	0x20000678
 8002090:	2000067c 	.word	0x2000067c
 8002094:	20000680 	.word	0x20000680
 8002098:	20000000 	.word	0x20000000
 800209c:	200006c8 	.word	0x200006c8
 80020a0:	20000658 	.word	0x20000658
 80020a4:	20000640 	.word	0x20000640
 80020a8:	20000644 	.word	0x20000644
 80020ac:	20000668 	.word	0x20000668
 80020b0:	20000670 	.word	0x20000670
 80020b4:	200006cc 	.word	0x200006cc
 80020b8:	2000065c 	.word	0x2000065c
 80020bc:	200006b4 	.word	0x200006b4
 80020c0:	2000064c 	.word	0x2000064c
 80020c4:	2000066c 	.word	0x2000066c
 80020c8:	20000674 	.word	0x20000674
 80020cc:	20000630 	.word	0x20000630
 80020d0:	20000004 	.word	0x20000004
 80020d4:	20000638 	.word	0x20000638
 80020d8:	20000634 	.word	0x20000634
 80020dc:	20000008 	.word	0x20000008
 80020e0:	2000063c 	.word	0x2000063c
 80020e4:	40020400 	.word	0x40020400
			} else {
				HAL_GPIO_WritePin(GPIOB, GPIO_PIN_15, GPIO_PIN_RESET); // Step LOW
 80020e8:	2200      	movs	r2, #0
 80020ea:	f44f 4100 	mov.w	r1, #32768	@ 0x8000
 80020ee:	485f      	ldr	r0, [pc, #380]	@ (800226c <main+0xbe0>)
 80020f0:	f002 fb44 	bl	800477c <HAL_GPIO_WritePin>
				step_state1 = 0;
 80020f4:	4b5e      	ldr	r3, [pc, #376]	@ (8002270 <main+0xbe4>)
 80020f6:	2200      	movs	r2, #0
 80020f8:	601a      	str	r2, [r3, #0]
			}
		}
		// Stop when target steps are reached
		if (current_steps >= target_steps) {
 80020fa:	4b5e      	ldr	r3, [pc, #376]	@ (8002274 <main+0xbe8>)
 80020fc:	681a      	ldr	r2, [r3, #0]
 80020fe:	4b5e      	ldr	r3, [pc, #376]	@ (8002278 <main+0xbec>)
 8002100:	681b      	ldr	r3, [r3, #0]
 8002102:	429a      	cmp	r2, r3
 8002104:	d30a      	bcc.n	800211c <main+0xa90>
			stepper_running = 0;
 8002106:	4b5d      	ldr	r3, [pc, #372]	@ (800227c <main+0xbf0>)
 8002108:	2200      	movs	r2, #0
 800210a:	601a      	str	r2, [r3, #0]
			current_steps = 0;
 800210c:	4b59      	ldr	r3, [pc, #356]	@ (8002274 <main+0xbe8>)
 800210e:	2200      	movs	r2, #0
 8002110:	601a      	str	r2, [r3, #0]
			HAL_GPIO_WritePin(GPIOC, GPIO_PIN_7, GPIO_PIN_SET);
 8002112:	2201      	movs	r2, #1
 8002114:	2180      	movs	r1, #128	@ 0x80
 8002116:	485a      	ldr	r0, [pc, #360]	@ (8002280 <main+0xbf4>)
 8002118:	f002 fb30 	bl	800477c <HAL_GPIO_WritePin>
		}
		if (current_steps1 >= target_steps1) {
 800211c:	4b59      	ldr	r3, [pc, #356]	@ (8002284 <main+0xbf8>)
 800211e:	681a      	ldr	r2, [r3, #0]
 8002120:	4b59      	ldr	r3, [pc, #356]	@ (8002288 <main+0xbfc>)
 8002122:	681b      	ldr	r3, [r3, #0]
 8002124:	429a      	cmp	r2, r3
 8002126:	d30a      	bcc.n	800213e <main+0xab2>
			stepper_running1 = 0;
 8002128:	4b58      	ldr	r3, [pc, #352]	@ (800228c <main+0xc00>)
 800212a:	2200      	movs	r2, #0
 800212c:	601a      	str	r2, [r3, #0]
			current_steps1 = 0;
 800212e:	4b55      	ldr	r3, [pc, #340]	@ (8002284 <main+0xbf8>)
 8002130:	2200      	movs	r2, #0
 8002132:	601a      	str	r2, [r3, #0]
			HAL_GPIO_WritePin(GPIOC, GPIO_PIN_7, GPIO_PIN_SET);
 8002134:	2201      	movs	r2, #1
 8002136:	2180      	movs	r1, #128	@ 0x80
 8002138:	4851      	ldr	r0, [pc, #324]	@ (8002280 <main+0xbf4>)
 800213a:	f002 fb1f 	bl	800477c <HAL_GPIO_WritePin>
		}

		/* IMU */

		/* Dribbling */
		if (tri == 1 && !prev_tri) {
 800213e:	4b54      	ldr	r3, [pc, #336]	@ (8002290 <main+0xc04>)
 8002140:	681b      	ldr	r3, [r3, #0]
 8002142:	2b01      	cmp	r3, #1
 8002144:	d106      	bne.n	8002154 <main+0xac8>
 8002146:	4b53      	ldr	r3, [pc, #332]	@ (8002294 <main+0xc08>)
 8002148:	681b      	ldr	r3, [r3, #0]
 800214a:	2b00      	cmp	r3, #0
 800214c:	d102      	bne.n	8002154 <main+0xac8>
			ebike_running = 1;
 800214e:	4b52      	ldr	r3, [pc, #328]	@ (8002298 <main+0xc0c>)
 8002150:	2201      	movs	r2, #1
 8002152:	601a      	str	r2, [r3, #0]
		}
		if (cro == 1 && !prev_cro) {  // cro button pressed
 8002154:	4b51      	ldr	r3, [pc, #324]	@ (800229c <main+0xc10>)
 8002156:	681b      	ldr	r3, [r3, #0]
 8002158:	2b01      	cmp	r3, #1
 800215a:	d109      	bne.n	8002170 <main+0xae4>
 800215c:	4b50      	ldr	r3, [pc, #320]	@ (80022a0 <main+0xc14>)
 800215e:	681b      	ldr	r3, [r3, #0]
 8002160:	2b00      	cmp	r3, #0
 8002162:	d105      	bne.n	8002170 <main+0xae4>
			printf("cross pressed");
 8002164:	484f      	ldr	r0, [pc, #316]	@ (80022a4 <main+0xc18>)
 8002166:	f007 fbe1 	bl	800992c <iprintf>
//			direction1 = 0;  // Set to Clockwise
			ebike_running = 0;
 800216a:	4b4b      	ldr	r3, [pc, #300]	@ (8002298 <main+0xc0c>)
 800216c:	2200      	movs	r2, #0
 800216e:	601a      	str	r2, [r3, #0]
		}
		if (ll2 == 1 && !prev_ll2) {
 8002170:	4b4d      	ldr	r3, [pc, #308]	@ (80022a8 <main+0xc1c>)
 8002172:	681b      	ldr	r3, [r3, #0]
 8002174:	2b01      	cmp	r3, #1
 8002176:	d108      	bne.n	800218a <main+0xafe>
 8002178:	4b4c      	ldr	r3, [pc, #304]	@ (80022ac <main+0xc20>)
 800217a:	681b      	ldr	r3, [r3, #0]
 800217c:	2b00      	cmp	r3, #0
 800217e:	d104      	bne.n	800218a <main+0xafe>
			drib_speed = drib_speed + 2; //62 speed for passing 50 for dribbling
 8002180:	4b4b      	ldr	r3, [pc, #300]	@ (80022b0 <main+0xc24>)
 8002182:	681b      	ldr	r3, [r3, #0]
 8002184:	3302      	adds	r3, #2
 8002186:	4a4a      	ldr	r2, [pc, #296]	@ (80022b0 <main+0xc24>)
 8002188:	6013      	str	r3, [r2, #0]
		}
		prev_ll2 = ll2;
 800218a:	4b47      	ldr	r3, [pc, #284]	@ (80022a8 <main+0xc1c>)
 800218c:	681b      	ldr	r3, [r3, #0]
 800218e:	4a47      	ldr	r2, [pc, #284]	@ (80022ac <main+0xc20>)
 8002190:	6013      	str	r3, [r2, #0]
		if (rr2 == 1 && !prev_rr2) {
 8002192:	4b48      	ldr	r3, [pc, #288]	@ (80022b4 <main+0xc28>)
 8002194:	681b      	ldr	r3, [r3, #0]
 8002196:	2b01      	cmp	r3, #1
 8002198:	d108      	bne.n	80021ac <main+0xb20>
 800219a:	4b47      	ldr	r3, [pc, #284]	@ (80022b8 <main+0xc2c>)
 800219c:	681b      	ldr	r3, [r3, #0]
 800219e:	2b00      	cmp	r3, #0
 80021a0:	d104      	bne.n	80021ac <main+0xb20>
			drib_speed = drib_speed - 2;
 80021a2:	4b43      	ldr	r3, [pc, #268]	@ (80022b0 <main+0xc24>)
 80021a4:	681b      	ldr	r3, [r3, #0]
 80021a6:	3b02      	subs	r3, #2
 80021a8:	4a41      	ldr	r2, [pc, #260]	@ (80022b0 <main+0xc24>)
 80021aa:	6013      	str	r3, [r2, #0]
		}
		prev_rr2 = rr2;
 80021ac:	4b41      	ldr	r3, [pc, #260]	@ (80022b4 <main+0xc28>)
 80021ae:	681b      	ldr	r3, [r3, #0]
 80021b0:	4a41      	ldr	r2, [pc, #260]	@ (80022b8 <main+0xc2c>)
 80021b2:	6013      	str	r3, [r2, #0]
		prev_tri = tri;
 80021b4:	4b36      	ldr	r3, [pc, #216]	@ (8002290 <main+0xc04>)
 80021b6:	681b      	ldr	r3, [r3, #0]
 80021b8:	4a36      	ldr	r2, [pc, #216]	@ (8002294 <main+0xc08>)
 80021ba:	6013      	str	r3, [r2, #0]
		prev_cro = cro;
 80021bc:	4b37      	ldr	r3, [pc, #220]	@ (800229c <main+0xc10>)
 80021be:	681b      	ldr	r3, [r3, #0]
 80021c0:	4a37      	ldr	r2, [pc, #220]	@ (80022a0 <main+0xc14>)
 80021c2:	6013      	str	r3, [r2, #0]
		if (ebike_running) {
 80021c4:	4b34      	ldr	r3, [pc, #208]	@ (8002298 <main+0xc0c>)
 80021c6:	681b      	ldr	r3, [r3, #0]
 80021c8:	2b00      	cmp	r3, #0
 80021ca:	d016      	beq.n	80021fa <main+0xb6e>
			HAL_GPIO_WritePin(GPIOC, GPIO_PIN_15, 1);
 80021cc:	2201      	movs	r2, #1
 80021ce:	f44f 4100 	mov.w	r1, #32768	@ 0x8000
 80021d2:	482b      	ldr	r0, [pc, #172]	@ (8002280 <main+0xbf4>)
 80021d4:	f002 fad2 	bl	800477c <HAL_GPIO_WritePin>
			TIM13->CCR1 = (drib_speed * 999) / 100;  //rpm 2000 test
 80021d8:	4b35      	ldr	r3, [pc, #212]	@ (80022b0 <main+0xc24>)
 80021da:	681b      	ldr	r3, [r3, #0]
 80021dc:	f240 32e7 	movw	r2, #999	@ 0x3e7
 80021e0:	fb02 f303 	mul.w	r3, r2, r3
 80021e4:	4a35      	ldr	r2, [pc, #212]	@ (80022bc <main+0xc30>)
 80021e6:	4936      	ldr	r1, [pc, #216]	@ (80022c0 <main+0xc34>)
 80021e8:	fba1 1303 	umull	r1, r3, r1, r3
 80021ec:	095b      	lsrs	r3, r3, #5
 80021ee:	6353      	str	r3, [r2, #52]	@ 0x34
			HAL_TIM_PWM_Start(&htim13, TIM_CHANNEL_1);
 80021f0:	2100      	movs	r1, #0
 80021f2:	4834      	ldr	r0, [pc, #208]	@ (80022c4 <main+0xc38>)
 80021f4:	f004 fa20 	bl	8006638 <HAL_TIM_PWM_Start>
 80021f8:	e006      	b.n	8002208 <main+0xb7c>
		} else {
			//			HAL_GPIO_WritePin(GPIOC, GPIO_PIN_15, 1);
			TIM13->CCR1 = (0 * 999) / 100;
 80021fa:	4b30      	ldr	r3, [pc, #192]	@ (80022bc <main+0xc30>)
 80021fc:	2200      	movs	r2, #0
 80021fe:	635a      	str	r2, [r3, #52]	@ 0x34
			HAL_TIM_PWM_Start(&htim13, TIM_CHANNEL_1);
 8002200:	2100      	movs	r1, #0
 8002202:	4830      	ldr	r0, [pc, #192]	@ (80022c4 <main+0xc38>)
 8002204:	f004 fa18 	bl	8006638 <HAL_TIM_PWM_Start>
		}

		// pneumatics
		if (squ == 1) {
 8002208:	4b2f      	ldr	r3, [pc, #188]	@ (80022c8 <main+0xc3c>)
 800220a:	681b      	ldr	r3, [r3, #0]
 800220c:	2b01      	cmp	r3, #1
 800220e:	d103      	bne.n	8002218 <main+0xb8c>
			pneumatic_open = 1;
 8002210:	4b2e      	ldr	r3, [pc, #184]	@ (80022cc <main+0xc40>)
 8002212:	2201      	movs	r2, #1
 8002214:	601a      	str	r2, [r3, #0]
 8002216:	e002      	b.n	800221e <main+0xb92>
		} else {
			pneumatic_open = 0;
 8002218:	4b2c      	ldr	r3, [pc, #176]	@ (80022cc <main+0xc40>)
 800221a:	2200      	movs	r2, #0
 800221c:	601a      	str	r2, [r3, #0]
		}
//		prev_squ = squ;
		if (pneumatic_open) {
 800221e:	4b2b      	ldr	r3, [pc, #172]	@ (80022cc <main+0xc40>)
 8002220:	681b      	ldr	r3, [r3, #0]
 8002222:	2b00      	cmp	r3, #0
 8002224:	d006      	beq.n	8002234 <main+0xba8>
			HAL_GPIO_WritePin(GPIOA, GPIO_PIN_12, 1);
 8002226:	2201      	movs	r2, #1
 8002228:	f44f 5180 	mov.w	r1, #4096	@ 0x1000
 800222c:	4828      	ldr	r0, [pc, #160]	@ (80022d0 <main+0xc44>)
 800222e:	f002 faa5 	bl	800477c <HAL_GPIO_WritePin>
 8002232:	e005      	b.n	8002240 <main+0xbb4>
		} else {
			HAL_GPIO_WritePin(GPIOA, GPIO_PIN_12, 0);
 8002234:	2200      	movs	r2, #0
 8002236:	f44f 5180 	mov.w	r1, #4096	@ 0x1000
 800223a:	4825      	ldr	r0, [pc, #148]	@ (80022d0 <main+0xc44>)
 800223c:	f002 fa9e 	bl	800477c <HAL_GPIO_WritePin>
		}

		// servo motor
		if (left == 1)
 8002240:	4b24      	ldr	r3, [pc, #144]	@ (80022d4 <main+0xc48>)
 8002242:	681b      	ldr	r3, [r3, #0]
 8002244:	2b01      	cmp	r3, #1
 8002246:	d105      	bne.n	8002254 <main+0xbc8>

		{

			htim3.Instance->CCR3 = 50; // duty cycle is 1 ms (0 degrees)
 8002248:	4b23      	ldr	r3, [pc, #140]	@ (80022d8 <main+0xc4c>)
 800224a:	681b      	ldr	r3, [r3, #0]
 800224c:	2232      	movs	r2, #50	@ 0x32
 800224e:	63da      	str	r2, [r3, #60]	@ 0x3c
 8002250:	f7ff ba5d 	b.w	800170e <main+0x82>

		} else if (right == 1) {
 8002254:	4b21      	ldr	r3, [pc, #132]	@ (80022dc <main+0xc50>)
 8002256:	681b      	ldr	r3, [r3, #0]
 8002258:	2b01      	cmp	r3, #1
 800225a:	f47f aa58 	bne.w	800170e <main+0x82>

			htim3.Instance->CCR3 = 125; // duty cycle is 2 ms (180 degrees)
 800225e:	4b1e      	ldr	r3, [pc, #120]	@ (80022d8 <main+0xc4c>)
 8002260:	681b      	ldr	r3, [r3, #0]
 8002262:	227d      	movs	r2, #125	@ 0x7d
 8002264:	63da      	str	r2, [r3, #60]	@ 0x3c
	while (1) {
 8002266:	f7ff ba52 	b.w	800170e <main+0x82>
 800226a:	bf00      	nop
 800226c:	40020400 	.word	0x40020400
 8002270:	2000063c 	.word	0x2000063c
 8002274:	2000066c 	.word	0x2000066c
 8002278:	20000668 	.word	0x20000668
 800227c:	20000640 	.word	0x20000640
 8002280:	40020800 	.word	0x40020800
 8002284:	20000674 	.word	0x20000674
 8002288:	20000670 	.word	0x20000670
 800228c:	20000644 	.word	0x20000644
 8002290:	200006b0 	.word	0x200006b0
 8002294:	20000650 	.word	0x20000650
 8002298:	20000648 	.word	0x20000648
 800229c:	200006a8 	.word	0x200006a8
 80022a0:	20000654 	.word	0x20000654
 80022a4:	0800d520 	.word	0x0800d520
 80022a8:	200006d0 	.word	0x200006d0
 80022ac:	20000660 	.word	0x20000660
 80022b0:	2000000c 	.word	0x2000000c
 80022b4:	200006d4 	.word	0x200006d4
 80022b8:	20000664 	.word	0x20000664
 80022bc:	40001c00 	.word	0x40001c00
 80022c0:	51eb851f 	.word	0x51eb851f
 80022c4:	200004b0 	.word	0x200004b0
 80022c8:	200006ac 	.word	0x200006ac
 80022cc:	20000684 	.word	0x20000684
 80022d0:	40020000 	.word	0x40020000
 80022d4:	200006c0 	.word	0x200006c0
 80022d8:	20000300 	.word	0x20000300
 80022dc:	200006c4 	.word	0x200006c4

080022e0 <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 80022e0:	b580      	push	{r7, lr}
 80022e2:	b094      	sub	sp, #80	@ 0x50
 80022e4:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 80022e6:	f107 031c 	add.w	r3, r7, #28
 80022ea:	2234      	movs	r2, #52	@ 0x34
 80022ec:	2100      	movs	r1, #0
 80022ee:	4618      	mov	r0, r3
 80022f0:	f007 fc84 	bl	8009bfc <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 80022f4:	f107 0308 	add.w	r3, r7, #8
 80022f8:	2200      	movs	r2, #0
 80022fa:	601a      	str	r2, [r3, #0]
 80022fc:	605a      	str	r2, [r3, #4]
 80022fe:	609a      	str	r2, [r3, #8]
 8002300:	60da      	str	r2, [r3, #12]
 8002302:	611a      	str	r2, [r3, #16]

  /** Configure the main internal regulator output voltage
  */
  __HAL_RCC_PWR_CLK_ENABLE();
 8002304:	2300      	movs	r3, #0
 8002306:	607b      	str	r3, [r7, #4]
 8002308:	4b2c      	ldr	r3, [pc, #176]	@ (80023bc <SystemClock_Config+0xdc>)
 800230a:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800230c:	4a2b      	ldr	r2, [pc, #172]	@ (80023bc <SystemClock_Config+0xdc>)
 800230e:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8002312:	6413      	str	r3, [r2, #64]	@ 0x40
 8002314:	4b29      	ldr	r3, [pc, #164]	@ (80023bc <SystemClock_Config+0xdc>)
 8002316:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002318:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 800231c:	607b      	str	r3, [r7, #4]
 800231e:	687b      	ldr	r3, [r7, #4]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8002320:	2300      	movs	r3, #0
 8002322:	603b      	str	r3, [r7, #0]
 8002324:	4b26      	ldr	r3, [pc, #152]	@ (80023c0 <SystemClock_Config+0xe0>)
 8002326:	681b      	ldr	r3, [r3, #0]
 8002328:	4a25      	ldr	r2, [pc, #148]	@ (80023c0 <SystemClock_Config+0xe0>)
 800232a:	f443 4340 	orr.w	r3, r3, #49152	@ 0xc000
 800232e:	6013      	str	r3, [r2, #0]
 8002330:	4b23      	ldr	r3, [pc, #140]	@ (80023c0 <SystemClock_Config+0xe0>)
 8002332:	681b      	ldr	r3, [r3, #0]
 8002334:	f403 4340 	and.w	r3, r3, #49152	@ 0xc000
 8002338:	603b      	str	r3, [r7, #0]
 800233a:	683b      	ldr	r3, [r7, #0]

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 800233c:	2301      	movs	r3, #1
 800233e:	61fb      	str	r3, [r7, #28]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 8002340:	f44f 3380 	mov.w	r3, #65536	@ 0x10000
 8002344:	623b      	str	r3, [r7, #32]
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 8002346:	2302      	movs	r3, #2
 8002348:	637b      	str	r3, [r7, #52]	@ 0x34
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 800234a:	f44f 0380 	mov.w	r3, #4194304	@ 0x400000
 800234e:	63bb      	str	r3, [r7, #56]	@ 0x38
  RCC_OscInitStruct.PLL.PLLM = 4;
 8002350:	2304      	movs	r3, #4
 8002352:	63fb      	str	r3, [r7, #60]	@ 0x3c
  RCC_OscInitStruct.PLL.PLLN = 180;
 8002354:	23b4      	movs	r3, #180	@ 0xb4
 8002356:	643b      	str	r3, [r7, #64]	@ 0x40
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 8002358:	2302      	movs	r3, #2
 800235a:	647b      	str	r3, [r7, #68]	@ 0x44
  RCC_OscInitStruct.PLL.PLLQ = 2;
 800235c:	2302      	movs	r3, #2
 800235e:	64bb      	str	r3, [r7, #72]	@ 0x48
  RCC_OscInitStruct.PLL.PLLR = 2;
 8002360:	2302      	movs	r3, #2
 8002362:	64fb      	str	r3, [r7, #76]	@ 0x4c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8002364:	f107 031c 	add.w	r3, r7, #28
 8002368:	4618      	mov	r0, r3
 800236a:	f003 fdcf 	bl	8005f0c <HAL_RCC_OscConfig>
 800236e:	4603      	mov	r3, r0
 8002370:	2b00      	cmp	r3, #0
 8002372:	d001      	beq.n	8002378 <SystemClock_Config+0x98>
  {
    Error_Handler();
 8002374:	f000 fd74 	bl	8002e60 <Error_Handler>
  }

  /** Activate the Over-Drive mode
  */
  if (HAL_PWREx_EnableOverDrive() != HAL_OK)
 8002378:	f003 fa2e 	bl	80057d8 <HAL_PWREx_EnableOverDrive>
 800237c:	4603      	mov	r3, r0
 800237e:	2b00      	cmp	r3, #0
 8002380:	d001      	beq.n	8002386 <SystemClock_Config+0xa6>
  {
    Error_Handler();
 8002382:	f000 fd6d 	bl	8002e60 <Error_Handler>
  }

  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8002386:	230f      	movs	r3, #15
 8002388:	60bb      	str	r3, [r7, #8]
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 800238a:	2302      	movs	r3, #2
 800238c:	60fb      	str	r3, [r7, #12]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 800238e:	2300      	movs	r3, #0
 8002390:	613b      	str	r3, [r7, #16]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV8;
 8002392:	f44f 53c0 	mov.w	r3, #6144	@ 0x1800
 8002396:	617b      	str	r3, [r7, #20]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 8002398:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 800239c:	61bb      	str	r3, [r7, #24]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 800239e:	f107 0308 	add.w	r3, r7, #8
 80023a2:	2105      	movs	r1, #5
 80023a4:	4618      	mov	r0, r3
 80023a6:	f003 fa67 	bl	8005878 <HAL_RCC_ClockConfig>
 80023aa:	4603      	mov	r3, r0
 80023ac:	2b00      	cmp	r3, #0
 80023ae:	d001      	beq.n	80023b4 <SystemClock_Config+0xd4>
  {
    Error_Handler();
 80023b0:	f000 fd56 	bl	8002e60 <Error_Handler>
  }
}
 80023b4:	bf00      	nop
 80023b6:	3750      	adds	r7, #80	@ 0x50
 80023b8:	46bd      	mov	sp, r7
 80023ba:	bd80      	pop	{r7, pc}
 80023bc:	40023800 	.word	0x40023800
 80023c0:	40007000 	.word	0x40007000

080023c4 <MX_I2C1_Init>:
  * @brief I2C1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_I2C1_Init(void)
{
 80023c4:	b580      	push	{r7, lr}
 80023c6:	af00      	add	r7, sp, #0
  /* USER CODE END I2C1_Init 0 */

  /* USER CODE BEGIN I2C1_Init 1 */

  /* USER CODE END I2C1_Init 1 */
  hi2c1.Instance = I2C1;
 80023c8:	4b12      	ldr	r3, [pc, #72]	@ (8002414 <MX_I2C1_Init+0x50>)
 80023ca:	4a13      	ldr	r2, [pc, #76]	@ (8002418 <MX_I2C1_Init+0x54>)
 80023cc:	601a      	str	r2, [r3, #0]
  hi2c1.Init.ClockSpeed = 100000;
 80023ce:	4b11      	ldr	r3, [pc, #68]	@ (8002414 <MX_I2C1_Init+0x50>)
 80023d0:	4a12      	ldr	r2, [pc, #72]	@ (800241c <MX_I2C1_Init+0x58>)
 80023d2:	605a      	str	r2, [r3, #4]
  hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
 80023d4:	4b0f      	ldr	r3, [pc, #60]	@ (8002414 <MX_I2C1_Init+0x50>)
 80023d6:	2200      	movs	r2, #0
 80023d8:	609a      	str	r2, [r3, #8]
  hi2c1.Init.OwnAddress1 = 0;
 80023da:	4b0e      	ldr	r3, [pc, #56]	@ (8002414 <MX_I2C1_Init+0x50>)
 80023dc:	2200      	movs	r2, #0
 80023de:	60da      	str	r2, [r3, #12]
  hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 80023e0:	4b0c      	ldr	r3, [pc, #48]	@ (8002414 <MX_I2C1_Init+0x50>)
 80023e2:	f44f 4280 	mov.w	r2, #16384	@ 0x4000
 80023e6:	611a      	str	r2, [r3, #16]
  hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 80023e8:	4b0a      	ldr	r3, [pc, #40]	@ (8002414 <MX_I2C1_Init+0x50>)
 80023ea:	2200      	movs	r2, #0
 80023ec:	615a      	str	r2, [r3, #20]
  hi2c1.Init.OwnAddress2 = 0;
 80023ee:	4b09      	ldr	r3, [pc, #36]	@ (8002414 <MX_I2C1_Init+0x50>)
 80023f0:	2200      	movs	r2, #0
 80023f2:	619a      	str	r2, [r3, #24]
  hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 80023f4:	4b07      	ldr	r3, [pc, #28]	@ (8002414 <MX_I2C1_Init+0x50>)
 80023f6:	2200      	movs	r2, #0
 80023f8:	61da      	str	r2, [r3, #28]
  hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 80023fa:	4b06      	ldr	r3, [pc, #24]	@ (8002414 <MX_I2C1_Init+0x50>)
 80023fc:	2200      	movs	r2, #0
 80023fe:	621a      	str	r2, [r3, #32]
  if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 8002400:	4804      	ldr	r0, [pc, #16]	@ (8002414 <MX_I2C1_Init+0x50>)
 8002402:	f002 f9d5 	bl	80047b0 <HAL_I2C_Init>
 8002406:	4603      	mov	r3, r0
 8002408:	2b00      	cmp	r3, #0
 800240a:	d001      	beq.n	8002410 <MX_I2C1_Init+0x4c>
  {
    Error_Handler();
 800240c:	f000 fd28 	bl	8002e60 <Error_Handler>
  }
  /* USER CODE BEGIN I2C1_Init 2 */

  /* USER CODE END I2C1_Init 2 */

}
 8002410:	bf00      	nop
 8002412:	bd80      	pop	{r7, pc}
 8002414:	2000021c 	.word	0x2000021c
 8002418:	40005400 	.word	0x40005400
 800241c:	000186a0 	.word	0x000186a0

08002420 <MX_TIM1_Init>:
  * @brief TIM1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM1_Init(void)
{
 8002420:	b580      	push	{r7, lr}
 8002422:	b09a      	sub	sp, #104	@ 0x68
 8002424:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM1_Init 0 */

  /* USER CODE END TIM1_Init 0 */

  TIM_Encoder_InitTypeDef sConfig = {0};
 8002426:	f107 0344 	add.w	r3, r7, #68	@ 0x44
 800242a:	2224      	movs	r2, #36	@ 0x24
 800242c:	2100      	movs	r1, #0
 800242e:	4618      	mov	r0, r3
 8002430:	f007 fbe4 	bl	8009bfc <memset>
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8002434:	f107 033c 	add.w	r3, r7, #60	@ 0x3c
 8002438:	2200      	movs	r2, #0
 800243a:	601a      	str	r2, [r3, #0]
 800243c:	605a      	str	r2, [r3, #4]
  TIM_OC_InitTypeDef sConfigOC = {0};
 800243e:	f107 0320 	add.w	r3, r7, #32
 8002442:	2200      	movs	r2, #0
 8002444:	601a      	str	r2, [r3, #0]
 8002446:	605a      	str	r2, [r3, #4]
 8002448:	609a      	str	r2, [r3, #8]
 800244a:	60da      	str	r2, [r3, #12]
 800244c:	611a      	str	r2, [r3, #16]
 800244e:	615a      	str	r2, [r3, #20]
 8002450:	619a      	str	r2, [r3, #24]
  TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = {0};
 8002452:	463b      	mov	r3, r7
 8002454:	2220      	movs	r2, #32
 8002456:	2100      	movs	r1, #0
 8002458:	4618      	mov	r0, r3
 800245a:	f007 fbcf 	bl	8009bfc <memset>

  /* USER CODE BEGIN TIM1_Init 1 */

  /* USER CODE END TIM1_Init 1 */
  htim1.Instance = TIM1;
 800245e:	4b42      	ldr	r3, [pc, #264]	@ (8002568 <MX_TIM1_Init+0x148>)
 8002460:	4a42      	ldr	r2, [pc, #264]	@ (800256c <MX_TIM1_Init+0x14c>)
 8002462:	601a      	str	r2, [r3, #0]
  htim1.Init.Prescaler = 0;
 8002464:	4b40      	ldr	r3, [pc, #256]	@ (8002568 <MX_TIM1_Init+0x148>)
 8002466:	2200      	movs	r2, #0
 8002468:	605a      	str	r2, [r3, #4]
  htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 800246a:	4b3f      	ldr	r3, [pc, #252]	@ (8002568 <MX_TIM1_Init+0x148>)
 800246c:	2200      	movs	r2, #0
 800246e:	609a      	str	r2, [r3, #8]
  htim1.Init.Period = 65535;
 8002470:	4b3d      	ldr	r3, [pc, #244]	@ (8002568 <MX_TIM1_Init+0x148>)
 8002472:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 8002476:	60da      	str	r2, [r3, #12]
  htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8002478:	4b3b      	ldr	r3, [pc, #236]	@ (8002568 <MX_TIM1_Init+0x148>)
 800247a:	2200      	movs	r2, #0
 800247c:	611a      	str	r2, [r3, #16]
  htim1.Init.RepetitionCounter = 0;
 800247e:	4b3a      	ldr	r3, [pc, #232]	@ (8002568 <MX_TIM1_Init+0x148>)
 8002480:	2200      	movs	r2, #0
 8002482:	615a      	str	r2, [r3, #20]
  htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8002484:	4b38      	ldr	r3, [pc, #224]	@ (8002568 <MX_TIM1_Init+0x148>)
 8002486:	2200      	movs	r2, #0
 8002488:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_PWM_Init(&htim1) != HAL_OK)
 800248a:	4837      	ldr	r0, [pc, #220]	@ (8002568 <MX_TIM1_Init+0x148>)
 800248c:	f004 f884 	bl	8006598 <HAL_TIM_PWM_Init>
 8002490:	4603      	mov	r3, r0
 8002492:	2b00      	cmp	r3, #0
 8002494:	d001      	beq.n	800249a <MX_TIM1_Init+0x7a>
  {
    Error_Handler();
 8002496:	f000 fce3 	bl	8002e60 <Error_Handler>
  }
  sConfig.EncoderMode = TIM_ENCODERMODE_TI1;
 800249a:	2301      	movs	r3, #1
 800249c:	647b      	str	r3, [r7, #68]	@ 0x44
  sConfig.IC1Polarity = TIM_ICPOLARITY_RISING;
 800249e:	2300      	movs	r3, #0
 80024a0:	64bb      	str	r3, [r7, #72]	@ 0x48
  sConfig.IC1Selection = TIM_ICSELECTION_DIRECTTI;
 80024a2:	2301      	movs	r3, #1
 80024a4:	64fb      	str	r3, [r7, #76]	@ 0x4c
  sConfig.IC1Prescaler = TIM_ICPSC_DIV1;
 80024a6:	2300      	movs	r3, #0
 80024a8:	653b      	str	r3, [r7, #80]	@ 0x50
  sConfig.IC1Filter = 0;
 80024aa:	2300      	movs	r3, #0
 80024ac:	657b      	str	r3, [r7, #84]	@ 0x54
  sConfig.IC2Polarity = TIM_ICPOLARITY_RISING;
 80024ae:	2300      	movs	r3, #0
 80024b0:	65bb      	str	r3, [r7, #88]	@ 0x58
  sConfig.IC2Selection = TIM_ICSELECTION_DIRECTTI;
 80024b2:	2301      	movs	r3, #1
 80024b4:	65fb      	str	r3, [r7, #92]	@ 0x5c
  sConfig.IC2Prescaler = TIM_ICPSC_DIV1;
 80024b6:	2300      	movs	r3, #0
 80024b8:	663b      	str	r3, [r7, #96]	@ 0x60
  sConfig.IC2Filter = 0;
 80024ba:	2300      	movs	r3, #0
 80024bc:	667b      	str	r3, [r7, #100]	@ 0x64
  if (HAL_TIM_Encoder_Init(&htim1, &sConfig) != HAL_OK)
 80024be:	f107 0344 	add.w	r3, r7, #68	@ 0x44
 80024c2:	4619      	mov	r1, r3
 80024c4:	4828      	ldr	r0, [pc, #160]	@ (8002568 <MX_TIM1_Init+0x148>)
 80024c6:	f004 f97f 	bl	80067c8 <HAL_TIM_Encoder_Init>
 80024ca:	4603      	mov	r3, r0
 80024cc:	2b00      	cmp	r3, #0
 80024ce:	d001      	beq.n	80024d4 <MX_TIM1_Init+0xb4>
  {
    Error_Handler();
 80024d0:	f000 fcc6 	bl	8002e60 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 80024d4:	2300      	movs	r3, #0
 80024d6:	63fb      	str	r3, [r7, #60]	@ 0x3c
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 80024d8:	2300      	movs	r3, #0
 80024da:	643b      	str	r3, [r7, #64]	@ 0x40
  if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 80024dc:	f107 033c 	add.w	r3, r7, #60	@ 0x3c
 80024e0:	4619      	mov	r1, r3
 80024e2:	4821      	ldr	r0, [pc, #132]	@ (8002568 <MX_TIM1_Init+0x148>)
 80024e4:	f005 f83e 	bl	8007564 <HAL_TIMEx_MasterConfigSynchronization>
 80024e8:	4603      	mov	r3, r0
 80024ea:	2b00      	cmp	r3, #0
 80024ec:	d001      	beq.n	80024f2 <MX_TIM1_Init+0xd2>
  {
    Error_Handler();
 80024ee:	f000 fcb7 	bl	8002e60 <Error_Handler>
  }
  sConfigOC.OCMode = TIM_OCMODE_PWM1;
 80024f2:	2360      	movs	r3, #96	@ 0x60
 80024f4:	623b      	str	r3, [r7, #32]
  sConfigOC.Pulse = 0;
 80024f6:	2300      	movs	r3, #0
 80024f8:	627b      	str	r3, [r7, #36]	@ 0x24
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 80024fa:	2300      	movs	r3, #0
 80024fc:	62bb      	str	r3, [r7, #40]	@ 0x28
  sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
 80024fe:	2300      	movs	r3, #0
 8002500:	62fb      	str	r3, [r7, #44]	@ 0x2c
  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 8002502:	2300      	movs	r3, #0
 8002504:	633b      	str	r3, [r7, #48]	@ 0x30
  sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 8002506:	2300      	movs	r3, #0
 8002508:	637b      	str	r3, [r7, #52]	@ 0x34
  sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 800250a:	2300      	movs	r3, #0
 800250c:	63bb      	str	r3, [r7, #56]	@ 0x38
  if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_3) != HAL_OK)
 800250e:	f107 0320 	add.w	r3, r7, #32
 8002512:	2208      	movs	r2, #8
 8002514:	4619      	mov	r1, r3
 8002516:	4814      	ldr	r0, [pc, #80]	@ (8002568 <MX_TIM1_Init+0x148>)
 8002518:	f004 fb7e 	bl	8006c18 <HAL_TIM_PWM_ConfigChannel>
 800251c:	4603      	mov	r3, r0
 800251e:	2b00      	cmp	r3, #0
 8002520:	d001      	beq.n	8002526 <MX_TIM1_Init+0x106>
  {
    Error_Handler();
 8002522:	f000 fc9d 	bl	8002e60 <Error_Handler>
  }
  sBreakDeadTimeConfig.OffStateRunMode = TIM_OSSR_DISABLE;
 8002526:	2300      	movs	r3, #0
 8002528:	603b      	str	r3, [r7, #0]
  sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 800252a:	2300      	movs	r3, #0
 800252c:	607b      	str	r3, [r7, #4]
  sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 800252e:	2300      	movs	r3, #0
 8002530:	60bb      	str	r3, [r7, #8]
  sBreakDeadTimeConfig.DeadTime = 0;
 8002532:	2300      	movs	r3, #0
 8002534:	60fb      	str	r3, [r7, #12]
  sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 8002536:	2300      	movs	r3, #0
 8002538:	613b      	str	r3, [r7, #16]
  sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 800253a:	f44f 5300 	mov.w	r3, #8192	@ 0x2000
 800253e:	617b      	str	r3, [r7, #20]
  sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 8002540:	2300      	movs	r3, #0
 8002542:	61fb      	str	r3, [r7, #28]
  if (HAL_TIMEx_ConfigBreakDeadTime(&htim1, &sBreakDeadTimeConfig) != HAL_OK)
 8002544:	463b      	mov	r3, r7
 8002546:	4619      	mov	r1, r3
 8002548:	4807      	ldr	r0, [pc, #28]	@ (8002568 <MX_TIM1_Init+0x148>)
 800254a:	f005 f887 	bl	800765c <HAL_TIMEx_ConfigBreakDeadTime>
 800254e:	4603      	mov	r3, r0
 8002550:	2b00      	cmp	r3, #0
 8002552:	d001      	beq.n	8002558 <MX_TIM1_Init+0x138>
  {
    Error_Handler();
 8002554:	f000 fc84 	bl	8002e60 <Error_Handler>
  }
  /* USER CODE BEGIN TIM1_Init 2 */

  /* USER CODE END TIM1_Init 2 */
  HAL_TIM_MspPostInit(&htim1);
 8002558:	4803      	ldr	r0, [pc, #12]	@ (8002568 <MX_TIM1_Init+0x148>)
 800255a:	f000 fea1 	bl	80032a0 <HAL_TIM_MspPostInit>

}
 800255e:	bf00      	nop
 8002560:	3768      	adds	r7, #104	@ 0x68
 8002562:	46bd      	mov	sp, r7
 8002564:	bd80      	pop	{r7, pc}
 8002566:	bf00      	nop
 8002568:	20000270 	.word	0x20000270
 800256c:	40010000 	.word	0x40010000

08002570 <MX_TIM2_Init>:
  * @brief TIM2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM2_Init(void)
{
 8002570:	b580      	push	{r7, lr}
 8002572:	b08c      	sub	sp, #48	@ 0x30
 8002574:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM2_Init 0 */

  /* USER CODE END TIM2_Init 0 */

  TIM_Encoder_InitTypeDef sConfig = {0};
 8002576:	f107 030c 	add.w	r3, r7, #12
 800257a:	2224      	movs	r2, #36	@ 0x24
 800257c:	2100      	movs	r1, #0
 800257e:	4618      	mov	r0, r3
 8002580:	f007 fb3c 	bl	8009bfc <memset>
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8002584:	1d3b      	adds	r3, r7, #4
 8002586:	2200      	movs	r2, #0
 8002588:	601a      	str	r2, [r3, #0]
 800258a:	605a      	str	r2, [r3, #4]

  /* USER CODE BEGIN TIM2_Init 1 */

  /* USER CODE END TIM2_Init 1 */
  htim2.Instance = TIM2;
 800258c:	4b21      	ldr	r3, [pc, #132]	@ (8002614 <MX_TIM2_Init+0xa4>)
 800258e:	f04f 4280 	mov.w	r2, #1073741824	@ 0x40000000
 8002592:	601a      	str	r2, [r3, #0]
  htim2.Init.Prescaler = 0;
 8002594:	4b1f      	ldr	r3, [pc, #124]	@ (8002614 <MX_TIM2_Init+0xa4>)
 8002596:	2200      	movs	r2, #0
 8002598:	605a      	str	r2, [r3, #4]
  htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 800259a:	4b1e      	ldr	r3, [pc, #120]	@ (8002614 <MX_TIM2_Init+0xa4>)
 800259c:	2200      	movs	r2, #0
 800259e:	609a      	str	r2, [r3, #8]
  htim2.Init.Period = 4294967295;
 80025a0:	4b1c      	ldr	r3, [pc, #112]	@ (8002614 <MX_TIM2_Init+0xa4>)
 80025a2:	f04f 32ff 	mov.w	r2, #4294967295
 80025a6:	60da      	str	r2, [r3, #12]
  htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 80025a8:	4b1a      	ldr	r3, [pc, #104]	@ (8002614 <MX_TIM2_Init+0xa4>)
 80025aa:	2200      	movs	r2, #0
 80025ac:	611a      	str	r2, [r3, #16]
  htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 80025ae:	4b19      	ldr	r3, [pc, #100]	@ (8002614 <MX_TIM2_Init+0xa4>)
 80025b0:	2200      	movs	r2, #0
 80025b2:	619a      	str	r2, [r3, #24]
  sConfig.EncoderMode = TIM_ENCODERMODE_TI1;
 80025b4:	2301      	movs	r3, #1
 80025b6:	60fb      	str	r3, [r7, #12]
  sConfig.IC1Polarity = TIM_ICPOLARITY_RISING;
 80025b8:	2300      	movs	r3, #0
 80025ba:	613b      	str	r3, [r7, #16]
  sConfig.IC1Selection = TIM_ICSELECTION_DIRECTTI;
 80025bc:	2301      	movs	r3, #1
 80025be:	617b      	str	r3, [r7, #20]
  sConfig.IC1Prescaler = TIM_ICPSC_DIV1;
 80025c0:	2300      	movs	r3, #0
 80025c2:	61bb      	str	r3, [r7, #24]
  sConfig.IC1Filter = 0;
 80025c4:	2300      	movs	r3, #0
 80025c6:	61fb      	str	r3, [r7, #28]
  sConfig.IC2Polarity = TIM_ICPOLARITY_RISING;
 80025c8:	2300      	movs	r3, #0
 80025ca:	623b      	str	r3, [r7, #32]
  sConfig.IC2Selection = TIM_ICSELECTION_DIRECTTI;
 80025cc:	2301      	movs	r3, #1
 80025ce:	627b      	str	r3, [r7, #36]	@ 0x24
  sConfig.IC2Prescaler = TIM_ICPSC_DIV1;
 80025d0:	2300      	movs	r3, #0
 80025d2:	62bb      	str	r3, [r7, #40]	@ 0x28
  sConfig.IC2Filter = 0;
 80025d4:	2300      	movs	r3, #0
 80025d6:	62fb      	str	r3, [r7, #44]	@ 0x2c
  if (HAL_TIM_Encoder_Init(&htim2, &sConfig) != HAL_OK)
 80025d8:	f107 030c 	add.w	r3, r7, #12
 80025dc:	4619      	mov	r1, r3
 80025de:	480d      	ldr	r0, [pc, #52]	@ (8002614 <MX_TIM2_Init+0xa4>)
 80025e0:	f004 f8f2 	bl	80067c8 <HAL_TIM_Encoder_Init>
 80025e4:	4603      	mov	r3, r0
 80025e6:	2b00      	cmp	r3, #0
 80025e8:	d001      	beq.n	80025ee <MX_TIM2_Init+0x7e>
  {
    Error_Handler();
 80025ea:	f000 fc39 	bl	8002e60 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 80025ee:	2300      	movs	r3, #0
 80025f0:	607b      	str	r3, [r7, #4]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 80025f2:	2300      	movs	r3, #0
 80025f4:	60bb      	str	r3, [r7, #8]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 80025f6:	1d3b      	adds	r3, r7, #4
 80025f8:	4619      	mov	r1, r3
 80025fa:	4806      	ldr	r0, [pc, #24]	@ (8002614 <MX_TIM2_Init+0xa4>)
 80025fc:	f004 ffb2 	bl	8007564 <HAL_TIMEx_MasterConfigSynchronization>
 8002600:	4603      	mov	r3, r0
 8002602:	2b00      	cmp	r3, #0
 8002604:	d001      	beq.n	800260a <MX_TIM2_Init+0x9a>
  {
    Error_Handler();
 8002606:	f000 fc2b 	bl	8002e60 <Error_Handler>
  }
  /* USER CODE BEGIN TIM2_Init 2 */

  /* USER CODE END TIM2_Init 2 */

}
 800260a:	bf00      	nop
 800260c:	3730      	adds	r7, #48	@ 0x30
 800260e:	46bd      	mov	sp, r7
 8002610:	bd80      	pop	{r7, pc}
 8002612:	bf00      	nop
 8002614:	200002b8 	.word	0x200002b8

08002618 <MX_TIM3_Init>:
  * @brief TIM3 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM3_Init(void)
{
 8002618:	b580      	push	{r7, lr}
 800261a:	b092      	sub	sp, #72	@ 0x48
 800261c:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM3_Init 0 */

  /* USER CODE END TIM3_Init 0 */

  TIM_Encoder_InitTypeDef sConfig = {0};
 800261e:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 8002622:	2224      	movs	r2, #36	@ 0x24
 8002624:	2100      	movs	r1, #0
 8002626:	4618      	mov	r0, r3
 8002628:	f007 fae8 	bl	8009bfc <memset>
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 800262c:	f107 031c 	add.w	r3, r7, #28
 8002630:	2200      	movs	r2, #0
 8002632:	601a      	str	r2, [r3, #0]
 8002634:	605a      	str	r2, [r3, #4]
  TIM_OC_InitTypeDef sConfigOC = {0};
 8002636:	463b      	mov	r3, r7
 8002638:	2200      	movs	r2, #0
 800263a:	601a      	str	r2, [r3, #0]
 800263c:	605a      	str	r2, [r3, #4]
 800263e:	609a      	str	r2, [r3, #8]
 8002640:	60da      	str	r2, [r3, #12]
 8002642:	611a      	str	r2, [r3, #16]
 8002644:	615a      	str	r2, [r3, #20]
 8002646:	619a      	str	r2, [r3, #24]

  /* USER CODE BEGIN TIM3_Init 1 */

  /* USER CODE END TIM3_Init 1 */
  htim3.Instance = TIM3;
 8002648:	4b30      	ldr	r3, [pc, #192]	@ (800270c <MX_TIM3_Init+0xf4>)
 800264a:	4a31      	ldr	r2, [pc, #196]	@ (8002710 <MX_TIM3_Init+0xf8>)
 800264c:	601a      	str	r2, [r3, #0]
  htim3.Init.Prescaler = 900-1;
 800264e:	4b2f      	ldr	r3, [pc, #188]	@ (800270c <MX_TIM3_Init+0xf4>)
 8002650:	f240 3283 	movw	r2, #899	@ 0x383
 8002654:	605a      	str	r2, [r3, #4]
  htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 8002656:	4b2d      	ldr	r3, [pc, #180]	@ (800270c <MX_TIM3_Init+0xf4>)
 8002658:	2200      	movs	r2, #0
 800265a:	609a      	str	r2, [r3, #8]
  htim3.Init.Period = 1000-1;
 800265c:	4b2b      	ldr	r3, [pc, #172]	@ (800270c <MX_TIM3_Init+0xf4>)
 800265e:	f240 32e7 	movw	r2, #999	@ 0x3e7
 8002662:	60da      	str	r2, [r3, #12]
  htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8002664:	4b29      	ldr	r3, [pc, #164]	@ (800270c <MX_TIM3_Init+0xf4>)
 8002666:	2200      	movs	r2, #0
 8002668:	611a      	str	r2, [r3, #16]
  htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 800266a:	4b28      	ldr	r3, [pc, #160]	@ (800270c <MX_TIM3_Init+0xf4>)
 800266c:	2200      	movs	r2, #0
 800266e:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_PWM_Init(&htim3) != HAL_OK)
 8002670:	4826      	ldr	r0, [pc, #152]	@ (800270c <MX_TIM3_Init+0xf4>)
 8002672:	f003 ff91 	bl	8006598 <HAL_TIM_PWM_Init>
 8002676:	4603      	mov	r3, r0
 8002678:	2b00      	cmp	r3, #0
 800267a:	d001      	beq.n	8002680 <MX_TIM3_Init+0x68>
  {
    Error_Handler();
 800267c:	f000 fbf0 	bl	8002e60 <Error_Handler>
  }
  sConfig.EncoderMode = TIM_ENCODERMODE_TI1;
 8002680:	2301      	movs	r3, #1
 8002682:	627b      	str	r3, [r7, #36]	@ 0x24
  sConfig.IC1Polarity = TIM_ICPOLARITY_RISING;
 8002684:	2300      	movs	r3, #0
 8002686:	62bb      	str	r3, [r7, #40]	@ 0x28
  sConfig.IC1Selection = TIM_ICSELECTION_DIRECTTI;
 8002688:	2301      	movs	r3, #1
 800268a:	62fb      	str	r3, [r7, #44]	@ 0x2c
  sConfig.IC1Prescaler = TIM_ICPSC_DIV1;
 800268c:	2300      	movs	r3, #0
 800268e:	633b      	str	r3, [r7, #48]	@ 0x30
  sConfig.IC1Filter = 0;
 8002690:	2300      	movs	r3, #0
 8002692:	637b      	str	r3, [r7, #52]	@ 0x34
  sConfig.IC2Polarity = TIM_ICPOLARITY_RISING;
 8002694:	2300      	movs	r3, #0
 8002696:	63bb      	str	r3, [r7, #56]	@ 0x38
  sConfig.IC2Selection = TIM_ICSELECTION_DIRECTTI;
 8002698:	2301      	movs	r3, #1
 800269a:	63fb      	str	r3, [r7, #60]	@ 0x3c
  sConfig.IC2Prescaler = TIM_ICPSC_DIV1;
 800269c:	2300      	movs	r3, #0
 800269e:	643b      	str	r3, [r7, #64]	@ 0x40
  sConfig.IC2Filter = 0;
 80026a0:	2300      	movs	r3, #0
 80026a2:	647b      	str	r3, [r7, #68]	@ 0x44
  if (HAL_TIM_Encoder_Init(&htim3, &sConfig) != HAL_OK)
 80026a4:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 80026a8:	4619      	mov	r1, r3
 80026aa:	4818      	ldr	r0, [pc, #96]	@ (800270c <MX_TIM3_Init+0xf4>)
 80026ac:	f004 f88c 	bl	80067c8 <HAL_TIM_Encoder_Init>
 80026b0:	4603      	mov	r3, r0
 80026b2:	2b00      	cmp	r3, #0
 80026b4:	d001      	beq.n	80026ba <MX_TIM3_Init+0xa2>
  {
    Error_Handler();
 80026b6:	f000 fbd3 	bl	8002e60 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 80026ba:	2300      	movs	r3, #0
 80026bc:	61fb      	str	r3, [r7, #28]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 80026be:	2300      	movs	r3, #0
 80026c0:	623b      	str	r3, [r7, #32]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 80026c2:	f107 031c 	add.w	r3, r7, #28
 80026c6:	4619      	mov	r1, r3
 80026c8:	4810      	ldr	r0, [pc, #64]	@ (800270c <MX_TIM3_Init+0xf4>)
 80026ca:	f004 ff4b 	bl	8007564 <HAL_TIMEx_MasterConfigSynchronization>
 80026ce:	4603      	mov	r3, r0
 80026d0:	2b00      	cmp	r3, #0
 80026d2:	d001      	beq.n	80026d8 <MX_TIM3_Init+0xc0>
  {
    Error_Handler();
 80026d4:	f000 fbc4 	bl	8002e60 <Error_Handler>
  }
  sConfigOC.OCMode = TIM_OCMODE_PWM1;
 80026d8:	2360      	movs	r3, #96	@ 0x60
 80026da:	603b      	str	r3, [r7, #0]
  sConfigOC.Pulse = 0;
 80026dc:	2300      	movs	r3, #0
 80026de:	607b      	str	r3, [r7, #4]
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 80026e0:	2300      	movs	r3, #0
 80026e2:	60bb      	str	r3, [r7, #8]
  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 80026e4:	2300      	movs	r3, #0
 80026e6:	613b      	str	r3, [r7, #16]
  if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_3) != HAL_OK)
 80026e8:	463b      	mov	r3, r7
 80026ea:	2208      	movs	r2, #8
 80026ec:	4619      	mov	r1, r3
 80026ee:	4807      	ldr	r0, [pc, #28]	@ (800270c <MX_TIM3_Init+0xf4>)
 80026f0:	f004 fa92 	bl	8006c18 <HAL_TIM_PWM_ConfigChannel>
 80026f4:	4603      	mov	r3, r0
 80026f6:	2b00      	cmp	r3, #0
 80026f8:	d001      	beq.n	80026fe <MX_TIM3_Init+0xe6>
  {
    Error_Handler();
 80026fa:	f000 fbb1 	bl	8002e60 <Error_Handler>
  }
  /* USER CODE BEGIN TIM3_Init 2 */

  /* USER CODE END TIM3_Init 2 */
  HAL_TIM_MspPostInit(&htim3);
 80026fe:	4803      	ldr	r0, [pc, #12]	@ (800270c <MX_TIM3_Init+0xf4>)
 8002700:	f000 fdce 	bl	80032a0 <HAL_TIM_MspPostInit>

}
 8002704:	bf00      	nop
 8002706:	3748      	adds	r7, #72	@ 0x48
 8002708:	46bd      	mov	sp, r7
 800270a:	bd80      	pop	{r7, pc}
 800270c:	20000300 	.word	0x20000300
 8002710:	40000400 	.word	0x40000400

08002714 <MX_TIM5_Init>:
  * @brief TIM5 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM5_Init(void)
{
 8002714:	b580      	push	{r7, lr}
 8002716:	b08e      	sub	sp, #56	@ 0x38
 8002718:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM5_Init 0 */

  /* USER CODE END TIM5_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 800271a:	f107 0328 	add.w	r3, r7, #40	@ 0x28
 800271e:	2200      	movs	r2, #0
 8002720:	601a      	str	r2, [r3, #0]
 8002722:	605a      	str	r2, [r3, #4]
 8002724:	609a      	str	r2, [r3, #8]
 8002726:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8002728:	f107 0320 	add.w	r3, r7, #32
 800272c:	2200      	movs	r2, #0
 800272e:	601a      	str	r2, [r3, #0]
 8002730:	605a      	str	r2, [r3, #4]
  TIM_OC_InitTypeDef sConfigOC = {0};
 8002732:	1d3b      	adds	r3, r7, #4
 8002734:	2200      	movs	r2, #0
 8002736:	601a      	str	r2, [r3, #0]
 8002738:	605a      	str	r2, [r3, #4]
 800273a:	609a      	str	r2, [r3, #8]
 800273c:	60da      	str	r2, [r3, #12]
 800273e:	611a      	str	r2, [r3, #16]
 8002740:	615a      	str	r2, [r3, #20]
 8002742:	619a      	str	r2, [r3, #24]

  /* USER CODE BEGIN TIM5_Init 1 */

  /* USER CODE END TIM5_Init 1 */
  htim5.Instance = TIM5;
 8002744:	4b32      	ldr	r3, [pc, #200]	@ (8002810 <MX_TIM5_Init+0xfc>)
 8002746:	4a33      	ldr	r2, [pc, #204]	@ (8002814 <MX_TIM5_Init+0x100>)
 8002748:	601a      	str	r2, [r3, #0]
  htim5.Init.Prescaler = 0;
 800274a:	4b31      	ldr	r3, [pc, #196]	@ (8002810 <MX_TIM5_Init+0xfc>)
 800274c:	2200      	movs	r2, #0
 800274e:	605a      	str	r2, [r3, #4]
  htim5.Init.CounterMode = TIM_COUNTERMODE_UP;
 8002750:	4b2f      	ldr	r3, [pc, #188]	@ (8002810 <MX_TIM5_Init+0xfc>)
 8002752:	2200      	movs	r2, #0
 8002754:	609a      	str	r2, [r3, #8]
  htim5.Init.Period = 4294967295;
 8002756:	4b2e      	ldr	r3, [pc, #184]	@ (8002810 <MX_TIM5_Init+0xfc>)
 8002758:	f04f 32ff 	mov.w	r2, #4294967295
 800275c:	60da      	str	r2, [r3, #12]
  htim5.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 800275e:	4b2c      	ldr	r3, [pc, #176]	@ (8002810 <MX_TIM5_Init+0xfc>)
 8002760:	2200      	movs	r2, #0
 8002762:	611a      	str	r2, [r3, #16]
  htim5.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8002764:	4b2a      	ldr	r3, [pc, #168]	@ (8002810 <MX_TIM5_Init+0xfc>)
 8002766:	2200      	movs	r2, #0
 8002768:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim5) != HAL_OK)
 800276a:	4829      	ldr	r0, [pc, #164]	@ (8002810 <MX_TIM5_Init+0xfc>)
 800276c:	f003 fe6c 	bl	8006448 <HAL_TIM_Base_Init>
 8002770:	4603      	mov	r3, r0
 8002772:	2b00      	cmp	r3, #0
 8002774:	d001      	beq.n	800277a <MX_TIM5_Init+0x66>
  {
    Error_Handler();
 8002776:	f000 fb73 	bl	8002e60 <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 800277a:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 800277e:	62bb      	str	r3, [r7, #40]	@ 0x28
  if (HAL_TIM_ConfigClockSource(&htim5, &sClockSourceConfig) != HAL_OK)
 8002780:	f107 0328 	add.w	r3, r7, #40	@ 0x28
 8002784:	4619      	mov	r1, r3
 8002786:	4822      	ldr	r0, [pc, #136]	@ (8002810 <MX_TIM5_Init+0xfc>)
 8002788:	f004 fb08 	bl	8006d9c <HAL_TIM_ConfigClockSource>
 800278c:	4603      	mov	r3, r0
 800278e:	2b00      	cmp	r3, #0
 8002790:	d001      	beq.n	8002796 <MX_TIM5_Init+0x82>
  {
    Error_Handler();
 8002792:	f000 fb65 	bl	8002e60 <Error_Handler>
  }
  if (HAL_TIM_PWM_Init(&htim5) != HAL_OK)
 8002796:	481e      	ldr	r0, [pc, #120]	@ (8002810 <MX_TIM5_Init+0xfc>)
 8002798:	f003 fefe 	bl	8006598 <HAL_TIM_PWM_Init>
 800279c:	4603      	mov	r3, r0
 800279e:	2b00      	cmp	r3, #0
 80027a0:	d001      	beq.n	80027a6 <MX_TIM5_Init+0x92>
  {
    Error_Handler();
 80027a2:	f000 fb5d 	bl	8002e60 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 80027a6:	2300      	movs	r3, #0
 80027a8:	623b      	str	r3, [r7, #32]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 80027aa:	2300      	movs	r3, #0
 80027ac:	627b      	str	r3, [r7, #36]	@ 0x24
  if (HAL_TIMEx_MasterConfigSynchronization(&htim5, &sMasterConfig) != HAL_OK)
 80027ae:	f107 0320 	add.w	r3, r7, #32
 80027b2:	4619      	mov	r1, r3
 80027b4:	4816      	ldr	r0, [pc, #88]	@ (8002810 <MX_TIM5_Init+0xfc>)
 80027b6:	f004 fed5 	bl	8007564 <HAL_TIMEx_MasterConfigSynchronization>
 80027ba:	4603      	mov	r3, r0
 80027bc:	2b00      	cmp	r3, #0
 80027be:	d001      	beq.n	80027c4 <MX_TIM5_Init+0xb0>
  {
    Error_Handler();
 80027c0:	f000 fb4e 	bl	8002e60 <Error_Handler>
  }
  sConfigOC.OCMode = TIM_OCMODE_PWM1;
 80027c4:	2360      	movs	r3, #96	@ 0x60
 80027c6:	607b      	str	r3, [r7, #4]
  sConfigOC.Pulse = 0;
 80027c8:	2300      	movs	r3, #0
 80027ca:	60bb      	str	r3, [r7, #8]
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 80027cc:	2300      	movs	r3, #0
 80027ce:	60fb      	str	r3, [r7, #12]
  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 80027d0:	2300      	movs	r3, #0
 80027d2:	617b      	str	r3, [r7, #20]
  if (HAL_TIM_PWM_ConfigChannel(&htim5, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 80027d4:	1d3b      	adds	r3, r7, #4
 80027d6:	2200      	movs	r2, #0
 80027d8:	4619      	mov	r1, r3
 80027da:	480d      	ldr	r0, [pc, #52]	@ (8002810 <MX_TIM5_Init+0xfc>)
 80027dc:	f004 fa1c 	bl	8006c18 <HAL_TIM_PWM_ConfigChannel>
 80027e0:	4603      	mov	r3, r0
 80027e2:	2b00      	cmp	r3, #0
 80027e4:	d001      	beq.n	80027ea <MX_TIM5_Init+0xd6>
  {
    Error_Handler();
 80027e6:	f000 fb3b 	bl	8002e60 <Error_Handler>
  }
  if (HAL_TIM_PWM_ConfigChannel(&htim5, &sConfigOC, TIM_CHANNEL_2) != HAL_OK)
 80027ea:	1d3b      	adds	r3, r7, #4
 80027ec:	2204      	movs	r2, #4
 80027ee:	4619      	mov	r1, r3
 80027f0:	4807      	ldr	r0, [pc, #28]	@ (8002810 <MX_TIM5_Init+0xfc>)
 80027f2:	f004 fa11 	bl	8006c18 <HAL_TIM_PWM_ConfigChannel>
 80027f6:	4603      	mov	r3, r0
 80027f8:	2b00      	cmp	r3, #0
 80027fa:	d001      	beq.n	8002800 <MX_TIM5_Init+0xec>
  {
    Error_Handler();
 80027fc:	f000 fb30 	bl	8002e60 <Error_Handler>
  }
  /* USER CODE BEGIN TIM5_Init 2 */

  /* USER CODE END TIM5_Init 2 */
  HAL_TIM_MspPostInit(&htim5);
 8002800:	4803      	ldr	r0, [pc, #12]	@ (8002810 <MX_TIM5_Init+0xfc>)
 8002802:	f000 fd4d 	bl	80032a0 <HAL_TIM_MspPostInit>

}
 8002806:	bf00      	nop
 8002808:	3738      	adds	r7, #56	@ 0x38
 800280a:	46bd      	mov	sp, r7
 800280c:	bd80      	pop	{r7, pc}
 800280e:	bf00      	nop
 8002810:	20000348 	.word	0x20000348
 8002814:	40000c00 	.word	0x40000c00

08002818 <MX_TIM8_Init>:
  * @brief TIM8 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM8_Init(void)
{
 8002818:	b580      	push	{r7, lr}
 800281a:	b08c      	sub	sp, #48	@ 0x30
 800281c:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM8_Init 0 */

  /* USER CODE END TIM8_Init 0 */

  TIM_Encoder_InitTypeDef sConfig = {0};
 800281e:	f107 030c 	add.w	r3, r7, #12
 8002822:	2224      	movs	r2, #36	@ 0x24
 8002824:	2100      	movs	r1, #0
 8002826:	4618      	mov	r0, r3
 8002828:	f007 f9e8 	bl	8009bfc <memset>
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 800282c:	1d3b      	adds	r3, r7, #4
 800282e:	2200      	movs	r2, #0
 8002830:	601a      	str	r2, [r3, #0]
 8002832:	605a      	str	r2, [r3, #4]

  /* USER CODE BEGIN TIM8_Init 1 */

  /* USER CODE END TIM8_Init 1 */
  htim8.Instance = TIM8;
 8002834:	4b22      	ldr	r3, [pc, #136]	@ (80028c0 <MX_TIM8_Init+0xa8>)
 8002836:	4a23      	ldr	r2, [pc, #140]	@ (80028c4 <MX_TIM8_Init+0xac>)
 8002838:	601a      	str	r2, [r3, #0]
  htim8.Init.Prescaler = 180-1;
 800283a:	4b21      	ldr	r3, [pc, #132]	@ (80028c0 <MX_TIM8_Init+0xa8>)
 800283c:	22b3      	movs	r2, #179	@ 0xb3
 800283e:	605a      	str	r2, [r3, #4]
  htim8.Init.CounterMode = TIM_COUNTERMODE_UP;
 8002840:	4b1f      	ldr	r3, [pc, #124]	@ (80028c0 <MX_TIM8_Init+0xa8>)
 8002842:	2200      	movs	r2, #0
 8002844:	609a      	str	r2, [r3, #8]
  htim8.Init.Period = 1000-1;
 8002846:	4b1e      	ldr	r3, [pc, #120]	@ (80028c0 <MX_TIM8_Init+0xa8>)
 8002848:	f240 32e7 	movw	r2, #999	@ 0x3e7
 800284c:	60da      	str	r2, [r3, #12]
  htim8.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 800284e:	4b1c      	ldr	r3, [pc, #112]	@ (80028c0 <MX_TIM8_Init+0xa8>)
 8002850:	2200      	movs	r2, #0
 8002852:	611a      	str	r2, [r3, #16]
  htim8.Init.RepetitionCounter = 0;
 8002854:	4b1a      	ldr	r3, [pc, #104]	@ (80028c0 <MX_TIM8_Init+0xa8>)
 8002856:	2200      	movs	r2, #0
 8002858:	615a      	str	r2, [r3, #20]
  htim8.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 800285a:	4b19      	ldr	r3, [pc, #100]	@ (80028c0 <MX_TIM8_Init+0xa8>)
 800285c:	2200      	movs	r2, #0
 800285e:	619a      	str	r2, [r3, #24]
  sConfig.EncoderMode = TIM_ENCODERMODE_TI1;
 8002860:	2301      	movs	r3, #1
 8002862:	60fb      	str	r3, [r7, #12]
  sConfig.IC1Polarity = TIM_ICPOLARITY_RISING;
 8002864:	2300      	movs	r3, #0
 8002866:	613b      	str	r3, [r7, #16]
  sConfig.IC1Selection = TIM_ICSELECTION_DIRECTTI;
 8002868:	2301      	movs	r3, #1
 800286a:	617b      	str	r3, [r7, #20]
  sConfig.IC1Prescaler = TIM_ICPSC_DIV1;
 800286c:	2300      	movs	r3, #0
 800286e:	61bb      	str	r3, [r7, #24]
  sConfig.IC1Filter = 0;
 8002870:	2300      	movs	r3, #0
 8002872:	61fb      	str	r3, [r7, #28]
  sConfig.IC2Polarity = TIM_ICPOLARITY_RISING;
 8002874:	2300      	movs	r3, #0
 8002876:	623b      	str	r3, [r7, #32]
  sConfig.IC2Selection = TIM_ICSELECTION_DIRECTTI;
 8002878:	2301      	movs	r3, #1
 800287a:	627b      	str	r3, [r7, #36]	@ 0x24
  sConfig.IC2Prescaler = TIM_ICPSC_DIV1;
 800287c:	2300      	movs	r3, #0
 800287e:	62bb      	str	r3, [r7, #40]	@ 0x28
  sConfig.IC2Filter = 0;
 8002880:	2300      	movs	r3, #0
 8002882:	62fb      	str	r3, [r7, #44]	@ 0x2c
  if (HAL_TIM_Encoder_Init(&htim8, &sConfig) != HAL_OK)
 8002884:	f107 030c 	add.w	r3, r7, #12
 8002888:	4619      	mov	r1, r3
 800288a:	480d      	ldr	r0, [pc, #52]	@ (80028c0 <MX_TIM8_Init+0xa8>)
 800288c:	f003 ff9c 	bl	80067c8 <HAL_TIM_Encoder_Init>
 8002890:	4603      	mov	r3, r0
 8002892:	2b00      	cmp	r3, #0
 8002894:	d001      	beq.n	800289a <MX_TIM8_Init+0x82>
  {
    Error_Handler();
 8002896:	f000 fae3 	bl	8002e60 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 800289a:	2300      	movs	r3, #0
 800289c:	607b      	str	r3, [r7, #4]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 800289e:	2300      	movs	r3, #0
 80028a0:	60bb      	str	r3, [r7, #8]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim8, &sMasterConfig) != HAL_OK)
 80028a2:	1d3b      	adds	r3, r7, #4
 80028a4:	4619      	mov	r1, r3
 80028a6:	4806      	ldr	r0, [pc, #24]	@ (80028c0 <MX_TIM8_Init+0xa8>)
 80028a8:	f004 fe5c 	bl	8007564 <HAL_TIMEx_MasterConfigSynchronization>
 80028ac:	4603      	mov	r3, r0
 80028ae:	2b00      	cmp	r3, #0
 80028b0:	d001      	beq.n	80028b6 <MX_TIM8_Init+0x9e>
  {
    Error_Handler();
 80028b2:	f000 fad5 	bl	8002e60 <Error_Handler>
  }
  /* USER CODE BEGIN TIM8_Init 2 */

  /* USER CODE END TIM8_Init 2 */

}
 80028b6:	bf00      	nop
 80028b8:	3730      	adds	r7, #48	@ 0x30
 80028ba:	46bd      	mov	sp, r7
 80028bc:	bd80      	pop	{r7, pc}
 80028be:	bf00      	nop
 80028c0:	20000390 	.word	0x20000390
 80028c4:	40010400 	.word	0x40010400

080028c8 <MX_TIM10_Init>:
  * @brief TIM10 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM10_Init(void)
{
 80028c8:	b580      	push	{r7, lr}
 80028ca:	b088      	sub	sp, #32
 80028cc:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM10_Init 0 */

  /* USER CODE END TIM10_Init 0 */

  TIM_OC_InitTypeDef sConfigOC = {0};
 80028ce:	1d3b      	adds	r3, r7, #4
 80028d0:	2200      	movs	r2, #0
 80028d2:	601a      	str	r2, [r3, #0]
 80028d4:	605a      	str	r2, [r3, #4]
 80028d6:	609a      	str	r2, [r3, #8]
 80028d8:	60da      	str	r2, [r3, #12]
 80028da:	611a      	str	r2, [r3, #16]
 80028dc:	615a      	str	r2, [r3, #20]
 80028de:	619a      	str	r2, [r3, #24]

  /* USER CODE BEGIN TIM10_Init 1 */

  /* USER CODE END TIM10_Init 1 */
  htim10.Instance = TIM10;
 80028e0:	4b1e      	ldr	r3, [pc, #120]	@ (800295c <MX_TIM10_Init+0x94>)
 80028e2:	4a1f      	ldr	r2, [pc, #124]	@ (8002960 <MX_TIM10_Init+0x98>)
 80028e4:	601a      	str	r2, [r3, #0]
  htim10.Init.Prescaler = 179;
 80028e6:	4b1d      	ldr	r3, [pc, #116]	@ (800295c <MX_TIM10_Init+0x94>)
 80028e8:	22b3      	movs	r2, #179	@ 0xb3
 80028ea:	605a      	str	r2, [r3, #4]
  htim10.Init.CounterMode = TIM_COUNTERMODE_UP;
 80028ec:	4b1b      	ldr	r3, [pc, #108]	@ (800295c <MX_TIM10_Init+0x94>)
 80028ee:	2200      	movs	r2, #0
 80028f0:	609a      	str	r2, [r3, #8]
  htim10.Init.Period = 999;
 80028f2:	4b1a      	ldr	r3, [pc, #104]	@ (800295c <MX_TIM10_Init+0x94>)
 80028f4:	f240 32e7 	movw	r2, #999	@ 0x3e7
 80028f8:	60da      	str	r2, [r3, #12]
  htim10.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 80028fa:	4b18      	ldr	r3, [pc, #96]	@ (800295c <MX_TIM10_Init+0x94>)
 80028fc:	2200      	movs	r2, #0
 80028fe:	611a      	str	r2, [r3, #16]
  htim10.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8002900:	4b16      	ldr	r3, [pc, #88]	@ (800295c <MX_TIM10_Init+0x94>)
 8002902:	2200      	movs	r2, #0
 8002904:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim10) != HAL_OK)
 8002906:	4815      	ldr	r0, [pc, #84]	@ (800295c <MX_TIM10_Init+0x94>)
 8002908:	f003 fd9e 	bl	8006448 <HAL_TIM_Base_Init>
 800290c:	4603      	mov	r3, r0
 800290e:	2b00      	cmp	r3, #0
 8002910:	d001      	beq.n	8002916 <MX_TIM10_Init+0x4e>
  {
    Error_Handler();
 8002912:	f000 faa5 	bl	8002e60 <Error_Handler>
  }
  if (HAL_TIM_PWM_Init(&htim10) != HAL_OK)
 8002916:	4811      	ldr	r0, [pc, #68]	@ (800295c <MX_TIM10_Init+0x94>)
 8002918:	f003 fe3e 	bl	8006598 <HAL_TIM_PWM_Init>
 800291c:	4603      	mov	r3, r0
 800291e:	2b00      	cmp	r3, #0
 8002920:	d001      	beq.n	8002926 <MX_TIM10_Init+0x5e>
  {
    Error_Handler();
 8002922:	f000 fa9d 	bl	8002e60 <Error_Handler>
  }
  sConfigOC.OCMode = TIM_OCMODE_PWM1;
 8002926:	2360      	movs	r3, #96	@ 0x60
 8002928:	607b      	str	r3, [r7, #4]
  sConfigOC.Pulse = 0;
 800292a:	2300      	movs	r3, #0
 800292c:	60bb      	str	r3, [r7, #8]
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 800292e:	2300      	movs	r3, #0
 8002930:	60fb      	str	r3, [r7, #12]
  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 8002932:	2300      	movs	r3, #0
 8002934:	617b      	str	r3, [r7, #20]
  if (HAL_TIM_PWM_ConfigChannel(&htim10, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 8002936:	1d3b      	adds	r3, r7, #4
 8002938:	2200      	movs	r2, #0
 800293a:	4619      	mov	r1, r3
 800293c:	4807      	ldr	r0, [pc, #28]	@ (800295c <MX_TIM10_Init+0x94>)
 800293e:	f004 f96b 	bl	8006c18 <HAL_TIM_PWM_ConfigChannel>
 8002942:	4603      	mov	r3, r0
 8002944:	2b00      	cmp	r3, #0
 8002946:	d001      	beq.n	800294c <MX_TIM10_Init+0x84>
  {
    Error_Handler();
 8002948:	f000 fa8a 	bl	8002e60 <Error_Handler>
  }
  /* USER CODE BEGIN TIM10_Init 2 */

  /* USER CODE END TIM10_Init 2 */
  HAL_TIM_MspPostInit(&htim10);
 800294c:	4803      	ldr	r0, [pc, #12]	@ (800295c <MX_TIM10_Init+0x94>)
 800294e:	f000 fca7 	bl	80032a0 <HAL_TIM_MspPostInit>

}
 8002952:	bf00      	nop
 8002954:	3720      	adds	r7, #32
 8002956:	46bd      	mov	sp, r7
 8002958:	bd80      	pop	{r7, pc}
 800295a:	bf00      	nop
 800295c:	200003d8 	.word	0x200003d8
 8002960:	40014400 	.word	0x40014400

08002964 <MX_TIM11_Init>:
  * @brief TIM11 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM11_Init(void)
{
 8002964:	b580      	push	{r7, lr}
 8002966:	b088      	sub	sp, #32
 8002968:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM11_Init 0 */

  /* USER CODE END TIM11_Init 0 */

  TIM_OC_InitTypeDef sConfigOC = {0};
 800296a:	1d3b      	adds	r3, r7, #4
 800296c:	2200      	movs	r2, #0
 800296e:	601a      	str	r2, [r3, #0]
 8002970:	605a      	str	r2, [r3, #4]
 8002972:	609a      	str	r2, [r3, #8]
 8002974:	60da      	str	r2, [r3, #12]
 8002976:	611a      	str	r2, [r3, #16]
 8002978:	615a      	str	r2, [r3, #20]
 800297a:	619a      	str	r2, [r3, #24]

  /* USER CODE BEGIN TIM11_Init 1 */

  /* USER CODE END TIM11_Init 1 */
  htim11.Instance = TIM11;
 800297c:	4b1e      	ldr	r3, [pc, #120]	@ (80029f8 <MX_TIM11_Init+0x94>)
 800297e:	4a1f      	ldr	r2, [pc, #124]	@ (80029fc <MX_TIM11_Init+0x98>)
 8002980:	601a      	str	r2, [r3, #0]
  htim11.Init.Prescaler = 179;
 8002982:	4b1d      	ldr	r3, [pc, #116]	@ (80029f8 <MX_TIM11_Init+0x94>)
 8002984:	22b3      	movs	r2, #179	@ 0xb3
 8002986:	605a      	str	r2, [r3, #4]
  htim11.Init.CounterMode = TIM_COUNTERMODE_UP;
 8002988:	4b1b      	ldr	r3, [pc, #108]	@ (80029f8 <MX_TIM11_Init+0x94>)
 800298a:	2200      	movs	r2, #0
 800298c:	609a      	str	r2, [r3, #8]
  htim11.Init.Period = 999;
 800298e:	4b1a      	ldr	r3, [pc, #104]	@ (80029f8 <MX_TIM11_Init+0x94>)
 8002990:	f240 32e7 	movw	r2, #999	@ 0x3e7
 8002994:	60da      	str	r2, [r3, #12]
  htim11.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8002996:	4b18      	ldr	r3, [pc, #96]	@ (80029f8 <MX_TIM11_Init+0x94>)
 8002998:	2200      	movs	r2, #0
 800299a:	611a      	str	r2, [r3, #16]
  htim11.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 800299c:	4b16      	ldr	r3, [pc, #88]	@ (80029f8 <MX_TIM11_Init+0x94>)
 800299e:	2200      	movs	r2, #0
 80029a0:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim11) != HAL_OK)
 80029a2:	4815      	ldr	r0, [pc, #84]	@ (80029f8 <MX_TIM11_Init+0x94>)
 80029a4:	f003 fd50 	bl	8006448 <HAL_TIM_Base_Init>
 80029a8:	4603      	mov	r3, r0
 80029aa:	2b00      	cmp	r3, #0
 80029ac:	d001      	beq.n	80029b2 <MX_TIM11_Init+0x4e>
  {
    Error_Handler();
 80029ae:	f000 fa57 	bl	8002e60 <Error_Handler>
  }
  if (HAL_TIM_PWM_Init(&htim11) != HAL_OK)
 80029b2:	4811      	ldr	r0, [pc, #68]	@ (80029f8 <MX_TIM11_Init+0x94>)
 80029b4:	f003 fdf0 	bl	8006598 <HAL_TIM_PWM_Init>
 80029b8:	4603      	mov	r3, r0
 80029ba:	2b00      	cmp	r3, #0
 80029bc:	d001      	beq.n	80029c2 <MX_TIM11_Init+0x5e>
  {
    Error_Handler();
 80029be:	f000 fa4f 	bl	8002e60 <Error_Handler>
  }
  sConfigOC.OCMode = TIM_OCMODE_PWM1;
 80029c2:	2360      	movs	r3, #96	@ 0x60
 80029c4:	607b      	str	r3, [r7, #4]
  sConfigOC.Pulse = 0;
 80029c6:	2300      	movs	r3, #0
 80029c8:	60bb      	str	r3, [r7, #8]
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 80029ca:	2300      	movs	r3, #0
 80029cc:	60fb      	str	r3, [r7, #12]
  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 80029ce:	2300      	movs	r3, #0
 80029d0:	617b      	str	r3, [r7, #20]
  if (HAL_TIM_PWM_ConfigChannel(&htim11, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 80029d2:	1d3b      	adds	r3, r7, #4
 80029d4:	2200      	movs	r2, #0
 80029d6:	4619      	mov	r1, r3
 80029d8:	4807      	ldr	r0, [pc, #28]	@ (80029f8 <MX_TIM11_Init+0x94>)
 80029da:	f004 f91d 	bl	8006c18 <HAL_TIM_PWM_ConfigChannel>
 80029de:	4603      	mov	r3, r0
 80029e0:	2b00      	cmp	r3, #0
 80029e2:	d001      	beq.n	80029e8 <MX_TIM11_Init+0x84>
  {
    Error_Handler();
 80029e4:	f000 fa3c 	bl	8002e60 <Error_Handler>
  }
  /* USER CODE BEGIN TIM11_Init 2 */

  /* USER CODE END TIM11_Init 2 */
  HAL_TIM_MspPostInit(&htim11);
 80029e8:	4803      	ldr	r0, [pc, #12]	@ (80029f8 <MX_TIM11_Init+0x94>)
 80029ea:	f000 fc59 	bl	80032a0 <HAL_TIM_MspPostInit>

}
 80029ee:	bf00      	nop
 80029f0:	3720      	adds	r7, #32
 80029f2:	46bd      	mov	sp, r7
 80029f4:	bd80      	pop	{r7, pc}
 80029f6:	bf00      	nop
 80029f8:	20000420 	.word	0x20000420
 80029fc:	40014800 	.word	0x40014800

08002a00 <MX_TIM12_Init>:
  * @brief TIM12 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM12_Init(void)
{
 8002a00:	b580      	push	{r7, lr}
 8002a02:	b08c      	sub	sp, #48	@ 0x30
 8002a04:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM12_Init 0 */

  /* USER CODE END TIM12_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 8002a06:	f107 0320 	add.w	r3, r7, #32
 8002a0a:	2200      	movs	r2, #0
 8002a0c:	601a      	str	r2, [r3, #0]
 8002a0e:	605a      	str	r2, [r3, #4]
 8002a10:	609a      	str	r2, [r3, #8]
 8002a12:	60da      	str	r2, [r3, #12]
  TIM_OC_InitTypeDef sConfigOC = {0};
 8002a14:	1d3b      	adds	r3, r7, #4
 8002a16:	2200      	movs	r2, #0
 8002a18:	601a      	str	r2, [r3, #0]
 8002a1a:	605a      	str	r2, [r3, #4]
 8002a1c:	609a      	str	r2, [r3, #8]
 8002a1e:	60da      	str	r2, [r3, #12]
 8002a20:	611a      	str	r2, [r3, #16]
 8002a22:	615a      	str	r2, [r3, #20]
 8002a24:	619a      	str	r2, [r3, #24]

  /* USER CODE BEGIN TIM12_Init 1 */

  /* USER CODE END TIM12_Init 1 */
  htim12.Instance = TIM12;
 8002a26:	4b2b      	ldr	r3, [pc, #172]	@ (8002ad4 <MX_TIM12_Init+0xd4>)
 8002a28:	4a2b      	ldr	r2, [pc, #172]	@ (8002ad8 <MX_TIM12_Init+0xd8>)
 8002a2a:	601a      	str	r2, [r3, #0]
  htim12.Init.Prescaler = 179;
 8002a2c:	4b29      	ldr	r3, [pc, #164]	@ (8002ad4 <MX_TIM12_Init+0xd4>)
 8002a2e:	22b3      	movs	r2, #179	@ 0xb3
 8002a30:	605a      	str	r2, [r3, #4]
  htim12.Init.CounterMode = TIM_COUNTERMODE_UP;
 8002a32:	4b28      	ldr	r3, [pc, #160]	@ (8002ad4 <MX_TIM12_Init+0xd4>)
 8002a34:	2200      	movs	r2, #0
 8002a36:	609a      	str	r2, [r3, #8]
  htim12.Init.Period = 999;
 8002a38:	4b26      	ldr	r3, [pc, #152]	@ (8002ad4 <MX_TIM12_Init+0xd4>)
 8002a3a:	f240 32e7 	movw	r2, #999	@ 0x3e7
 8002a3e:	60da      	str	r2, [r3, #12]
  htim12.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8002a40:	4b24      	ldr	r3, [pc, #144]	@ (8002ad4 <MX_TIM12_Init+0xd4>)
 8002a42:	2200      	movs	r2, #0
 8002a44:	611a      	str	r2, [r3, #16]
  htim12.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8002a46:	4b23      	ldr	r3, [pc, #140]	@ (8002ad4 <MX_TIM12_Init+0xd4>)
 8002a48:	2200      	movs	r2, #0
 8002a4a:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim12) != HAL_OK)
 8002a4c:	4821      	ldr	r0, [pc, #132]	@ (8002ad4 <MX_TIM12_Init+0xd4>)
 8002a4e:	f003 fcfb 	bl	8006448 <HAL_TIM_Base_Init>
 8002a52:	4603      	mov	r3, r0
 8002a54:	2b00      	cmp	r3, #0
 8002a56:	d001      	beq.n	8002a5c <MX_TIM12_Init+0x5c>
  {
    Error_Handler();
 8002a58:	f000 fa02 	bl	8002e60 <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8002a5c:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 8002a60:	623b      	str	r3, [r7, #32]
  if (HAL_TIM_ConfigClockSource(&htim12, &sClockSourceConfig) != HAL_OK)
 8002a62:	f107 0320 	add.w	r3, r7, #32
 8002a66:	4619      	mov	r1, r3
 8002a68:	481a      	ldr	r0, [pc, #104]	@ (8002ad4 <MX_TIM12_Init+0xd4>)
 8002a6a:	f004 f997 	bl	8006d9c <HAL_TIM_ConfigClockSource>
 8002a6e:	4603      	mov	r3, r0
 8002a70:	2b00      	cmp	r3, #0
 8002a72:	d001      	beq.n	8002a78 <MX_TIM12_Init+0x78>
  {
    Error_Handler();
 8002a74:	f000 f9f4 	bl	8002e60 <Error_Handler>
  }
  if (HAL_TIM_PWM_Init(&htim12) != HAL_OK)
 8002a78:	4816      	ldr	r0, [pc, #88]	@ (8002ad4 <MX_TIM12_Init+0xd4>)
 8002a7a:	f003 fd8d 	bl	8006598 <HAL_TIM_PWM_Init>
 8002a7e:	4603      	mov	r3, r0
 8002a80:	2b00      	cmp	r3, #0
 8002a82:	d001      	beq.n	8002a88 <MX_TIM12_Init+0x88>
  {
    Error_Handler();
 8002a84:	f000 f9ec 	bl	8002e60 <Error_Handler>
  }
  sConfigOC.OCMode = TIM_OCMODE_PWM1;
 8002a88:	2360      	movs	r3, #96	@ 0x60
 8002a8a:	607b      	str	r3, [r7, #4]
  sConfigOC.Pulse = 0;
 8002a8c:	2300      	movs	r3, #0
 8002a8e:	60bb      	str	r3, [r7, #8]
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 8002a90:	2300      	movs	r3, #0
 8002a92:	60fb      	str	r3, [r7, #12]
  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 8002a94:	2300      	movs	r3, #0
 8002a96:	617b      	str	r3, [r7, #20]
  if (HAL_TIM_PWM_ConfigChannel(&htim12, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 8002a98:	1d3b      	adds	r3, r7, #4
 8002a9a:	2200      	movs	r2, #0
 8002a9c:	4619      	mov	r1, r3
 8002a9e:	480d      	ldr	r0, [pc, #52]	@ (8002ad4 <MX_TIM12_Init+0xd4>)
 8002aa0:	f004 f8ba 	bl	8006c18 <HAL_TIM_PWM_ConfigChannel>
 8002aa4:	4603      	mov	r3, r0
 8002aa6:	2b00      	cmp	r3, #0
 8002aa8:	d001      	beq.n	8002aae <MX_TIM12_Init+0xae>
  {
    Error_Handler();
 8002aaa:	f000 f9d9 	bl	8002e60 <Error_Handler>
  }
  if (HAL_TIM_PWM_ConfigChannel(&htim12, &sConfigOC, TIM_CHANNEL_2) != HAL_OK)
 8002aae:	1d3b      	adds	r3, r7, #4
 8002ab0:	2204      	movs	r2, #4
 8002ab2:	4619      	mov	r1, r3
 8002ab4:	4807      	ldr	r0, [pc, #28]	@ (8002ad4 <MX_TIM12_Init+0xd4>)
 8002ab6:	f004 f8af 	bl	8006c18 <HAL_TIM_PWM_ConfigChannel>
 8002aba:	4603      	mov	r3, r0
 8002abc:	2b00      	cmp	r3, #0
 8002abe:	d001      	beq.n	8002ac4 <MX_TIM12_Init+0xc4>
  {
    Error_Handler();
 8002ac0:	f000 f9ce 	bl	8002e60 <Error_Handler>
  }
  /* USER CODE BEGIN TIM12_Init 2 */

  /* USER CODE END TIM12_Init 2 */
  HAL_TIM_MspPostInit(&htim12);
 8002ac4:	4803      	ldr	r0, [pc, #12]	@ (8002ad4 <MX_TIM12_Init+0xd4>)
 8002ac6:	f000 fbeb 	bl	80032a0 <HAL_TIM_MspPostInit>

}
 8002aca:	bf00      	nop
 8002acc:	3730      	adds	r7, #48	@ 0x30
 8002ace:	46bd      	mov	sp, r7
 8002ad0:	bd80      	pop	{r7, pc}
 8002ad2:	bf00      	nop
 8002ad4:	20000468 	.word	0x20000468
 8002ad8:	40001800 	.word	0x40001800

08002adc <MX_TIM13_Init>:
  * @brief TIM13 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM13_Init(void)
{
 8002adc:	b580      	push	{r7, lr}
 8002ade:	b088      	sub	sp, #32
 8002ae0:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM13_Init 0 */

  /* USER CODE END TIM13_Init 0 */

  TIM_OC_InitTypeDef sConfigOC = {0};
 8002ae2:	1d3b      	adds	r3, r7, #4
 8002ae4:	2200      	movs	r2, #0
 8002ae6:	601a      	str	r2, [r3, #0]
 8002ae8:	605a      	str	r2, [r3, #4]
 8002aea:	609a      	str	r2, [r3, #8]
 8002aec:	60da      	str	r2, [r3, #12]
 8002aee:	611a      	str	r2, [r3, #16]
 8002af0:	615a      	str	r2, [r3, #20]
 8002af2:	619a      	str	r2, [r3, #24]

  /* USER CODE BEGIN TIM13_Init 1 */

  /* USER CODE END TIM13_Init 1 */
  htim13.Instance = TIM13;
 8002af4:	4b1e      	ldr	r3, [pc, #120]	@ (8002b70 <MX_TIM13_Init+0x94>)
 8002af6:	4a1f      	ldr	r2, [pc, #124]	@ (8002b74 <MX_TIM13_Init+0x98>)
 8002af8:	601a      	str	r2, [r3, #0]
  htim13.Init.Prescaler = 179;
 8002afa:	4b1d      	ldr	r3, [pc, #116]	@ (8002b70 <MX_TIM13_Init+0x94>)
 8002afc:	22b3      	movs	r2, #179	@ 0xb3
 8002afe:	605a      	str	r2, [r3, #4]
  htim13.Init.CounterMode = TIM_COUNTERMODE_UP;
 8002b00:	4b1b      	ldr	r3, [pc, #108]	@ (8002b70 <MX_TIM13_Init+0x94>)
 8002b02:	2200      	movs	r2, #0
 8002b04:	609a      	str	r2, [r3, #8]
  htim13.Init.Period = 999;
 8002b06:	4b1a      	ldr	r3, [pc, #104]	@ (8002b70 <MX_TIM13_Init+0x94>)
 8002b08:	f240 32e7 	movw	r2, #999	@ 0x3e7
 8002b0c:	60da      	str	r2, [r3, #12]
  htim13.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8002b0e:	4b18      	ldr	r3, [pc, #96]	@ (8002b70 <MX_TIM13_Init+0x94>)
 8002b10:	2200      	movs	r2, #0
 8002b12:	611a      	str	r2, [r3, #16]
  htim13.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8002b14:	4b16      	ldr	r3, [pc, #88]	@ (8002b70 <MX_TIM13_Init+0x94>)
 8002b16:	2200      	movs	r2, #0
 8002b18:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim13) != HAL_OK)
 8002b1a:	4815      	ldr	r0, [pc, #84]	@ (8002b70 <MX_TIM13_Init+0x94>)
 8002b1c:	f003 fc94 	bl	8006448 <HAL_TIM_Base_Init>
 8002b20:	4603      	mov	r3, r0
 8002b22:	2b00      	cmp	r3, #0
 8002b24:	d001      	beq.n	8002b2a <MX_TIM13_Init+0x4e>
  {
    Error_Handler();
 8002b26:	f000 f99b 	bl	8002e60 <Error_Handler>
  }
  if (HAL_TIM_PWM_Init(&htim13) != HAL_OK)
 8002b2a:	4811      	ldr	r0, [pc, #68]	@ (8002b70 <MX_TIM13_Init+0x94>)
 8002b2c:	f003 fd34 	bl	8006598 <HAL_TIM_PWM_Init>
 8002b30:	4603      	mov	r3, r0
 8002b32:	2b00      	cmp	r3, #0
 8002b34:	d001      	beq.n	8002b3a <MX_TIM13_Init+0x5e>
  {
    Error_Handler();
 8002b36:	f000 f993 	bl	8002e60 <Error_Handler>
  }
  sConfigOC.OCMode = TIM_OCMODE_PWM1;
 8002b3a:	2360      	movs	r3, #96	@ 0x60
 8002b3c:	607b      	str	r3, [r7, #4]
  sConfigOC.Pulse = 0;
 8002b3e:	2300      	movs	r3, #0
 8002b40:	60bb      	str	r3, [r7, #8]
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 8002b42:	2300      	movs	r3, #0
 8002b44:	60fb      	str	r3, [r7, #12]
  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 8002b46:	2300      	movs	r3, #0
 8002b48:	617b      	str	r3, [r7, #20]
  if (HAL_TIM_PWM_ConfigChannel(&htim13, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 8002b4a:	1d3b      	adds	r3, r7, #4
 8002b4c:	2200      	movs	r2, #0
 8002b4e:	4619      	mov	r1, r3
 8002b50:	4807      	ldr	r0, [pc, #28]	@ (8002b70 <MX_TIM13_Init+0x94>)
 8002b52:	f004 f861 	bl	8006c18 <HAL_TIM_PWM_ConfigChannel>
 8002b56:	4603      	mov	r3, r0
 8002b58:	2b00      	cmp	r3, #0
 8002b5a:	d001      	beq.n	8002b60 <MX_TIM13_Init+0x84>
  {
    Error_Handler();
 8002b5c:	f000 f980 	bl	8002e60 <Error_Handler>
  }
  /* USER CODE BEGIN TIM13_Init 2 */

  /* USER CODE END TIM13_Init 2 */
  HAL_TIM_MspPostInit(&htim13);
 8002b60:	4803      	ldr	r0, [pc, #12]	@ (8002b70 <MX_TIM13_Init+0x94>)
 8002b62:	f000 fb9d 	bl	80032a0 <HAL_TIM_MspPostInit>

}
 8002b66:	bf00      	nop
 8002b68:	3720      	adds	r7, #32
 8002b6a:	46bd      	mov	sp, r7
 8002b6c:	bd80      	pop	{r7, pc}
 8002b6e:	bf00      	nop
 8002b70:	200004b0 	.word	0x200004b0
 8002b74:	40001c00 	.word	0x40001c00

08002b78 <MX_TIM14_Init>:
  * @brief TIM14 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM14_Init(void)
{
 8002b78:	b580      	push	{r7, lr}
 8002b7a:	b088      	sub	sp, #32
 8002b7c:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM14_Init 0 */

  /* USER CODE END TIM14_Init 0 */

  TIM_OC_InitTypeDef sConfigOC = {0};
 8002b7e:	1d3b      	adds	r3, r7, #4
 8002b80:	2200      	movs	r2, #0
 8002b82:	601a      	str	r2, [r3, #0]
 8002b84:	605a      	str	r2, [r3, #4]
 8002b86:	609a      	str	r2, [r3, #8]
 8002b88:	60da      	str	r2, [r3, #12]
 8002b8a:	611a      	str	r2, [r3, #16]
 8002b8c:	615a      	str	r2, [r3, #20]
 8002b8e:	619a      	str	r2, [r3, #24]

  /* USER CODE BEGIN TIM14_Init 1 */

  /* USER CODE END TIM14_Init 1 */
  htim14.Instance = TIM14;
 8002b90:	4b1e      	ldr	r3, [pc, #120]	@ (8002c0c <MX_TIM14_Init+0x94>)
 8002b92:	4a1f      	ldr	r2, [pc, #124]	@ (8002c10 <MX_TIM14_Init+0x98>)
 8002b94:	601a      	str	r2, [r3, #0]
  htim14.Init.Prescaler = 0;
 8002b96:	4b1d      	ldr	r3, [pc, #116]	@ (8002c0c <MX_TIM14_Init+0x94>)
 8002b98:	2200      	movs	r2, #0
 8002b9a:	605a      	str	r2, [r3, #4]
  htim14.Init.CounterMode = TIM_COUNTERMODE_UP;
 8002b9c:	4b1b      	ldr	r3, [pc, #108]	@ (8002c0c <MX_TIM14_Init+0x94>)
 8002b9e:	2200      	movs	r2, #0
 8002ba0:	609a      	str	r2, [r3, #8]
  htim14.Init.Period = 65535;
 8002ba2:	4b1a      	ldr	r3, [pc, #104]	@ (8002c0c <MX_TIM14_Init+0x94>)
 8002ba4:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 8002ba8:	60da      	str	r2, [r3, #12]
  htim14.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8002baa:	4b18      	ldr	r3, [pc, #96]	@ (8002c0c <MX_TIM14_Init+0x94>)
 8002bac:	2200      	movs	r2, #0
 8002bae:	611a      	str	r2, [r3, #16]
  htim14.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8002bb0:	4b16      	ldr	r3, [pc, #88]	@ (8002c0c <MX_TIM14_Init+0x94>)
 8002bb2:	2200      	movs	r2, #0
 8002bb4:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim14) != HAL_OK)
 8002bb6:	4815      	ldr	r0, [pc, #84]	@ (8002c0c <MX_TIM14_Init+0x94>)
 8002bb8:	f003 fc46 	bl	8006448 <HAL_TIM_Base_Init>
 8002bbc:	4603      	mov	r3, r0
 8002bbe:	2b00      	cmp	r3, #0
 8002bc0:	d001      	beq.n	8002bc6 <MX_TIM14_Init+0x4e>
  {
    Error_Handler();
 8002bc2:	f000 f94d 	bl	8002e60 <Error_Handler>
  }
  if (HAL_TIM_OC_Init(&htim14) != HAL_OK)
 8002bc6:	4811      	ldr	r0, [pc, #68]	@ (8002c0c <MX_TIM14_Init+0x94>)
 8002bc8:	f003 fc8d 	bl	80064e6 <HAL_TIM_OC_Init>
 8002bcc:	4603      	mov	r3, r0
 8002bce:	2b00      	cmp	r3, #0
 8002bd0:	d001      	beq.n	8002bd6 <MX_TIM14_Init+0x5e>
  {
    Error_Handler();
 8002bd2:	f000 f945 	bl	8002e60 <Error_Handler>
  }
  sConfigOC.OCMode = TIM_OCMODE_TIMING;
 8002bd6:	2300      	movs	r3, #0
 8002bd8:	607b      	str	r3, [r7, #4]
  sConfigOC.Pulse = 0;
 8002bda:	2300      	movs	r3, #0
 8002bdc:	60bb      	str	r3, [r7, #8]
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 8002bde:	2300      	movs	r3, #0
 8002be0:	60fb      	str	r3, [r7, #12]
  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 8002be2:	2300      	movs	r3, #0
 8002be4:	617b      	str	r3, [r7, #20]
  if (HAL_TIM_OC_ConfigChannel(&htim14, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 8002be6:	1d3b      	adds	r3, r7, #4
 8002be8:	2200      	movs	r2, #0
 8002bea:	4619      	mov	r1, r3
 8002bec:	4807      	ldr	r0, [pc, #28]	@ (8002c0c <MX_TIM14_Init+0x94>)
 8002bee:	f003 ffb7 	bl	8006b60 <HAL_TIM_OC_ConfigChannel>
 8002bf2:	4603      	mov	r3, r0
 8002bf4:	2b00      	cmp	r3, #0
 8002bf6:	d001      	beq.n	8002bfc <MX_TIM14_Init+0x84>
  {
    Error_Handler();
 8002bf8:	f000 f932 	bl	8002e60 <Error_Handler>
  }
  /* USER CODE BEGIN TIM14_Init 2 */

  /* USER CODE END TIM14_Init 2 */
  HAL_TIM_MspPostInit(&htim14);
 8002bfc:	4803      	ldr	r0, [pc, #12]	@ (8002c0c <MX_TIM14_Init+0x94>)
 8002bfe:	f000 fb4f 	bl	80032a0 <HAL_TIM_MspPostInit>

}
 8002c02:	bf00      	nop
 8002c04:	3720      	adds	r7, #32
 8002c06:	46bd      	mov	sp, r7
 8002c08:	bd80      	pop	{r7, pc}
 8002c0a:	bf00      	nop
 8002c0c:	200004f8 	.word	0x200004f8
 8002c10:	40002000 	.word	0x40002000

08002c14 <MX_UART4_Init>:
  * @brief UART4 Initialization Function
  * @param None
  * @retval None
  */
static void MX_UART4_Init(void)
{
 8002c14:	b580      	push	{r7, lr}
 8002c16:	af00      	add	r7, sp, #0
  /* USER CODE END UART4_Init 0 */

  /* USER CODE BEGIN UART4_Init 1 */

  /* USER CODE END UART4_Init 1 */
  huart4.Instance = UART4;
 8002c18:	4b11      	ldr	r3, [pc, #68]	@ (8002c60 <MX_UART4_Init+0x4c>)
 8002c1a:	4a12      	ldr	r2, [pc, #72]	@ (8002c64 <MX_UART4_Init+0x50>)
 8002c1c:	601a      	str	r2, [r3, #0]
  huart4.Init.BaudRate = 115200;
 8002c1e:	4b10      	ldr	r3, [pc, #64]	@ (8002c60 <MX_UART4_Init+0x4c>)
 8002c20:	f44f 32e1 	mov.w	r2, #115200	@ 0x1c200
 8002c24:	605a      	str	r2, [r3, #4]
  huart4.Init.WordLength = UART_WORDLENGTH_8B;
 8002c26:	4b0e      	ldr	r3, [pc, #56]	@ (8002c60 <MX_UART4_Init+0x4c>)
 8002c28:	2200      	movs	r2, #0
 8002c2a:	609a      	str	r2, [r3, #8]
  huart4.Init.StopBits = UART_STOPBITS_1;
 8002c2c:	4b0c      	ldr	r3, [pc, #48]	@ (8002c60 <MX_UART4_Init+0x4c>)
 8002c2e:	2200      	movs	r2, #0
 8002c30:	60da      	str	r2, [r3, #12]
  huart4.Init.Parity = UART_PARITY_NONE;
 8002c32:	4b0b      	ldr	r3, [pc, #44]	@ (8002c60 <MX_UART4_Init+0x4c>)
 8002c34:	2200      	movs	r2, #0
 8002c36:	611a      	str	r2, [r3, #16]
  huart4.Init.Mode = UART_MODE_TX_RX;
 8002c38:	4b09      	ldr	r3, [pc, #36]	@ (8002c60 <MX_UART4_Init+0x4c>)
 8002c3a:	220c      	movs	r2, #12
 8002c3c:	615a      	str	r2, [r3, #20]
  huart4.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 8002c3e:	4b08      	ldr	r3, [pc, #32]	@ (8002c60 <MX_UART4_Init+0x4c>)
 8002c40:	2200      	movs	r2, #0
 8002c42:	619a      	str	r2, [r3, #24]
  huart4.Init.OverSampling = UART_OVERSAMPLING_16;
 8002c44:	4b06      	ldr	r3, [pc, #24]	@ (8002c60 <MX_UART4_Init+0x4c>)
 8002c46:	2200      	movs	r2, #0
 8002c48:	61da      	str	r2, [r3, #28]
  if (HAL_UART_Init(&huart4) != HAL_OK)
 8002c4a:	4805      	ldr	r0, [pc, #20]	@ (8002c60 <MX_UART4_Init+0x4c>)
 8002c4c:	f004 fd58 	bl	8007700 <HAL_UART_Init>
 8002c50:	4603      	mov	r3, r0
 8002c52:	2b00      	cmp	r3, #0
 8002c54:	d001      	beq.n	8002c5a <MX_UART4_Init+0x46>
  {
    Error_Handler();
 8002c56:	f000 f903 	bl	8002e60 <Error_Handler>
  }
  /* USER CODE BEGIN UART4_Init 2 */

  /* USER CODE END UART4_Init 2 */

}
 8002c5a:	bf00      	nop
 8002c5c:	bd80      	pop	{r7, pc}
 8002c5e:	bf00      	nop
 8002c60:	20000540 	.word	0x20000540
 8002c64:	40004c00 	.word	0x40004c00

08002c68 <MX_USART2_UART_Init>:
  * @brief USART2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_USART2_UART_Init(void)
{
 8002c68:	b580      	push	{r7, lr}
 8002c6a:	af00      	add	r7, sp, #0
  /* USER CODE END USART2_Init 0 */

  /* USER CODE BEGIN USART2_Init 1 */

  /* USER CODE END USART2_Init 1 */
  huart2.Instance = USART2;
 8002c6c:	4b11      	ldr	r3, [pc, #68]	@ (8002cb4 <MX_USART2_UART_Init+0x4c>)
 8002c6e:	4a12      	ldr	r2, [pc, #72]	@ (8002cb8 <MX_USART2_UART_Init+0x50>)
 8002c70:	601a      	str	r2, [r3, #0]
  huart2.Init.BaudRate = 115200;
 8002c72:	4b10      	ldr	r3, [pc, #64]	@ (8002cb4 <MX_USART2_UART_Init+0x4c>)
 8002c74:	f44f 32e1 	mov.w	r2, #115200	@ 0x1c200
 8002c78:	605a      	str	r2, [r3, #4]
  huart2.Init.WordLength = UART_WORDLENGTH_8B;
 8002c7a:	4b0e      	ldr	r3, [pc, #56]	@ (8002cb4 <MX_USART2_UART_Init+0x4c>)
 8002c7c:	2200      	movs	r2, #0
 8002c7e:	609a      	str	r2, [r3, #8]
  huart2.Init.StopBits = UART_STOPBITS_1;
 8002c80:	4b0c      	ldr	r3, [pc, #48]	@ (8002cb4 <MX_USART2_UART_Init+0x4c>)
 8002c82:	2200      	movs	r2, #0
 8002c84:	60da      	str	r2, [r3, #12]
  huart2.Init.Parity = UART_PARITY_NONE;
 8002c86:	4b0b      	ldr	r3, [pc, #44]	@ (8002cb4 <MX_USART2_UART_Init+0x4c>)
 8002c88:	2200      	movs	r2, #0
 8002c8a:	611a      	str	r2, [r3, #16]
  huart2.Init.Mode = UART_MODE_TX_RX;
 8002c8c:	4b09      	ldr	r3, [pc, #36]	@ (8002cb4 <MX_USART2_UART_Init+0x4c>)
 8002c8e:	220c      	movs	r2, #12
 8002c90:	615a      	str	r2, [r3, #20]
  huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 8002c92:	4b08      	ldr	r3, [pc, #32]	@ (8002cb4 <MX_USART2_UART_Init+0x4c>)
 8002c94:	2200      	movs	r2, #0
 8002c96:	619a      	str	r2, [r3, #24]
  huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 8002c98:	4b06      	ldr	r3, [pc, #24]	@ (8002cb4 <MX_USART2_UART_Init+0x4c>)
 8002c9a:	2200      	movs	r2, #0
 8002c9c:	61da      	str	r2, [r3, #28]
  if (HAL_UART_Init(&huart2) != HAL_OK)
 8002c9e:	4805      	ldr	r0, [pc, #20]	@ (8002cb4 <MX_USART2_UART_Init+0x4c>)
 8002ca0:	f004 fd2e 	bl	8007700 <HAL_UART_Init>
 8002ca4:	4603      	mov	r3, r0
 8002ca6:	2b00      	cmp	r3, #0
 8002ca8:	d001      	beq.n	8002cae <MX_USART2_UART_Init+0x46>
  {
    Error_Handler();
 8002caa:	f000 f8d9 	bl	8002e60 <Error_Handler>
  }
  /* USER CODE BEGIN USART2_Init 2 */

  /* USER CODE END USART2_Init 2 */

}
 8002cae:	bf00      	nop
 8002cb0:	bd80      	pop	{r7, pc}
 8002cb2:	bf00      	nop
 8002cb4:	20000588 	.word	0x20000588
 8002cb8:	40004400 	.word	0x40004400

08002cbc <MX_DMA_Init>:

/**
  * Enable DMA controller clock
  */
static void MX_DMA_Init(void)
{
 8002cbc:	b580      	push	{r7, lr}
 8002cbe:	b082      	sub	sp, #8
 8002cc0:	af00      	add	r7, sp, #0

  /* DMA controller clock enable */
  __HAL_RCC_DMA1_CLK_ENABLE();
 8002cc2:	2300      	movs	r3, #0
 8002cc4:	607b      	str	r3, [r7, #4]
 8002cc6:	4b0c      	ldr	r3, [pc, #48]	@ (8002cf8 <MX_DMA_Init+0x3c>)
 8002cc8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002cca:	4a0b      	ldr	r2, [pc, #44]	@ (8002cf8 <MX_DMA_Init+0x3c>)
 8002ccc:	f443 1300 	orr.w	r3, r3, #2097152	@ 0x200000
 8002cd0:	6313      	str	r3, [r2, #48]	@ 0x30
 8002cd2:	4b09      	ldr	r3, [pc, #36]	@ (8002cf8 <MX_DMA_Init+0x3c>)
 8002cd4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002cd6:	f403 1300 	and.w	r3, r3, #2097152	@ 0x200000
 8002cda:	607b      	str	r3, [r7, #4]
 8002cdc:	687b      	ldr	r3, [r7, #4]

  /* DMA interrupt init */
  /* DMA1_Stream2_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(DMA1_Stream2_IRQn, 0, 0);
 8002cde:	2200      	movs	r2, #0
 8002ce0:	2100      	movs	r1, #0
 8002ce2:	200d      	movs	r0, #13
 8002ce4:	f000 ff7d 	bl	8003be2 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(DMA1_Stream2_IRQn);
 8002ce8:	200d      	movs	r0, #13
 8002cea:	f000 ff96 	bl	8003c1a <HAL_NVIC_EnableIRQ>

}
 8002cee:	bf00      	nop
 8002cf0:	3708      	adds	r7, #8
 8002cf2:	46bd      	mov	sp, r7
 8002cf4:	bd80      	pop	{r7, pc}
 8002cf6:	bf00      	nop
 8002cf8:	40023800 	.word	0x40023800

08002cfc <MX_GPIO_Init>:
  * @brief GPIO Initialization Function
  * @param None
  * @retval None
  */
static void MX_GPIO_Init(void)
{
 8002cfc:	b580      	push	{r7, lr}
 8002cfe:	b08a      	sub	sp, #40	@ 0x28
 8002d00:	af00      	add	r7, sp, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8002d02:	f107 0314 	add.w	r3, r7, #20
 8002d06:	2200      	movs	r2, #0
 8002d08:	601a      	str	r2, [r3, #0]
 8002d0a:	605a      	str	r2, [r3, #4]
 8002d0c:	609a      	str	r2, [r3, #8]
 8002d0e:	60da      	str	r2, [r3, #12]
 8002d10:	611a      	str	r2, [r3, #16]
/* USER CODE BEGIN MX_GPIO_Init_1 */
/* USER CODE END MX_GPIO_Init_1 */

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOC_CLK_ENABLE();
 8002d12:	2300      	movs	r3, #0
 8002d14:	613b      	str	r3, [r7, #16]
 8002d16:	4b43      	ldr	r3, [pc, #268]	@ (8002e24 <MX_GPIO_Init+0x128>)
 8002d18:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002d1a:	4a42      	ldr	r2, [pc, #264]	@ (8002e24 <MX_GPIO_Init+0x128>)
 8002d1c:	f043 0304 	orr.w	r3, r3, #4
 8002d20:	6313      	str	r3, [r2, #48]	@ 0x30
 8002d22:	4b40      	ldr	r3, [pc, #256]	@ (8002e24 <MX_GPIO_Init+0x128>)
 8002d24:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002d26:	f003 0304 	and.w	r3, r3, #4
 8002d2a:	613b      	str	r3, [r7, #16]
 8002d2c:	693b      	ldr	r3, [r7, #16]
  __HAL_RCC_GPIOH_CLK_ENABLE();
 8002d2e:	2300      	movs	r3, #0
 8002d30:	60fb      	str	r3, [r7, #12]
 8002d32:	4b3c      	ldr	r3, [pc, #240]	@ (8002e24 <MX_GPIO_Init+0x128>)
 8002d34:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002d36:	4a3b      	ldr	r2, [pc, #236]	@ (8002e24 <MX_GPIO_Init+0x128>)
 8002d38:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8002d3c:	6313      	str	r3, [r2, #48]	@ 0x30
 8002d3e:	4b39      	ldr	r3, [pc, #228]	@ (8002e24 <MX_GPIO_Init+0x128>)
 8002d40:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002d42:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8002d46:	60fb      	str	r3, [r7, #12]
 8002d48:	68fb      	ldr	r3, [r7, #12]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 8002d4a:	2300      	movs	r3, #0
 8002d4c:	60bb      	str	r3, [r7, #8]
 8002d4e:	4b35      	ldr	r3, [pc, #212]	@ (8002e24 <MX_GPIO_Init+0x128>)
 8002d50:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002d52:	4a34      	ldr	r2, [pc, #208]	@ (8002e24 <MX_GPIO_Init+0x128>)
 8002d54:	f043 0301 	orr.w	r3, r3, #1
 8002d58:	6313      	str	r3, [r2, #48]	@ 0x30
 8002d5a:	4b32      	ldr	r3, [pc, #200]	@ (8002e24 <MX_GPIO_Init+0x128>)
 8002d5c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002d5e:	f003 0301 	and.w	r3, r3, #1
 8002d62:	60bb      	str	r3, [r7, #8]
 8002d64:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 8002d66:	2300      	movs	r3, #0
 8002d68:	607b      	str	r3, [r7, #4]
 8002d6a:	4b2e      	ldr	r3, [pc, #184]	@ (8002e24 <MX_GPIO_Init+0x128>)
 8002d6c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002d6e:	4a2d      	ldr	r2, [pc, #180]	@ (8002e24 <MX_GPIO_Init+0x128>)
 8002d70:	f043 0302 	orr.w	r3, r3, #2
 8002d74:	6313      	str	r3, [r2, #48]	@ 0x30
 8002d76:	4b2b      	ldr	r3, [pc, #172]	@ (8002e24 <MX_GPIO_Init+0x128>)
 8002d78:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002d7a:	f003 0302 	and.w	r3, r3, #2
 8002d7e:	607b      	str	r3, [r7, #4]
 8002d80:	687b      	ldr	r3, [r7, #4]

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_15|M1_Pin|M2_Pin|M3_Pin
 8002d82:	2200      	movs	r2, #0
 8002d84:	f248 013f 	movw	r1, #32831	@ 0x803f
 8002d88:	4827      	ldr	r0, [pc, #156]	@ (8002e28 <MX_GPIO_Init+0x12c>)
 8002d8a:	f001 fcf7 	bl	800477c <HAL_GPIO_WritePin>
                          |stepper_direction_1_Pin|ENA_1_Pin|stepper_pulse_1_Pin, GPIO_PIN_RESET);

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOA, LD2_Pin|P1_Pin|P2_Pin, GPIO_PIN_RESET);
 8002d8e:	2200      	movs	r2, #0
 8002d90:	f44f 51c1 	mov.w	r1, #6176	@ 0x1820
 8002d94:	4825      	ldr	r0, [pc, #148]	@ (8002e2c <MX_GPIO_Init+0x130>)
 8002d96:	f001 fcf1 	bl	800477c <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOB, GPIO_PIN_2|GPIO_PIN_10|P3_Pin|GPIO_PIN_13, GPIO_PIN_RESET);
 8002d9a:	2200      	movs	r2, #0
 8002d9c:	f243 4104 	movw	r1, #13316	@ 0x3404
 8002da0:	4823      	ldr	r0, [pc, #140]	@ (8002e30 <MX_GPIO_Init+0x134>)
 8002da2:	f001 fceb 	bl	800477c <HAL_GPIO_WritePin>

  /*Configure GPIO pin : B1_Pin */
  GPIO_InitStruct.Pin = B1_Pin;
 8002da6:	f44f 5300 	mov.w	r3, #8192	@ 0x2000
 8002daa:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_IT_FALLING;
 8002dac:	f44f 1304 	mov.w	r3, #2162688	@ 0x210000
 8002db0:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002db2:	2300      	movs	r3, #0
 8002db4:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(B1_GPIO_Port, &GPIO_InitStruct);
 8002db6:	f107 0314 	add.w	r3, r7, #20
 8002dba:	4619      	mov	r1, r3
 8002dbc:	481a      	ldr	r0, [pc, #104]	@ (8002e28 <MX_GPIO_Init+0x12c>)
 8002dbe:	f001 fb49 	bl	8004454 <HAL_GPIO_Init>

  /*Configure GPIO pins : PC15 M1_Pin M2_Pin M3_Pin
                           stepper_direction_1_Pin ENA_1_Pin stepper_pulse_1_Pin */
  GPIO_InitStruct.Pin = GPIO_PIN_15|M1_Pin|M2_Pin|M3_Pin
 8002dc2:	f248 033f 	movw	r3, #32831	@ 0x803f
 8002dc6:	617b      	str	r3, [r7, #20]
                          |stepper_direction_1_Pin|ENA_1_Pin|stepper_pulse_1_Pin;
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8002dc8:	2301      	movs	r3, #1
 8002dca:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002dcc:	2300      	movs	r3, #0
 8002dce:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8002dd0:	2300      	movs	r3, #0
 8002dd2:	623b      	str	r3, [r7, #32]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8002dd4:	f107 0314 	add.w	r3, r7, #20
 8002dd8:	4619      	mov	r1, r3
 8002dda:	4813      	ldr	r0, [pc, #76]	@ (8002e28 <MX_GPIO_Init+0x12c>)
 8002ddc:	f001 fb3a 	bl	8004454 <HAL_GPIO_Init>

  /*Configure GPIO pins : LD2_Pin P1_Pin P2_Pin */
  GPIO_InitStruct.Pin = LD2_Pin|P1_Pin|P2_Pin;
 8002de0:	f44f 53c1 	mov.w	r3, #6176	@ 0x1820
 8002de4:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8002de6:	2301      	movs	r3, #1
 8002de8:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002dea:	2300      	movs	r3, #0
 8002dec:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8002dee:	2300      	movs	r3, #0
 8002df0:	623b      	str	r3, [r7, #32]
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8002df2:	f107 0314 	add.w	r3, r7, #20
 8002df6:	4619      	mov	r1, r3
 8002df8:	480c      	ldr	r0, [pc, #48]	@ (8002e2c <MX_GPIO_Init+0x130>)
 8002dfa:	f001 fb2b 	bl	8004454 <HAL_GPIO_Init>

  /*Configure GPIO pins : PB2 PB10 P3_Pin PB13 */
  GPIO_InitStruct.Pin = GPIO_PIN_2|GPIO_PIN_10|P3_Pin|GPIO_PIN_13;
 8002dfe:	f243 4304 	movw	r3, #13316	@ 0x3404
 8002e02:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8002e04:	2301      	movs	r3, #1
 8002e06:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002e08:	2300      	movs	r3, #0
 8002e0a:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8002e0c:	2300      	movs	r3, #0
 8002e0e:	623b      	str	r3, [r7, #32]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002e10:	f107 0314 	add.w	r3, r7, #20
 8002e14:	4619      	mov	r1, r3
 8002e16:	4806      	ldr	r0, [pc, #24]	@ (8002e30 <MX_GPIO_Init+0x134>)
 8002e18:	f001 fb1c 	bl	8004454 <HAL_GPIO_Init>

/* USER CODE BEGIN MX_GPIO_Init_2 */
/* USER CODE END MX_GPIO_Init_2 */
}
 8002e1c:	bf00      	nop
 8002e1e:	3728      	adds	r7, #40	@ 0x28
 8002e20:	46bd      	mov	sp, r7
 8002e22:	bd80      	pop	{r7, pc}
 8002e24:	40023800 	.word	0x40023800
 8002e28:	40020800 	.word	0x40020800
 8002e2c:	40020000 	.word	0x40020000
 8002e30:	40020400 	.word	0x40020400

08002e34 <_write>:

/* USER CODE BEGIN 4 */
int _write(int file, char *ptr, int len) {
 8002e34:	b580      	push	{r7, lr}
 8002e36:	b084      	sub	sp, #16
 8002e38:	af00      	add	r7, sp, #0
 8002e3a:	60f8      	str	r0, [r7, #12]
 8002e3c:	60b9      	str	r1, [r7, #8]
 8002e3e:	607a      	str	r2, [r7, #4]
	HAL_UART_Transmit(&huart2, (uint8_t*) ptr, len, HAL_MAX_DELAY);
 8002e40:	687b      	ldr	r3, [r7, #4]
 8002e42:	b29a      	uxth	r2, r3
 8002e44:	f04f 33ff 	mov.w	r3, #4294967295
 8002e48:	68b9      	ldr	r1, [r7, #8]
 8002e4a:	4804      	ldr	r0, [pc, #16]	@ (8002e5c <_write+0x28>)
 8002e4c:	f004 fca8 	bl	80077a0 <HAL_UART_Transmit>
	return len;
 8002e50:	687b      	ldr	r3, [r7, #4]
}
 8002e52:	4618      	mov	r0, r3
 8002e54:	3710      	adds	r7, #16
 8002e56:	46bd      	mov	sp, r7
 8002e58:	bd80      	pop	{r7, pc}
 8002e5a:	bf00      	nop
 8002e5c:	20000588 	.word	0x20000588

08002e60 <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 8002e60:	b480      	push	{r7}
 8002e62:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting special-purpose register PRIMASK.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 8002e64:	b672      	cpsid	i
}
 8002e66:	bf00      	nop
  /* USER CODE BEGIN Error_Handler_Debug */
	/* User can add his own implementation to report the HAL error return state */
	__disable_irq();
	while (1) {
 8002e68:	bf00      	nop
 8002e6a:	e7fd      	b.n	8002e68 <Error_Handler+0x8>

08002e6c <HAL_MspInit>:
void HAL_TIM_MspPostInit(TIM_HandleTypeDef *htim);
                                                                                                                                                                /**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8002e6c:	b580      	push	{r7, lr}
 8002e6e:	b082      	sub	sp, #8
 8002e70:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 8002e72:	2300      	movs	r3, #0
 8002e74:	607b      	str	r3, [r7, #4]
 8002e76:	4b10      	ldr	r3, [pc, #64]	@ (8002eb8 <HAL_MspInit+0x4c>)
 8002e78:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8002e7a:	4a0f      	ldr	r2, [pc, #60]	@ (8002eb8 <HAL_MspInit+0x4c>)
 8002e7c:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 8002e80:	6453      	str	r3, [r2, #68]	@ 0x44
 8002e82:	4b0d      	ldr	r3, [pc, #52]	@ (8002eb8 <HAL_MspInit+0x4c>)
 8002e84:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8002e86:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 8002e8a:	607b      	str	r3, [r7, #4]
 8002e8c:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_PWR_CLK_ENABLE();
 8002e8e:	2300      	movs	r3, #0
 8002e90:	603b      	str	r3, [r7, #0]
 8002e92:	4b09      	ldr	r3, [pc, #36]	@ (8002eb8 <HAL_MspInit+0x4c>)
 8002e94:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002e96:	4a08      	ldr	r2, [pc, #32]	@ (8002eb8 <HAL_MspInit+0x4c>)
 8002e98:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8002e9c:	6413      	str	r3, [r2, #64]	@ 0x40
 8002e9e:	4b06      	ldr	r3, [pc, #24]	@ (8002eb8 <HAL_MspInit+0x4c>)
 8002ea0:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002ea2:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8002ea6:	603b      	str	r3, [r7, #0]
 8002ea8:	683b      	ldr	r3, [r7, #0]

  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_0);
 8002eaa:	2007      	movs	r0, #7
 8002eac:	f000 fe8e 	bl	8003bcc <HAL_NVIC_SetPriorityGrouping>
  /* System interrupt init*/

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 8002eb0:	bf00      	nop
 8002eb2:	3708      	adds	r7, #8
 8002eb4:	46bd      	mov	sp, r7
 8002eb6:	bd80      	pop	{r7, pc}
 8002eb8:	40023800 	.word	0x40023800

08002ebc <HAL_I2C_MspInit>:
* This function configures the hardware resources used in this example
* @param hi2c: I2C handle pointer
* @retval None
*/
void HAL_I2C_MspInit(I2C_HandleTypeDef* hi2c)
{
 8002ebc:	b580      	push	{r7, lr}
 8002ebe:	b08a      	sub	sp, #40	@ 0x28
 8002ec0:	af00      	add	r7, sp, #0
 8002ec2:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8002ec4:	f107 0314 	add.w	r3, r7, #20
 8002ec8:	2200      	movs	r2, #0
 8002eca:	601a      	str	r2, [r3, #0]
 8002ecc:	605a      	str	r2, [r3, #4]
 8002ece:	609a      	str	r2, [r3, #8]
 8002ed0:	60da      	str	r2, [r3, #12]
 8002ed2:	611a      	str	r2, [r3, #16]
  if(hi2c->Instance==I2C1)
 8002ed4:	687b      	ldr	r3, [r7, #4]
 8002ed6:	681b      	ldr	r3, [r3, #0]
 8002ed8:	4a19      	ldr	r2, [pc, #100]	@ (8002f40 <HAL_I2C_MspInit+0x84>)
 8002eda:	4293      	cmp	r3, r2
 8002edc:	d12b      	bne.n	8002f36 <HAL_I2C_MspInit+0x7a>
  {
  /* USER CODE BEGIN I2C1_MspInit 0 */

  /* USER CODE END I2C1_MspInit 0 */

    __HAL_RCC_GPIOB_CLK_ENABLE();
 8002ede:	2300      	movs	r3, #0
 8002ee0:	613b      	str	r3, [r7, #16]
 8002ee2:	4b18      	ldr	r3, [pc, #96]	@ (8002f44 <HAL_I2C_MspInit+0x88>)
 8002ee4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002ee6:	4a17      	ldr	r2, [pc, #92]	@ (8002f44 <HAL_I2C_MspInit+0x88>)
 8002ee8:	f043 0302 	orr.w	r3, r3, #2
 8002eec:	6313      	str	r3, [r2, #48]	@ 0x30
 8002eee:	4b15      	ldr	r3, [pc, #84]	@ (8002f44 <HAL_I2C_MspInit+0x88>)
 8002ef0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002ef2:	f003 0302 	and.w	r3, r3, #2
 8002ef6:	613b      	str	r3, [r7, #16]
 8002ef8:	693b      	ldr	r3, [r7, #16]
    /**I2C1 GPIO Configuration
    PB6     ------> I2C1_SCL
    PB7     ------> I2C1_SDA
    */
    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
 8002efa:	23c0      	movs	r3, #192	@ 0xc0
 8002efc:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8002efe:	2312      	movs	r3, #18
 8002f00:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002f02:	2300      	movs	r3, #0
 8002f04:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8002f06:	2303      	movs	r3, #3
 8002f08:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C1;
 8002f0a:	2304      	movs	r3, #4
 8002f0c:	627b      	str	r3, [r7, #36]	@ 0x24
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002f0e:	f107 0314 	add.w	r3, r7, #20
 8002f12:	4619      	mov	r1, r3
 8002f14:	480c      	ldr	r0, [pc, #48]	@ (8002f48 <HAL_I2C_MspInit+0x8c>)
 8002f16:	f001 fa9d 	bl	8004454 <HAL_GPIO_Init>

    /* Peripheral clock enable */
    __HAL_RCC_I2C1_CLK_ENABLE();
 8002f1a:	2300      	movs	r3, #0
 8002f1c:	60fb      	str	r3, [r7, #12]
 8002f1e:	4b09      	ldr	r3, [pc, #36]	@ (8002f44 <HAL_I2C_MspInit+0x88>)
 8002f20:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002f22:	4a08      	ldr	r2, [pc, #32]	@ (8002f44 <HAL_I2C_MspInit+0x88>)
 8002f24:	f443 1300 	orr.w	r3, r3, #2097152	@ 0x200000
 8002f28:	6413      	str	r3, [r2, #64]	@ 0x40
 8002f2a:	4b06      	ldr	r3, [pc, #24]	@ (8002f44 <HAL_I2C_MspInit+0x88>)
 8002f2c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002f2e:	f403 1300 	and.w	r3, r3, #2097152	@ 0x200000
 8002f32:	60fb      	str	r3, [r7, #12]
 8002f34:	68fb      	ldr	r3, [r7, #12]

  /* USER CODE END I2C1_MspInit 1 */

  }

}
 8002f36:	bf00      	nop
 8002f38:	3728      	adds	r7, #40	@ 0x28
 8002f3a:	46bd      	mov	sp, r7
 8002f3c:	bd80      	pop	{r7, pc}
 8002f3e:	bf00      	nop
 8002f40:	40005400 	.word	0x40005400
 8002f44:	40023800 	.word	0x40023800
 8002f48:	40020400 	.word	0x40020400

08002f4c <HAL_TIM_PWM_MspInit>:
* This function configures the hardware resources used in this example
* @param htim_pwm: TIM_PWM handle pointer
* @retval None
*/
void HAL_TIM_PWM_MspInit(TIM_HandleTypeDef* htim_pwm)
{
 8002f4c:	b580      	push	{r7, lr}
 8002f4e:	b08c      	sub	sp, #48	@ 0x30
 8002f50:	af00      	add	r7, sp, #0
 8002f52:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8002f54:	f107 031c 	add.w	r3, r7, #28
 8002f58:	2200      	movs	r2, #0
 8002f5a:	601a      	str	r2, [r3, #0]
 8002f5c:	605a      	str	r2, [r3, #4]
 8002f5e:	609a      	str	r2, [r3, #8]
 8002f60:	60da      	str	r2, [r3, #12]
 8002f62:	611a      	str	r2, [r3, #16]
  if(htim_pwm->Instance==TIM1)
 8002f64:	687b      	ldr	r3, [r7, #4]
 8002f66:	681b      	ldr	r3, [r3, #0]
 8002f68:	4a32      	ldr	r2, [pc, #200]	@ (8003034 <HAL_TIM_PWM_MspInit+0xe8>)
 8002f6a:	4293      	cmp	r3, r2
 8002f6c:	d12d      	bne.n	8002fca <HAL_TIM_PWM_MspInit+0x7e>
  {
  /* USER CODE BEGIN TIM1_MspInit 0 */

  /* USER CODE END TIM1_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_TIM1_CLK_ENABLE();
 8002f6e:	2300      	movs	r3, #0
 8002f70:	61bb      	str	r3, [r7, #24]
 8002f72:	4b31      	ldr	r3, [pc, #196]	@ (8003038 <HAL_TIM_PWM_MspInit+0xec>)
 8002f74:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8002f76:	4a30      	ldr	r2, [pc, #192]	@ (8003038 <HAL_TIM_PWM_MspInit+0xec>)
 8002f78:	f043 0301 	orr.w	r3, r3, #1
 8002f7c:	6453      	str	r3, [r2, #68]	@ 0x44
 8002f7e:	4b2e      	ldr	r3, [pc, #184]	@ (8003038 <HAL_TIM_PWM_MspInit+0xec>)
 8002f80:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8002f82:	f003 0301 	and.w	r3, r3, #1
 8002f86:	61bb      	str	r3, [r7, #24]
 8002f88:	69bb      	ldr	r3, [r7, #24]

    __HAL_RCC_GPIOA_CLK_ENABLE();
 8002f8a:	2300      	movs	r3, #0
 8002f8c:	617b      	str	r3, [r7, #20]
 8002f8e:	4b2a      	ldr	r3, [pc, #168]	@ (8003038 <HAL_TIM_PWM_MspInit+0xec>)
 8002f90:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002f92:	4a29      	ldr	r2, [pc, #164]	@ (8003038 <HAL_TIM_PWM_MspInit+0xec>)
 8002f94:	f043 0301 	orr.w	r3, r3, #1
 8002f98:	6313      	str	r3, [r2, #48]	@ 0x30
 8002f9a:	4b27      	ldr	r3, [pc, #156]	@ (8003038 <HAL_TIM_PWM_MspInit+0xec>)
 8002f9c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002f9e:	f003 0301 	and.w	r3, r3, #1
 8002fa2:	617b      	str	r3, [r7, #20]
 8002fa4:	697b      	ldr	r3, [r7, #20]
    /**TIM1 GPIO Configuration
    PA8     ------> TIM1_CH1
    PA9     ------> TIM1_CH2
    */
    GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9;
 8002fa6:	f44f 7340 	mov.w	r3, #768	@ 0x300
 8002faa:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002fac:	2302      	movs	r3, #2
 8002fae:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Pull = GPIO_PULLUP;
 8002fb0:	2301      	movs	r3, #1
 8002fb2:	627b      	str	r3, [r7, #36]	@ 0x24
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8002fb4:	2300      	movs	r3, #0
 8002fb6:	62bb      	str	r3, [r7, #40]	@ 0x28
    GPIO_InitStruct.Alternate = GPIO_AF1_TIM1;
 8002fb8:	2301      	movs	r3, #1
 8002fba:	62fb      	str	r3, [r7, #44]	@ 0x2c
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8002fbc:	f107 031c 	add.w	r3, r7, #28
 8002fc0:	4619      	mov	r1, r3
 8002fc2:	481e      	ldr	r0, [pc, #120]	@ (800303c <HAL_TIM_PWM_MspInit+0xf0>)
 8002fc4:	f001 fa46 	bl	8004454 <HAL_GPIO_Init>
  /* USER CODE BEGIN TIM3_MspInit 1 */

  /* USER CODE END TIM3_MspInit 1 */
  }

}
 8002fc8:	e030      	b.n	800302c <HAL_TIM_PWM_MspInit+0xe0>
  else if(htim_pwm->Instance==TIM3)
 8002fca:	687b      	ldr	r3, [r7, #4]
 8002fcc:	681b      	ldr	r3, [r3, #0]
 8002fce:	4a1c      	ldr	r2, [pc, #112]	@ (8003040 <HAL_TIM_PWM_MspInit+0xf4>)
 8002fd0:	4293      	cmp	r3, r2
 8002fd2:	d12b      	bne.n	800302c <HAL_TIM_PWM_MspInit+0xe0>
    __HAL_RCC_TIM3_CLK_ENABLE();
 8002fd4:	2300      	movs	r3, #0
 8002fd6:	613b      	str	r3, [r7, #16]
 8002fd8:	4b17      	ldr	r3, [pc, #92]	@ (8003038 <HAL_TIM_PWM_MspInit+0xec>)
 8002fda:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002fdc:	4a16      	ldr	r2, [pc, #88]	@ (8003038 <HAL_TIM_PWM_MspInit+0xec>)
 8002fde:	f043 0302 	orr.w	r3, r3, #2
 8002fe2:	6413      	str	r3, [r2, #64]	@ 0x40
 8002fe4:	4b14      	ldr	r3, [pc, #80]	@ (8003038 <HAL_TIM_PWM_MspInit+0xec>)
 8002fe6:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002fe8:	f003 0302 	and.w	r3, r3, #2
 8002fec:	613b      	str	r3, [r7, #16]
 8002fee:	693b      	ldr	r3, [r7, #16]
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8002ff0:	2300      	movs	r3, #0
 8002ff2:	60fb      	str	r3, [r7, #12]
 8002ff4:	4b10      	ldr	r3, [pc, #64]	@ (8003038 <HAL_TIM_PWM_MspInit+0xec>)
 8002ff6:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002ff8:	4a0f      	ldr	r2, [pc, #60]	@ (8003038 <HAL_TIM_PWM_MspInit+0xec>)
 8002ffa:	f043 0302 	orr.w	r3, r3, #2
 8002ffe:	6313      	str	r3, [r2, #48]	@ 0x30
 8003000:	4b0d      	ldr	r3, [pc, #52]	@ (8003038 <HAL_TIM_PWM_MspInit+0xec>)
 8003002:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8003004:	f003 0302 	and.w	r3, r3, #2
 8003008:	60fb      	str	r3, [r7, #12]
 800300a:	68fb      	ldr	r3, [r7, #12]
    GPIO_InitStruct.Pin = GPIO_PIN_4|GPIO_PIN_5;
 800300c:	2330      	movs	r3, #48	@ 0x30
 800300e:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8003010:	2302      	movs	r3, #2
 8003012:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Pull = GPIO_PULLUP;
 8003014:	2301      	movs	r3, #1
 8003016:	627b      	str	r3, [r7, #36]	@ 0x24
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8003018:	2300      	movs	r3, #0
 800301a:	62bb      	str	r3, [r7, #40]	@ 0x28
    GPIO_InitStruct.Alternate = GPIO_AF2_TIM3;
 800301c:	2302      	movs	r3, #2
 800301e:	62fb      	str	r3, [r7, #44]	@ 0x2c
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8003020:	f107 031c 	add.w	r3, r7, #28
 8003024:	4619      	mov	r1, r3
 8003026:	4807      	ldr	r0, [pc, #28]	@ (8003044 <HAL_TIM_PWM_MspInit+0xf8>)
 8003028:	f001 fa14 	bl	8004454 <HAL_GPIO_Init>
}
 800302c:	bf00      	nop
 800302e:	3730      	adds	r7, #48	@ 0x30
 8003030:	46bd      	mov	sp, r7
 8003032:	bd80      	pop	{r7, pc}
 8003034:	40010000 	.word	0x40010000
 8003038:	40023800 	.word	0x40023800
 800303c:	40020000 	.word	0x40020000
 8003040:	40000400 	.word	0x40000400
 8003044:	40020400 	.word	0x40020400

08003048 <HAL_TIM_Encoder_MspInit>:
* This function configures the hardware resources used in this example
* @param htim_encoder: TIM_Encoder handle pointer
* @retval None
*/
void HAL_TIM_Encoder_MspInit(TIM_HandleTypeDef* htim_encoder)
{
 8003048:	b580      	push	{r7, lr}
 800304a:	b08c      	sub	sp, #48	@ 0x30
 800304c:	af00      	add	r7, sp, #0
 800304e:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8003050:	f107 031c 	add.w	r3, r7, #28
 8003054:	2200      	movs	r2, #0
 8003056:	601a      	str	r2, [r3, #0]
 8003058:	605a      	str	r2, [r3, #4]
 800305a:	609a      	str	r2, [r3, #8]
 800305c:	60da      	str	r2, [r3, #12]
 800305e:	611a      	str	r2, [r3, #16]
  if(htim_encoder->Instance==TIM2)
 8003060:	687b      	ldr	r3, [r7, #4]
 8003062:	681b      	ldr	r3, [r3, #0]
 8003064:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8003068:	d14b      	bne.n	8003102 <HAL_TIM_Encoder_MspInit+0xba>
  {
  /* USER CODE BEGIN TIM2_MspInit 0 */

  /* USER CODE END TIM2_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_TIM2_CLK_ENABLE();
 800306a:	2300      	movs	r3, #0
 800306c:	61bb      	str	r3, [r7, #24]
 800306e:	4b3f      	ldr	r3, [pc, #252]	@ (800316c <HAL_TIM_Encoder_MspInit+0x124>)
 8003070:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003072:	4a3e      	ldr	r2, [pc, #248]	@ (800316c <HAL_TIM_Encoder_MspInit+0x124>)
 8003074:	f043 0301 	orr.w	r3, r3, #1
 8003078:	6413      	str	r3, [r2, #64]	@ 0x40
 800307a:	4b3c      	ldr	r3, [pc, #240]	@ (800316c <HAL_TIM_Encoder_MspInit+0x124>)
 800307c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800307e:	f003 0301 	and.w	r3, r3, #1
 8003082:	61bb      	str	r3, [r7, #24]
 8003084:	69bb      	ldr	r3, [r7, #24]

    __HAL_RCC_GPIOA_CLK_ENABLE();
 8003086:	2300      	movs	r3, #0
 8003088:	617b      	str	r3, [r7, #20]
 800308a:	4b38      	ldr	r3, [pc, #224]	@ (800316c <HAL_TIM_Encoder_MspInit+0x124>)
 800308c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800308e:	4a37      	ldr	r2, [pc, #220]	@ (800316c <HAL_TIM_Encoder_MspInit+0x124>)
 8003090:	f043 0301 	orr.w	r3, r3, #1
 8003094:	6313      	str	r3, [r2, #48]	@ 0x30
 8003096:	4b35      	ldr	r3, [pc, #212]	@ (800316c <HAL_TIM_Encoder_MspInit+0x124>)
 8003098:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800309a:	f003 0301 	and.w	r3, r3, #1
 800309e:	617b      	str	r3, [r7, #20]
 80030a0:	697b      	ldr	r3, [r7, #20]
    __HAL_RCC_GPIOB_CLK_ENABLE();
 80030a2:	2300      	movs	r3, #0
 80030a4:	613b      	str	r3, [r7, #16]
 80030a6:	4b31      	ldr	r3, [pc, #196]	@ (800316c <HAL_TIM_Encoder_MspInit+0x124>)
 80030a8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80030aa:	4a30      	ldr	r2, [pc, #192]	@ (800316c <HAL_TIM_Encoder_MspInit+0x124>)
 80030ac:	f043 0302 	orr.w	r3, r3, #2
 80030b0:	6313      	str	r3, [r2, #48]	@ 0x30
 80030b2:	4b2e      	ldr	r3, [pc, #184]	@ (800316c <HAL_TIM_Encoder_MspInit+0x124>)
 80030b4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80030b6:	f003 0302 	and.w	r3, r3, #2
 80030ba:	613b      	str	r3, [r7, #16]
 80030bc:	693b      	ldr	r3, [r7, #16]
    /**TIM2 GPIO Configuration
    PA15     ------> TIM2_CH1
    PB3     ------> TIM2_CH2
    */
    GPIO_InitStruct.Pin = GPIO_PIN_15;
 80030be:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 80030c2:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80030c4:	2302      	movs	r3, #2
 80030c6:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Pull = GPIO_PULLUP;
 80030c8:	2301      	movs	r3, #1
 80030ca:	627b      	str	r3, [r7, #36]	@ 0x24
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80030cc:	2300      	movs	r3, #0
 80030ce:	62bb      	str	r3, [r7, #40]	@ 0x28
    GPIO_InitStruct.Alternate = GPIO_AF1_TIM2;
 80030d0:	2301      	movs	r3, #1
 80030d2:	62fb      	str	r3, [r7, #44]	@ 0x2c
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80030d4:	f107 031c 	add.w	r3, r7, #28
 80030d8:	4619      	mov	r1, r3
 80030da:	4825      	ldr	r0, [pc, #148]	@ (8003170 <HAL_TIM_Encoder_MspInit+0x128>)
 80030dc:	f001 f9ba 	bl	8004454 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_3;
 80030e0:	2308      	movs	r3, #8
 80030e2:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80030e4:	2302      	movs	r3, #2
 80030e6:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Pull = GPIO_PULLUP;
 80030e8:	2301      	movs	r3, #1
 80030ea:	627b      	str	r3, [r7, #36]	@ 0x24
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80030ec:	2300      	movs	r3, #0
 80030ee:	62bb      	str	r3, [r7, #40]	@ 0x28
    GPIO_InitStruct.Alternate = GPIO_AF1_TIM2;
 80030f0:	2301      	movs	r3, #1
 80030f2:	62fb      	str	r3, [r7, #44]	@ 0x2c
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80030f4:	f107 031c 	add.w	r3, r7, #28
 80030f8:	4619      	mov	r1, r3
 80030fa:	481e      	ldr	r0, [pc, #120]	@ (8003174 <HAL_TIM_Encoder_MspInit+0x12c>)
 80030fc:	f001 f9aa 	bl	8004454 <HAL_GPIO_Init>
  /* USER CODE BEGIN TIM8_MspInit 1 */

  /* USER CODE END TIM8_MspInit 1 */
  }

}
 8003100:	e030      	b.n	8003164 <HAL_TIM_Encoder_MspInit+0x11c>
  else if(htim_encoder->Instance==TIM8)
 8003102:	687b      	ldr	r3, [r7, #4]
 8003104:	681b      	ldr	r3, [r3, #0]
 8003106:	4a1c      	ldr	r2, [pc, #112]	@ (8003178 <HAL_TIM_Encoder_MspInit+0x130>)
 8003108:	4293      	cmp	r3, r2
 800310a:	d12b      	bne.n	8003164 <HAL_TIM_Encoder_MspInit+0x11c>
    __HAL_RCC_TIM8_CLK_ENABLE();
 800310c:	2300      	movs	r3, #0
 800310e:	60fb      	str	r3, [r7, #12]
 8003110:	4b16      	ldr	r3, [pc, #88]	@ (800316c <HAL_TIM_Encoder_MspInit+0x124>)
 8003112:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8003114:	4a15      	ldr	r2, [pc, #84]	@ (800316c <HAL_TIM_Encoder_MspInit+0x124>)
 8003116:	f043 0302 	orr.w	r3, r3, #2
 800311a:	6453      	str	r3, [r2, #68]	@ 0x44
 800311c:	4b13      	ldr	r3, [pc, #76]	@ (800316c <HAL_TIM_Encoder_MspInit+0x124>)
 800311e:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8003120:	f003 0302 	and.w	r3, r3, #2
 8003124:	60fb      	str	r3, [r7, #12]
 8003126:	68fb      	ldr	r3, [r7, #12]
    __HAL_RCC_GPIOC_CLK_ENABLE();
 8003128:	2300      	movs	r3, #0
 800312a:	60bb      	str	r3, [r7, #8]
 800312c:	4b0f      	ldr	r3, [pc, #60]	@ (800316c <HAL_TIM_Encoder_MspInit+0x124>)
 800312e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8003130:	4a0e      	ldr	r2, [pc, #56]	@ (800316c <HAL_TIM_Encoder_MspInit+0x124>)
 8003132:	f043 0304 	orr.w	r3, r3, #4
 8003136:	6313      	str	r3, [r2, #48]	@ 0x30
 8003138:	4b0c      	ldr	r3, [pc, #48]	@ (800316c <HAL_TIM_Encoder_MspInit+0x124>)
 800313a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800313c:	f003 0304 	and.w	r3, r3, #4
 8003140:	60bb      	str	r3, [r7, #8]
 8003142:	68bb      	ldr	r3, [r7, #8]
    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
 8003144:	23c0      	movs	r3, #192	@ 0xc0
 8003146:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8003148:	2302      	movs	r3, #2
 800314a:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 800314c:	2300      	movs	r3, #0
 800314e:	627b      	str	r3, [r7, #36]	@ 0x24
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8003150:	2300      	movs	r3, #0
 8003152:	62bb      	str	r3, [r7, #40]	@ 0x28
    GPIO_InitStruct.Alternate = GPIO_AF3_TIM8;
 8003154:	2303      	movs	r3, #3
 8003156:	62fb      	str	r3, [r7, #44]	@ 0x2c
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8003158:	f107 031c 	add.w	r3, r7, #28
 800315c:	4619      	mov	r1, r3
 800315e:	4807      	ldr	r0, [pc, #28]	@ (800317c <HAL_TIM_Encoder_MspInit+0x134>)
 8003160:	f001 f978 	bl	8004454 <HAL_GPIO_Init>
}
 8003164:	bf00      	nop
 8003166:	3730      	adds	r7, #48	@ 0x30
 8003168:	46bd      	mov	sp, r7
 800316a:	bd80      	pop	{r7, pc}
 800316c:	40023800 	.word	0x40023800
 8003170:	40020000 	.word	0x40020000
 8003174:	40020400 	.word	0x40020400
 8003178:	40010400 	.word	0x40010400
 800317c:	40020800 	.word	0x40020800

08003180 <HAL_TIM_Base_MspInit>:
* This function configures the hardware resources used in this example
* @param htim_base: TIM_Base handle pointer
* @retval None
*/
void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* htim_base)
{
 8003180:	b480      	push	{r7}
 8003182:	b089      	sub	sp, #36	@ 0x24
 8003184:	af00      	add	r7, sp, #0
 8003186:	6078      	str	r0, [r7, #4]
  if(htim_base->Instance==TIM5)
 8003188:	687b      	ldr	r3, [r7, #4]
 800318a:	681b      	ldr	r3, [r3, #0]
 800318c:	4a3d      	ldr	r2, [pc, #244]	@ (8003284 <HAL_TIM_Base_MspInit+0x104>)
 800318e:	4293      	cmp	r3, r2
 8003190:	d10e      	bne.n	80031b0 <HAL_TIM_Base_MspInit+0x30>
  {
  /* USER CODE BEGIN TIM5_MspInit 0 */

  /* USER CODE END TIM5_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_TIM5_CLK_ENABLE();
 8003192:	2300      	movs	r3, #0
 8003194:	61fb      	str	r3, [r7, #28]
 8003196:	4b3c      	ldr	r3, [pc, #240]	@ (8003288 <HAL_TIM_Base_MspInit+0x108>)
 8003198:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800319a:	4a3b      	ldr	r2, [pc, #236]	@ (8003288 <HAL_TIM_Base_MspInit+0x108>)
 800319c:	f043 0308 	orr.w	r3, r3, #8
 80031a0:	6413      	str	r3, [r2, #64]	@ 0x40
 80031a2:	4b39      	ldr	r3, [pc, #228]	@ (8003288 <HAL_TIM_Base_MspInit+0x108>)
 80031a4:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80031a6:	f003 0308 	and.w	r3, r3, #8
 80031aa:	61fb      	str	r3, [r7, #28]
 80031ac:	69fb      	ldr	r3, [r7, #28]
  /* USER CODE BEGIN TIM14_MspInit 1 */

  /* USER CODE END TIM14_MspInit 1 */
  }

}
 80031ae:	e062      	b.n	8003276 <HAL_TIM_Base_MspInit+0xf6>
  else if(htim_base->Instance==TIM10)
 80031b0:	687b      	ldr	r3, [r7, #4]
 80031b2:	681b      	ldr	r3, [r3, #0]
 80031b4:	4a35      	ldr	r2, [pc, #212]	@ (800328c <HAL_TIM_Base_MspInit+0x10c>)
 80031b6:	4293      	cmp	r3, r2
 80031b8:	d10e      	bne.n	80031d8 <HAL_TIM_Base_MspInit+0x58>
    __HAL_RCC_TIM10_CLK_ENABLE();
 80031ba:	2300      	movs	r3, #0
 80031bc:	61bb      	str	r3, [r7, #24]
 80031be:	4b32      	ldr	r3, [pc, #200]	@ (8003288 <HAL_TIM_Base_MspInit+0x108>)
 80031c0:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80031c2:	4a31      	ldr	r2, [pc, #196]	@ (8003288 <HAL_TIM_Base_MspInit+0x108>)
 80031c4:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 80031c8:	6453      	str	r3, [r2, #68]	@ 0x44
 80031ca:	4b2f      	ldr	r3, [pc, #188]	@ (8003288 <HAL_TIM_Base_MspInit+0x108>)
 80031cc:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80031ce:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 80031d2:	61bb      	str	r3, [r7, #24]
 80031d4:	69bb      	ldr	r3, [r7, #24]
}
 80031d6:	e04e      	b.n	8003276 <HAL_TIM_Base_MspInit+0xf6>
  else if(htim_base->Instance==TIM11)
 80031d8:	687b      	ldr	r3, [r7, #4]
 80031da:	681b      	ldr	r3, [r3, #0]
 80031dc:	4a2c      	ldr	r2, [pc, #176]	@ (8003290 <HAL_TIM_Base_MspInit+0x110>)
 80031de:	4293      	cmp	r3, r2
 80031e0:	d10e      	bne.n	8003200 <HAL_TIM_Base_MspInit+0x80>
    __HAL_RCC_TIM11_CLK_ENABLE();
 80031e2:	2300      	movs	r3, #0
 80031e4:	617b      	str	r3, [r7, #20]
 80031e6:	4b28      	ldr	r3, [pc, #160]	@ (8003288 <HAL_TIM_Base_MspInit+0x108>)
 80031e8:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80031ea:	4a27      	ldr	r2, [pc, #156]	@ (8003288 <HAL_TIM_Base_MspInit+0x108>)
 80031ec:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
 80031f0:	6453      	str	r3, [r2, #68]	@ 0x44
 80031f2:	4b25      	ldr	r3, [pc, #148]	@ (8003288 <HAL_TIM_Base_MspInit+0x108>)
 80031f4:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80031f6:	f403 2380 	and.w	r3, r3, #262144	@ 0x40000
 80031fa:	617b      	str	r3, [r7, #20]
 80031fc:	697b      	ldr	r3, [r7, #20]
}
 80031fe:	e03a      	b.n	8003276 <HAL_TIM_Base_MspInit+0xf6>
  else if(htim_base->Instance==TIM12)
 8003200:	687b      	ldr	r3, [r7, #4]
 8003202:	681b      	ldr	r3, [r3, #0]
 8003204:	4a23      	ldr	r2, [pc, #140]	@ (8003294 <HAL_TIM_Base_MspInit+0x114>)
 8003206:	4293      	cmp	r3, r2
 8003208:	d10e      	bne.n	8003228 <HAL_TIM_Base_MspInit+0xa8>
    __HAL_RCC_TIM12_CLK_ENABLE();
 800320a:	2300      	movs	r3, #0
 800320c:	613b      	str	r3, [r7, #16]
 800320e:	4b1e      	ldr	r3, [pc, #120]	@ (8003288 <HAL_TIM_Base_MspInit+0x108>)
 8003210:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003212:	4a1d      	ldr	r2, [pc, #116]	@ (8003288 <HAL_TIM_Base_MspInit+0x108>)
 8003214:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8003218:	6413      	str	r3, [r2, #64]	@ 0x40
 800321a:	4b1b      	ldr	r3, [pc, #108]	@ (8003288 <HAL_TIM_Base_MspInit+0x108>)
 800321c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800321e:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8003222:	613b      	str	r3, [r7, #16]
 8003224:	693b      	ldr	r3, [r7, #16]
}
 8003226:	e026      	b.n	8003276 <HAL_TIM_Base_MspInit+0xf6>
  else if(htim_base->Instance==TIM13)
 8003228:	687b      	ldr	r3, [r7, #4]
 800322a:	681b      	ldr	r3, [r3, #0]
 800322c:	4a1a      	ldr	r2, [pc, #104]	@ (8003298 <HAL_TIM_Base_MspInit+0x118>)
 800322e:	4293      	cmp	r3, r2
 8003230:	d10e      	bne.n	8003250 <HAL_TIM_Base_MspInit+0xd0>
    __HAL_RCC_TIM13_CLK_ENABLE();
 8003232:	2300      	movs	r3, #0
 8003234:	60fb      	str	r3, [r7, #12]
 8003236:	4b14      	ldr	r3, [pc, #80]	@ (8003288 <HAL_TIM_Base_MspInit+0x108>)
 8003238:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800323a:	4a13      	ldr	r2, [pc, #76]	@ (8003288 <HAL_TIM_Base_MspInit+0x108>)
 800323c:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8003240:	6413      	str	r3, [r2, #64]	@ 0x40
 8003242:	4b11      	ldr	r3, [pc, #68]	@ (8003288 <HAL_TIM_Base_MspInit+0x108>)
 8003244:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003246:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 800324a:	60fb      	str	r3, [r7, #12]
 800324c:	68fb      	ldr	r3, [r7, #12]
}
 800324e:	e012      	b.n	8003276 <HAL_TIM_Base_MspInit+0xf6>
  else if(htim_base->Instance==TIM14)
 8003250:	687b      	ldr	r3, [r7, #4]
 8003252:	681b      	ldr	r3, [r3, #0]
 8003254:	4a11      	ldr	r2, [pc, #68]	@ (800329c <HAL_TIM_Base_MspInit+0x11c>)
 8003256:	4293      	cmp	r3, r2
 8003258:	d10d      	bne.n	8003276 <HAL_TIM_Base_MspInit+0xf6>
    __HAL_RCC_TIM14_CLK_ENABLE();
 800325a:	2300      	movs	r3, #0
 800325c:	60bb      	str	r3, [r7, #8]
 800325e:	4b0a      	ldr	r3, [pc, #40]	@ (8003288 <HAL_TIM_Base_MspInit+0x108>)
 8003260:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003262:	4a09      	ldr	r2, [pc, #36]	@ (8003288 <HAL_TIM_Base_MspInit+0x108>)
 8003264:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8003268:	6413      	str	r3, [r2, #64]	@ 0x40
 800326a:	4b07      	ldr	r3, [pc, #28]	@ (8003288 <HAL_TIM_Base_MspInit+0x108>)
 800326c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800326e:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8003272:	60bb      	str	r3, [r7, #8]
 8003274:	68bb      	ldr	r3, [r7, #8]
}
 8003276:	bf00      	nop
 8003278:	3724      	adds	r7, #36	@ 0x24
 800327a:	46bd      	mov	sp, r7
 800327c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003280:	4770      	bx	lr
 8003282:	bf00      	nop
 8003284:	40000c00 	.word	0x40000c00
 8003288:	40023800 	.word	0x40023800
 800328c:	40014400 	.word	0x40014400
 8003290:	40014800 	.word	0x40014800
 8003294:	40001800 	.word	0x40001800
 8003298:	40001c00 	.word	0x40001c00
 800329c:	40002000 	.word	0x40002000

080032a0 <HAL_TIM_MspPostInit>:

void HAL_TIM_MspPostInit(TIM_HandleTypeDef* htim)
{
 80032a0:	b580      	push	{r7, lr}
 80032a2:	b090      	sub	sp, #64	@ 0x40
 80032a4:	af00      	add	r7, sp, #0
 80032a6:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80032a8:	f107 032c 	add.w	r3, r7, #44	@ 0x2c
 80032ac:	2200      	movs	r2, #0
 80032ae:	601a      	str	r2, [r3, #0]
 80032b0:	605a      	str	r2, [r3, #4]
 80032b2:	609a      	str	r2, [r3, #8]
 80032b4:	60da      	str	r2, [r3, #12]
 80032b6:	611a      	str	r2, [r3, #16]
  if(htim->Instance==TIM1)
 80032b8:	687b      	ldr	r3, [r7, #4]
 80032ba:	681b      	ldr	r3, [r3, #0]
 80032bc:	4a92      	ldr	r2, [pc, #584]	@ (8003508 <HAL_TIM_MspPostInit+0x268>)
 80032be:	4293      	cmp	r3, r2
 80032c0:	d11f      	bne.n	8003302 <HAL_TIM_MspPostInit+0x62>
  {
  /* USER CODE BEGIN TIM1_MspPostInit 0 */

  /* USER CODE END TIM1_MspPostInit 0 */
    __HAL_RCC_GPIOA_CLK_ENABLE();
 80032c2:	2300      	movs	r3, #0
 80032c4:	62bb      	str	r3, [r7, #40]	@ 0x28
 80032c6:	4b91      	ldr	r3, [pc, #580]	@ (800350c <HAL_TIM_MspPostInit+0x26c>)
 80032c8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80032ca:	4a90      	ldr	r2, [pc, #576]	@ (800350c <HAL_TIM_MspPostInit+0x26c>)
 80032cc:	f043 0301 	orr.w	r3, r3, #1
 80032d0:	6313      	str	r3, [r2, #48]	@ 0x30
 80032d2:	4b8e      	ldr	r3, [pc, #568]	@ (800350c <HAL_TIM_MspPostInit+0x26c>)
 80032d4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80032d6:	f003 0301 	and.w	r3, r3, #1
 80032da:	62bb      	str	r3, [r7, #40]	@ 0x28
 80032dc:	6abb      	ldr	r3, [r7, #40]	@ 0x28
    /**TIM1 GPIO Configuration
    PA10     ------> TIM1_CH3
    */
    GPIO_InitStruct.Pin = GPIO_PIN_10;
 80032de:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 80032e2:	62fb      	str	r3, [r7, #44]	@ 0x2c
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80032e4:	2302      	movs	r3, #2
 80032e6:	633b      	str	r3, [r7, #48]	@ 0x30
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 80032e8:	2300      	movs	r3, #0
 80032ea:	637b      	str	r3, [r7, #52]	@ 0x34
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80032ec:	2300      	movs	r3, #0
 80032ee:	63bb      	str	r3, [r7, #56]	@ 0x38
    GPIO_InitStruct.Alternate = GPIO_AF1_TIM1;
 80032f0:	2301      	movs	r3, #1
 80032f2:	63fb      	str	r3, [r7, #60]	@ 0x3c
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80032f4:	f107 032c 	add.w	r3, r7, #44	@ 0x2c
 80032f8:	4619      	mov	r1, r3
 80032fa:	4885      	ldr	r0, [pc, #532]	@ (8003510 <HAL_TIM_MspPostInit+0x270>)
 80032fc:	f001 f8aa 	bl	8004454 <HAL_GPIO_Init>
  /* USER CODE BEGIN TIM14_MspPostInit 1 */

  /* USER CODE END TIM14_MspPostInit 1 */
  }

}
 8003300:	e0fe      	b.n	8003500 <HAL_TIM_MspPostInit+0x260>
  else if(htim->Instance==TIM3)
 8003302:	687b      	ldr	r3, [r7, #4]
 8003304:	681b      	ldr	r3, [r3, #0]
 8003306:	4a83      	ldr	r2, [pc, #524]	@ (8003514 <HAL_TIM_MspPostInit+0x274>)
 8003308:	4293      	cmp	r3, r2
 800330a:	d11f      	bne.n	800334c <HAL_TIM_MspPostInit+0xac>
    __HAL_RCC_GPIOC_CLK_ENABLE();
 800330c:	2300      	movs	r3, #0
 800330e:	627b      	str	r3, [r7, #36]	@ 0x24
 8003310:	4b7e      	ldr	r3, [pc, #504]	@ (800350c <HAL_TIM_MspPostInit+0x26c>)
 8003312:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8003314:	4a7d      	ldr	r2, [pc, #500]	@ (800350c <HAL_TIM_MspPostInit+0x26c>)
 8003316:	f043 0304 	orr.w	r3, r3, #4
 800331a:	6313      	str	r3, [r2, #48]	@ 0x30
 800331c:	4b7b      	ldr	r3, [pc, #492]	@ (800350c <HAL_TIM_MspPostInit+0x26c>)
 800331e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8003320:	f003 0304 	and.w	r3, r3, #4
 8003324:	627b      	str	r3, [r7, #36]	@ 0x24
 8003326:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
    GPIO_InitStruct.Pin = GPIO_PIN_8;
 8003328:	f44f 7380 	mov.w	r3, #256	@ 0x100
 800332c:	62fb      	str	r3, [r7, #44]	@ 0x2c
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800332e:	2302      	movs	r3, #2
 8003330:	633b      	str	r3, [r7, #48]	@ 0x30
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8003332:	2300      	movs	r3, #0
 8003334:	637b      	str	r3, [r7, #52]	@ 0x34
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8003336:	2300      	movs	r3, #0
 8003338:	63bb      	str	r3, [r7, #56]	@ 0x38
    GPIO_InitStruct.Alternate = GPIO_AF2_TIM3;
 800333a:	2302      	movs	r3, #2
 800333c:	63fb      	str	r3, [r7, #60]	@ 0x3c
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 800333e:	f107 032c 	add.w	r3, r7, #44	@ 0x2c
 8003342:	4619      	mov	r1, r3
 8003344:	4874      	ldr	r0, [pc, #464]	@ (8003518 <HAL_TIM_MspPostInit+0x278>)
 8003346:	f001 f885 	bl	8004454 <HAL_GPIO_Init>
}
 800334a:	e0d9      	b.n	8003500 <HAL_TIM_MspPostInit+0x260>
  else if(htim->Instance==TIM5)
 800334c:	687b      	ldr	r3, [r7, #4]
 800334e:	681b      	ldr	r3, [r3, #0]
 8003350:	4a72      	ldr	r2, [pc, #456]	@ (800351c <HAL_TIM_MspPostInit+0x27c>)
 8003352:	4293      	cmp	r3, r2
 8003354:	d11e      	bne.n	8003394 <HAL_TIM_MspPostInit+0xf4>
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8003356:	2300      	movs	r3, #0
 8003358:	623b      	str	r3, [r7, #32]
 800335a:	4b6c      	ldr	r3, [pc, #432]	@ (800350c <HAL_TIM_MspPostInit+0x26c>)
 800335c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800335e:	4a6b      	ldr	r2, [pc, #428]	@ (800350c <HAL_TIM_MspPostInit+0x26c>)
 8003360:	f043 0301 	orr.w	r3, r3, #1
 8003364:	6313      	str	r3, [r2, #48]	@ 0x30
 8003366:	4b69      	ldr	r3, [pc, #420]	@ (800350c <HAL_TIM_MspPostInit+0x26c>)
 8003368:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800336a:	f003 0301 	and.w	r3, r3, #1
 800336e:	623b      	str	r3, [r7, #32]
 8003370:	6a3b      	ldr	r3, [r7, #32]
    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
 8003372:	2303      	movs	r3, #3
 8003374:	62fb      	str	r3, [r7, #44]	@ 0x2c
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8003376:	2302      	movs	r3, #2
 8003378:	633b      	str	r3, [r7, #48]	@ 0x30
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 800337a:	2300      	movs	r3, #0
 800337c:	637b      	str	r3, [r7, #52]	@ 0x34
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 800337e:	2300      	movs	r3, #0
 8003380:	63bb      	str	r3, [r7, #56]	@ 0x38
    GPIO_InitStruct.Alternate = GPIO_AF2_TIM5;
 8003382:	2302      	movs	r3, #2
 8003384:	63fb      	str	r3, [r7, #60]	@ 0x3c
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8003386:	f107 032c 	add.w	r3, r7, #44	@ 0x2c
 800338a:	4619      	mov	r1, r3
 800338c:	4860      	ldr	r0, [pc, #384]	@ (8003510 <HAL_TIM_MspPostInit+0x270>)
 800338e:	f001 f861 	bl	8004454 <HAL_GPIO_Init>
}
 8003392:	e0b5      	b.n	8003500 <HAL_TIM_MspPostInit+0x260>
  else if(htim->Instance==TIM10)
 8003394:	687b      	ldr	r3, [r7, #4]
 8003396:	681b      	ldr	r3, [r3, #0]
 8003398:	4a61      	ldr	r2, [pc, #388]	@ (8003520 <HAL_TIM_MspPostInit+0x280>)
 800339a:	4293      	cmp	r3, r2
 800339c:	d11f      	bne.n	80033de <HAL_TIM_MspPostInit+0x13e>
    __HAL_RCC_GPIOB_CLK_ENABLE();
 800339e:	2300      	movs	r3, #0
 80033a0:	61fb      	str	r3, [r7, #28]
 80033a2:	4b5a      	ldr	r3, [pc, #360]	@ (800350c <HAL_TIM_MspPostInit+0x26c>)
 80033a4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80033a6:	4a59      	ldr	r2, [pc, #356]	@ (800350c <HAL_TIM_MspPostInit+0x26c>)
 80033a8:	f043 0302 	orr.w	r3, r3, #2
 80033ac:	6313      	str	r3, [r2, #48]	@ 0x30
 80033ae:	4b57      	ldr	r3, [pc, #348]	@ (800350c <HAL_TIM_MspPostInit+0x26c>)
 80033b0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80033b2:	f003 0302 	and.w	r3, r3, #2
 80033b6:	61fb      	str	r3, [r7, #28]
 80033b8:	69fb      	ldr	r3, [r7, #28]
    GPIO_InitStruct.Pin = GPIO_PIN_8;
 80033ba:	f44f 7380 	mov.w	r3, #256	@ 0x100
 80033be:	62fb      	str	r3, [r7, #44]	@ 0x2c
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80033c0:	2302      	movs	r3, #2
 80033c2:	633b      	str	r3, [r7, #48]	@ 0x30
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 80033c4:	2300      	movs	r3, #0
 80033c6:	637b      	str	r3, [r7, #52]	@ 0x34
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80033c8:	2300      	movs	r3, #0
 80033ca:	63bb      	str	r3, [r7, #56]	@ 0x38
    GPIO_InitStruct.Alternate = GPIO_AF3_TIM10;
 80033cc:	2303      	movs	r3, #3
 80033ce:	63fb      	str	r3, [r7, #60]	@ 0x3c
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80033d0:	f107 032c 	add.w	r3, r7, #44	@ 0x2c
 80033d4:	4619      	mov	r1, r3
 80033d6:	4853      	ldr	r0, [pc, #332]	@ (8003524 <HAL_TIM_MspPostInit+0x284>)
 80033d8:	f001 f83c 	bl	8004454 <HAL_GPIO_Init>
}
 80033dc:	e090      	b.n	8003500 <HAL_TIM_MspPostInit+0x260>
  else if(htim->Instance==TIM11)
 80033de:	687b      	ldr	r3, [r7, #4]
 80033e0:	681b      	ldr	r3, [r3, #0]
 80033e2:	4a51      	ldr	r2, [pc, #324]	@ (8003528 <HAL_TIM_MspPostInit+0x288>)
 80033e4:	4293      	cmp	r3, r2
 80033e6:	d11f      	bne.n	8003428 <HAL_TIM_MspPostInit+0x188>
    __HAL_RCC_GPIOB_CLK_ENABLE();
 80033e8:	2300      	movs	r3, #0
 80033ea:	61bb      	str	r3, [r7, #24]
 80033ec:	4b47      	ldr	r3, [pc, #284]	@ (800350c <HAL_TIM_MspPostInit+0x26c>)
 80033ee:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80033f0:	4a46      	ldr	r2, [pc, #280]	@ (800350c <HAL_TIM_MspPostInit+0x26c>)
 80033f2:	f043 0302 	orr.w	r3, r3, #2
 80033f6:	6313      	str	r3, [r2, #48]	@ 0x30
 80033f8:	4b44      	ldr	r3, [pc, #272]	@ (800350c <HAL_TIM_MspPostInit+0x26c>)
 80033fa:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80033fc:	f003 0302 	and.w	r3, r3, #2
 8003400:	61bb      	str	r3, [r7, #24]
 8003402:	69bb      	ldr	r3, [r7, #24]
    GPIO_InitStruct.Pin = GPIO_PIN_9;
 8003404:	f44f 7300 	mov.w	r3, #512	@ 0x200
 8003408:	62fb      	str	r3, [r7, #44]	@ 0x2c
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800340a:	2302      	movs	r3, #2
 800340c:	633b      	str	r3, [r7, #48]	@ 0x30
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 800340e:	2300      	movs	r3, #0
 8003410:	637b      	str	r3, [r7, #52]	@ 0x34
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8003412:	2300      	movs	r3, #0
 8003414:	63bb      	str	r3, [r7, #56]	@ 0x38
    GPIO_InitStruct.Alternate = GPIO_AF3_TIM11;
 8003416:	2303      	movs	r3, #3
 8003418:	63fb      	str	r3, [r7, #60]	@ 0x3c
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800341a:	f107 032c 	add.w	r3, r7, #44	@ 0x2c
 800341e:	4619      	mov	r1, r3
 8003420:	4840      	ldr	r0, [pc, #256]	@ (8003524 <HAL_TIM_MspPostInit+0x284>)
 8003422:	f001 f817 	bl	8004454 <HAL_GPIO_Init>
}
 8003426:	e06b      	b.n	8003500 <HAL_TIM_MspPostInit+0x260>
  else if(htim->Instance==TIM12)
 8003428:	687b      	ldr	r3, [r7, #4]
 800342a:	681b      	ldr	r3, [r3, #0]
 800342c:	4a3f      	ldr	r2, [pc, #252]	@ (800352c <HAL_TIM_MspPostInit+0x28c>)
 800342e:	4293      	cmp	r3, r2
 8003430:	d11f      	bne.n	8003472 <HAL_TIM_MspPostInit+0x1d2>
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8003432:	2300      	movs	r3, #0
 8003434:	617b      	str	r3, [r7, #20]
 8003436:	4b35      	ldr	r3, [pc, #212]	@ (800350c <HAL_TIM_MspPostInit+0x26c>)
 8003438:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800343a:	4a34      	ldr	r2, [pc, #208]	@ (800350c <HAL_TIM_MspPostInit+0x26c>)
 800343c:	f043 0302 	orr.w	r3, r3, #2
 8003440:	6313      	str	r3, [r2, #48]	@ 0x30
 8003442:	4b32      	ldr	r3, [pc, #200]	@ (800350c <HAL_TIM_MspPostInit+0x26c>)
 8003444:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8003446:	f003 0302 	and.w	r3, r3, #2
 800344a:	617b      	str	r3, [r7, #20]
 800344c:	697b      	ldr	r3, [r7, #20]
    GPIO_InitStruct.Pin = GPIO_PIN_14|GPIO_PIN_15;
 800344e:	f44f 4340 	mov.w	r3, #49152	@ 0xc000
 8003452:	62fb      	str	r3, [r7, #44]	@ 0x2c
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8003454:	2302      	movs	r3, #2
 8003456:	633b      	str	r3, [r7, #48]	@ 0x30
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8003458:	2300      	movs	r3, #0
 800345a:	637b      	str	r3, [r7, #52]	@ 0x34
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 800345c:	2300      	movs	r3, #0
 800345e:	63bb      	str	r3, [r7, #56]	@ 0x38
    GPIO_InitStruct.Alternate = GPIO_AF9_TIM12;
 8003460:	2309      	movs	r3, #9
 8003462:	63fb      	str	r3, [r7, #60]	@ 0x3c
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8003464:	f107 032c 	add.w	r3, r7, #44	@ 0x2c
 8003468:	4619      	mov	r1, r3
 800346a:	482e      	ldr	r0, [pc, #184]	@ (8003524 <HAL_TIM_MspPostInit+0x284>)
 800346c:	f000 fff2 	bl	8004454 <HAL_GPIO_Init>
}
 8003470:	e046      	b.n	8003500 <HAL_TIM_MspPostInit+0x260>
  else if(htim->Instance==TIM13)
 8003472:	687b      	ldr	r3, [r7, #4]
 8003474:	681b      	ldr	r3, [r3, #0]
 8003476:	4a2e      	ldr	r2, [pc, #184]	@ (8003530 <HAL_TIM_MspPostInit+0x290>)
 8003478:	4293      	cmp	r3, r2
 800347a:	d11e      	bne.n	80034ba <HAL_TIM_MspPostInit+0x21a>
    __HAL_RCC_GPIOA_CLK_ENABLE();
 800347c:	2300      	movs	r3, #0
 800347e:	613b      	str	r3, [r7, #16]
 8003480:	4b22      	ldr	r3, [pc, #136]	@ (800350c <HAL_TIM_MspPostInit+0x26c>)
 8003482:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8003484:	4a21      	ldr	r2, [pc, #132]	@ (800350c <HAL_TIM_MspPostInit+0x26c>)
 8003486:	f043 0301 	orr.w	r3, r3, #1
 800348a:	6313      	str	r3, [r2, #48]	@ 0x30
 800348c:	4b1f      	ldr	r3, [pc, #124]	@ (800350c <HAL_TIM_MspPostInit+0x26c>)
 800348e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8003490:	f003 0301 	and.w	r3, r3, #1
 8003494:	613b      	str	r3, [r7, #16]
 8003496:	693b      	ldr	r3, [r7, #16]
    GPIO_InitStruct.Pin = GPIO_PIN_6;
 8003498:	2340      	movs	r3, #64	@ 0x40
 800349a:	62fb      	str	r3, [r7, #44]	@ 0x2c
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800349c:	2302      	movs	r3, #2
 800349e:	633b      	str	r3, [r7, #48]	@ 0x30
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 80034a0:	2300      	movs	r3, #0
 80034a2:	637b      	str	r3, [r7, #52]	@ 0x34
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80034a4:	2300      	movs	r3, #0
 80034a6:	63bb      	str	r3, [r7, #56]	@ 0x38
    GPIO_InitStruct.Alternate = GPIO_AF9_TIM13;
 80034a8:	2309      	movs	r3, #9
 80034aa:	63fb      	str	r3, [r7, #60]	@ 0x3c
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80034ac:	f107 032c 	add.w	r3, r7, #44	@ 0x2c
 80034b0:	4619      	mov	r1, r3
 80034b2:	4817      	ldr	r0, [pc, #92]	@ (8003510 <HAL_TIM_MspPostInit+0x270>)
 80034b4:	f000 ffce 	bl	8004454 <HAL_GPIO_Init>
}
 80034b8:	e022      	b.n	8003500 <HAL_TIM_MspPostInit+0x260>
  else if(htim->Instance==TIM14)
 80034ba:	687b      	ldr	r3, [r7, #4]
 80034bc:	681b      	ldr	r3, [r3, #0]
 80034be:	4a1d      	ldr	r2, [pc, #116]	@ (8003534 <HAL_TIM_MspPostInit+0x294>)
 80034c0:	4293      	cmp	r3, r2
 80034c2:	d11d      	bne.n	8003500 <HAL_TIM_MspPostInit+0x260>
    __HAL_RCC_GPIOA_CLK_ENABLE();
 80034c4:	2300      	movs	r3, #0
 80034c6:	60fb      	str	r3, [r7, #12]
 80034c8:	4b10      	ldr	r3, [pc, #64]	@ (800350c <HAL_TIM_MspPostInit+0x26c>)
 80034ca:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80034cc:	4a0f      	ldr	r2, [pc, #60]	@ (800350c <HAL_TIM_MspPostInit+0x26c>)
 80034ce:	f043 0301 	orr.w	r3, r3, #1
 80034d2:	6313      	str	r3, [r2, #48]	@ 0x30
 80034d4:	4b0d      	ldr	r3, [pc, #52]	@ (800350c <HAL_TIM_MspPostInit+0x26c>)
 80034d6:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80034d8:	f003 0301 	and.w	r3, r3, #1
 80034dc:	60fb      	str	r3, [r7, #12]
 80034de:	68fb      	ldr	r3, [r7, #12]
    GPIO_InitStruct.Pin = GPIO_PIN_7;
 80034e0:	2380      	movs	r3, #128	@ 0x80
 80034e2:	62fb      	str	r3, [r7, #44]	@ 0x2c
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80034e4:	2302      	movs	r3, #2
 80034e6:	633b      	str	r3, [r7, #48]	@ 0x30
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 80034e8:	2300      	movs	r3, #0
 80034ea:	637b      	str	r3, [r7, #52]	@ 0x34
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80034ec:	2300      	movs	r3, #0
 80034ee:	63bb      	str	r3, [r7, #56]	@ 0x38
    GPIO_InitStruct.Alternate = GPIO_AF9_TIM14;
 80034f0:	2309      	movs	r3, #9
 80034f2:	63fb      	str	r3, [r7, #60]	@ 0x3c
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80034f4:	f107 032c 	add.w	r3, r7, #44	@ 0x2c
 80034f8:	4619      	mov	r1, r3
 80034fa:	4805      	ldr	r0, [pc, #20]	@ (8003510 <HAL_TIM_MspPostInit+0x270>)
 80034fc:	f000 ffaa 	bl	8004454 <HAL_GPIO_Init>
}
 8003500:	bf00      	nop
 8003502:	3740      	adds	r7, #64	@ 0x40
 8003504:	46bd      	mov	sp, r7
 8003506:	bd80      	pop	{r7, pc}
 8003508:	40010000 	.word	0x40010000
 800350c:	40023800 	.word	0x40023800
 8003510:	40020000 	.word	0x40020000
 8003514:	40000400 	.word	0x40000400
 8003518:	40020800 	.word	0x40020800
 800351c:	40000c00 	.word	0x40000c00
 8003520:	40014400 	.word	0x40014400
 8003524:	40020400 	.word	0x40020400
 8003528:	40014800 	.word	0x40014800
 800352c:	40001800 	.word	0x40001800
 8003530:	40001c00 	.word	0x40001c00
 8003534:	40002000 	.word	0x40002000

08003538 <HAL_UART_MspInit>:
* This function configures the hardware resources used in this example
* @param huart: UART handle pointer
* @retval None
*/
void HAL_UART_MspInit(UART_HandleTypeDef* huart)
{
 8003538:	b580      	push	{r7, lr}
 800353a:	b08c      	sub	sp, #48	@ 0x30
 800353c:	af00      	add	r7, sp, #0
 800353e:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8003540:	f107 031c 	add.w	r3, r7, #28
 8003544:	2200      	movs	r2, #0
 8003546:	601a      	str	r2, [r3, #0]
 8003548:	605a      	str	r2, [r3, #4]
 800354a:	609a      	str	r2, [r3, #8]
 800354c:	60da      	str	r2, [r3, #12]
 800354e:	611a      	str	r2, [r3, #16]
  if(huart->Instance==UART4)
 8003550:	687b      	ldr	r3, [r7, #4]
 8003552:	681b      	ldr	r3, [r3, #0]
 8003554:	4a4e      	ldr	r2, [pc, #312]	@ (8003690 <HAL_UART_MspInit+0x158>)
 8003556:	4293      	cmp	r3, r2
 8003558:	d164      	bne.n	8003624 <HAL_UART_MspInit+0xec>
  {
  /* USER CODE BEGIN UART4_MspInit 0 */

  /* USER CODE END UART4_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_UART4_CLK_ENABLE();
 800355a:	2300      	movs	r3, #0
 800355c:	61bb      	str	r3, [r7, #24]
 800355e:	4b4d      	ldr	r3, [pc, #308]	@ (8003694 <HAL_UART_MspInit+0x15c>)
 8003560:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003562:	4a4c      	ldr	r2, [pc, #304]	@ (8003694 <HAL_UART_MspInit+0x15c>)
 8003564:	f443 2300 	orr.w	r3, r3, #524288	@ 0x80000
 8003568:	6413      	str	r3, [r2, #64]	@ 0x40
 800356a:	4b4a      	ldr	r3, [pc, #296]	@ (8003694 <HAL_UART_MspInit+0x15c>)
 800356c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800356e:	f403 2300 	and.w	r3, r3, #524288	@ 0x80000
 8003572:	61bb      	str	r3, [r7, #24]
 8003574:	69bb      	ldr	r3, [r7, #24]

    __HAL_RCC_GPIOC_CLK_ENABLE();
 8003576:	2300      	movs	r3, #0
 8003578:	617b      	str	r3, [r7, #20]
 800357a:	4b46      	ldr	r3, [pc, #280]	@ (8003694 <HAL_UART_MspInit+0x15c>)
 800357c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800357e:	4a45      	ldr	r2, [pc, #276]	@ (8003694 <HAL_UART_MspInit+0x15c>)
 8003580:	f043 0304 	orr.w	r3, r3, #4
 8003584:	6313      	str	r3, [r2, #48]	@ 0x30
 8003586:	4b43      	ldr	r3, [pc, #268]	@ (8003694 <HAL_UART_MspInit+0x15c>)
 8003588:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800358a:	f003 0304 	and.w	r3, r3, #4
 800358e:	617b      	str	r3, [r7, #20]
 8003590:	697b      	ldr	r3, [r7, #20]
    /**UART4 GPIO Configuration
    PC10     ------> UART4_TX
    PC11     ------> UART4_RX
    */
    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_11;
 8003592:	f44f 6340 	mov.w	r3, #3072	@ 0xc00
 8003596:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8003598:	2302      	movs	r3, #2
 800359a:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 800359c:	2300      	movs	r3, #0
 800359e:	627b      	str	r3, [r7, #36]	@ 0x24
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80035a0:	2303      	movs	r3, #3
 80035a2:	62bb      	str	r3, [r7, #40]	@ 0x28
    GPIO_InitStruct.Alternate = GPIO_AF8_UART4;
 80035a4:	2308      	movs	r3, #8
 80035a6:	62fb      	str	r3, [r7, #44]	@ 0x2c
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80035a8:	f107 031c 	add.w	r3, r7, #28
 80035ac:	4619      	mov	r1, r3
 80035ae:	483a      	ldr	r0, [pc, #232]	@ (8003698 <HAL_UART_MspInit+0x160>)
 80035b0:	f000 ff50 	bl	8004454 <HAL_GPIO_Init>

    /* UART4 DMA Init */
    /* UART4_RX Init */
    hdma_uart4_rx.Instance = DMA1_Stream2;
 80035b4:	4b39      	ldr	r3, [pc, #228]	@ (800369c <HAL_UART_MspInit+0x164>)
 80035b6:	4a3a      	ldr	r2, [pc, #232]	@ (80036a0 <HAL_UART_MspInit+0x168>)
 80035b8:	601a      	str	r2, [r3, #0]
    hdma_uart4_rx.Init.Channel = DMA_CHANNEL_4;
 80035ba:	4b38      	ldr	r3, [pc, #224]	@ (800369c <HAL_UART_MspInit+0x164>)
 80035bc:	f04f 6200 	mov.w	r2, #134217728	@ 0x8000000
 80035c0:	605a      	str	r2, [r3, #4]
    hdma_uart4_rx.Init.Direction = DMA_PERIPH_TO_MEMORY;
 80035c2:	4b36      	ldr	r3, [pc, #216]	@ (800369c <HAL_UART_MspInit+0x164>)
 80035c4:	2200      	movs	r2, #0
 80035c6:	609a      	str	r2, [r3, #8]
    hdma_uart4_rx.Init.PeriphInc = DMA_PINC_DISABLE;
 80035c8:	4b34      	ldr	r3, [pc, #208]	@ (800369c <HAL_UART_MspInit+0x164>)
 80035ca:	2200      	movs	r2, #0
 80035cc:	60da      	str	r2, [r3, #12]
    hdma_uart4_rx.Init.MemInc = DMA_MINC_ENABLE;
 80035ce:	4b33      	ldr	r3, [pc, #204]	@ (800369c <HAL_UART_MspInit+0x164>)
 80035d0:	f44f 6280 	mov.w	r2, #1024	@ 0x400
 80035d4:	611a      	str	r2, [r3, #16]
    hdma_uart4_rx.Init.PeriphDataAlignment = DMA_PDATAALIGN_BYTE;
 80035d6:	4b31      	ldr	r3, [pc, #196]	@ (800369c <HAL_UART_MspInit+0x164>)
 80035d8:	2200      	movs	r2, #0
 80035da:	615a      	str	r2, [r3, #20]
    hdma_uart4_rx.Init.MemDataAlignment = DMA_MDATAALIGN_BYTE;
 80035dc:	4b2f      	ldr	r3, [pc, #188]	@ (800369c <HAL_UART_MspInit+0x164>)
 80035de:	2200      	movs	r2, #0
 80035e0:	619a      	str	r2, [r3, #24]
    hdma_uart4_rx.Init.Mode = DMA_CIRCULAR;
 80035e2:	4b2e      	ldr	r3, [pc, #184]	@ (800369c <HAL_UART_MspInit+0x164>)
 80035e4:	f44f 7280 	mov.w	r2, #256	@ 0x100
 80035e8:	61da      	str	r2, [r3, #28]
    hdma_uart4_rx.Init.Priority = DMA_PRIORITY_LOW;
 80035ea:	4b2c      	ldr	r3, [pc, #176]	@ (800369c <HAL_UART_MspInit+0x164>)
 80035ec:	2200      	movs	r2, #0
 80035ee:	621a      	str	r2, [r3, #32]
    hdma_uart4_rx.Init.FIFOMode = DMA_FIFOMODE_DISABLE;
 80035f0:	4b2a      	ldr	r3, [pc, #168]	@ (800369c <HAL_UART_MspInit+0x164>)
 80035f2:	2200      	movs	r2, #0
 80035f4:	625a      	str	r2, [r3, #36]	@ 0x24
    if (HAL_DMA_Init(&hdma_uart4_rx) != HAL_OK)
 80035f6:	4829      	ldr	r0, [pc, #164]	@ (800369c <HAL_UART_MspInit+0x164>)
 80035f8:	f000 fb2a 	bl	8003c50 <HAL_DMA_Init>
 80035fc:	4603      	mov	r3, r0
 80035fe:	2b00      	cmp	r3, #0
 8003600:	d001      	beq.n	8003606 <HAL_UART_MspInit+0xce>
    {
      Error_Handler();
 8003602:	f7ff fc2d 	bl	8002e60 <Error_Handler>
    }

    __HAL_LINKDMA(huart,hdmarx,hdma_uart4_rx);
 8003606:	687b      	ldr	r3, [r7, #4]
 8003608:	4a24      	ldr	r2, [pc, #144]	@ (800369c <HAL_UART_MspInit+0x164>)
 800360a:	63da      	str	r2, [r3, #60]	@ 0x3c
 800360c:	4a23      	ldr	r2, [pc, #140]	@ (800369c <HAL_UART_MspInit+0x164>)
 800360e:	687b      	ldr	r3, [r7, #4]
 8003610:	6393      	str	r3, [r2, #56]	@ 0x38

    /* UART4 interrupt Init */
    HAL_NVIC_SetPriority(UART4_IRQn, 0, 0);
 8003612:	2200      	movs	r2, #0
 8003614:	2100      	movs	r1, #0
 8003616:	2034      	movs	r0, #52	@ 0x34
 8003618:	f000 fae3 	bl	8003be2 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(UART4_IRQn);
 800361c:	2034      	movs	r0, #52	@ 0x34
 800361e:	f000 fafc 	bl	8003c1a <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN USART2_MspInit 1 */

  /* USER CODE END USART2_MspInit 1 */
  }

}
 8003622:	e030      	b.n	8003686 <HAL_UART_MspInit+0x14e>
  else if(huart->Instance==USART2)
 8003624:	687b      	ldr	r3, [r7, #4]
 8003626:	681b      	ldr	r3, [r3, #0]
 8003628:	4a1e      	ldr	r2, [pc, #120]	@ (80036a4 <HAL_UART_MspInit+0x16c>)
 800362a:	4293      	cmp	r3, r2
 800362c:	d12b      	bne.n	8003686 <HAL_UART_MspInit+0x14e>
    __HAL_RCC_USART2_CLK_ENABLE();
 800362e:	2300      	movs	r3, #0
 8003630:	613b      	str	r3, [r7, #16]
 8003632:	4b18      	ldr	r3, [pc, #96]	@ (8003694 <HAL_UART_MspInit+0x15c>)
 8003634:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003636:	4a17      	ldr	r2, [pc, #92]	@ (8003694 <HAL_UART_MspInit+0x15c>)
 8003638:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 800363c:	6413      	str	r3, [r2, #64]	@ 0x40
 800363e:	4b15      	ldr	r3, [pc, #84]	@ (8003694 <HAL_UART_MspInit+0x15c>)
 8003640:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003642:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8003646:	613b      	str	r3, [r7, #16]
 8003648:	693b      	ldr	r3, [r7, #16]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 800364a:	2300      	movs	r3, #0
 800364c:	60fb      	str	r3, [r7, #12]
 800364e:	4b11      	ldr	r3, [pc, #68]	@ (8003694 <HAL_UART_MspInit+0x15c>)
 8003650:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8003652:	4a10      	ldr	r2, [pc, #64]	@ (8003694 <HAL_UART_MspInit+0x15c>)
 8003654:	f043 0301 	orr.w	r3, r3, #1
 8003658:	6313      	str	r3, [r2, #48]	@ 0x30
 800365a:	4b0e      	ldr	r3, [pc, #56]	@ (8003694 <HAL_UART_MspInit+0x15c>)
 800365c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800365e:	f003 0301 	and.w	r3, r3, #1
 8003662:	60fb      	str	r3, [r7, #12]
 8003664:	68fb      	ldr	r3, [r7, #12]
    GPIO_InitStruct.Pin = USART_TX_Pin|USART_RX_Pin;
 8003666:	230c      	movs	r3, #12
 8003668:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800366a:	2302      	movs	r3, #2
 800366c:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 800366e:	2300      	movs	r3, #0
 8003670:	627b      	str	r3, [r7, #36]	@ 0x24
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8003672:	2303      	movs	r3, #3
 8003674:	62bb      	str	r3, [r7, #40]	@ 0x28
    GPIO_InitStruct.Alternate = GPIO_AF7_USART2;
 8003676:	2307      	movs	r3, #7
 8003678:	62fb      	str	r3, [r7, #44]	@ 0x2c
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 800367a:	f107 031c 	add.w	r3, r7, #28
 800367e:	4619      	mov	r1, r3
 8003680:	4809      	ldr	r0, [pc, #36]	@ (80036a8 <HAL_UART_MspInit+0x170>)
 8003682:	f000 fee7 	bl	8004454 <HAL_GPIO_Init>
}
 8003686:	bf00      	nop
 8003688:	3730      	adds	r7, #48	@ 0x30
 800368a:	46bd      	mov	sp, r7
 800368c:	bd80      	pop	{r7, pc}
 800368e:	bf00      	nop
 8003690:	40004c00 	.word	0x40004c00
 8003694:	40023800 	.word	0x40023800
 8003698:	40020800 	.word	0x40020800
 800369c:	200005d0 	.word	0x200005d0
 80036a0:	40026040 	.word	0x40026040
 80036a4:	40004400 	.word	0x40004400
 80036a8:	40020000 	.word	0x40020000

080036ac <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 80036ac:	b480      	push	{r7}
 80036ae:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
   while (1)
 80036b0:	bf00      	nop
 80036b2:	e7fd      	b.n	80036b0 <NMI_Handler+0x4>

080036b4 <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 80036b4:	b480      	push	{r7}
 80036b6:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 80036b8:	bf00      	nop
 80036ba:	e7fd      	b.n	80036b8 <HardFault_Handler+0x4>

080036bc <MemManage_Handler>:

/**
  * @brief This function handles Memory management fault.
  */
void MemManage_Handler(void)
{
 80036bc:	b480      	push	{r7}
 80036be:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 80036c0:	bf00      	nop
 80036c2:	e7fd      	b.n	80036c0 <MemManage_Handler+0x4>

080036c4 <BusFault_Handler>:

/**
  * @brief This function handles Pre-fetch fault, memory access fault.
  */
void BusFault_Handler(void)
{
 80036c4:	b480      	push	{r7}
 80036c6:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 80036c8:	bf00      	nop
 80036ca:	e7fd      	b.n	80036c8 <BusFault_Handler+0x4>

080036cc <UsageFault_Handler>:

/**
  * @brief This function handles Undefined instruction or illegal state.
  */
void UsageFault_Handler(void)
{
 80036cc:	b480      	push	{r7}
 80036ce:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 80036d0:	bf00      	nop
 80036d2:	e7fd      	b.n	80036d0 <UsageFault_Handler+0x4>

080036d4 <SVC_Handler>:

/**
  * @brief This function handles System service call via SWI instruction.
  */
void SVC_Handler(void)
{
 80036d4:	b480      	push	{r7}
 80036d6:	af00      	add	r7, sp, #0

  /* USER CODE END SVCall_IRQn 0 */
  /* USER CODE BEGIN SVCall_IRQn 1 */

  /* USER CODE END SVCall_IRQn 1 */
}
 80036d8:	bf00      	nop
 80036da:	46bd      	mov	sp, r7
 80036dc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80036e0:	4770      	bx	lr

080036e2 <DebugMon_Handler>:

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
{
 80036e2:	b480      	push	{r7}
 80036e4:	af00      	add	r7, sp, #0

  /* USER CODE END DebugMonitor_IRQn 0 */
  /* USER CODE BEGIN DebugMonitor_IRQn 1 */

  /* USER CODE END DebugMonitor_IRQn 1 */
}
 80036e6:	bf00      	nop
 80036e8:	46bd      	mov	sp, r7
 80036ea:	f85d 7b04 	ldr.w	r7, [sp], #4
 80036ee:	4770      	bx	lr

080036f0 <PendSV_Handler>:

/**
  * @brief This function handles Pendable request for system service.
  */
void PendSV_Handler(void)
{
 80036f0:	b480      	push	{r7}
 80036f2:	af00      	add	r7, sp, #0

  /* USER CODE END PendSV_IRQn 0 */
  /* USER CODE BEGIN PendSV_IRQn 1 */

  /* USER CODE END PendSV_IRQn 1 */
}
 80036f4:	bf00      	nop
 80036f6:	46bd      	mov	sp, r7
 80036f8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80036fc:	4770      	bx	lr

080036fe <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 80036fe:	b580      	push	{r7, lr}
 8003700:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 8003702:	f000 f94f 	bl	80039a4 <HAL_IncTick>
  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
 8003706:	bf00      	nop
 8003708:	bd80      	pop	{r7, pc}
	...

0800370c <DMA1_Stream2_IRQHandler>:

/**
  * @brief This function handles DMA1 stream2 global interrupt.
  */
void DMA1_Stream2_IRQHandler(void)
{
 800370c:	b580      	push	{r7, lr}
 800370e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN DMA1_Stream2_IRQn 0 */

  /* USER CODE END DMA1_Stream2_IRQn 0 */
  HAL_DMA_IRQHandler(&hdma_uart4_rx);
 8003710:	4802      	ldr	r0, [pc, #8]	@ (800371c <DMA1_Stream2_IRQHandler+0x10>)
 8003712:	f000 fc35 	bl	8003f80 <HAL_DMA_IRQHandler>
  /* USER CODE BEGIN DMA1_Stream2_IRQn 1 */

  /* USER CODE END DMA1_Stream2_IRQn 1 */
}
 8003716:	bf00      	nop
 8003718:	bd80      	pop	{r7, pc}
 800371a:	bf00      	nop
 800371c:	200005d0 	.word	0x200005d0

08003720 <UART4_IRQHandler>:

/**
  * @brief This function handles UART4 global interrupt.
  */
void UART4_IRQHandler(void)
{
 8003720:	b580      	push	{r7, lr}
 8003722:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN UART4_IRQn 0 */

  /* USER CODE END UART4_IRQn 0 */
  HAL_UART_IRQHandler(&huart4);
 8003724:	4802      	ldr	r0, [pc, #8]	@ (8003730 <UART4_IRQHandler+0x10>)
 8003726:	f004 f8eb 	bl	8007900 <HAL_UART_IRQHandler>
  /* USER CODE BEGIN UART4_IRQn 1 */

  /* USER CODE END UART4_IRQn 1 */
}
 800372a:	bf00      	nop
 800372c:	bd80      	pop	{r7, pc}
 800372e:	bf00      	nop
 8003730:	20000540 	.word	0x20000540

08003734 <_getpid>:
 8003734:	b480      	push	{r7}
 8003736:	af00      	add	r7, sp, #0
 8003738:	2301      	movs	r3, #1
 800373a:	4618      	mov	r0, r3
 800373c:	46bd      	mov	sp, r7
 800373e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003742:	4770      	bx	lr

08003744 <_kill>:
 8003744:	b580      	push	{r7, lr}
 8003746:	b082      	sub	sp, #8
 8003748:	af00      	add	r7, sp, #0
 800374a:	6078      	str	r0, [r7, #4]
 800374c:	6039      	str	r1, [r7, #0]
 800374e:	f006 faa7 	bl	8009ca0 <__errno>
 8003752:	4603      	mov	r3, r0
 8003754:	2216      	movs	r2, #22
 8003756:	601a      	str	r2, [r3, #0]
 8003758:	f04f 33ff 	mov.w	r3, #4294967295
 800375c:	4618      	mov	r0, r3
 800375e:	3708      	adds	r7, #8
 8003760:	46bd      	mov	sp, r7
 8003762:	bd80      	pop	{r7, pc}

08003764 <_exit>:
 8003764:	b580      	push	{r7, lr}
 8003766:	b082      	sub	sp, #8
 8003768:	af00      	add	r7, sp, #0
 800376a:	6078      	str	r0, [r7, #4]
 800376c:	f04f 31ff 	mov.w	r1, #4294967295
 8003770:	6878      	ldr	r0, [r7, #4]
 8003772:	f7ff ffe7 	bl	8003744 <_kill>
 8003776:	bf00      	nop
 8003778:	e7fd      	b.n	8003776 <_exit+0x12>

0800377a <_read>:
 800377a:	b580      	push	{r7, lr}
 800377c:	b086      	sub	sp, #24
 800377e:	af00      	add	r7, sp, #0
 8003780:	60f8      	str	r0, [r7, #12]
 8003782:	60b9      	str	r1, [r7, #8]
 8003784:	607a      	str	r2, [r7, #4]
 8003786:	2300      	movs	r3, #0
 8003788:	617b      	str	r3, [r7, #20]
 800378a:	e00a      	b.n	80037a2 <_read+0x28>
 800378c:	f3af 8000 	nop.w
 8003790:	4601      	mov	r1, r0
 8003792:	68bb      	ldr	r3, [r7, #8]
 8003794:	1c5a      	adds	r2, r3, #1
 8003796:	60ba      	str	r2, [r7, #8]
 8003798:	b2ca      	uxtb	r2, r1
 800379a:	701a      	strb	r2, [r3, #0]
 800379c:	697b      	ldr	r3, [r7, #20]
 800379e:	3301      	adds	r3, #1
 80037a0:	617b      	str	r3, [r7, #20]
 80037a2:	697a      	ldr	r2, [r7, #20]
 80037a4:	687b      	ldr	r3, [r7, #4]
 80037a6:	429a      	cmp	r2, r3
 80037a8:	dbf0      	blt.n	800378c <_read+0x12>
 80037aa:	687b      	ldr	r3, [r7, #4]
 80037ac:	4618      	mov	r0, r3
 80037ae:	3718      	adds	r7, #24
 80037b0:	46bd      	mov	sp, r7
 80037b2:	bd80      	pop	{r7, pc}

080037b4 <_close>:
 80037b4:	b480      	push	{r7}
 80037b6:	b083      	sub	sp, #12
 80037b8:	af00      	add	r7, sp, #0
 80037ba:	6078      	str	r0, [r7, #4]
 80037bc:	f04f 33ff 	mov.w	r3, #4294967295
 80037c0:	4618      	mov	r0, r3
 80037c2:	370c      	adds	r7, #12
 80037c4:	46bd      	mov	sp, r7
 80037c6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80037ca:	4770      	bx	lr

080037cc <_fstat>:
 80037cc:	b480      	push	{r7}
 80037ce:	b083      	sub	sp, #12
 80037d0:	af00      	add	r7, sp, #0
 80037d2:	6078      	str	r0, [r7, #4]
 80037d4:	6039      	str	r1, [r7, #0]
 80037d6:	683b      	ldr	r3, [r7, #0]
 80037d8:	f44f 5200 	mov.w	r2, #8192	@ 0x2000
 80037dc:	605a      	str	r2, [r3, #4]
 80037de:	2300      	movs	r3, #0
 80037e0:	4618      	mov	r0, r3
 80037e2:	370c      	adds	r7, #12
 80037e4:	46bd      	mov	sp, r7
 80037e6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80037ea:	4770      	bx	lr

080037ec <_isatty>:
 80037ec:	b480      	push	{r7}
 80037ee:	b083      	sub	sp, #12
 80037f0:	af00      	add	r7, sp, #0
 80037f2:	6078      	str	r0, [r7, #4]
 80037f4:	2301      	movs	r3, #1
 80037f6:	4618      	mov	r0, r3
 80037f8:	370c      	adds	r7, #12
 80037fa:	46bd      	mov	sp, r7
 80037fc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003800:	4770      	bx	lr

08003802 <_lseek>:
 8003802:	b480      	push	{r7}
 8003804:	b085      	sub	sp, #20
 8003806:	af00      	add	r7, sp, #0
 8003808:	60f8      	str	r0, [r7, #12]
 800380a:	60b9      	str	r1, [r7, #8]
 800380c:	607a      	str	r2, [r7, #4]
 800380e:	2300      	movs	r3, #0
 8003810:	4618      	mov	r0, r3
 8003812:	3714      	adds	r7, #20
 8003814:	46bd      	mov	sp, r7
 8003816:	f85d 7b04 	ldr.w	r7, [sp], #4
 800381a:	4770      	bx	lr

0800381c <_sbrk>:
 800381c:	b580      	push	{r7, lr}
 800381e:	b086      	sub	sp, #24
 8003820:	af00      	add	r7, sp, #0
 8003822:	6078      	str	r0, [r7, #4]
 8003824:	4a14      	ldr	r2, [pc, #80]	@ (8003878 <_sbrk+0x5c>)
 8003826:	4b15      	ldr	r3, [pc, #84]	@ (800387c <_sbrk+0x60>)
 8003828:	1ad3      	subs	r3, r2, r3
 800382a:	617b      	str	r3, [r7, #20]
 800382c:	697b      	ldr	r3, [r7, #20]
 800382e:	613b      	str	r3, [r7, #16]
 8003830:	4b13      	ldr	r3, [pc, #76]	@ (8003880 <_sbrk+0x64>)
 8003832:	681b      	ldr	r3, [r3, #0]
 8003834:	2b00      	cmp	r3, #0
 8003836:	d102      	bne.n	800383e <_sbrk+0x22>
 8003838:	4b11      	ldr	r3, [pc, #68]	@ (8003880 <_sbrk+0x64>)
 800383a:	4a12      	ldr	r2, [pc, #72]	@ (8003884 <_sbrk+0x68>)
 800383c:	601a      	str	r2, [r3, #0]
 800383e:	4b10      	ldr	r3, [pc, #64]	@ (8003880 <_sbrk+0x64>)
 8003840:	681a      	ldr	r2, [r3, #0]
 8003842:	687b      	ldr	r3, [r7, #4]
 8003844:	4413      	add	r3, r2
 8003846:	693a      	ldr	r2, [r7, #16]
 8003848:	429a      	cmp	r2, r3
 800384a:	d207      	bcs.n	800385c <_sbrk+0x40>
 800384c:	f006 fa28 	bl	8009ca0 <__errno>
 8003850:	4603      	mov	r3, r0
 8003852:	220c      	movs	r2, #12
 8003854:	601a      	str	r2, [r3, #0]
 8003856:	f04f 33ff 	mov.w	r3, #4294967295
 800385a:	e009      	b.n	8003870 <_sbrk+0x54>
 800385c:	4b08      	ldr	r3, [pc, #32]	@ (8003880 <_sbrk+0x64>)
 800385e:	681b      	ldr	r3, [r3, #0]
 8003860:	60fb      	str	r3, [r7, #12]
 8003862:	4b07      	ldr	r3, [pc, #28]	@ (8003880 <_sbrk+0x64>)
 8003864:	681a      	ldr	r2, [r3, #0]
 8003866:	687b      	ldr	r3, [r7, #4]
 8003868:	4413      	add	r3, r2
 800386a:	4a05      	ldr	r2, [pc, #20]	@ (8003880 <_sbrk+0x64>)
 800386c:	6013      	str	r3, [r2, #0]
 800386e:	68fb      	ldr	r3, [r7, #12]
 8003870:	4618      	mov	r0, r3
 8003872:	3718      	adds	r7, #24
 8003874:	46bd      	mov	sp, r7
 8003876:	bd80      	pop	{r7, pc}
 8003878:	20020000 	.word	0x20020000
 800387c:	00000400 	.word	0x00000400
 8003880:	200006f4 	.word	0x200006f4
 8003884:	20000848 	.word	0x20000848

08003888 <SystemInit>:
 8003888:	b480      	push	{r7}
 800388a:	af00      	add	r7, sp, #0
 800388c:	4b06      	ldr	r3, [pc, #24]	@ (80038a8 <SystemInit+0x20>)
 800388e:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8003892:	4a05      	ldr	r2, [pc, #20]	@ (80038a8 <SystemInit+0x20>)
 8003894:	f443 0370 	orr.w	r3, r3, #15728640	@ 0xf00000
 8003898:	f8c2 3088 	str.w	r3, [r2, #136]	@ 0x88
 800389c:	bf00      	nop
 800389e:	46bd      	mov	sp, r7
 80038a0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80038a4:	4770      	bx	lr
 80038a6:	bf00      	nop
 80038a8:	e000ed00 	.word	0xe000ed00

080038ac <Reset_Handler>:
 80038ac:	f8df d034 	ldr.w	sp, [pc, #52]	@ 80038e4 <LoopFillZerobss+0xe>
 80038b0:	f7ff ffea 	bl	8003888 <SystemInit>
 80038b4:	480c      	ldr	r0, [pc, #48]	@ (80038e8 <LoopFillZerobss+0x12>)
 80038b6:	490d      	ldr	r1, [pc, #52]	@ (80038ec <LoopFillZerobss+0x16>)
 80038b8:	4a0d      	ldr	r2, [pc, #52]	@ (80038f0 <LoopFillZerobss+0x1a>)
 80038ba:	2300      	movs	r3, #0
 80038bc:	e002      	b.n	80038c4 <LoopCopyDataInit>

080038be <CopyDataInit>:
 80038be:	58d4      	ldr	r4, [r2, r3]
 80038c0:	50c4      	str	r4, [r0, r3]
 80038c2:	3304      	adds	r3, #4

080038c4 <LoopCopyDataInit>:
 80038c4:	18c4      	adds	r4, r0, r3
 80038c6:	428c      	cmp	r4, r1
 80038c8:	d3f9      	bcc.n	80038be <CopyDataInit>
 80038ca:	4a0a      	ldr	r2, [pc, #40]	@ (80038f4 <LoopFillZerobss+0x1e>)
 80038cc:	4c0a      	ldr	r4, [pc, #40]	@ (80038f8 <LoopFillZerobss+0x22>)
 80038ce:	2300      	movs	r3, #0
 80038d0:	e001      	b.n	80038d6 <LoopFillZerobss>

080038d2 <FillZerobss>:
 80038d2:	6013      	str	r3, [r2, #0]
 80038d4:	3204      	adds	r2, #4

080038d6 <LoopFillZerobss>:
 80038d6:	42a2      	cmp	r2, r4
 80038d8:	d3fb      	bcc.n	80038d2 <FillZerobss>
 80038da:	f006 f9e7 	bl	8009cac <__libc_init_array>
 80038de:	f7fd fed5 	bl	800168c <main>
 80038e2:	4770      	bx	lr
 80038e4:	20020000 	.word	0x20020000
 80038e8:	20000000 	.word	0x20000000
 80038ec:	200001fc 	.word	0x200001fc
 80038f0:	0800d990 	.word	0x0800d990
 80038f4:	200001fc 	.word	0x200001fc
 80038f8:	20000848 	.word	0x20000848

080038fc <ADC_IRQHandler>:
 80038fc:	e7fe      	b.n	80038fc <ADC_IRQHandler>
	...

08003900 <HAL_Init>:
 8003900:	b580      	push	{r7, lr}
 8003902:	af00      	add	r7, sp, #0
 8003904:	4b0e      	ldr	r3, [pc, #56]	@ (8003940 <HAL_Init+0x40>)
 8003906:	681b      	ldr	r3, [r3, #0]
 8003908:	4a0d      	ldr	r2, [pc, #52]	@ (8003940 <HAL_Init+0x40>)
 800390a:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 800390e:	6013      	str	r3, [r2, #0]
 8003910:	4b0b      	ldr	r3, [pc, #44]	@ (8003940 <HAL_Init+0x40>)
 8003912:	681b      	ldr	r3, [r3, #0]
 8003914:	4a0a      	ldr	r2, [pc, #40]	@ (8003940 <HAL_Init+0x40>)
 8003916:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
 800391a:	6013      	str	r3, [r2, #0]
 800391c:	4b08      	ldr	r3, [pc, #32]	@ (8003940 <HAL_Init+0x40>)
 800391e:	681b      	ldr	r3, [r3, #0]
 8003920:	4a07      	ldr	r2, [pc, #28]	@ (8003940 <HAL_Init+0x40>)
 8003922:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8003926:	6013      	str	r3, [r2, #0]
 8003928:	2003      	movs	r0, #3
 800392a:	f000 f94f 	bl	8003bcc <HAL_NVIC_SetPriorityGrouping>
 800392e:	2000      	movs	r0, #0
 8003930:	f000 f808 	bl	8003944 <HAL_InitTick>
 8003934:	f7ff fa9a 	bl	8002e6c <HAL_MspInit>
 8003938:	2300      	movs	r3, #0
 800393a:	4618      	mov	r0, r3
 800393c:	bd80      	pop	{r7, pc}
 800393e:	bf00      	nop
 8003940:	40023c00 	.word	0x40023c00

08003944 <HAL_InitTick>:
 8003944:	b580      	push	{r7, lr}
 8003946:	b082      	sub	sp, #8
 8003948:	af00      	add	r7, sp, #0
 800394a:	6078      	str	r0, [r7, #4]
 800394c:	4b12      	ldr	r3, [pc, #72]	@ (8003998 <HAL_InitTick+0x54>)
 800394e:	681a      	ldr	r2, [r3, #0]
 8003950:	4b12      	ldr	r3, [pc, #72]	@ (800399c <HAL_InitTick+0x58>)
 8003952:	781b      	ldrb	r3, [r3, #0]
 8003954:	4619      	mov	r1, r3
 8003956:	f44f 737a 	mov.w	r3, #1000	@ 0x3e8
 800395a:	fbb3 f3f1 	udiv	r3, r3, r1
 800395e:	fbb2 f3f3 	udiv	r3, r2, r3
 8003962:	4618      	mov	r0, r3
 8003964:	f000 f967 	bl	8003c36 <HAL_SYSTICK_Config>
 8003968:	4603      	mov	r3, r0
 800396a:	2b00      	cmp	r3, #0
 800396c:	d001      	beq.n	8003972 <HAL_InitTick+0x2e>
 800396e:	2301      	movs	r3, #1
 8003970:	e00e      	b.n	8003990 <HAL_InitTick+0x4c>
 8003972:	687b      	ldr	r3, [r7, #4]
 8003974:	2b0f      	cmp	r3, #15
 8003976:	d80a      	bhi.n	800398e <HAL_InitTick+0x4a>
 8003978:	2200      	movs	r2, #0
 800397a:	6879      	ldr	r1, [r7, #4]
 800397c:	f04f 30ff 	mov.w	r0, #4294967295
 8003980:	f000 f92f 	bl	8003be2 <HAL_NVIC_SetPriority>
 8003984:	4a06      	ldr	r2, [pc, #24]	@ (80039a0 <HAL_InitTick+0x5c>)
 8003986:	687b      	ldr	r3, [r7, #4]
 8003988:	6013      	str	r3, [r2, #0]
 800398a:	2300      	movs	r3, #0
 800398c:	e000      	b.n	8003990 <HAL_InitTick+0x4c>
 800398e:	2301      	movs	r3, #1
 8003990:	4618      	mov	r0, r3
 8003992:	3708      	adds	r7, #8
 8003994:	46bd      	mov	sp, r7
 8003996:	bd80      	pop	{r7, pc}
 8003998:	20000028 	.word	0x20000028
 800399c:	20000030 	.word	0x20000030
 80039a0:	2000002c 	.word	0x2000002c

080039a4 <HAL_IncTick>:
 80039a4:	b480      	push	{r7}
 80039a6:	af00      	add	r7, sp, #0
 80039a8:	4b06      	ldr	r3, [pc, #24]	@ (80039c4 <HAL_IncTick+0x20>)
 80039aa:	781b      	ldrb	r3, [r3, #0]
 80039ac:	461a      	mov	r2, r3
 80039ae:	4b06      	ldr	r3, [pc, #24]	@ (80039c8 <HAL_IncTick+0x24>)
 80039b0:	681b      	ldr	r3, [r3, #0]
 80039b2:	4413      	add	r3, r2
 80039b4:	4a04      	ldr	r2, [pc, #16]	@ (80039c8 <HAL_IncTick+0x24>)
 80039b6:	6013      	str	r3, [r2, #0]
 80039b8:	bf00      	nop
 80039ba:	46bd      	mov	sp, r7
 80039bc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80039c0:	4770      	bx	lr
 80039c2:	bf00      	nop
 80039c4:	20000030 	.word	0x20000030
 80039c8:	200006f8 	.word	0x200006f8

080039cc <HAL_GetTick>:
 80039cc:	b480      	push	{r7}
 80039ce:	af00      	add	r7, sp, #0
 80039d0:	4b03      	ldr	r3, [pc, #12]	@ (80039e0 <HAL_GetTick+0x14>)
 80039d2:	681b      	ldr	r3, [r3, #0]
 80039d4:	4618      	mov	r0, r3
 80039d6:	46bd      	mov	sp, r7
 80039d8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80039dc:	4770      	bx	lr
 80039de:	bf00      	nop
 80039e0:	200006f8 	.word	0x200006f8

080039e4 <HAL_Delay>:
 80039e4:	b580      	push	{r7, lr}
 80039e6:	b084      	sub	sp, #16
 80039e8:	af00      	add	r7, sp, #0
 80039ea:	6078      	str	r0, [r7, #4]
 80039ec:	f7ff ffee 	bl	80039cc <HAL_GetTick>
 80039f0:	60b8      	str	r0, [r7, #8]
 80039f2:	687b      	ldr	r3, [r7, #4]
 80039f4:	60fb      	str	r3, [r7, #12]
 80039f6:	68fb      	ldr	r3, [r7, #12]
 80039f8:	f1b3 3fff 	cmp.w	r3, #4294967295
 80039fc:	d005      	beq.n	8003a0a <HAL_Delay+0x26>
 80039fe:	4b0a      	ldr	r3, [pc, #40]	@ (8003a28 <HAL_Delay+0x44>)
 8003a00:	781b      	ldrb	r3, [r3, #0]
 8003a02:	461a      	mov	r2, r3
 8003a04:	68fb      	ldr	r3, [r7, #12]
 8003a06:	4413      	add	r3, r2
 8003a08:	60fb      	str	r3, [r7, #12]
 8003a0a:	bf00      	nop
 8003a0c:	f7ff ffde 	bl	80039cc <HAL_GetTick>
 8003a10:	4602      	mov	r2, r0
 8003a12:	68bb      	ldr	r3, [r7, #8]
 8003a14:	1ad3      	subs	r3, r2, r3
 8003a16:	68fa      	ldr	r2, [r7, #12]
 8003a18:	429a      	cmp	r2, r3
 8003a1a:	d8f7      	bhi.n	8003a0c <HAL_Delay+0x28>
 8003a1c:	bf00      	nop
 8003a1e:	bf00      	nop
 8003a20:	3710      	adds	r7, #16
 8003a22:	46bd      	mov	sp, r7
 8003a24:	bd80      	pop	{r7, pc}
 8003a26:	bf00      	nop
 8003a28:	20000030 	.word	0x20000030

08003a2c <__NVIC_SetPriorityGrouping>:
 8003a2c:	b480      	push	{r7}
 8003a2e:	b085      	sub	sp, #20
 8003a30:	af00      	add	r7, sp, #0
 8003a32:	6078      	str	r0, [r7, #4]
 8003a34:	687b      	ldr	r3, [r7, #4]
 8003a36:	f003 0307 	and.w	r3, r3, #7
 8003a3a:	60fb      	str	r3, [r7, #12]
 8003a3c:	4b0c      	ldr	r3, [pc, #48]	@ (8003a70 <__NVIC_SetPriorityGrouping+0x44>)
 8003a3e:	68db      	ldr	r3, [r3, #12]
 8003a40:	60bb      	str	r3, [r7, #8]
 8003a42:	68ba      	ldr	r2, [r7, #8]
 8003a44:	f64f 03ff 	movw	r3, #63743	@ 0xf8ff
 8003a48:	4013      	ands	r3, r2
 8003a4a:	60bb      	str	r3, [r7, #8]
 8003a4c:	68fb      	ldr	r3, [r7, #12]
 8003a4e:	021a      	lsls	r2, r3, #8
 8003a50:	68bb      	ldr	r3, [r7, #8]
 8003a52:	4313      	orrs	r3, r2
 8003a54:	f043 63bf 	orr.w	r3, r3, #100139008	@ 0x5f80000
 8003a58:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 8003a5c:	60bb      	str	r3, [r7, #8]
 8003a5e:	4a04      	ldr	r2, [pc, #16]	@ (8003a70 <__NVIC_SetPriorityGrouping+0x44>)
 8003a60:	68bb      	ldr	r3, [r7, #8]
 8003a62:	60d3      	str	r3, [r2, #12]
 8003a64:	bf00      	nop
 8003a66:	3714      	adds	r7, #20
 8003a68:	46bd      	mov	sp, r7
 8003a6a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003a6e:	4770      	bx	lr
 8003a70:	e000ed00 	.word	0xe000ed00

08003a74 <__NVIC_GetPriorityGrouping>:
 8003a74:	b480      	push	{r7}
 8003a76:	af00      	add	r7, sp, #0
 8003a78:	4b04      	ldr	r3, [pc, #16]	@ (8003a8c <__NVIC_GetPriorityGrouping+0x18>)
 8003a7a:	68db      	ldr	r3, [r3, #12]
 8003a7c:	0a1b      	lsrs	r3, r3, #8
 8003a7e:	f003 0307 	and.w	r3, r3, #7
 8003a82:	4618      	mov	r0, r3
 8003a84:	46bd      	mov	sp, r7
 8003a86:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003a8a:	4770      	bx	lr
 8003a8c:	e000ed00 	.word	0xe000ed00

08003a90 <__NVIC_EnableIRQ>:
 8003a90:	b480      	push	{r7}
 8003a92:	b083      	sub	sp, #12
 8003a94:	af00      	add	r7, sp, #0
 8003a96:	4603      	mov	r3, r0
 8003a98:	71fb      	strb	r3, [r7, #7]
 8003a9a:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8003a9e:	2b00      	cmp	r3, #0
 8003aa0:	db0b      	blt.n	8003aba <__NVIC_EnableIRQ+0x2a>
 8003aa2:	79fb      	ldrb	r3, [r7, #7]
 8003aa4:	f003 021f 	and.w	r2, r3, #31
 8003aa8:	4907      	ldr	r1, [pc, #28]	@ (8003ac8 <__NVIC_EnableIRQ+0x38>)
 8003aaa:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8003aae:	095b      	lsrs	r3, r3, #5
 8003ab0:	2001      	movs	r0, #1
 8003ab2:	fa00 f202 	lsl.w	r2, r0, r2
 8003ab6:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8003aba:	bf00      	nop
 8003abc:	370c      	adds	r7, #12
 8003abe:	46bd      	mov	sp, r7
 8003ac0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003ac4:	4770      	bx	lr
 8003ac6:	bf00      	nop
 8003ac8:	e000e100 	.word	0xe000e100

08003acc <__NVIC_SetPriority>:
 8003acc:	b480      	push	{r7}
 8003ace:	b083      	sub	sp, #12
 8003ad0:	af00      	add	r7, sp, #0
 8003ad2:	4603      	mov	r3, r0
 8003ad4:	6039      	str	r1, [r7, #0]
 8003ad6:	71fb      	strb	r3, [r7, #7]
 8003ad8:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8003adc:	2b00      	cmp	r3, #0
 8003ade:	db0a      	blt.n	8003af6 <__NVIC_SetPriority+0x2a>
 8003ae0:	683b      	ldr	r3, [r7, #0]
 8003ae2:	b2da      	uxtb	r2, r3
 8003ae4:	490c      	ldr	r1, [pc, #48]	@ (8003b18 <__NVIC_SetPriority+0x4c>)
 8003ae6:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8003aea:	0112      	lsls	r2, r2, #4
 8003aec:	b2d2      	uxtb	r2, r2
 8003aee:	440b      	add	r3, r1
 8003af0:	f883 2300 	strb.w	r2, [r3, #768]	@ 0x300
 8003af4:	e00a      	b.n	8003b0c <__NVIC_SetPriority+0x40>
 8003af6:	683b      	ldr	r3, [r7, #0]
 8003af8:	b2da      	uxtb	r2, r3
 8003afa:	4908      	ldr	r1, [pc, #32]	@ (8003b1c <__NVIC_SetPriority+0x50>)
 8003afc:	79fb      	ldrb	r3, [r7, #7]
 8003afe:	f003 030f 	and.w	r3, r3, #15
 8003b02:	3b04      	subs	r3, #4
 8003b04:	0112      	lsls	r2, r2, #4
 8003b06:	b2d2      	uxtb	r2, r2
 8003b08:	440b      	add	r3, r1
 8003b0a:	761a      	strb	r2, [r3, #24]
 8003b0c:	bf00      	nop
 8003b0e:	370c      	adds	r7, #12
 8003b10:	46bd      	mov	sp, r7
 8003b12:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003b16:	4770      	bx	lr
 8003b18:	e000e100 	.word	0xe000e100
 8003b1c:	e000ed00 	.word	0xe000ed00

08003b20 <NVIC_EncodePriority>:
 8003b20:	b480      	push	{r7}
 8003b22:	b089      	sub	sp, #36	@ 0x24
 8003b24:	af00      	add	r7, sp, #0
 8003b26:	60f8      	str	r0, [r7, #12]
 8003b28:	60b9      	str	r1, [r7, #8]
 8003b2a:	607a      	str	r2, [r7, #4]
 8003b2c:	68fb      	ldr	r3, [r7, #12]
 8003b2e:	f003 0307 	and.w	r3, r3, #7
 8003b32:	61fb      	str	r3, [r7, #28]
 8003b34:	69fb      	ldr	r3, [r7, #28]
 8003b36:	f1c3 0307 	rsb	r3, r3, #7
 8003b3a:	2b04      	cmp	r3, #4
 8003b3c:	bf28      	it	cs
 8003b3e:	2304      	movcs	r3, #4
 8003b40:	61bb      	str	r3, [r7, #24]
 8003b42:	69fb      	ldr	r3, [r7, #28]
 8003b44:	3304      	adds	r3, #4
 8003b46:	2b06      	cmp	r3, #6
 8003b48:	d902      	bls.n	8003b50 <NVIC_EncodePriority+0x30>
 8003b4a:	69fb      	ldr	r3, [r7, #28]
 8003b4c:	3b03      	subs	r3, #3
 8003b4e:	e000      	b.n	8003b52 <NVIC_EncodePriority+0x32>
 8003b50:	2300      	movs	r3, #0
 8003b52:	617b      	str	r3, [r7, #20]
 8003b54:	f04f 32ff 	mov.w	r2, #4294967295
 8003b58:	69bb      	ldr	r3, [r7, #24]
 8003b5a:	fa02 f303 	lsl.w	r3, r2, r3
 8003b5e:	43da      	mvns	r2, r3
 8003b60:	68bb      	ldr	r3, [r7, #8]
 8003b62:	401a      	ands	r2, r3
 8003b64:	697b      	ldr	r3, [r7, #20]
 8003b66:	409a      	lsls	r2, r3
 8003b68:	f04f 31ff 	mov.w	r1, #4294967295
 8003b6c:	697b      	ldr	r3, [r7, #20]
 8003b6e:	fa01 f303 	lsl.w	r3, r1, r3
 8003b72:	43d9      	mvns	r1, r3
 8003b74:	687b      	ldr	r3, [r7, #4]
 8003b76:	400b      	ands	r3, r1
 8003b78:	4313      	orrs	r3, r2
 8003b7a:	4618      	mov	r0, r3
 8003b7c:	3724      	adds	r7, #36	@ 0x24
 8003b7e:	46bd      	mov	sp, r7
 8003b80:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003b84:	4770      	bx	lr
	...

08003b88 <SysTick_Config>:
 8003b88:	b580      	push	{r7, lr}
 8003b8a:	b082      	sub	sp, #8
 8003b8c:	af00      	add	r7, sp, #0
 8003b8e:	6078      	str	r0, [r7, #4]
 8003b90:	687b      	ldr	r3, [r7, #4]
 8003b92:	3b01      	subs	r3, #1
 8003b94:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 8003b98:	d301      	bcc.n	8003b9e <SysTick_Config+0x16>
 8003b9a:	2301      	movs	r3, #1
 8003b9c:	e00f      	b.n	8003bbe <SysTick_Config+0x36>
 8003b9e:	4a0a      	ldr	r2, [pc, #40]	@ (8003bc8 <SysTick_Config+0x40>)
 8003ba0:	687b      	ldr	r3, [r7, #4]
 8003ba2:	3b01      	subs	r3, #1
 8003ba4:	6053      	str	r3, [r2, #4]
 8003ba6:	210f      	movs	r1, #15
 8003ba8:	f04f 30ff 	mov.w	r0, #4294967295
 8003bac:	f7ff ff8e 	bl	8003acc <__NVIC_SetPriority>
 8003bb0:	4b05      	ldr	r3, [pc, #20]	@ (8003bc8 <SysTick_Config+0x40>)
 8003bb2:	2200      	movs	r2, #0
 8003bb4:	609a      	str	r2, [r3, #8]
 8003bb6:	4b04      	ldr	r3, [pc, #16]	@ (8003bc8 <SysTick_Config+0x40>)
 8003bb8:	2207      	movs	r2, #7
 8003bba:	601a      	str	r2, [r3, #0]
 8003bbc:	2300      	movs	r3, #0
 8003bbe:	4618      	mov	r0, r3
 8003bc0:	3708      	adds	r7, #8
 8003bc2:	46bd      	mov	sp, r7
 8003bc4:	bd80      	pop	{r7, pc}
 8003bc6:	bf00      	nop
 8003bc8:	e000e010 	.word	0xe000e010

08003bcc <HAL_NVIC_SetPriorityGrouping>:
 8003bcc:	b580      	push	{r7, lr}
 8003bce:	b082      	sub	sp, #8
 8003bd0:	af00      	add	r7, sp, #0
 8003bd2:	6078      	str	r0, [r7, #4]
 8003bd4:	6878      	ldr	r0, [r7, #4]
 8003bd6:	f7ff ff29 	bl	8003a2c <__NVIC_SetPriorityGrouping>
 8003bda:	bf00      	nop
 8003bdc:	3708      	adds	r7, #8
 8003bde:	46bd      	mov	sp, r7
 8003be0:	bd80      	pop	{r7, pc}

08003be2 <HAL_NVIC_SetPriority>:
 8003be2:	b580      	push	{r7, lr}
 8003be4:	b086      	sub	sp, #24
 8003be6:	af00      	add	r7, sp, #0
 8003be8:	4603      	mov	r3, r0
 8003bea:	60b9      	str	r1, [r7, #8]
 8003bec:	607a      	str	r2, [r7, #4]
 8003bee:	73fb      	strb	r3, [r7, #15]
 8003bf0:	2300      	movs	r3, #0
 8003bf2:	617b      	str	r3, [r7, #20]
 8003bf4:	f7ff ff3e 	bl	8003a74 <__NVIC_GetPriorityGrouping>
 8003bf8:	6178      	str	r0, [r7, #20]
 8003bfa:	687a      	ldr	r2, [r7, #4]
 8003bfc:	68b9      	ldr	r1, [r7, #8]
 8003bfe:	6978      	ldr	r0, [r7, #20]
 8003c00:	f7ff ff8e 	bl	8003b20 <NVIC_EncodePriority>
 8003c04:	4602      	mov	r2, r0
 8003c06:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8003c0a:	4611      	mov	r1, r2
 8003c0c:	4618      	mov	r0, r3
 8003c0e:	f7ff ff5d 	bl	8003acc <__NVIC_SetPriority>
 8003c12:	bf00      	nop
 8003c14:	3718      	adds	r7, #24
 8003c16:	46bd      	mov	sp, r7
 8003c18:	bd80      	pop	{r7, pc}

08003c1a <HAL_NVIC_EnableIRQ>:
 8003c1a:	b580      	push	{r7, lr}
 8003c1c:	b082      	sub	sp, #8
 8003c1e:	af00      	add	r7, sp, #0
 8003c20:	4603      	mov	r3, r0
 8003c22:	71fb      	strb	r3, [r7, #7]
 8003c24:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8003c28:	4618      	mov	r0, r3
 8003c2a:	f7ff ff31 	bl	8003a90 <__NVIC_EnableIRQ>
 8003c2e:	bf00      	nop
 8003c30:	3708      	adds	r7, #8
 8003c32:	46bd      	mov	sp, r7
 8003c34:	bd80      	pop	{r7, pc}

08003c36 <HAL_SYSTICK_Config>:
 8003c36:	b580      	push	{r7, lr}
 8003c38:	b082      	sub	sp, #8
 8003c3a:	af00      	add	r7, sp, #0
 8003c3c:	6078      	str	r0, [r7, #4]
 8003c3e:	6878      	ldr	r0, [r7, #4]
 8003c40:	f7ff ffa2 	bl	8003b88 <SysTick_Config>
 8003c44:	4603      	mov	r3, r0
 8003c46:	4618      	mov	r0, r3
 8003c48:	3708      	adds	r7, #8
 8003c4a:	46bd      	mov	sp, r7
 8003c4c:	bd80      	pop	{r7, pc}
	...

08003c50 <HAL_DMA_Init>:
 8003c50:	b580      	push	{r7, lr}
 8003c52:	b086      	sub	sp, #24
 8003c54:	af00      	add	r7, sp, #0
 8003c56:	6078      	str	r0, [r7, #4]
 8003c58:	2300      	movs	r3, #0
 8003c5a:	617b      	str	r3, [r7, #20]
 8003c5c:	f7ff feb6 	bl	80039cc <HAL_GetTick>
 8003c60:	6138      	str	r0, [r7, #16]
 8003c62:	687b      	ldr	r3, [r7, #4]
 8003c64:	2b00      	cmp	r3, #0
 8003c66:	d101      	bne.n	8003c6c <HAL_DMA_Init+0x1c>
 8003c68:	2301      	movs	r3, #1
 8003c6a:	e099      	b.n	8003da0 <HAL_DMA_Init+0x150>
 8003c6c:	687b      	ldr	r3, [r7, #4]
 8003c6e:	2202      	movs	r2, #2
 8003c70:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 8003c74:	687b      	ldr	r3, [r7, #4]
 8003c76:	2200      	movs	r2, #0
 8003c78:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 8003c7c:	687b      	ldr	r3, [r7, #4]
 8003c7e:	681b      	ldr	r3, [r3, #0]
 8003c80:	681a      	ldr	r2, [r3, #0]
 8003c82:	687b      	ldr	r3, [r7, #4]
 8003c84:	681b      	ldr	r3, [r3, #0]
 8003c86:	f022 0201 	bic.w	r2, r2, #1
 8003c8a:	601a      	str	r2, [r3, #0]
 8003c8c:	e00f      	b.n	8003cae <HAL_DMA_Init+0x5e>
 8003c8e:	f7ff fe9d 	bl	80039cc <HAL_GetTick>
 8003c92:	4602      	mov	r2, r0
 8003c94:	693b      	ldr	r3, [r7, #16]
 8003c96:	1ad3      	subs	r3, r2, r3
 8003c98:	2b05      	cmp	r3, #5
 8003c9a:	d908      	bls.n	8003cae <HAL_DMA_Init+0x5e>
 8003c9c:	687b      	ldr	r3, [r7, #4]
 8003c9e:	2220      	movs	r2, #32
 8003ca0:	655a      	str	r2, [r3, #84]	@ 0x54
 8003ca2:	687b      	ldr	r3, [r7, #4]
 8003ca4:	2203      	movs	r2, #3
 8003ca6:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 8003caa:	2303      	movs	r3, #3
 8003cac:	e078      	b.n	8003da0 <HAL_DMA_Init+0x150>
 8003cae:	687b      	ldr	r3, [r7, #4]
 8003cb0:	681b      	ldr	r3, [r3, #0]
 8003cb2:	681b      	ldr	r3, [r3, #0]
 8003cb4:	f003 0301 	and.w	r3, r3, #1
 8003cb8:	2b00      	cmp	r3, #0
 8003cba:	d1e8      	bne.n	8003c8e <HAL_DMA_Init+0x3e>
 8003cbc:	687b      	ldr	r3, [r7, #4]
 8003cbe:	681b      	ldr	r3, [r3, #0]
 8003cc0:	681b      	ldr	r3, [r3, #0]
 8003cc2:	617b      	str	r3, [r7, #20]
 8003cc4:	697a      	ldr	r2, [r7, #20]
 8003cc6:	4b38      	ldr	r3, [pc, #224]	@ (8003da8 <HAL_DMA_Init+0x158>)
 8003cc8:	4013      	ands	r3, r2
 8003cca:	617b      	str	r3, [r7, #20]
 8003ccc:	687b      	ldr	r3, [r7, #4]
 8003cce:	685a      	ldr	r2, [r3, #4]
 8003cd0:	687b      	ldr	r3, [r7, #4]
 8003cd2:	689b      	ldr	r3, [r3, #8]
 8003cd4:	431a      	orrs	r2, r3
 8003cd6:	687b      	ldr	r3, [r7, #4]
 8003cd8:	68db      	ldr	r3, [r3, #12]
 8003cda:	431a      	orrs	r2, r3
 8003cdc:	687b      	ldr	r3, [r7, #4]
 8003cde:	691b      	ldr	r3, [r3, #16]
 8003ce0:	431a      	orrs	r2, r3
 8003ce2:	687b      	ldr	r3, [r7, #4]
 8003ce4:	695b      	ldr	r3, [r3, #20]
 8003ce6:	431a      	orrs	r2, r3
 8003ce8:	687b      	ldr	r3, [r7, #4]
 8003cea:	699b      	ldr	r3, [r3, #24]
 8003cec:	431a      	orrs	r2, r3
 8003cee:	687b      	ldr	r3, [r7, #4]
 8003cf0:	69db      	ldr	r3, [r3, #28]
 8003cf2:	431a      	orrs	r2, r3
 8003cf4:	687b      	ldr	r3, [r7, #4]
 8003cf6:	6a1b      	ldr	r3, [r3, #32]
 8003cf8:	4313      	orrs	r3, r2
 8003cfa:	697a      	ldr	r2, [r7, #20]
 8003cfc:	4313      	orrs	r3, r2
 8003cfe:	617b      	str	r3, [r7, #20]
 8003d00:	687b      	ldr	r3, [r7, #4]
 8003d02:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003d04:	2b04      	cmp	r3, #4
 8003d06:	d107      	bne.n	8003d18 <HAL_DMA_Init+0xc8>
 8003d08:	687b      	ldr	r3, [r7, #4]
 8003d0a:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 8003d0c:	687b      	ldr	r3, [r7, #4]
 8003d0e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8003d10:	4313      	orrs	r3, r2
 8003d12:	697a      	ldr	r2, [r7, #20]
 8003d14:	4313      	orrs	r3, r2
 8003d16:	617b      	str	r3, [r7, #20]
 8003d18:	687b      	ldr	r3, [r7, #4]
 8003d1a:	681b      	ldr	r3, [r3, #0]
 8003d1c:	697a      	ldr	r2, [r7, #20]
 8003d1e:	601a      	str	r2, [r3, #0]
 8003d20:	687b      	ldr	r3, [r7, #4]
 8003d22:	681b      	ldr	r3, [r3, #0]
 8003d24:	695b      	ldr	r3, [r3, #20]
 8003d26:	617b      	str	r3, [r7, #20]
 8003d28:	697b      	ldr	r3, [r7, #20]
 8003d2a:	f023 0307 	bic.w	r3, r3, #7
 8003d2e:	617b      	str	r3, [r7, #20]
 8003d30:	687b      	ldr	r3, [r7, #4]
 8003d32:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003d34:	697a      	ldr	r2, [r7, #20]
 8003d36:	4313      	orrs	r3, r2
 8003d38:	617b      	str	r3, [r7, #20]
 8003d3a:	687b      	ldr	r3, [r7, #4]
 8003d3c:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003d3e:	2b04      	cmp	r3, #4
 8003d40:	d117      	bne.n	8003d72 <HAL_DMA_Init+0x122>
 8003d42:	687b      	ldr	r3, [r7, #4]
 8003d44:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8003d46:	697a      	ldr	r2, [r7, #20]
 8003d48:	4313      	orrs	r3, r2
 8003d4a:	617b      	str	r3, [r7, #20]
 8003d4c:	687b      	ldr	r3, [r7, #4]
 8003d4e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8003d50:	2b00      	cmp	r3, #0
 8003d52:	d00e      	beq.n	8003d72 <HAL_DMA_Init+0x122>
 8003d54:	6878      	ldr	r0, [r7, #4]
 8003d56:	f000 fb01 	bl	800435c <DMA_CheckFifoParam>
 8003d5a:	4603      	mov	r3, r0
 8003d5c:	2b00      	cmp	r3, #0
 8003d5e:	d008      	beq.n	8003d72 <HAL_DMA_Init+0x122>
 8003d60:	687b      	ldr	r3, [r7, #4]
 8003d62:	2240      	movs	r2, #64	@ 0x40
 8003d64:	655a      	str	r2, [r3, #84]	@ 0x54
 8003d66:	687b      	ldr	r3, [r7, #4]
 8003d68:	2201      	movs	r2, #1
 8003d6a:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 8003d6e:	2301      	movs	r3, #1
 8003d70:	e016      	b.n	8003da0 <HAL_DMA_Init+0x150>
 8003d72:	687b      	ldr	r3, [r7, #4]
 8003d74:	681b      	ldr	r3, [r3, #0]
 8003d76:	697a      	ldr	r2, [r7, #20]
 8003d78:	615a      	str	r2, [r3, #20]
 8003d7a:	6878      	ldr	r0, [r7, #4]
 8003d7c:	f000 fab8 	bl	80042f0 <DMA_CalcBaseAndBitshift>
 8003d80:	4603      	mov	r3, r0
 8003d82:	60fb      	str	r3, [r7, #12]
 8003d84:	687b      	ldr	r3, [r7, #4]
 8003d86:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8003d88:	223f      	movs	r2, #63	@ 0x3f
 8003d8a:	409a      	lsls	r2, r3
 8003d8c:	68fb      	ldr	r3, [r7, #12]
 8003d8e:	609a      	str	r2, [r3, #8]
 8003d90:	687b      	ldr	r3, [r7, #4]
 8003d92:	2200      	movs	r2, #0
 8003d94:	655a      	str	r2, [r3, #84]	@ 0x54
 8003d96:	687b      	ldr	r3, [r7, #4]
 8003d98:	2201      	movs	r2, #1
 8003d9a:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 8003d9e:	2300      	movs	r3, #0
 8003da0:	4618      	mov	r0, r3
 8003da2:	3718      	adds	r7, #24
 8003da4:	46bd      	mov	sp, r7
 8003da6:	bd80      	pop	{r7, pc}
 8003da8:	f010803f 	.word	0xf010803f

08003dac <HAL_DMA_Start_IT>:
 8003dac:	b580      	push	{r7, lr}
 8003dae:	b086      	sub	sp, #24
 8003db0:	af00      	add	r7, sp, #0
 8003db2:	60f8      	str	r0, [r7, #12]
 8003db4:	60b9      	str	r1, [r7, #8]
 8003db6:	607a      	str	r2, [r7, #4]
 8003db8:	603b      	str	r3, [r7, #0]
 8003dba:	2300      	movs	r3, #0
 8003dbc:	75fb      	strb	r3, [r7, #23]
 8003dbe:	68fb      	ldr	r3, [r7, #12]
 8003dc0:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8003dc2:	613b      	str	r3, [r7, #16]
 8003dc4:	68fb      	ldr	r3, [r7, #12]
 8003dc6:	f893 3034 	ldrb.w	r3, [r3, #52]	@ 0x34
 8003dca:	2b01      	cmp	r3, #1
 8003dcc:	d101      	bne.n	8003dd2 <HAL_DMA_Start_IT+0x26>
 8003dce:	2302      	movs	r3, #2
 8003dd0:	e040      	b.n	8003e54 <HAL_DMA_Start_IT+0xa8>
 8003dd2:	68fb      	ldr	r3, [r7, #12]
 8003dd4:	2201      	movs	r2, #1
 8003dd6:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 8003dda:	68fb      	ldr	r3, [r7, #12]
 8003ddc:	f893 3035 	ldrb.w	r3, [r3, #53]	@ 0x35
 8003de0:	b2db      	uxtb	r3, r3
 8003de2:	2b01      	cmp	r3, #1
 8003de4:	d12f      	bne.n	8003e46 <HAL_DMA_Start_IT+0x9a>
 8003de6:	68fb      	ldr	r3, [r7, #12]
 8003de8:	2202      	movs	r2, #2
 8003dea:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 8003dee:	68fb      	ldr	r3, [r7, #12]
 8003df0:	2200      	movs	r2, #0
 8003df2:	655a      	str	r2, [r3, #84]	@ 0x54
 8003df4:	683b      	ldr	r3, [r7, #0]
 8003df6:	687a      	ldr	r2, [r7, #4]
 8003df8:	68b9      	ldr	r1, [r7, #8]
 8003dfa:	68f8      	ldr	r0, [r7, #12]
 8003dfc:	f000 fa4a 	bl	8004294 <DMA_SetConfig>
 8003e00:	68fb      	ldr	r3, [r7, #12]
 8003e02:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8003e04:	223f      	movs	r2, #63	@ 0x3f
 8003e06:	409a      	lsls	r2, r3
 8003e08:	693b      	ldr	r3, [r7, #16]
 8003e0a:	609a      	str	r2, [r3, #8]
 8003e0c:	68fb      	ldr	r3, [r7, #12]
 8003e0e:	681b      	ldr	r3, [r3, #0]
 8003e10:	681a      	ldr	r2, [r3, #0]
 8003e12:	68fb      	ldr	r3, [r7, #12]
 8003e14:	681b      	ldr	r3, [r3, #0]
 8003e16:	f042 0216 	orr.w	r2, r2, #22
 8003e1a:	601a      	str	r2, [r3, #0]
 8003e1c:	68fb      	ldr	r3, [r7, #12]
 8003e1e:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003e20:	2b00      	cmp	r3, #0
 8003e22:	d007      	beq.n	8003e34 <HAL_DMA_Start_IT+0x88>
 8003e24:	68fb      	ldr	r3, [r7, #12]
 8003e26:	681b      	ldr	r3, [r3, #0]
 8003e28:	681a      	ldr	r2, [r3, #0]
 8003e2a:	68fb      	ldr	r3, [r7, #12]
 8003e2c:	681b      	ldr	r3, [r3, #0]
 8003e2e:	f042 0208 	orr.w	r2, r2, #8
 8003e32:	601a      	str	r2, [r3, #0]
 8003e34:	68fb      	ldr	r3, [r7, #12]
 8003e36:	681b      	ldr	r3, [r3, #0]
 8003e38:	681a      	ldr	r2, [r3, #0]
 8003e3a:	68fb      	ldr	r3, [r7, #12]
 8003e3c:	681b      	ldr	r3, [r3, #0]
 8003e3e:	f042 0201 	orr.w	r2, r2, #1
 8003e42:	601a      	str	r2, [r3, #0]
 8003e44:	e005      	b.n	8003e52 <HAL_DMA_Start_IT+0xa6>
 8003e46:	68fb      	ldr	r3, [r7, #12]
 8003e48:	2200      	movs	r2, #0
 8003e4a:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 8003e4e:	2302      	movs	r3, #2
 8003e50:	75fb      	strb	r3, [r7, #23]
 8003e52:	7dfb      	ldrb	r3, [r7, #23]
 8003e54:	4618      	mov	r0, r3
 8003e56:	3718      	adds	r7, #24
 8003e58:	46bd      	mov	sp, r7
 8003e5a:	bd80      	pop	{r7, pc}

08003e5c <HAL_DMA_Abort>:
 8003e5c:	b580      	push	{r7, lr}
 8003e5e:	b084      	sub	sp, #16
 8003e60:	af00      	add	r7, sp, #0
 8003e62:	6078      	str	r0, [r7, #4]
 8003e64:	687b      	ldr	r3, [r7, #4]
 8003e66:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8003e68:	60fb      	str	r3, [r7, #12]
 8003e6a:	f7ff fdaf 	bl	80039cc <HAL_GetTick>
 8003e6e:	60b8      	str	r0, [r7, #8]
 8003e70:	687b      	ldr	r3, [r7, #4]
 8003e72:	f893 3035 	ldrb.w	r3, [r3, #53]	@ 0x35
 8003e76:	b2db      	uxtb	r3, r3
 8003e78:	2b02      	cmp	r3, #2
 8003e7a:	d008      	beq.n	8003e8e <HAL_DMA_Abort+0x32>
 8003e7c:	687b      	ldr	r3, [r7, #4]
 8003e7e:	2280      	movs	r2, #128	@ 0x80
 8003e80:	655a      	str	r2, [r3, #84]	@ 0x54
 8003e82:	687b      	ldr	r3, [r7, #4]
 8003e84:	2200      	movs	r2, #0
 8003e86:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 8003e8a:	2301      	movs	r3, #1
 8003e8c:	e052      	b.n	8003f34 <HAL_DMA_Abort+0xd8>
 8003e8e:	687b      	ldr	r3, [r7, #4]
 8003e90:	681b      	ldr	r3, [r3, #0]
 8003e92:	681a      	ldr	r2, [r3, #0]
 8003e94:	687b      	ldr	r3, [r7, #4]
 8003e96:	681b      	ldr	r3, [r3, #0]
 8003e98:	f022 0216 	bic.w	r2, r2, #22
 8003e9c:	601a      	str	r2, [r3, #0]
 8003e9e:	687b      	ldr	r3, [r7, #4]
 8003ea0:	681b      	ldr	r3, [r3, #0]
 8003ea2:	695a      	ldr	r2, [r3, #20]
 8003ea4:	687b      	ldr	r3, [r7, #4]
 8003ea6:	681b      	ldr	r3, [r3, #0]
 8003ea8:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
 8003eac:	615a      	str	r2, [r3, #20]
 8003eae:	687b      	ldr	r3, [r7, #4]
 8003eb0:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003eb2:	2b00      	cmp	r3, #0
 8003eb4:	d103      	bne.n	8003ebe <HAL_DMA_Abort+0x62>
 8003eb6:	687b      	ldr	r3, [r7, #4]
 8003eb8:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8003eba:	2b00      	cmp	r3, #0
 8003ebc:	d007      	beq.n	8003ece <HAL_DMA_Abort+0x72>
 8003ebe:	687b      	ldr	r3, [r7, #4]
 8003ec0:	681b      	ldr	r3, [r3, #0]
 8003ec2:	681a      	ldr	r2, [r3, #0]
 8003ec4:	687b      	ldr	r3, [r7, #4]
 8003ec6:	681b      	ldr	r3, [r3, #0]
 8003ec8:	f022 0208 	bic.w	r2, r2, #8
 8003ecc:	601a      	str	r2, [r3, #0]
 8003ece:	687b      	ldr	r3, [r7, #4]
 8003ed0:	681b      	ldr	r3, [r3, #0]
 8003ed2:	681a      	ldr	r2, [r3, #0]
 8003ed4:	687b      	ldr	r3, [r7, #4]
 8003ed6:	681b      	ldr	r3, [r3, #0]
 8003ed8:	f022 0201 	bic.w	r2, r2, #1
 8003edc:	601a      	str	r2, [r3, #0]
 8003ede:	e013      	b.n	8003f08 <HAL_DMA_Abort+0xac>
 8003ee0:	f7ff fd74 	bl	80039cc <HAL_GetTick>
 8003ee4:	4602      	mov	r2, r0
 8003ee6:	68bb      	ldr	r3, [r7, #8]
 8003ee8:	1ad3      	subs	r3, r2, r3
 8003eea:	2b05      	cmp	r3, #5
 8003eec:	d90c      	bls.n	8003f08 <HAL_DMA_Abort+0xac>
 8003eee:	687b      	ldr	r3, [r7, #4]
 8003ef0:	2220      	movs	r2, #32
 8003ef2:	655a      	str	r2, [r3, #84]	@ 0x54
 8003ef4:	687b      	ldr	r3, [r7, #4]
 8003ef6:	2203      	movs	r2, #3
 8003ef8:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 8003efc:	687b      	ldr	r3, [r7, #4]
 8003efe:	2200      	movs	r2, #0
 8003f00:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 8003f04:	2303      	movs	r3, #3
 8003f06:	e015      	b.n	8003f34 <HAL_DMA_Abort+0xd8>
 8003f08:	687b      	ldr	r3, [r7, #4]
 8003f0a:	681b      	ldr	r3, [r3, #0]
 8003f0c:	681b      	ldr	r3, [r3, #0]
 8003f0e:	f003 0301 	and.w	r3, r3, #1
 8003f12:	2b00      	cmp	r3, #0
 8003f14:	d1e4      	bne.n	8003ee0 <HAL_DMA_Abort+0x84>
 8003f16:	687b      	ldr	r3, [r7, #4]
 8003f18:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8003f1a:	223f      	movs	r2, #63	@ 0x3f
 8003f1c:	409a      	lsls	r2, r3
 8003f1e:	68fb      	ldr	r3, [r7, #12]
 8003f20:	609a      	str	r2, [r3, #8]
 8003f22:	687b      	ldr	r3, [r7, #4]
 8003f24:	2201      	movs	r2, #1
 8003f26:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 8003f2a:	687b      	ldr	r3, [r7, #4]
 8003f2c:	2200      	movs	r2, #0
 8003f2e:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 8003f32:	2300      	movs	r3, #0
 8003f34:	4618      	mov	r0, r3
 8003f36:	3710      	adds	r7, #16
 8003f38:	46bd      	mov	sp, r7
 8003f3a:	bd80      	pop	{r7, pc}

08003f3c <HAL_DMA_Abort_IT>:
 8003f3c:	b480      	push	{r7}
 8003f3e:	b083      	sub	sp, #12
 8003f40:	af00      	add	r7, sp, #0
 8003f42:	6078      	str	r0, [r7, #4]
 8003f44:	687b      	ldr	r3, [r7, #4]
 8003f46:	f893 3035 	ldrb.w	r3, [r3, #53]	@ 0x35
 8003f4a:	b2db      	uxtb	r3, r3
 8003f4c:	2b02      	cmp	r3, #2
 8003f4e:	d004      	beq.n	8003f5a <HAL_DMA_Abort_IT+0x1e>
 8003f50:	687b      	ldr	r3, [r7, #4]
 8003f52:	2280      	movs	r2, #128	@ 0x80
 8003f54:	655a      	str	r2, [r3, #84]	@ 0x54
 8003f56:	2301      	movs	r3, #1
 8003f58:	e00c      	b.n	8003f74 <HAL_DMA_Abort_IT+0x38>
 8003f5a:	687b      	ldr	r3, [r7, #4]
 8003f5c:	2205      	movs	r2, #5
 8003f5e:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 8003f62:	687b      	ldr	r3, [r7, #4]
 8003f64:	681b      	ldr	r3, [r3, #0]
 8003f66:	681a      	ldr	r2, [r3, #0]
 8003f68:	687b      	ldr	r3, [r7, #4]
 8003f6a:	681b      	ldr	r3, [r3, #0]
 8003f6c:	f022 0201 	bic.w	r2, r2, #1
 8003f70:	601a      	str	r2, [r3, #0]
 8003f72:	2300      	movs	r3, #0
 8003f74:	4618      	mov	r0, r3
 8003f76:	370c      	adds	r7, #12
 8003f78:	46bd      	mov	sp, r7
 8003f7a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003f7e:	4770      	bx	lr

08003f80 <HAL_DMA_IRQHandler>:
 8003f80:	b580      	push	{r7, lr}
 8003f82:	b086      	sub	sp, #24
 8003f84:	af00      	add	r7, sp, #0
 8003f86:	6078      	str	r0, [r7, #4]
 8003f88:	2300      	movs	r3, #0
 8003f8a:	60bb      	str	r3, [r7, #8]
 8003f8c:	4b8e      	ldr	r3, [pc, #568]	@ (80041c8 <HAL_DMA_IRQHandler+0x248>)
 8003f8e:	681b      	ldr	r3, [r3, #0]
 8003f90:	4a8e      	ldr	r2, [pc, #568]	@ (80041cc <HAL_DMA_IRQHandler+0x24c>)
 8003f92:	fba2 2303 	umull	r2, r3, r2, r3
 8003f96:	0a9b      	lsrs	r3, r3, #10
 8003f98:	617b      	str	r3, [r7, #20]
 8003f9a:	687b      	ldr	r3, [r7, #4]
 8003f9c:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8003f9e:	613b      	str	r3, [r7, #16]
 8003fa0:	693b      	ldr	r3, [r7, #16]
 8003fa2:	681b      	ldr	r3, [r3, #0]
 8003fa4:	60fb      	str	r3, [r7, #12]
 8003fa6:	687b      	ldr	r3, [r7, #4]
 8003fa8:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8003faa:	2208      	movs	r2, #8
 8003fac:	409a      	lsls	r2, r3
 8003fae:	68fb      	ldr	r3, [r7, #12]
 8003fb0:	4013      	ands	r3, r2
 8003fb2:	2b00      	cmp	r3, #0
 8003fb4:	d01a      	beq.n	8003fec <HAL_DMA_IRQHandler+0x6c>
 8003fb6:	687b      	ldr	r3, [r7, #4]
 8003fb8:	681b      	ldr	r3, [r3, #0]
 8003fba:	681b      	ldr	r3, [r3, #0]
 8003fbc:	f003 0304 	and.w	r3, r3, #4
 8003fc0:	2b00      	cmp	r3, #0
 8003fc2:	d013      	beq.n	8003fec <HAL_DMA_IRQHandler+0x6c>
 8003fc4:	687b      	ldr	r3, [r7, #4]
 8003fc6:	681b      	ldr	r3, [r3, #0]
 8003fc8:	681a      	ldr	r2, [r3, #0]
 8003fca:	687b      	ldr	r3, [r7, #4]
 8003fcc:	681b      	ldr	r3, [r3, #0]
 8003fce:	f022 0204 	bic.w	r2, r2, #4
 8003fd2:	601a      	str	r2, [r3, #0]
 8003fd4:	687b      	ldr	r3, [r7, #4]
 8003fd6:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8003fd8:	2208      	movs	r2, #8
 8003fda:	409a      	lsls	r2, r3
 8003fdc:	693b      	ldr	r3, [r7, #16]
 8003fde:	609a      	str	r2, [r3, #8]
 8003fe0:	687b      	ldr	r3, [r7, #4]
 8003fe2:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8003fe4:	f043 0201 	orr.w	r2, r3, #1
 8003fe8:	687b      	ldr	r3, [r7, #4]
 8003fea:	655a      	str	r2, [r3, #84]	@ 0x54
 8003fec:	687b      	ldr	r3, [r7, #4]
 8003fee:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8003ff0:	2201      	movs	r2, #1
 8003ff2:	409a      	lsls	r2, r3
 8003ff4:	68fb      	ldr	r3, [r7, #12]
 8003ff6:	4013      	ands	r3, r2
 8003ff8:	2b00      	cmp	r3, #0
 8003ffa:	d012      	beq.n	8004022 <HAL_DMA_IRQHandler+0xa2>
 8003ffc:	687b      	ldr	r3, [r7, #4]
 8003ffe:	681b      	ldr	r3, [r3, #0]
 8004000:	695b      	ldr	r3, [r3, #20]
 8004002:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8004006:	2b00      	cmp	r3, #0
 8004008:	d00b      	beq.n	8004022 <HAL_DMA_IRQHandler+0xa2>
 800400a:	687b      	ldr	r3, [r7, #4]
 800400c:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 800400e:	2201      	movs	r2, #1
 8004010:	409a      	lsls	r2, r3
 8004012:	693b      	ldr	r3, [r7, #16]
 8004014:	609a      	str	r2, [r3, #8]
 8004016:	687b      	ldr	r3, [r7, #4]
 8004018:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 800401a:	f043 0202 	orr.w	r2, r3, #2
 800401e:	687b      	ldr	r3, [r7, #4]
 8004020:	655a      	str	r2, [r3, #84]	@ 0x54
 8004022:	687b      	ldr	r3, [r7, #4]
 8004024:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8004026:	2204      	movs	r2, #4
 8004028:	409a      	lsls	r2, r3
 800402a:	68fb      	ldr	r3, [r7, #12]
 800402c:	4013      	ands	r3, r2
 800402e:	2b00      	cmp	r3, #0
 8004030:	d012      	beq.n	8004058 <HAL_DMA_IRQHandler+0xd8>
 8004032:	687b      	ldr	r3, [r7, #4]
 8004034:	681b      	ldr	r3, [r3, #0]
 8004036:	681b      	ldr	r3, [r3, #0]
 8004038:	f003 0302 	and.w	r3, r3, #2
 800403c:	2b00      	cmp	r3, #0
 800403e:	d00b      	beq.n	8004058 <HAL_DMA_IRQHandler+0xd8>
 8004040:	687b      	ldr	r3, [r7, #4]
 8004042:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8004044:	2204      	movs	r2, #4
 8004046:	409a      	lsls	r2, r3
 8004048:	693b      	ldr	r3, [r7, #16]
 800404a:	609a      	str	r2, [r3, #8]
 800404c:	687b      	ldr	r3, [r7, #4]
 800404e:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8004050:	f043 0204 	orr.w	r2, r3, #4
 8004054:	687b      	ldr	r3, [r7, #4]
 8004056:	655a      	str	r2, [r3, #84]	@ 0x54
 8004058:	687b      	ldr	r3, [r7, #4]
 800405a:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 800405c:	2210      	movs	r2, #16
 800405e:	409a      	lsls	r2, r3
 8004060:	68fb      	ldr	r3, [r7, #12]
 8004062:	4013      	ands	r3, r2
 8004064:	2b00      	cmp	r3, #0
 8004066:	d043      	beq.n	80040f0 <HAL_DMA_IRQHandler+0x170>
 8004068:	687b      	ldr	r3, [r7, #4]
 800406a:	681b      	ldr	r3, [r3, #0]
 800406c:	681b      	ldr	r3, [r3, #0]
 800406e:	f003 0308 	and.w	r3, r3, #8
 8004072:	2b00      	cmp	r3, #0
 8004074:	d03c      	beq.n	80040f0 <HAL_DMA_IRQHandler+0x170>
 8004076:	687b      	ldr	r3, [r7, #4]
 8004078:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 800407a:	2210      	movs	r2, #16
 800407c:	409a      	lsls	r2, r3
 800407e:	693b      	ldr	r3, [r7, #16]
 8004080:	609a      	str	r2, [r3, #8]
 8004082:	687b      	ldr	r3, [r7, #4]
 8004084:	681b      	ldr	r3, [r3, #0]
 8004086:	681b      	ldr	r3, [r3, #0]
 8004088:	f403 2380 	and.w	r3, r3, #262144	@ 0x40000
 800408c:	2b00      	cmp	r3, #0
 800408e:	d018      	beq.n	80040c2 <HAL_DMA_IRQHandler+0x142>
 8004090:	687b      	ldr	r3, [r7, #4]
 8004092:	681b      	ldr	r3, [r3, #0]
 8004094:	681b      	ldr	r3, [r3, #0]
 8004096:	f403 2300 	and.w	r3, r3, #524288	@ 0x80000
 800409a:	2b00      	cmp	r3, #0
 800409c:	d108      	bne.n	80040b0 <HAL_DMA_IRQHandler+0x130>
 800409e:	687b      	ldr	r3, [r7, #4]
 80040a0:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80040a2:	2b00      	cmp	r3, #0
 80040a4:	d024      	beq.n	80040f0 <HAL_DMA_IRQHandler+0x170>
 80040a6:	687b      	ldr	r3, [r7, #4]
 80040a8:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80040aa:	6878      	ldr	r0, [r7, #4]
 80040ac:	4798      	blx	r3
 80040ae:	e01f      	b.n	80040f0 <HAL_DMA_IRQHandler+0x170>
 80040b0:	687b      	ldr	r3, [r7, #4]
 80040b2:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 80040b4:	2b00      	cmp	r3, #0
 80040b6:	d01b      	beq.n	80040f0 <HAL_DMA_IRQHandler+0x170>
 80040b8:	687b      	ldr	r3, [r7, #4]
 80040ba:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 80040bc:	6878      	ldr	r0, [r7, #4]
 80040be:	4798      	blx	r3
 80040c0:	e016      	b.n	80040f0 <HAL_DMA_IRQHandler+0x170>
 80040c2:	687b      	ldr	r3, [r7, #4]
 80040c4:	681b      	ldr	r3, [r3, #0]
 80040c6:	681b      	ldr	r3, [r3, #0]
 80040c8:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 80040cc:	2b00      	cmp	r3, #0
 80040ce:	d107      	bne.n	80040e0 <HAL_DMA_IRQHandler+0x160>
 80040d0:	687b      	ldr	r3, [r7, #4]
 80040d2:	681b      	ldr	r3, [r3, #0]
 80040d4:	681a      	ldr	r2, [r3, #0]
 80040d6:	687b      	ldr	r3, [r7, #4]
 80040d8:	681b      	ldr	r3, [r3, #0]
 80040da:	f022 0208 	bic.w	r2, r2, #8
 80040de:	601a      	str	r2, [r3, #0]
 80040e0:	687b      	ldr	r3, [r7, #4]
 80040e2:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80040e4:	2b00      	cmp	r3, #0
 80040e6:	d003      	beq.n	80040f0 <HAL_DMA_IRQHandler+0x170>
 80040e8:	687b      	ldr	r3, [r7, #4]
 80040ea:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80040ec:	6878      	ldr	r0, [r7, #4]
 80040ee:	4798      	blx	r3
 80040f0:	687b      	ldr	r3, [r7, #4]
 80040f2:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 80040f4:	2220      	movs	r2, #32
 80040f6:	409a      	lsls	r2, r3
 80040f8:	68fb      	ldr	r3, [r7, #12]
 80040fa:	4013      	ands	r3, r2
 80040fc:	2b00      	cmp	r3, #0
 80040fe:	f000 808f 	beq.w	8004220 <HAL_DMA_IRQHandler+0x2a0>
 8004102:	687b      	ldr	r3, [r7, #4]
 8004104:	681b      	ldr	r3, [r3, #0]
 8004106:	681b      	ldr	r3, [r3, #0]
 8004108:	f003 0310 	and.w	r3, r3, #16
 800410c:	2b00      	cmp	r3, #0
 800410e:	f000 8087 	beq.w	8004220 <HAL_DMA_IRQHandler+0x2a0>
 8004112:	687b      	ldr	r3, [r7, #4]
 8004114:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8004116:	2220      	movs	r2, #32
 8004118:	409a      	lsls	r2, r3
 800411a:	693b      	ldr	r3, [r7, #16]
 800411c:	609a      	str	r2, [r3, #8]
 800411e:	687b      	ldr	r3, [r7, #4]
 8004120:	f893 3035 	ldrb.w	r3, [r3, #53]	@ 0x35
 8004124:	b2db      	uxtb	r3, r3
 8004126:	2b05      	cmp	r3, #5
 8004128:	d136      	bne.n	8004198 <HAL_DMA_IRQHandler+0x218>
 800412a:	687b      	ldr	r3, [r7, #4]
 800412c:	681b      	ldr	r3, [r3, #0]
 800412e:	681a      	ldr	r2, [r3, #0]
 8004130:	687b      	ldr	r3, [r7, #4]
 8004132:	681b      	ldr	r3, [r3, #0]
 8004134:	f022 0216 	bic.w	r2, r2, #22
 8004138:	601a      	str	r2, [r3, #0]
 800413a:	687b      	ldr	r3, [r7, #4]
 800413c:	681b      	ldr	r3, [r3, #0]
 800413e:	695a      	ldr	r2, [r3, #20]
 8004140:	687b      	ldr	r3, [r7, #4]
 8004142:	681b      	ldr	r3, [r3, #0]
 8004144:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
 8004148:	615a      	str	r2, [r3, #20]
 800414a:	687b      	ldr	r3, [r7, #4]
 800414c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800414e:	2b00      	cmp	r3, #0
 8004150:	d103      	bne.n	800415a <HAL_DMA_IRQHandler+0x1da>
 8004152:	687b      	ldr	r3, [r7, #4]
 8004154:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8004156:	2b00      	cmp	r3, #0
 8004158:	d007      	beq.n	800416a <HAL_DMA_IRQHandler+0x1ea>
 800415a:	687b      	ldr	r3, [r7, #4]
 800415c:	681b      	ldr	r3, [r3, #0]
 800415e:	681a      	ldr	r2, [r3, #0]
 8004160:	687b      	ldr	r3, [r7, #4]
 8004162:	681b      	ldr	r3, [r3, #0]
 8004164:	f022 0208 	bic.w	r2, r2, #8
 8004168:	601a      	str	r2, [r3, #0]
 800416a:	687b      	ldr	r3, [r7, #4]
 800416c:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 800416e:	223f      	movs	r2, #63	@ 0x3f
 8004170:	409a      	lsls	r2, r3
 8004172:	693b      	ldr	r3, [r7, #16]
 8004174:	609a      	str	r2, [r3, #8]
 8004176:	687b      	ldr	r3, [r7, #4]
 8004178:	2201      	movs	r2, #1
 800417a:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 800417e:	687b      	ldr	r3, [r7, #4]
 8004180:	2200      	movs	r2, #0
 8004182:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 8004186:	687b      	ldr	r3, [r7, #4]
 8004188:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 800418a:	2b00      	cmp	r3, #0
 800418c:	d07e      	beq.n	800428c <HAL_DMA_IRQHandler+0x30c>
 800418e:	687b      	ldr	r3, [r7, #4]
 8004190:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8004192:	6878      	ldr	r0, [r7, #4]
 8004194:	4798      	blx	r3
 8004196:	e079      	b.n	800428c <HAL_DMA_IRQHandler+0x30c>
 8004198:	687b      	ldr	r3, [r7, #4]
 800419a:	681b      	ldr	r3, [r3, #0]
 800419c:	681b      	ldr	r3, [r3, #0]
 800419e:	f403 2380 	and.w	r3, r3, #262144	@ 0x40000
 80041a2:	2b00      	cmp	r3, #0
 80041a4:	d01d      	beq.n	80041e2 <HAL_DMA_IRQHandler+0x262>
 80041a6:	687b      	ldr	r3, [r7, #4]
 80041a8:	681b      	ldr	r3, [r3, #0]
 80041aa:	681b      	ldr	r3, [r3, #0]
 80041ac:	f403 2300 	and.w	r3, r3, #524288	@ 0x80000
 80041b0:	2b00      	cmp	r3, #0
 80041b2:	d10d      	bne.n	80041d0 <HAL_DMA_IRQHandler+0x250>
 80041b4:	687b      	ldr	r3, [r7, #4]
 80041b6:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80041b8:	2b00      	cmp	r3, #0
 80041ba:	d031      	beq.n	8004220 <HAL_DMA_IRQHandler+0x2a0>
 80041bc:	687b      	ldr	r3, [r7, #4]
 80041be:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80041c0:	6878      	ldr	r0, [r7, #4]
 80041c2:	4798      	blx	r3
 80041c4:	e02c      	b.n	8004220 <HAL_DMA_IRQHandler+0x2a0>
 80041c6:	bf00      	nop
 80041c8:	20000028 	.word	0x20000028
 80041cc:	1b4e81b5 	.word	0x1b4e81b5
 80041d0:	687b      	ldr	r3, [r7, #4]
 80041d2:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 80041d4:	2b00      	cmp	r3, #0
 80041d6:	d023      	beq.n	8004220 <HAL_DMA_IRQHandler+0x2a0>
 80041d8:	687b      	ldr	r3, [r7, #4]
 80041da:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 80041dc:	6878      	ldr	r0, [r7, #4]
 80041de:	4798      	blx	r3
 80041e0:	e01e      	b.n	8004220 <HAL_DMA_IRQHandler+0x2a0>
 80041e2:	687b      	ldr	r3, [r7, #4]
 80041e4:	681b      	ldr	r3, [r3, #0]
 80041e6:	681b      	ldr	r3, [r3, #0]
 80041e8:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 80041ec:	2b00      	cmp	r3, #0
 80041ee:	d10f      	bne.n	8004210 <HAL_DMA_IRQHandler+0x290>
 80041f0:	687b      	ldr	r3, [r7, #4]
 80041f2:	681b      	ldr	r3, [r3, #0]
 80041f4:	681a      	ldr	r2, [r3, #0]
 80041f6:	687b      	ldr	r3, [r7, #4]
 80041f8:	681b      	ldr	r3, [r3, #0]
 80041fa:	f022 0210 	bic.w	r2, r2, #16
 80041fe:	601a      	str	r2, [r3, #0]
 8004200:	687b      	ldr	r3, [r7, #4]
 8004202:	2201      	movs	r2, #1
 8004204:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 8004208:	687b      	ldr	r3, [r7, #4]
 800420a:	2200      	movs	r2, #0
 800420c:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 8004210:	687b      	ldr	r3, [r7, #4]
 8004212:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8004214:	2b00      	cmp	r3, #0
 8004216:	d003      	beq.n	8004220 <HAL_DMA_IRQHandler+0x2a0>
 8004218:	687b      	ldr	r3, [r7, #4]
 800421a:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800421c:	6878      	ldr	r0, [r7, #4]
 800421e:	4798      	blx	r3
 8004220:	687b      	ldr	r3, [r7, #4]
 8004222:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8004224:	2b00      	cmp	r3, #0
 8004226:	d032      	beq.n	800428e <HAL_DMA_IRQHandler+0x30e>
 8004228:	687b      	ldr	r3, [r7, #4]
 800422a:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 800422c:	f003 0301 	and.w	r3, r3, #1
 8004230:	2b00      	cmp	r3, #0
 8004232:	d022      	beq.n	800427a <HAL_DMA_IRQHandler+0x2fa>
 8004234:	687b      	ldr	r3, [r7, #4]
 8004236:	2205      	movs	r2, #5
 8004238:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 800423c:	687b      	ldr	r3, [r7, #4]
 800423e:	681b      	ldr	r3, [r3, #0]
 8004240:	681a      	ldr	r2, [r3, #0]
 8004242:	687b      	ldr	r3, [r7, #4]
 8004244:	681b      	ldr	r3, [r3, #0]
 8004246:	f022 0201 	bic.w	r2, r2, #1
 800424a:	601a      	str	r2, [r3, #0]
 800424c:	68bb      	ldr	r3, [r7, #8]
 800424e:	3301      	adds	r3, #1
 8004250:	60bb      	str	r3, [r7, #8]
 8004252:	697a      	ldr	r2, [r7, #20]
 8004254:	429a      	cmp	r2, r3
 8004256:	d307      	bcc.n	8004268 <HAL_DMA_IRQHandler+0x2e8>
 8004258:	687b      	ldr	r3, [r7, #4]
 800425a:	681b      	ldr	r3, [r3, #0]
 800425c:	681b      	ldr	r3, [r3, #0]
 800425e:	f003 0301 	and.w	r3, r3, #1
 8004262:	2b00      	cmp	r3, #0
 8004264:	d1f2      	bne.n	800424c <HAL_DMA_IRQHandler+0x2cc>
 8004266:	e000      	b.n	800426a <HAL_DMA_IRQHandler+0x2ea>
 8004268:	bf00      	nop
 800426a:	687b      	ldr	r3, [r7, #4]
 800426c:	2201      	movs	r2, #1
 800426e:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 8004272:	687b      	ldr	r3, [r7, #4]
 8004274:	2200      	movs	r2, #0
 8004276:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 800427a:	687b      	ldr	r3, [r7, #4]
 800427c:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800427e:	2b00      	cmp	r3, #0
 8004280:	d005      	beq.n	800428e <HAL_DMA_IRQHandler+0x30e>
 8004282:	687b      	ldr	r3, [r7, #4]
 8004284:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8004286:	6878      	ldr	r0, [r7, #4]
 8004288:	4798      	blx	r3
 800428a:	e000      	b.n	800428e <HAL_DMA_IRQHandler+0x30e>
 800428c:	bf00      	nop
 800428e:	3718      	adds	r7, #24
 8004290:	46bd      	mov	sp, r7
 8004292:	bd80      	pop	{r7, pc}

08004294 <DMA_SetConfig>:
 8004294:	b480      	push	{r7}
 8004296:	b085      	sub	sp, #20
 8004298:	af00      	add	r7, sp, #0
 800429a:	60f8      	str	r0, [r7, #12]
 800429c:	60b9      	str	r1, [r7, #8]
 800429e:	607a      	str	r2, [r7, #4]
 80042a0:	603b      	str	r3, [r7, #0]
 80042a2:	68fb      	ldr	r3, [r7, #12]
 80042a4:	681b      	ldr	r3, [r3, #0]
 80042a6:	681a      	ldr	r2, [r3, #0]
 80042a8:	68fb      	ldr	r3, [r7, #12]
 80042aa:	681b      	ldr	r3, [r3, #0]
 80042ac:	f422 2280 	bic.w	r2, r2, #262144	@ 0x40000
 80042b0:	601a      	str	r2, [r3, #0]
 80042b2:	68fb      	ldr	r3, [r7, #12]
 80042b4:	681b      	ldr	r3, [r3, #0]
 80042b6:	683a      	ldr	r2, [r7, #0]
 80042b8:	605a      	str	r2, [r3, #4]
 80042ba:	68fb      	ldr	r3, [r7, #12]
 80042bc:	689b      	ldr	r3, [r3, #8]
 80042be:	2b40      	cmp	r3, #64	@ 0x40
 80042c0:	d108      	bne.n	80042d4 <DMA_SetConfig+0x40>
 80042c2:	68fb      	ldr	r3, [r7, #12]
 80042c4:	681b      	ldr	r3, [r3, #0]
 80042c6:	687a      	ldr	r2, [r7, #4]
 80042c8:	609a      	str	r2, [r3, #8]
 80042ca:	68fb      	ldr	r3, [r7, #12]
 80042cc:	681b      	ldr	r3, [r3, #0]
 80042ce:	68ba      	ldr	r2, [r7, #8]
 80042d0:	60da      	str	r2, [r3, #12]
 80042d2:	e007      	b.n	80042e4 <DMA_SetConfig+0x50>
 80042d4:	68fb      	ldr	r3, [r7, #12]
 80042d6:	681b      	ldr	r3, [r3, #0]
 80042d8:	68ba      	ldr	r2, [r7, #8]
 80042da:	609a      	str	r2, [r3, #8]
 80042dc:	68fb      	ldr	r3, [r7, #12]
 80042de:	681b      	ldr	r3, [r3, #0]
 80042e0:	687a      	ldr	r2, [r7, #4]
 80042e2:	60da      	str	r2, [r3, #12]
 80042e4:	bf00      	nop
 80042e6:	3714      	adds	r7, #20
 80042e8:	46bd      	mov	sp, r7
 80042ea:	f85d 7b04 	ldr.w	r7, [sp], #4
 80042ee:	4770      	bx	lr

080042f0 <DMA_CalcBaseAndBitshift>:
 80042f0:	b480      	push	{r7}
 80042f2:	b085      	sub	sp, #20
 80042f4:	af00      	add	r7, sp, #0
 80042f6:	6078      	str	r0, [r7, #4]
 80042f8:	687b      	ldr	r3, [r7, #4]
 80042fa:	681b      	ldr	r3, [r3, #0]
 80042fc:	b2db      	uxtb	r3, r3
 80042fe:	3b10      	subs	r3, #16
 8004300:	4a14      	ldr	r2, [pc, #80]	@ (8004354 <DMA_CalcBaseAndBitshift+0x64>)
 8004302:	fba2 2303 	umull	r2, r3, r2, r3
 8004306:	091b      	lsrs	r3, r3, #4
 8004308:	60fb      	str	r3, [r7, #12]
 800430a:	4a13      	ldr	r2, [pc, #76]	@ (8004358 <DMA_CalcBaseAndBitshift+0x68>)
 800430c:	68fb      	ldr	r3, [r7, #12]
 800430e:	4413      	add	r3, r2
 8004310:	781b      	ldrb	r3, [r3, #0]
 8004312:	461a      	mov	r2, r3
 8004314:	687b      	ldr	r3, [r7, #4]
 8004316:	65da      	str	r2, [r3, #92]	@ 0x5c
 8004318:	68fb      	ldr	r3, [r7, #12]
 800431a:	2b03      	cmp	r3, #3
 800431c:	d909      	bls.n	8004332 <DMA_CalcBaseAndBitshift+0x42>
 800431e:	687b      	ldr	r3, [r7, #4]
 8004320:	681b      	ldr	r3, [r3, #0]
 8004322:	f423 737f 	bic.w	r3, r3, #1020	@ 0x3fc
 8004326:	f023 0303 	bic.w	r3, r3, #3
 800432a:	1d1a      	adds	r2, r3, #4
 800432c:	687b      	ldr	r3, [r7, #4]
 800432e:	659a      	str	r2, [r3, #88]	@ 0x58
 8004330:	e007      	b.n	8004342 <DMA_CalcBaseAndBitshift+0x52>
 8004332:	687b      	ldr	r3, [r7, #4]
 8004334:	681b      	ldr	r3, [r3, #0]
 8004336:	f423 737f 	bic.w	r3, r3, #1020	@ 0x3fc
 800433a:	f023 0303 	bic.w	r3, r3, #3
 800433e:	687a      	ldr	r2, [r7, #4]
 8004340:	6593      	str	r3, [r2, #88]	@ 0x58
 8004342:	687b      	ldr	r3, [r7, #4]
 8004344:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8004346:	4618      	mov	r0, r3
 8004348:	3714      	adds	r7, #20
 800434a:	46bd      	mov	sp, r7
 800434c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004350:	4770      	bx	lr
 8004352:	bf00      	nop
 8004354:	aaaaaaab 	.word	0xaaaaaaab
 8004358:	0800d548 	.word	0x0800d548

0800435c <DMA_CheckFifoParam>:
 800435c:	b480      	push	{r7}
 800435e:	b085      	sub	sp, #20
 8004360:	af00      	add	r7, sp, #0
 8004362:	6078      	str	r0, [r7, #4]
 8004364:	2300      	movs	r3, #0
 8004366:	73fb      	strb	r3, [r7, #15]
 8004368:	687b      	ldr	r3, [r7, #4]
 800436a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800436c:	60bb      	str	r3, [r7, #8]
 800436e:	687b      	ldr	r3, [r7, #4]
 8004370:	699b      	ldr	r3, [r3, #24]
 8004372:	2b00      	cmp	r3, #0
 8004374:	d11f      	bne.n	80043b6 <DMA_CheckFifoParam+0x5a>
 8004376:	68bb      	ldr	r3, [r7, #8]
 8004378:	2b03      	cmp	r3, #3
 800437a:	d856      	bhi.n	800442a <DMA_CheckFifoParam+0xce>
 800437c:	a201      	add	r2, pc, #4	@ (adr r2, 8004384 <DMA_CheckFifoParam+0x28>)
 800437e:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8004382:	bf00      	nop
 8004384:	08004395 	.word	0x08004395
 8004388:	080043a7 	.word	0x080043a7
 800438c:	08004395 	.word	0x08004395
 8004390:	0800442b 	.word	0x0800442b
 8004394:	687b      	ldr	r3, [r7, #4]
 8004396:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8004398:	f003 7380 	and.w	r3, r3, #16777216	@ 0x1000000
 800439c:	2b00      	cmp	r3, #0
 800439e:	d046      	beq.n	800442e <DMA_CheckFifoParam+0xd2>
 80043a0:	2301      	movs	r3, #1
 80043a2:	73fb      	strb	r3, [r7, #15]
 80043a4:	e043      	b.n	800442e <DMA_CheckFifoParam+0xd2>
 80043a6:	687b      	ldr	r3, [r7, #4]
 80043a8:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80043aa:	f1b3 7fc0 	cmp.w	r3, #25165824	@ 0x1800000
 80043ae:	d140      	bne.n	8004432 <DMA_CheckFifoParam+0xd6>
 80043b0:	2301      	movs	r3, #1
 80043b2:	73fb      	strb	r3, [r7, #15]
 80043b4:	e03d      	b.n	8004432 <DMA_CheckFifoParam+0xd6>
 80043b6:	687b      	ldr	r3, [r7, #4]
 80043b8:	699b      	ldr	r3, [r3, #24]
 80043ba:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 80043be:	d121      	bne.n	8004404 <DMA_CheckFifoParam+0xa8>
 80043c0:	68bb      	ldr	r3, [r7, #8]
 80043c2:	2b03      	cmp	r3, #3
 80043c4:	d837      	bhi.n	8004436 <DMA_CheckFifoParam+0xda>
 80043c6:	a201      	add	r2, pc, #4	@ (adr r2, 80043cc <DMA_CheckFifoParam+0x70>)
 80043c8:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80043cc:	080043dd 	.word	0x080043dd
 80043d0:	080043e3 	.word	0x080043e3
 80043d4:	080043dd 	.word	0x080043dd
 80043d8:	080043f5 	.word	0x080043f5
 80043dc:	2301      	movs	r3, #1
 80043de:	73fb      	strb	r3, [r7, #15]
 80043e0:	e030      	b.n	8004444 <DMA_CheckFifoParam+0xe8>
 80043e2:	687b      	ldr	r3, [r7, #4]
 80043e4:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80043e6:	f003 7380 	and.w	r3, r3, #16777216	@ 0x1000000
 80043ea:	2b00      	cmp	r3, #0
 80043ec:	d025      	beq.n	800443a <DMA_CheckFifoParam+0xde>
 80043ee:	2301      	movs	r3, #1
 80043f0:	73fb      	strb	r3, [r7, #15]
 80043f2:	e022      	b.n	800443a <DMA_CheckFifoParam+0xde>
 80043f4:	687b      	ldr	r3, [r7, #4]
 80043f6:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80043f8:	f1b3 7fc0 	cmp.w	r3, #25165824	@ 0x1800000
 80043fc:	d11f      	bne.n	800443e <DMA_CheckFifoParam+0xe2>
 80043fe:	2301      	movs	r3, #1
 8004400:	73fb      	strb	r3, [r7, #15]
 8004402:	e01c      	b.n	800443e <DMA_CheckFifoParam+0xe2>
 8004404:	68bb      	ldr	r3, [r7, #8]
 8004406:	2b02      	cmp	r3, #2
 8004408:	d903      	bls.n	8004412 <DMA_CheckFifoParam+0xb6>
 800440a:	68bb      	ldr	r3, [r7, #8]
 800440c:	2b03      	cmp	r3, #3
 800440e:	d003      	beq.n	8004418 <DMA_CheckFifoParam+0xbc>
 8004410:	e018      	b.n	8004444 <DMA_CheckFifoParam+0xe8>
 8004412:	2301      	movs	r3, #1
 8004414:	73fb      	strb	r3, [r7, #15]
 8004416:	e015      	b.n	8004444 <DMA_CheckFifoParam+0xe8>
 8004418:	687b      	ldr	r3, [r7, #4]
 800441a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800441c:	f003 7380 	and.w	r3, r3, #16777216	@ 0x1000000
 8004420:	2b00      	cmp	r3, #0
 8004422:	d00e      	beq.n	8004442 <DMA_CheckFifoParam+0xe6>
 8004424:	2301      	movs	r3, #1
 8004426:	73fb      	strb	r3, [r7, #15]
 8004428:	e00b      	b.n	8004442 <DMA_CheckFifoParam+0xe6>
 800442a:	bf00      	nop
 800442c:	e00a      	b.n	8004444 <DMA_CheckFifoParam+0xe8>
 800442e:	bf00      	nop
 8004430:	e008      	b.n	8004444 <DMA_CheckFifoParam+0xe8>
 8004432:	bf00      	nop
 8004434:	e006      	b.n	8004444 <DMA_CheckFifoParam+0xe8>
 8004436:	bf00      	nop
 8004438:	e004      	b.n	8004444 <DMA_CheckFifoParam+0xe8>
 800443a:	bf00      	nop
 800443c:	e002      	b.n	8004444 <DMA_CheckFifoParam+0xe8>
 800443e:	bf00      	nop
 8004440:	e000      	b.n	8004444 <DMA_CheckFifoParam+0xe8>
 8004442:	bf00      	nop
 8004444:	7bfb      	ldrb	r3, [r7, #15]
 8004446:	4618      	mov	r0, r3
 8004448:	3714      	adds	r7, #20
 800444a:	46bd      	mov	sp, r7
 800444c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004450:	4770      	bx	lr
 8004452:	bf00      	nop

08004454 <HAL_GPIO_Init>:
 8004454:	b480      	push	{r7}
 8004456:	b089      	sub	sp, #36	@ 0x24
 8004458:	af00      	add	r7, sp, #0
 800445a:	6078      	str	r0, [r7, #4]
 800445c:	6039      	str	r1, [r7, #0]
 800445e:	2300      	movs	r3, #0
 8004460:	617b      	str	r3, [r7, #20]
 8004462:	2300      	movs	r3, #0
 8004464:	613b      	str	r3, [r7, #16]
 8004466:	2300      	movs	r3, #0
 8004468:	61bb      	str	r3, [r7, #24]
 800446a:	2300      	movs	r3, #0
 800446c:	61fb      	str	r3, [r7, #28]
 800446e:	e165      	b.n	800473c <HAL_GPIO_Init+0x2e8>
 8004470:	2201      	movs	r2, #1
 8004472:	69fb      	ldr	r3, [r7, #28]
 8004474:	fa02 f303 	lsl.w	r3, r2, r3
 8004478:	617b      	str	r3, [r7, #20]
 800447a:	683b      	ldr	r3, [r7, #0]
 800447c:	681b      	ldr	r3, [r3, #0]
 800447e:	697a      	ldr	r2, [r7, #20]
 8004480:	4013      	ands	r3, r2
 8004482:	613b      	str	r3, [r7, #16]
 8004484:	693a      	ldr	r2, [r7, #16]
 8004486:	697b      	ldr	r3, [r7, #20]
 8004488:	429a      	cmp	r2, r3
 800448a:	f040 8154 	bne.w	8004736 <HAL_GPIO_Init+0x2e2>
 800448e:	683b      	ldr	r3, [r7, #0]
 8004490:	685b      	ldr	r3, [r3, #4]
 8004492:	f003 0303 	and.w	r3, r3, #3
 8004496:	2b01      	cmp	r3, #1
 8004498:	d005      	beq.n	80044a6 <HAL_GPIO_Init+0x52>
 800449a:	683b      	ldr	r3, [r7, #0]
 800449c:	685b      	ldr	r3, [r3, #4]
 800449e:	f003 0303 	and.w	r3, r3, #3
 80044a2:	2b02      	cmp	r3, #2
 80044a4:	d130      	bne.n	8004508 <HAL_GPIO_Init+0xb4>
 80044a6:	687b      	ldr	r3, [r7, #4]
 80044a8:	689b      	ldr	r3, [r3, #8]
 80044aa:	61bb      	str	r3, [r7, #24]
 80044ac:	69fb      	ldr	r3, [r7, #28]
 80044ae:	005b      	lsls	r3, r3, #1
 80044b0:	2203      	movs	r2, #3
 80044b2:	fa02 f303 	lsl.w	r3, r2, r3
 80044b6:	43db      	mvns	r3, r3
 80044b8:	69ba      	ldr	r2, [r7, #24]
 80044ba:	4013      	ands	r3, r2
 80044bc:	61bb      	str	r3, [r7, #24]
 80044be:	683b      	ldr	r3, [r7, #0]
 80044c0:	68da      	ldr	r2, [r3, #12]
 80044c2:	69fb      	ldr	r3, [r7, #28]
 80044c4:	005b      	lsls	r3, r3, #1
 80044c6:	fa02 f303 	lsl.w	r3, r2, r3
 80044ca:	69ba      	ldr	r2, [r7, #24]
 80044cc:	4313      	orrs	r3, r2
 80044ce:	61bb      	str	r3, [r7, #24]
 80044d0:	687b      	ldr	r3, [r7, #4]
 80044d2:	69ba      	ldr	r2, [r7, #24]
 80044d4:	609a      	str	r2, [r3, #8]
 80044d6:	687b      	ldr	r3, [r7, #4]
 80044d8:	685b      	ldr	r3, [r3, #4]
 80044da:	61bb      	str	r3, [r7, #24]
 80044dc:	2201      	movs	r2, #1
 80044de:	69fb      	ldr	r3, [r7, #28]
 80044e0:	fa02 f303 	lsl.w	r3, r2, r3
 80044e4:	43db      	mvns	r3, r3
 80044e6:	69ba      	ldr	r2, [r7, #24]
 80044e8:	4013      	ands	r3, r2
 80044ea:	61bb      	str	r3, [r7, #24]
 80044ec:	683b      	ldr	r3, [r7, #0]
 80044ee:	685b      	ldr	r3, [r3, #4]
 80044f0:	091b      	lsrs	r3, r3, #4
 80044f2:	f003 0201 	and.w	r2, r3, #1
 80044f6:	69fb      	ldr	r3, [r7, #28]
 80044f8:	fa02 f303 	lsl.w	r3, r2, r3
 80044fc:	69ba      	ldr	r2, [r7, #24]
 80044fe:	4313      	orrs	r3, r2
 8004500:	61bb      	str	r3, [r7, #24]
 8004502:	687b      	ldr	r3, [r7, #4]
 8004504:	69ba      	ldr	r2, [r7, #24]
 8004506:	605a      	str	r2, [r3, #4]
 8004508:	683b      	ldr	r3, [r7, #0]
 800450a:	685b      	ldr	r3, [r3, #4]
 800450c:	f003 0303 	and.w	r3, r3, #3
 8004510:	2b03      	cmp	r3, #3
 8004512:	d017      	beq.n	8004544 <HAL_GPIO_Init+0xf0>
 8004514:	687b      	ldr	r3, [r7, #4]
 8004516:	68db      	ldr	r3, [r3, #12]
 8004518:	61bb      	str	r3, [r7, #24]
 800451a:	69fb      	ldr	r3, [r7, #28]
 800451c:	005b      	lsls	r3, r3, #1
 800451e:	2203      	movs	r2, #3
 8004520:	fa02 f303 	lsl.w	r3, r2, r3
 8004524:	43db      	mvns	r3, r3
 8004526:	69ba      	ldr	r2, [r7, #24]
 8004528:	4013      	ands	r3, r2
 800452a:	61bb      	str	r3, [r7, #24]
 800452c:	683b      	ldr	r3, [r7, #0]
 800452e:	689a      	ldr	r2, [r3, #8]
 8004530:	69fb      	ldr	r3, [r7, #28]
 8004532:	005b      	lsls	r3, r3, #1
 8004534:	fa02 f303 	lsl.w	r3, r2, r3
 8004538:	69ba      	ldr	r2, [r7, #24]
 800453a:	4313      	orrs	r3, r2
 800453c:	61bb      	str	r3, [r7, #24]
 800453e:	687b      	ldr	r3, [r7, #4]
 8004540:	69ba      	ldr	r2, [r7, #24]
 8004542:	60da      	str	r2, [r3, #12]
 8004544:	683b      	ldr	r3, [r7, #0]
 8004546:	685b      	ldr	r3, [r3, #4]
 8004548:	f003 0303 	and.w	r3, r3, #3
 800454c:	2b02      	cmp	r3, #2
 800454e:	d123      	bne.n	8004598 <HAL_GPIO_Init+0x144>
 8004550:	69fb      	ldr	r3, [r7, #28]
 8004552:	08da      	lsrs	r2, r3, #3
 8004554:	687b      	ldr	r3, [r7, #4]
 8004556:	3208      	adds	r2, #8
 8004558:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 800455c:	61bb      	str	r3, [r7, #24]
 800455e:	69fb      	ldr	r3, [r7, #28]
 8004560:	f003 0307 	and.w	r3, r3, #7
 8004564:	009b      	lsls	r3, r3, #2
 8004566:	220f      	movs	r2, #15
 8004568:	fa02 f303 	lsl.w	r3, r2, r3
 800456c:	43db      	mvns	r3, r3
 800456e:	69ba      	ldr	r2, [r7, #24]
 8004570:	4013      	ands	r3, r2
 8004572:	61bb      	str	r3, [r7, #24]
 8004574:	683b      	ldr	r3, [r7, #0]
 8004576:	691a      	ldr	r2, [r3, #16]
 8004578:	69fb      	ldr	r3, [r7, #28]
 800457a:	f003 0307 	and.w	r3, r3, #7
 800457e:	009b      	lsls	r3, r3, #2
 8004580:	fa02 f303 	lsl.w	r3, r2, r3
 8004584:	69ba      	ldr	r2, [r7, #24]
 8004586:	4313      	orrs	r3, r2
 8004588:	61bb      	str	r3, [r7, #24]
 800458a:	69fb      	ldr	r3, [r7, #28]
 800458c:	08da      	lsrs	r2, r3, #3
 800458e:	687b      	ldr	r3, [r7, #4]
 8004590:	3208      	adds	r2, #8
 8004592:	69b9      	ldr	r1, [r7, #24]
 8004594:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 8004598:	687b      	ldr	r3, [r7, #4]
 800459a:	681b      	ldr	r3, [r3, #0]
 800459c:	61bb      	str	r3, [r7, #24]
 800459e:	69fb      	ldr	r3, [r7, #28]
 80045a0:	005b      	lsls	r3, r3, #1
 80045a2:	2203      	movs	r2, #3
 80045a4:	fa02 f303 	lsl.w	r3, r2, r3
 80045a8:	43db      	mvns	r3, r3
 80045aa:	69ba      	ldr	r2, [r7, #24]
 80045ac:	4013      	ands	r3, r2
 80045ae:	61bb      	str	r3, [r7, #24]
 80045b0:	683b      	ldr	r3, [r7, #0]
 80045b2:	685b      	ldr	r3, [r3, #4]
 80045b4:	f003 0203 	and.w	r2, r3, #3
 80045b8:	69fb      	ldr	r3, [r7, #28]
 80045ba:	005b      	lsls	r3, r3, #1
 80045bc:	fa02 f303 	lsl.w	r3, r2, r3
 80045c0:	69ba      	ldr	r2, [r7, #24]
 80045c2:	4313      	orrs	r3, r2
 80045c4:	61bb      	str	r3, [r7, #24]
 80045c6:	687b      	ldr	r3, [r7, #4]
 80045c8:	69ba      	ldr	r2, [r7, #24]
 80045ca:	601a      	str	r2, [r3, #0]
 80045cc:	683b      	ldr	r3, [r7, #0]
 80045ce:	685b      	ldr	r3, [r3, #4]
 80045d0:	f403 3340 	and.w	r3, r3, #196608	@ 0x30000
 80045d4:	2b00      	cmp	r3, #0
 80045d6:	f000 80ae 	beq.w	8004736 <HAL_GPIO_Init+0x2e2>
 80045da:	2300      	movs	r3, #0
 80045dc:	60fb      	str	r3, [r7, #12]
 80045de:	4b5d      	ldr	r3, [pc, #372]	@ (8004754 <HAL_GPIO_Init+0x300>)
 80045e0:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80045e2:	4a5c      	ldr	r2, [pc, #368]	@ (8004754 <HAL_GPIO_Init+0x300>)
 80045e4:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 80045e8:	6453      	str	r3, [r2, #68]	@ 0x44
 80045ea:	4b5a      	ldr	r3, [pc, #360]	@ (8004754 <HAL_GPIO_Init+0x300>)
 80045ec:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80045ee:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 80045f2:	60fb      	str	r3, [r7, #12]
 80045f4:	68fb      	ldr	r3, [r7, #12]
 80045f6:	4a58      	ldr	r2, [pc, #352]	@ (8004758 <HAL_GPIO_Init+0x304>)
 80045f8:	69fb      	ldr	r3, [r7, #28]
 80045fa:	089b      	lsrs	r3, r3, #2
 80045fc:	3302      	adds	r3, #2
 80045fe:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8004602:	61bb      	str	r3, [r7, #24]
 8004604:	69fb      	ldr	r3, [r7, #28]
 8004606:	f003 0303 	and.w	r3, r3, #3
 800460a:	009b      	lsls	r3, r3, #2
 800460c:	220f      	movs	r2, #15
 800460e:	fa02 f303 	lsl.w	r3, r2, r3
 8004612:	43db      	mvns	r3, r3
 8004614:	69ba      	ldr	r2, [r7, #24]
 8004616:	4013      	ands	r3, r2
 8004618:	61bb      	str	r3, [r7, #24]
 800461a:	687b      	ldr	r3, [r7, #4]
 800461c:	4a4f      	ldr	r2, [pc, #316]	@ (800475c <HAL_GPIO_Init+0x308>)
 800461e:	4293      	cmp	r3, r2
 8004620:	d025      	beq.n	800466e <HAL_GPIO_Init+0x21a>
 8004622:	687b      	ldr	r3, [r7, #4]
 8004624:	4a4e      	ldr	r2, [pc, #312]	@ (8004760 <HAL_GPIO_Init+0x30c>)
 8004626:	4293      	cmp	r3, r2
 8004628:	d01f      	beq.n	800466a <HAL_GPIO_Init+0x216>
 800462a:	687b      	ldr	r3, [r7, #4]
 800462c:	4a4d      	ldr	r2, [pc, #308]	@ (8004764 <HAL_GPIO_Init+0x310>)
 800462e:	4293      	cmp	r3, r2
 8004630:	d019      	beq.n	8004666 <HAL_GPIO_Init+0x212>
 8004632:	687b      	ldr	r3, [r7, #4]
 8004634:	4a4c      	ldr	r2, [pc, #304]	@ (8004768 <HAL_GPIO_Init+0x314>)
 8004636:	4293      	cmp	r3, r2
 8004638:	d013      	beq.n	8004662 <HAL_GPIO_Init+0x20e>
 800463a:	687b      	ldr	r3, [r7, #4]
 800463c:	4a4b      	ldr	r2, [pc, #300]	@ (800476c <HAL_GPIO_Init+0x318>)
 800463e:	4293      	cmp	r3, r2
 8004640:	d00d      	beq.n	800465e <HAL_GPIO_Init+0x20a>
 8004642:	687b      	ldr	r3, [r7, #4]
 8004644:	4a4a      	ldr	r2, [pc, #296]	@ (8004770 <HAL_GPIO_Init+0x31c>)
 8004646:	4293      	cmp	r3, r2
 8004648:	d007      	beq.n	800465a <HAL_GPIO_Init+0x206>
 800464a:	687b      	ldr	r3, [r7, #4]
 800464c:	4a49      	ldr	r2, [pc, #292]	@ (8004774 <HAL_GPIO_Init+0x320>)
 800464e:	4293      	cmp	r3, r2
 8004650:	d101      	bne.n	8004656 <HAL_GPIO_Init+0x202>
 8004652:	2306      	movs	r3, #6
 8004654:	e00c      	b.n	8004670 <HAL_GPIO_Init+0x21c>
 8004656:	2307      	movs	r3, #7
 8004658:	e00a      	b.n	8004670 <HAL_GPIO_Init+0x21c>
 800465a:	2305      	movs	r3, #5
 800465c:	e008      	b.n	8004670 <HAL_GPIO_Init+0x21c>
 800465e:	2304      	movs	r3, #4
 8004660:	e006      	b.n	8004670 <HAL_GPIO_Init+0x21c>
 8004662:	2303      	movs	r3, #3
 8004664:	e004      	b.n	8004670 <HAL_GPIO_Init+0x21c>
 8004666:	2302      	movs	r3, #2
 8004668:	e002      	b.n	8004670 <HAL_GPIO_Init+0x21c>
 800466a:	2301      	movs	r3, #1
 800466c:	e000      	b.n	8004670 <HAL_GPIO_Init+0x21c>
 800466e:	2300      	movs	r3, #0
 8004670:	69fa      	ldr	r2, [r7, #28]
 8004672:	f002 0203 	and.w	r2, r2, #3
 8004676:	0092      	lsls	r2, r2, #2
 8004678:	4093      	lsls	r3, r2
 800467a:	69ba      	ldr	r2, [r7, #24]
 800467c:	4313      	orrs	r3, r2
 800467e:	61bb      	str	r3, [r7, #24]
 8004680:	4935      	ldr	r1, [pc, #212]	@ (8004758 <HAL_GPIO_Init+0x304>)
 8004682:	69fb      	ldr	r3, [r7, #28]
 8004684:	089b      	lsrs	r3, r3, #2
 8004686:	3302      	adds	r3, #2
 8004688:	69ba      	ldr	r2, [r7, #24]
 800468a:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 800468e:	4b3a      	ldr	r3, [pc, #232]	@ (8004778 <HAL_GPIO_Init+0x324>)
 8004690:	689b      	ldr	r3, [r3, #8]
 8004692:	61bb      	str	r3, [r7, #24]
 8004694:	693b      	ldr	r3, [r7, #16]
 8004696:	43db      	mvns	r3, r3
 8004698:	69ba      	ldr	r2, [r7, #24]
 800469a:	4013      	ands	r3, r2
 800469c:	61bb      	str	r3, [r7, #24]
 800469e:	683b      	ldr	r3, [r7, #0]
 80046a0:	685b      	ldr	r3, [r3, #4]
 80046a2:	f403 1380 	and.w	r3, r3, #1048576	@ 0x100000
 80046a6:	2b00      	cmp	r3, #0
 80046a8:	d003      	beq.n	80046b2 <HAL_GPIO_Init+0x25e>
 80046aa:	69ba      	ldr	r2, [r7, #24]
 80046ac:	693b      	ldr	r3, [r7, #16]
 80046ae:	4313      	orrs	r3, r2
 80046b0:	61bb      	str	r3, [r7, #24]
 80046b2:	4a31      	ldr	r2, [pc, #196]	@ (8004778 <HAL_GPIO_Init+0x324>)
 80046b4:	69bb      	ldr	r3, [r7, #24]
 80046b6:	6093      	str	r3, [r2, #8]
 80046b8:	4b2f      	ldr	r3, [pc, #188]	@ (8004778 <HAL_GPIO_Init+0x324>)
 80046ba:	68db      	ldr	r3, [r3, #12]
 80046bc:	61bb      	str	r3, [r7, #24]
 80046be:	693b      	ldr	r3, [r7, #16]
 80046c0:	43db      	mvns	r3, r3
 80046c2:	69ba      	ldr	r2, [r7, #24]
 80046c4:	4013      	ands	r3, r2
 80046c6:	61bb      	str	r3, [r7, #24]
 80046c8:	683b      	ldr	r3, [r7, #0]
 80046ca:	685b      	ldr	r3, [r3, #4]
 80046cc:	f403 1300 	and.w	r3, r3, #2097152	@ 0x200000
 80046d0:	2b00      	cmp	r3, #0
 80046d2:	d003      	beq.n	80046dc <HAL_GPIO_Init+0x288>
 80046d4:	69ba      	ldr	r2, [r7, #24]
 80046d6:	693b      	ldr	r3, [r7, #16]
 80046d8:	4313      	orrs	r3, r2
 80046da:	61bb      	str	r3, [r7, #24]
 80046dc:	4a26      	ldr	r2, [pc, #152]	@ (8004778 <HAL_GPIO_Init+0x324>)
 80046de:	69bb      	ldr	r3, [r7, #24]
 80046e0:	60d3      	str	r3, [r2, #12]
 80046e2:	4b25      	ldr	r3, [pc, #148]	@ (8004778 <HAL_GPIO_Init+0x324>)
 80046e4:	685b      	ldr	r3, [r3, #4]
 80046e6:	61bb      	str	r3, [r7, #24]
 80046e8:	693b      	ldr	r3, [r7, #16]
 80046ea:	43db      	mvns	r3, r3
 80046ec:	69ba      	ldr	r2, [r7, #24]
 80046ee:	4013      	ands	r3, r2
 80046f0:	61bb      	str	r3, [r7, #24]
 80046f2:	683b      	ldr	r3, [r7, #0]
 80046f4:	685b      	ldr	r3, [r3, #4]
 80046f6:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 80046fa:	2b00      	cmp	r3, #0
 80046fc:	d003      	beq.n	8004706 <HAL_GPIO_Init+0x2b2>
 80046fe:	69ba      	ldr	r2, [r7, #24]
 8004700:	693b      	ldr	r3, [r7, #16]
 8004702:	4313      	orrs	r3, r2
 8004704:	61bb      	str	r3, [r7, #24]
 8004706:	4a1c      	ldr	r2, [pc, #112]	@ (8004778 <HAL_GPIO_Init+0x324>)
 8004708:	69bb      	ldr	r3, [r7, #24]
 800470a:	6053      	str	r3, [r2, #4]
 800470c:	4b1a      	ldr	r3, [pc, #104]	@ (8004778 <HAL_GPIO_Init+0x324>)
 800470e:	681b      	ldr	r3, [r3, #0]
 8004710:	61bb      	str	r3, [r7, #24]
 8004712:	693b      	ldr	r3, [r7, #16]
 8004714:	43db      	mvns	r3, r3
 8004716:	69ba      	ldr	r2, [r7, #24]
 8004718:	4013      	ands	r3, r2
 800471a:	61bb      	str	r3, [r7, #24]
 800471c:	683b      	ldr	r3, [r7, #0]
 800471e:	685b      	ldr	r3, [r3, #4]
 8004720:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 8004724:	2b00      	cmp	r3, #0
 8004726:	d003      	beq.n	8004730 <HAL_GPIO_Init+0x2dc>
 8004728:	69ba      	ldr	r2, [r7, #24]
 800472a:	693b      	ldr	r3, [r7, #16]
 800472c:	4313      	orrs	r3, r2
 800472e:	61bb      	str	r3, [r7, #24]
 8004730:	4a11      	ldr	r2, [pc, #68]	@ (8004778 <HAL_GPIO_Init+0x324>)
 8004732:	69bb      	ldr	r3, [r7, #24]
 8004734:	6013      	str	r3, [r2, #0]
 8004736:	69fb      	ldr	r3, [r7, #28]
 8004738:	3301      	adds	r3, #1
 800473a:	61fb      	str	r3, [r7, #28]
 800473c:	69fb      	ldr	r3, [r7, #28]
 800473e:	2b0f      	cmp	r3, #15
 8004740:	f67f ae96 	bls.w	8004470 <HAL_GPIO_Init+0x1c>
 8004744:	bf00      	nop
 8004746:	bf00      	nop
 8004748:	3724      	adds	r7, #36	@ 0x24
 800474a:	46bd      	mov	sp, r7
 800474c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004750:	4770      	bx	lr
 8004752:	bf00      	nop
 8004754:	40023800 	.word	0x40023800
 8004758:	40013800 	.word	0x40013800
 800475c:	40020000 	.word	0x40020000
 8004760:	40020400 	.word	0x40020400
 8004764:	40020800 	.word	0x40020800
 8004768:	40020c00 	.word	0x40020c00
 800476c:	40021000 	.word	0x40021000
 8004770:	40021400 	.word	0x40021400
 8004774:	40021800 	.word	0x40021800
 8004778:	40013c00 	.word	0x40013c00

0800477c <HAL_GPIO_WritePin>:
 800477c:	b480      	push	{r7}
 800477e:	b083      	sub	sp, #12
 8004780:	af00      	add	r7, sp, #0
 8004782:	6078      	str	r0, [r7, #4]
 8004784:	460b      	mov	r3, r1
 8004786:	807b      	strh	r3, [r7, #2]
 8004788:	4613      	mov	r3, r2
 800478a:	707b      	strb	r3, [r7, #1]
 800478c:	787b      	ldrb	r3, [r7, #1]
 800478e:	2b00      	cmp	r3, #0
 8004790:	d003      	beq.n	800479a <HAL_GPIO_WritePin+0x1e>
 8004792:	887a      	ldrh	r2, [r7, #2]
 8004794:	687b      	ldr	r3, [r7, #4]
 8004796:	619a      	str	r2, [r3, #24]
 8004798:	e003      	b.n	80047a2 <HAL_GPIO_WritePin+0x26>
 800479a:	887b      	ldrh	r3, [r7, #2]
 800479c:	041a      	lsls	r2, r3, #16
 800479e:	687b      	ldr	r3, [r7, #4]
 80047a0:	619a      	str	r2, [r3, #24]
 80047a2:	bf00      	nop
 80047a4:	370c      	adds	r7, #12
 80047a6:	46bd      	mov	sp, r7
 80047a8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80047ac:	4770      	bx	lr
	...

080047b0 <HAL_I2C_Init>:
 80047b0:	b580      	push	{r7, lr}
 80047b2:	b084      	sub	sp, #16
 80047b4:	af00      	add	r7, sp, #0
 80047b6:	6078      	str	r0, [r7, #4]
 80047b8:	687b      	ldr	r3, [r7, #4]
 80047ba:	2b00      	cmp	r3, #0
 80047bc:	d101      	bne.n	80047c2 <HAL_I2C_Init+0x12>
 80047be:	2301      	movs	r3, #1
 80047c0:	e12b      	b.n	8004a1a <HAL_I2C_Init+0x26a>
 80047c2:	687b      	ldr	r3, [r7, #4]
 80047c4:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 80047c8:	b2db      	uxtb	r3, r3
 80047ca:	2b00      	cmp	r3, #0
 80047cc:	d106      	bne.n	80047dc <HAL_I2C_Init+0x2c>
 80047ce:	687b      	ldr	r3, [r7, #4]
 80047d0:	2200      	movs	r2, #0
 80047d2:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 80047d6:	6878      	ldr	r0, [r7, #4]
 80047d8:	f7fe fb70 	bl	8002ebc <HAL_I2C_MspInit>
 80047dc:	687b      	ldr	r3, [r7, #4]
 80047de:	2224      	movs	r2, #36	@ 0x24
 80047e0:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 80047e4:	687b      	ldr	r3, [r7, #4]
 80047e6:	681b      	ldr	r3, [r3, #0]
 80047e8:	681a      	ldr	r2, [r3, #0]
 80047ea:	687b      	ldr	r3, [r7, #4]
 80047ec:	681b      	ldr	r3, [r3, #0]
 80047ee:	f022 0201 	bic.w	r2, r2, #1
 80047f2:	601a      	str	r2, [r3, #0]
 80047f4:	687b      	ldr	r3, [r7, #4]
 80047f6:	681b      	ldr	r3, [r3, #0]
 80047f8:	681a      	ldr	r2, [r3, #0]
 80047fa:	687b      	ldr	r3, [r7, #4]
 80047fc:	681b      	ldr	r3, [r3, #0]
 80047fe:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
 8004802:	601a      	str	r2, [r3, #0]
 8004804:	687b      	ldr	r3, [r7, #4]
 8004806:	681b      	ldr	r3, [r3, #0]
 8004808:	681a      	ldr	r2, [r3, #0]
 800480a:	687b      	ldr	r3, [r7, #4]
 800480c:	681b      	ldr	r3, [r3, #0]
 800480e:	f422 4200 	bic.w	r2, r2, #32768	@ 0x8000
 8004812:	601a      	str	r2, [r3, #0]
 8004814:	f001 f922 	bl	8005a5c <HAL_RCC_GetPCLK1Freq>
 8004818:	60f8      	str	r0, [r7, #12]
 800481a:	687b      	ldr	r3, [r7, #4]
 800481c:	685b      	ldr	r3, [r3, #4]
 800481e:	4a81      	ldr	r2, [pc, #516]	@ (8004a24 <HAL_I2C_Init+0x274>)
 8004820:	4293      	cmp	r3, r2
 8004822:	d807      	bhi.n	8004834 <HAL_I2C_Init+0x84>
 8004824:	68fb      	ldr	r3, [r7, #12]
 8004826:	4a80      	ldr	r2, [pc, #512]	@ (8004a28 <HAL_I2C_Init+0x278>)
 8004828:	4293      	cmp	r3, r2
 800482a:	bf94      	ite	ls
 800482c:	2301      	movls	r3, #1
 800482e:	2300      	movhi	r3, #0
 8004830:	b2db      	uxtb	r3, r3
 8004832:	e006      	b.n	8004842 <HAL_I2C_Init+0x92>
 8004834:	68fb      	ldr	r3, [r7, #12]
 8004836:	4a7d      	ldr	r2, [pc, #500]	@ (8004a2c <HAL_I2C_Init+0x27c>)
 8004838:	4293      	cmp	r3, r2
 800483a:	bf94      	ite	ls
 800483c:	2301      	movls	r3, #1
 800483e:	2300      	movhi	r3, #0
 8004840:	b2db      	uxtb	r3, r3
 8004842:	2b00      	cmp	r3, #0
 8004844:	d001      	beq.n	800484a <HAL_I2C_Init+0x9a>
 8004846:	2301      	movs	r3, #1
 8004848:	e0e7      	b.n	8004a1a <HAL_I2C_Init+0x26a>
 800484a:	68fb      	ldr	r3, [r7, #12]
 800484c:	4a78      	ldr	r2, [pc, #480]	@ (8004a30 <HAL_I2C_Init+0x280>)
 800484e:	fba2 2303 	umull	r2, r3, r2, r3
 8004852:	0c9b      	lsrs	r3, r3, #18
 8004854:	60bb      	str	r3, [r7, #8]
 8004856:	687b      	ldr	r3, [r7, #4]
 8004858:	681b      	ldr	r3, [r3, #0]
 800485a:	685b      	ldr	r3, [r3, #4]
 800485c:	f023 013f 	bic.w	r1, r3, #63	@ 0x3f
 8004860:	687b      	ldr	r3, [r7, #4]
 8004862:	681b      	ldr	r3, [r3, #0]
 8004864:	68ba      	ldr	r2, [r7, #8]
 8004866:	430a      	orrs	r2, r1
 8004868:	605a      	str	r2, [r3, #4]
 800486a:	687b      	ldr	r3, [r7, #4]
 800486c:	681b      	ldr	r3, [r3, #0]
 800486e:	6a1b      	ldr	r3, [r3, #32]
 8004870:	f023 013f 	bic.w	r1, r3, #63	@ 0x3f
 8004874:	687b      	ldr	r3, [r7, #4]
 8004876:	685b      	ldr	r3, [r3, #4]
 8004878:	4a6a      	ldr	r2, [pc, #424]	@ (8004a24 <HAL_I2C_Init+0x274>)
 800487a:	4293      	cmp	r3, r2
 800487c:	d802      	bhi.n	8004884 <HAL_I2C_Init+0xd4>
 800487e:	68bb      	ldr	r3, [r7, #8]
 8004880:	3301      	adds	r3, #1
 8004882:	e009      	b.n	8004898 <HAL_I2C_Init+0xe8>
 8004884:	68bb      	ldr	r3, [r7, #8]
 8004886:	f44f 7296 	mov.w	r2, #300	@ 0x12c
 800488a:	fb02 f303 	mul.w	r3, r2, r3
 800488e:	4a69      	ldr	r2, [pc, #420]	@ (8004a34 <HAL_I2C_Init+0x284>)
 8004890:	fba2 2303 	umull	r2, r3, r2, r3
 8004894:	099b      	lsrs	r3, r3, #6
 8004896:	3301      	adds	r3, #1
 8004898:	687a      	ldr	r2, [r7, #4]
 800489a:	6812      	ldr	r2, [r2, #0]
 800489c:	430b      	orrs	r3, r1
 800489e:	6213      	str	r3, [r2, #32]
 80048a0:	687b      	ldr	r3, [r7, #4]
 80048a2:	681b      	ldr	r3, [r3, #0]
 80048a4:	69db      	ldr	r3, [r3, #28]
 80048a6:	f423 424f 	bic.w	r2, r3, #52992	@ 0xcf00
 80048aa:	f022 02ff 	bic.w	r2, r2, #255	@ 0xff
 80048ae:	687b      	ldr	r3, [r7, #4]
 80048b0:	685b      	ldr	r3, [r3, #4]
 80048b2:	495c      	ldr	r1, [pc, #368]	@ (8004a24 <HAL_I2C_Init+0x274>)
 80048b4:	428b      	cmp	r3, r1
 80048b6:	d819      	bhi.n	80048ec <HAL_I2C_Init+0x13c>
 80048b8:	68fb      	ldr	r3, [r7, #12]
 80048ba:	1e59      	subs	r1, r3, #1
 80048bc:	687b      	ldr	r3, [r7, #4]
 80048be:	685b      	ldr	r3, [r3, #4]
 80048c0:	005b      	lsls	r3, r3, #1
 80048c2:	fbb1 f3f3 	udiv	r3, r1, r3
 80048c6:	1c59      	adds	r1, r3, #1
 80048c8:	f640 73fc 	movw	r3, #4092	@ 0xffc
 80048cc:	400b      	ands	r3, r1
 80048ce:	2b00      	cmp	r3, #0
 80048d0:	d00a      	beq.n	80048e8 <HAL_I2C_Init+0x138>
 80048d2:	68fb      	ldr	r3, [r7, #12]
 80048d4:	1e59      	subs	r1, r3, #1
 80048d6:	687b      	ldr	r3, [r7, #4]
 80048d8:	685b      	ldr	r3, [r3, #4]
 80048da:	005b      	lsls	r3, r3, #1
 80048dc:	fbb1 f3f3 	udiv	r3, r1, r3
 80048e0:	3301      	adds	r3, #1
 80048e2:	f3c3 030b 	ubfx	r3, r3, #0, #12
 80048e6:	e051      	b.n	800498c <HAL_I2C_Init+0x1dc>
 80048e8:	2304      	movs	r3, #4
 80048ea:	e04f      	b.n	800498c <HAL_I2C_Init+0x1dc>
 80048ec:	687b      	ldr	r3, [r7, #4]
 80048ee:	689b      	ldr	r3, [r3, #8]
 80048f0:	2b00      	cmp	r3, #0
 80048f2:	d111      	bne.n	8004918 <HAL_I2C_Init+0x168>
 80048f4:	68fb      	ldr	r3, [r7, #12]
 80048f6:	1e58      	subs	r0, r3, #1
 80048f8:	687b      	ldr	r3, [r7, #4]
 80048fa:	6859      	ldr	r1, [r3, #4]
 80048fc:	460b      	mov	r3, r1
 80048fe:	005b      	lsls	r3, r3, #1
 8004900:	440b      	add	r3, r1
 8004902:	fbb0 f3f3 	udiv	r3, r0, r3
 8004906:	3301      	adds	r3, #1
 8004908:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800490c:	2b00      	cmp	r3, #0
 800490e:	bf0c      	ite	eq
 8004910:	2301      	moveq	r3, #1
 8004912:	2300      	movne	r3, #0
 8004914:	b2db      	uxtb	r3, r3
 8004916:	e012      	b.n	800493e <HAL_I2C_Init+0x18e>
 8004918:	68fb      	ldr	r3, [r7, #12]
 800491a:	1e58      	subs	r0, r3, #1
 800491c:	687b      	ldr	r3, [r7, #4]
 800491e:	6859      	ldr	r1, [r3, #4]
 8004920:	460b      	mov	r3, r1
 8004922:	009b      	lsls	r3, r3, #2
 8004924:	440b      	add	r3, r1
 8004926:	0099      	lsls	r1, r3, #2
 8004928:	440b      	add	r3, r1
 800492a:	fbb0 f3f3 	udiv	r3, r0, r3
 800492e:	3301      	adds	r3, #1
 8004930:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8004934:	2b00      	cmp	r3, #0
 8004936:	bf0c      	ite	eq
 8004938:	2301      	moveq	r3, #1
 800493a:	2300      	movne	r3, #0
 800493c:	b2db      	uxtb	r3, r3
 800493e:	2b00      	cmp	r3, #0
 8004940:	d001      	beq.n	8004946 <HAL_I2C_Init+0x196>
 8004942:	2301      	movs	r3, #1
 8004944:	e022      	b.n	800498c <HAL_I2C_Init+0x1dc>
 8004946:	687b      	ldr	r3, [r7, #4]
 8004948:	689b      	ldr	r3, [r3, #8]
 800494a:	2b00      	cmp	r3, #0
 800494c:	d10e      	bne.n	800496c <HAL_I2C_Init+0x1bc>
 800494e:	68fb      	ldr	r3, [r7, #12]
 8004950:	1e58      	subs	r0, r3, #1
 8004952:	687b      	ldr	r3, [r7, #4]
 8004954:	6859      	ldr	r1, [r3, #4]
 8004956:	460b      	mov	r3, r1
 8004958:	005b      	lsls	r3, r3, #1
 800495a:	440b      	add	r3, r1
 800495c:	fbb0 f3f3 	udiv	r3, r0, r3
 8004960:	3301      	adds	r3, #1
 8004962:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8004966:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 800496a:	e00f      	b.n	800498c <HAL_I2C_Init+0x1dc>
 800496c:	68fb      	ldr	r3, [r7, #12]
 800496e:	1e58      	subs	r0, r3, #1
 8004970:	687b      	ldr	r3, [r7, #4]
 8004972:	6859      	ldr	r1, [r3, #4]
 8004974:	460b      	mov	r3, r1
 8004976:	009b      	lsls	r3, r3, #2
 8004978:	440b      	add	r3, r1
 800497a:	0099      	lsls	r1, r3, #2
 800497c:	440b      	add	r3, r1
 800497e:	fbb0 f3f3 	udiv	r3, r0, r3
 8004982:	3301      	adds	r3, #1
 8004984:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8004988:	f443 4340 	orr.w	r3, r3, #49152	@ 0xc000
 800498c:	6879      	ldr	r1, [r7, #4]
 800498e:	6809      	ldr	r1, [r1, #0]
 8004990:	4313      	orrs	r3, r2
 8004992:	61cb      	str	r3, [r1, #28]
 8004994:	687b      	ldr	r3, [r7, #4]
 8004996:	681b      	ldr	r3, [r3, #0]
 8004998:	681b      	ldr	r3, [r3, #0]
 800499a:	f023 01c0 	bic.w	r1, r3, #192	@ 0xc0
 800499e:	687b      	ldr	r3, [r7, #4]
 80049a0:	69da      	ldr	r2, [r3, #28]
 80049a2:	687b      	ldr	r3, [r7, #4]
 80049a4:	6a1b      	ldr	r3, [r3, #32]
 80049a6:	431a      	orrs	r2, r3
 80049a8:	687b      	ldr	r3, [r7, #4]
 80049aa:	681b      	ldr	r3, [r3, #0]
 80049ac:	430a      	orrs	r2, r1
 80049ae:	601a      	str	r2, [r3, #0]
 80049b0:	687b      	ldr	r3, [r7, #4]
 80049b2:	681b      	ldr	r3, [r3, #0]
 80049b4:	689b      	ldr	r3, [r3, #8]
 80049b6:	f423 4303 	bic.w	r3, r3, #33536	@ 0x8300
 80049ba:	f023 03ff 	bic.w	r3, r3, #255	@ 0xff
 80049be:	687a      	ldr	r2, [r7, #4]
 80049c0:	6911      	ldr	r1, [r2, #16]
 80049c2:	687a      	ldr	r2, [r7, #4]
 80049c4:	68d2      	ldr	r2, [r2, #12]
 80049c6:	4311      	orrs	r1, r2
 80049c8:	687a      	ldr	r2, [r7, #4]
 80049ca:	6812      	ldr	r2, [r2, #0]
 80049cc:	430b      	orrs	r3, r1
 80049ce:	6093      	str	r3, [r2, #8]
 80049d0:	687b      	ldr	r3, [r7, #4]
 80049d2:	681b      	ldr	r3, [r3, #0]
 80049d4:	68db      	ldr	r3, [r3, #12]
 80049d6:	f023 01ff 	bic.w	r1, r3, #255	@ 0xff
 80049da:	687b      	ldr	r3, [r7, #4]
 80049dc:	695a      	ldr	r2, [r3, #20]
 80049de:	687b      	ldr	r3, [r7, #4]
 80049e0:	699b      	ldr	r3, [r3, #24]
 80049e2:	431a      	orrs	r2, r3
 80049e4:	687b      	ldr	r3, [r7, #4]
 80049e6:	681b      	ldr	r3, [r3, #0]
 80049e8:	430a      	orrs	r2, r1
 80049ea:	60da      	str	r2, [r3, #12]
 80049ec:	687b      	ldr	r3, [r7, #4]
 80049ee:	681b      	ldr	r3, [r3, #0]
 80049f0:	681a      	ldr	r2, [r3, #0]
 80049f2:	687b      	ldr	r3, [r7, #4]
 80049f4:	681b      	ldr	r3, [r3, #0]
 80049f6:	f042 0201 	orr.w	r2, r2, #1
 80049fa:	601a      	str	r2, [r3, #0]
 80049fc:	687b      	ldr	r3, [r7, #4]
 80049fe:	2200      	movs	r2, #0
 8004a00:	641a      	str	r2, [r3, #64]	@ 0x40
 8004a02:	687b      	ldr	r3, [r7, #4]
 8004a04:	2220      	movs	r2, #32
 8004a06:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8004a0a:	687b      	ldr	r3, [r7, #4]
 8004a0c:	2200      	movs	r2, #0
 8004a0e:	631a      	str	r2, [r3, #48]	@ 0x30
 8004a10:	687b      	ldr	r3, [r7, #4]
 8004a12:	2200      	movs	r2, #0
 8004a14:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8004a18:	2300      	movs	r3, #0
 8004a1a:	4618      	mov	r0, r3
 8004a1c:	3710      	adds	r7, #16
 8004a1e:	46bd      	mov	sp, r7
 8004a20:	bd80      	pop	{r7, pc}
 8004a22:	bf00      	nop
 8004a24:	000186a0 	.word	0x000186a0
 8004a28:	001e847f 	.word	0x001e847f
 8004a2c:	003d08ff 	.word	0x003d08ff
 8004a30:	431bde83 	.word	0x431bde83
 8004a34:	10624dd3 	.word	0x10624dd3

08004a38 <HAL_I2C_Master_Transmit>:
 8004a38:	b580      	push	{r7, lr}
 8004a3a:	b088      	sub	sp, #32
 8004a3c:	af02      	add	r7, sp, #8
 8004a3e:	60f8      	str	r0, [r7, #12]
 8004a40:	607a      	str	r2, [r7, #4]
 8004a42:	461a      	mov	r2, r3
 8004a44:	460b      	mov	r3, r1
 8004a46:	817b      	strh	r3, [r7, #10]
 8004a48:	4613      	mov	r3, r2
 8004a4a:	813b      	strh	r3, [r7, #8]
 8004a4c:	f7fe ffbe 	bl	80039cc <HAL_GetTick>
 8004a50:	6178      	str	r0, [r7, #20]
 8004a52:	68fb      	ldr	r3, [r7, #12]
 8004a54:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 8004a58:	b2db      	uxtb	r3, r3
 8004a5a:	2b20      	cmp	r3, #32
 8004a5c:	f040 80e0 	bne.w	8004c20 <HAL_I2C_Master_Transmit+0x1e8>
 8004a60:	697b      	ldr	r3, [r7, #20]
 8004a62:	9300      	str	r3, [sp, #0]
 8004a64:	2319      	movs	r3, #25
 8004a66:	2201      	movs	r2, #1
 8004a68:	4970      	ldr	r1, [pc, #448]	@ (8004c2c <HAL_I2C_Master_Transmit+0x1f4>)
 8004a6a:	68f8      	ldr	r0, [r7, #12]
 8004a6c:	f000 fc7e 	bl	800536c <I2C_WaitOnFlagUntilTimeout>
 8004a70:	4603      	mov	r3, r0
 8004a72:	2b00      	cmp	r3, #0
 8004a74:	d001      	beq.n	8004a7a <HAL_I2C_Master_Transmit+0x42>
 8004a76:	2302      	movs	r3, #2
 8004a78:	e0d3      	b.n	8004c22 <HAL_I2C_Master_Transmit+0x1ea>
 8004a7a:	68fb      	ldr	r3, [r7, #12]
 8004a7c:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 8004a80:	2b01      	cmp	r3, #1
 8004a82:	d101      	bne.n	8004a88 <HAL_I2C_Master_Transmit+0x50>
 8004a84:	2302      	movs	r3, #2
 8004a86:	e0cc      	b.n	8004c22 <HAL_I2C_Master_Transmit+0x1ea>
 8004a88:	68fb      	ldr	r3, [r7, #12]
 8004a8a:	2201      	movs	r2, #1
 8004a8c:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8004a90:	68fb      	ldr	r3, [r7, #12]
 8004a92:	681b      	ldr	r3, [r3, #0]
 8004a94:	681b      	ldr	r3, [r3, #0]
 8004a96:	f003 0301 	and.w	r3, r3, #1
 8004a9a:	2b01      	cmp	r3, #1
 8004a9c:	d007      	beq.n	8004aae <HAL_I2C_Master_Transmit+0x76>
 8004a9e:	68fb      	ldr	r3, [r7, #12]
 8004aa0:	681b      	ldr	r3, [r3, #0]
 8004aa2:	681a      	ldr	r2, [r3, #0]
 8004aa4:	68fb      	ldr	r3, [r7, #12]
 8004aa6:	681b      	ldr	r3, [r3, #0]
 8004aa8:	f042 0201 	orr.w	r2, r2, #1
 8004aac:	601a      	str	r2, [r3, #0]
 8004aae:	68fb      	ldr	r3, [r7, #12]
 8004ab0:	681b      	ldr	r3, [r3, #0]
 8004ab2:	681a      	ldr	r2, [r3, #0]
 8004ab4:	68fb      	ldr	r3, [r7, #12]
 8004ab6:	681b      	ldr	r3, [r3, #0]
 8004ab8:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 8004abc:	601a      	str	r2, [r3, #0]
 8004abe:	68fb      	ldr	r3, [r7, #12]
 8004ac0:	2221      	movs	r2, #33	@ 0x21
 8004ac2:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8004ac6:	68fb      	ldr	r3, [r7, #12]
 8004ac8:	2210      	movs	r2, #16
 8004aca:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8004ace:	68fb      	ldr	r3, [r7, #12]
 8004ad0:	2200      	movs	r2, #0
 8004ad2:	641a      	str	r2, [r3, #64]	@ 0x40
 8004ad4:	68fb      	ldr	r3, [r7, #12]
 8004ad6:	687a      	ldr	r2, [r7, #4]
 8004ad8:	625a      	str	r2, [r3, #36]	@ 0x24
 8004ada:	68fb      	ldr	r3, [r7, #12]
 8004adc:	893a      	ldrh	r2, [r7, #8]
 8004ade:	855a      	strh	r2, [r3, #42]	@ 0x2a
 8004ae0:	68fb      	ldr	r3, [r7, #12]
 8004ae2:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8004ae4:	b29a      	uxth	r2, r3
 8004ae6:	68fb      	ldr	r3, [r7, #12]
 8004ae8:	851a      	strh	r2, [r3, #40]	@ 0x28
 8004aea:	68fb      	ldr	r3, [r7, #12]
 8004aec:	4a50      	ldr	r2, [pc, #320]	@ (8004c30 <HAL_I2C_Master_Transmit+0x1f8>)
 8004aee:	62da      	str	r2, [r3, #44]	@ 0x2c
 8004af0:	8979      	ldrh	r1, [r7, #10]
 8004af2:	697b      	ldr	r3, [r7, #20]
 8004af4:	6a3a      	ldr	r2, [r7, #32]
 8004af6:	68f8      	ldr	r0, [r7, #12]
 8004af8:	f000 fae8 	bl	80050cc <I2C_MasterRequestWrite>
 8004afc:	4603      	mov	r3, r0
 8004afe:	2b00      	cmp	r3, #0
 8004b00:	d001      	beq.n	8004b06 <HAL_I2C_Master_Transmit+0xce>
 8004b02:	2301      	movs	r3, #1
 8004b04:	e08d      	b.n	8004c22 <HAL_I2C_Master_Transmit+0x1ea>
 8004b06:	2300      	movs	r3, #0
 8004b08:	613b      	str	r3, [r7, #16]
 8004b0a:	68fb      	ldr	r3, [r7, #12]
 8004b0c:	681b      	ldr	r3, [r3, #0]
 8004b0e:	695b      	ldr	r3, [r3, #20]
 8004b10:	613b      	str	r3, [r7, #16]
 8004b12:	68fb      	ldr	r3, [r7, #12]
 8004b14:	681b      	ldr	r3, [r3, #0]
 8004b16:	699b      	ldr	r3, [r3, #24]
 8004b18:	613b      	str	r3, [r7, #16]
 8004b1a:	693b      	ldr	r3, [r7, #16]
 8004b1c:	e066      	b.n	8004bec <HAL_I2C_Master_Transmit+0x1b4>
 8004b1e:	697a      	ldr	r2, [r7, #20]
 8004b20:	6a39      	ldr	r1, [r7, #32]
 8004b22:	68f8      	ldr	r0, [r7, #12]
 8004b24:	f000 fd3c 	bl	80055a0 <I2C_WaitOnTXEFlagUntilTimeout>
 8004b28:	4603      	mov	r3, r0
 8004b2a:	2b00      	cmp	r3, #0
 8004b2c:	d00d      	beq.n	8004b4a <HAL_I2C_Master_Transmit+0x112>
 8004b2e:	68fb      	ldr	r3, [r7, #12]
 8004b30:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8004b32:	2b04      	cmp	r3, #4
 8004b34:	d107      	bne.n	8004b46 <HAL_I2C_Master_Transmit+0x10e>
 8004b36:	68fb      	ldr	r3, [r7, #12]
 8004b38:	681b      	ldr	r3, [r3, #0]
 8004b3a:	681a      	ldr	r2, [r3, #0]
 8004b3c:	68fb      	ldr	r3, [r7, #12]
 8004b3e:	681b      	ldr	r3, [r3, #0]
 8004b40:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 8004b44:	601a      	str	r2, [r3, #0]
 8004b46:	2301      	movs	r3, #1
 8004b48:	e06b      	b.n	8004c22 <HAL_I2C_Master_Transmit+0x1ea>
 8004b4a:	68fb      	ldr	r3, [r7, #12]
 8004b4c:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004b4e:	781a      	ldrb	r2, [r3, #0]
 8004b50:	68fb      	ldr	r3, [r7, #12]
 8004b52:	681b      	ldr	r3, [r3, #0]
 8004b54:	611a      	str	r2, [r3, #16]
 8004b56:	68fb      	ldr	r3, [r7, #12]
 8004b58:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004b5a:	1c5a      	adds	r2, r3, #1
 8004b5c:	68fb      	ldr	r3, [r7, #12]
 8004b5e:	625a      	str	r2, [r3, #36]	@ 0x24
 8004b60:	68fb      	ldr	r3, [r7, #12]
 8004b62:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8004b64:	b29b      	uxth	r3, r3
 8004b66:	3b01      	subs	r3, #1
 8004b68:	b29a      	uxth	r2, r3
 8004b6a:	68fb      	ldr	r3, [r7, #12]
 8004b6c:	855a      	strh	r2, [r3, #42]	@ 0x2a
 8004b6e:	68fb      	ldr	r3, [r7, #12]
 8004b70:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8004b72:	3b01      	subs	r3, #1
 8004b74:	b29a      	uxth	r2, r3
 8004b76:	68fb      	ldr	r3, [r7, #12]
 8004b78:	851a      	strh	r2, [r3, #40]	@ 0x28
 8004b7a:	68fb      	ldr	r3, [r7, #12]
 8004b7c:	681b      	ldr	r3, [r3, #0]
 8004b7e:	695b      	ldr	r3, [r3, #20]
 8004b80:	f003 0304 	and.w	r3, r3, #4
 8004b84:	2b04      	cmp	r3, #4
 8004b86:	d11b      	bne.n	8004bc0 <HAL_I2C_Master_Transmit+0x188>
 8004b88:	68fb      	ldr	r3, [r7, #12]
 8004b8a:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8004b8c:	2b00      	cmp	r3, #0
 8004b8e:	d017      	beq.n	8004bc0 <HAL_I2C_Master_Transmit+0x188>
 8004b90:	68fb      	ldr	r3, [r7, #12]
 8004b92:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004b94:	781a      	ldrb	r2, [r3, #0]
 8004b96:	68fb      	ldr	r3, [r7, #12]
 8004b98:	681b      	ldr	r3, [r3, #0]
 8004b9a:	611a      	str	r2, [r3, #16]
 8004b9c:	68fb      	ldr	r3, [r7, #12]
 8004b9e:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004ba0:	1c5a      	adds	r2, r3, #1
 8004ba2:	68fb      	ldr	r3, [r7, #12]
 8004ba4:	625a      	str	r2, [r3, #36]	@ 0x24
 8004ba6:	68fb      	ldr	r3, [r7, #12]
 8004ba8:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8004baa:	b29b      	uxth	r3, r3
 8004bac:	3b01      	subs	r3, #1
 8004bae:	b29a      	uxth	r2, r3
 8004bb0:	68fb      	ldr	r3, [r7, #12]
 8004bb2:	855a      	strh	r2, [r3, #42]	@ 0x2a
 8004bb4:	68fb      	ldr	r3, [r7, #12]
 8004bb6:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8004bb8:	3b01      	subs	r3, #1
 8004bba:	b29a      	uxth	r2, r3
 8004bbc:	68fb      	ldr	r3, [r7, #12]
 8004bbe:	851a      	strh	r2, [r3, #40]	@ 0x28
 8004bc0:	697a      	ldr	r2, [r7, #20]
 8004bc2:	6a39      	ldr	r1, [r7, #32]
 8004bc4:	68f8      	ldr	r0, [r7, #12]
 8004bc6:	f000 fd33 	bl	8005630 <I2C_WaitOnBTFFlagUntilTimeout>
 8004bca:	4603      	mov	r3, r0
 8004bcc:	2b00      	cmp	r3, #0
 8004bce:	d00d      	beq.n	8004bec <HAL_I2C_Master_Transmit+0x1b4>
 8004bd0:	68fb      	ldr	r3, [r7, #12]
 8004bd2:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8004bd4:	2b04      	cmp	r3, #4
 8004bd6:	d107      	bne.n	8004be8 <HAL_I2C_Master_Transmit+0x1b0>
 8004bd8:	68fb      	ldr	r3, [r7, #12]
 8004bda:	681b      	ldr	r3, [r3, #0]
 8004bdc:	681a      	ldr	r2, [r3, #0]
 8004bde:	68fb      	ldr	r3, [r7, #12]
 8004be0:	681b      	ldr	r3, [r3, #0]
 8004be2:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 8004be6:	601a      	str	r2, [r3, #0]
 8004be8:	2301      	movs	r3, #1
 8004bea:	e01a      	b.n	8004c22 <HAL_I2C_Master_Transmit+0x1ea>
 8004bec:	68fb      	ldr	r3, [r7, #12]
 8004bee:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8004bf0:	2b00      	cmp	r3, #0
 8004bf2:	d194      	bne.n	8004b1e <HAL_I2C_Master_Transmit+0xe6>
 8004bf4:	68fb      	ldr	r3, [r7, #12]
 8004bf6:	681b      	ldr	r3, [r3, #0]
 8004bf8:	681a      	ldr	r2, [r3, #0]
 8004bfa:	68fb      	ldr	r3, [r7, #12]
 8004bfc:	681b      	ldr	r3, [r3, #0]
 8004bfe:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 8004c02:	601a      	str	r2, [r3, #0]
 8004c04:	68fb      	ldr	r3, [r7, #12]
 8004c06:	2220      	movs	r2, #32
 8004c08:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8004c0c:	68fb      	ldr	r3, [r7, #12]
 8004c0e:	2200      	movs	r2, #0
 8004c10:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8004c14:	68fb      	ldr	r3, [r7, #12]
 8004c16:	2200      	movs	r2, #0
 8004c18:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8004c1c:	2300      	movs	r3, #0
 8004c1e:	e000      	b.n	8004c22 <HAL_I2C_Master_Transmit+0x1ea>
 8004c20:	2302      	movs	r3, #2
 8004c22:	4618      	mov	r0, r3
 8004c24:	3718      	adds	r7, #24
 8004c26:	46bd      	mov	sp, r7
 8004c28:	bd80      	pop	{r7, pc}
 8004c2a:	bf00      	nop
 8004c2c:	00100002 	.word	0x00100002
 8004c30:	ffff0000 	.word	0xffff0000

08004c34 <HAL_I2C_Master_Receive>:
 8004c34:	b580      	push	{r7, lr}
 8004c36:	b08c      	sub	sp, #48	@ 0x30
 8004c38:	af02      	add	r7, sp, #8
 8004c3a:	60f8      	str	r0, [r7, #12]
 8004c3c:	607a      	str	r2, [r7, #4]
 8004c3e:	461a      	mov	r2, r3
 8004c40:	460b      	mov	r3, r1
 8004c42:	817b      	strh	r3, [r7, #10]
 8004c44:	4613      	mov	r3, r2
 8004c46:	813b      	strh	r3, [r7, #8]
 8004c48:	f7fe fec0 	bl	80039cc <HAL_GetTick>
 8004c4c:	6278      	str	r0, [r7, #36]	@ 0x24
 8004c4e:	68fb      	ldr	r3, [r7, #12]
 8004c50:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 8004c54:	b2db      	uxtb	r3, r3
 8004c56:	2b20      	cmp	r3, #32
 8004c58:	f040 8217 	bne.w	800508a <HAL_I2C_Master_Receive+0x456>
 8004c5c:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8004c5e:	9300      	str	r3, [sp, #0]
 8004c60:	2319      	movs	r3, #25
 8004c62:	2201      	movs	r2, #1
 8004c64:	497c      	ldr	r1, [pc, #496]	@ (8004e58 <HAL_I2C_Master_Receive+0x224>)
 8004c66:	68f8      	ldr	r0, [r7, #12]
 8004c68:	f000 fb80 	bl	800536c <I2C_WaitOnFlagUntilTimeout>
 8004c6c:	4603      	mov	r3, r0
 8004c6e:	2b00      	cmp	r3, #0
 8004c70:	d001      	beq.n	8004c76 <HAL_I2C_Master_Receive+0x42>
 8004c72:	2302      	movs	r3, #2
 8004c74:	e20a      	b.n	800508c <HAL_I2C_Master_Receive+0x458>
 8004c76:	68fb      	ldr	r3, [r7, #12]
 8004c78:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 8004c7c:	2b01      	cmp	r3, #1
 8004c7e:	d101      	bne.n	8004c84 <HAL_I2C_Master_Receive+0x50>
 8004c80:	2302      	movs	r3, #2
 8004c82:	e203      	b.n	800508c <HAL_I2C_Master_Receive+0x458>
 8004c84:	68fb      	ldr	r3, [r7, #12]
 8004c86:	2201      	movs	r2, #1
 8004c88:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8004c8c:	68fb      	ldr	r3, [r7, #12]
 8004c8e:	681b      	ldr	r3, [r3, #0]
 8004c90:	681b      	ldr	r3, [r3, #0]
 8004c92:	f003 0301 	and.w	r3, r3, #1
 8004c96:	2b01      	cmp	r3, #1
 8004c98:	d007      	beq.n	8004caa <HAL_I2C_Master_Receive+0x76>
 8004c9a:	68fb      	ldr	r3, [r7, #12]
 8004c9c:	681b      	ldr	r3, [r3, #0]
 8004c9e:	681a      	ldr	r2, [r3, #0]
 8004ca0:	68fb      	ldr	r3, [r7, #12]
 8004ca2:	681b      	ldr	r3, [r3, #0]
 8004ca4:	f042 0201 	orr.w	r2, r2, #1
 8004ca8:	601a      	str	r2, [r3, #0]
 8004caa:	68fb      	ldr	r3, [r7, #12]
 8004cac:	681b      	ldr	r3, [r3, #0]
 8004cae:	681a      	ldr	r2, [r3, #0]
 8004cb0:	68fb      	ldr	r3, [r7, #12]
 8004cb2:	681b      	ldr	r3, [r3, #0]
 8004cb4:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 8004cb8:	601a      	str	r2, [r3, #0]
 8004cba:	68fb      	ldr	r3, [r7, #12]
 8004cbc:	2222      	movs	r2, #34	@ 0x22
 8004cbe:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8004cc2:	68fb      	ldr	r3, [r7, #12]
 8004cc4:	2210      	movs	r2, #16
 8004cc6:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8004cca:	68fb      	ldr	r3, [r7, #12]
 8004ccc:	2200      	movs	r2, #0
 8004cce:	641a      	str	r2, [r3, #64]	@ 0x40
 8004cd0:	68fb      	ldr	r3, [r7, #12]
 8004cd2:	687a      	ldr	r2, [r7, #4]
 8004cd4:	625a      	str	r2, [r3, #36]	@ 0x24
 8004cd6:	68fb      	ldr	r3, [r7, #12]
 8004cd8:	893a      	ldrh	r2, [r7, #8]
 8004cda:	855a      	strh	r2, [r3, #42]	@ 0x2a
 8004cdc:	68fb      	ldr	r3, [r7, #12]
 8004cde:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8004ce0:	b29a      	uxth	r2, r3
 8004ce2:	68fb      	ldr	r3, [r7, #12]
 8004ce4:	851a      	strh	r2, [r3, #40]	@ 0x28
 8004ce6:	68fb      	ldr	r3, [r7, #12]
 8004ce8:	4a5c      	ldr	r2, [pc, #368]	@ (8004e5c <HAL_I2C_Master_Receive+0x228>)
 8004cea:	62da      	str	r2, [r3, #44]	@ 0x2c
 8004cec:	8979      	ldrh	r1, [r7, #10]
 8004cee:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8004cf0:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 8004cf2:	68f8      	ldr	r0, [r7, #12]
 8004cf4:	f000 fa6c 	bl	80051d0 <I2C_MasterRequestRead>
 8004cf8:	4603      	mov	r3, r0
 8004cfa:	2b00      	cmp	r3, #0
 8004cfc:	d001      	beq.n	8004d02 <HAL_I2C_Master_Receive+0xce>
 8004cfe:	2301      	movs	r3, #1
 8004d00:	e1c4      	b.n	800508c <HAL_I2C_Master_Receive+0x458>
 8004d02:	68fb      	ldr	r3, [r7, #12]
 8004d04:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8004d06:	2b00      	cmp	r3, #0
 8004d08:	d113      	bne.n	8004d32 <HAL_I2C_Master_Receive+0xfe>
 8004d0a:	2300      	movs	r3, #0
 8004d0c:	623b      	str	r3, [r7, #32]
 8004d0e:	68fb      	ldr	r3, [r7, #12]
 8004d10:	681b      	ldr	r3, [r3, #0]
 8004d12:	695b      	ldr	r3, [r3, #20]
 8004d14:	623b      	str	r3, [r7, #32]
 8004d16:	68fb      	ldr	r3, [r7, #12]
 8004d18:	681b      	ldr	r3, [r3, #0]
 8004d1a:	699b      	ldr	r3, [r3, #24]
 8004d1c:	623b      	str	r3, [r7, #32]
 8004d1e:	6a3b      	ldr	r3, [r7, #32]
 8004d20:	68fb      	ldr	r3, [r7, #12]
 8004d22:	681b      	ldr	r3, [r3, #0]
 8004d24:	681a      	ldr	r2, [r3, #0]
 8004d26:	68fb      	ldr	r3, [r7, #12]
 8004d28:	681b      	ldr	r3, [r3, #0]
 8004d2a:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 8004d2e:	601a      	str	r2, [r3, #0]
 8004d30:	e198      	b.n	8005064 <HAL_I2C_Master_Receive+0x430>
 8004d32:	68fb      	ldr	r3, [r7, #12]
 8004d34:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8004d36:	2b01      	cmp	r3, #1
 8004d38:	d11b      	bne.n	8004d72 <HAL_I2C_Master_Receive+0x13e>
 8004d3a:	68fb      	ldr	r3, [r7, #12]
 8004d3c:	681b      	ldr	r3, [r3, #0]
 8004d3e:	681a      	ldr	r2, [r3, #0]
 8004d40:	68fb      	ldr	r3, [r7, #12]
 8004d42:	681b      	ldr	r3, [r3, #0]
 8004d44:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 8004d48:	601a      	str	r2, [r3, #0]
 8004d4a:	2300      	movs	r3, #0
 8004d4c:	61fb      	str	r3, [r7, #28]
 8004d4e:	68fb      	ldr	r3, [r7, #12]
 8004d50:	681b      	ldr	r3, [r3, #0]
 8004d52:	695b      	ldr	r3, [r3, #20]
 8004d54:	61fb      	str	r3, [r7, #28]
 8004d56:	68fb      	ldr	r3, [r7, #12]
 8004d58:	681b      	ldr	r3, [r3, #0]
 8004d5a:	699b      	ldr	r3, [r3, #24]
 8004d5c:	61fb      	str	r3, [r7, #28]
 8004d5e:	69fb      	ldr	r3, [r7, #28]
 8004d60:	68fb      	ldr	r3, [r7, #12]
 8004d62:	681b      	ldr	r3, [r3, #0]
 8004d64:	681a      	ldr	r2, [r3, #0]
 8004d66:	68fb      	ldr	r3, [r7, #12]
 8004d68:	681b      	ldr	r3, [r3, #0]
 8004d6a:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 8004d6e:	601a      	str	r2, [r3, #0]
 8004d70:	e178      	b.n	8005064 <HAL_I2C_Master_Receive+0x430>
 8004d72:	68fb      	ldr	r3, [r7, #12]
 8004d74:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8004d76:	2b02      	cmp	r3, #2
 8004d78:	d11b      	bne.n	8004db2 <HAL_I2C_Master_Receive+0x17e>
 8004d7a:	68fb      	ldr	r3, [r7, #12]
 8004d7c:	681b      	ldr	r3, [r3, #0]
 8004d7e:	681a      	ldr	r2, [r3, #0]
 8004d80:	68fb      	ldr	r3, [r7, #12]
 8004d82:	681b      	ldr	r3, [r3, #0]
 8004d84:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 8004d88:	601a      	str	r2, [r3, #0]
 8004d8a:	68fb      	ldr	r3, [r7, #12]
 8004d8c:	681b      	ldr	r3, [r3, #0]
 8004d8e:	681a      	ldr	r2, [r3, #0]
 8004d90:	68fb      	ldr	r3, [r7, #12]
 8004d92:	681b      	ldr	r3, [r3, #0]
 8004d94:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 8004d98:	601a      	str	r2, [r3, #0]
 8004d9a:	2300      	movs	r3, #0
 8004d9c:	61bb      	str	r3, [r7, #24]
 8004d9e:	68fb      	ldr	r3, [r7, #12]
 8004da0:	681b      	ldr	r3, [r3, #0]
 8004da2:	695b      	ldr	r3, [r3, #20]
 8004da4:	61bb      	str	r3, [r7, #24]
 8004da6:	68fb      	ldr	r3, [r7, #12]
 8004da8:	681b      	ldr	r3, [r3, #0]
 8004daa:	699b      	ldr	r3, [r3, #24]
 8004dac:	61bb      	str	r3, [r7, #24]
 8004dae:	69bb      	ldr	r3, [r7, #24]
 8004db0:	e158      	b.n	8005064 <HAL_I2C_Master_Receive+0x430>
 8004db2:	68fb      	ldr	r3, [r7, #12]
 8004db4:	681b      	ldr	r3, [r3, #0]
 8004db6:	681a      	ldr	r2, [r3, #0]
 8004db8:	68fb      	ldr	r3, [r7, #12]
 8004dba:	681b      	ldr	r3, [r3, #0]
 8004dbc:	f442 6280 	orr.w	r2, r2, #1024	@ 0x400
 8004dc0:	601a      	str	r2, [r3, #0]
 8004dc2:	2300      	movs	r3, #0
 8004dc4:	617b      	str	r3, [r7, #20]
 8004dc6:	68fb      	ldr	r3, [r7, #12]
 8004dc8:	681b      	ldr	r3, [r3, #0]
 8004dca:	695b      	ldr	r3, [r3, #20]
 8004dcc:	617b      	str	r3, [r7, #20]
 8004dce:	68fb      	ldr	r3, [r7, #12]
 8004dd0:	681b      	ldr	r3, [r3, #0]
 8004dd2:	699b      	ldr	r3, [r3, #24]
 8004dd4:	617b      	str	r3, [r7, #20]
 8004dd6:	697b      	ldr	r3, [r7, #20]
 8004dd8:	e144      	b.n	8005064 <HAL_I2C_Master_Receive+0x430>
 8004dda:	68fb      	ldr	r3, [r7, #12]
 8004ddc:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8004dde:	2b03      	cmp	r3, #3
 8004de0:	f200 80f1 	bhi.w	8004fc6 <HAL_I2C_Master_Receive+0x392>
 8004de4:	68fb      	ldr	r3, [r7, #12]
 8004de6:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8004de8:	2b01      	cmp	r3, #1
 8004dea:	d123      	bne.n	8004e34 <HAL_I2C_Master_Receive+0x200>
 8004dec:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8004dee:	6b39      	ldr	r1, [r7, #48]	@ 0x30
 8004df0:	68f8      	ldr	r0, [r7, #12]
 8004df2:	f000 fc65 	bl	80056c0 <I2C_WaitOnRXNEFlagUntilTimeout>
 8004df6:	4603      	mov	r3, r0
 8004df8:	2b00      	cmp	r3, #0
 8004dfa:	d001      	beq.n	8004e00 <HAL_I2C_Master_Receive+0x1cc>
 8004dfc:	2301      	movs	r3, #1
 8004dfe:	e145      	b.n	800508c <HAL_I2C_Master_Receive+0x458>
 8004e00:	68fb      	ldr	r3, [r7, #12]
 8004e02:	681b      	ldr	r3, [r3, #0]
 8004e04:	691a      	ldr	r2, [r3, #16]
 8004e06:	68fb      	ldr	r3, [r7, #12]
 8004e08:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004e0a:	b2d2      	uxtb	r2, r2
 8004e0c:	701a      	strb	r2, [r3, #0]
 8004e0e:	68fb      	ldr	r3, [r7, #12]
 8004e10:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004e12:	1c5a      	adds	r2, r3, #1
 8004e14:	68fb      	ldr	r3, [r7, #12]
 8004e16:	625a      	str	r2, [r3, #36]	@ 0x24
 8004e18:	68fb      	ldr	r3, [r7, #12]
 8004e1a:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8004e1c:	3b01      	subs	r3, #1
 8004e1e:	b29a      	uxth	r2, r3
 8004e20:	68fb      	ldr	r3, [r7, #12]
 8004e22:	851a      	strh	r2, [r3, #40]	@ 0x28
 8004e24:	68fb      	ldr	r3, [r7, #12]
 8004e26:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8004e28:	b29b      	uxth	r3, r3
 8004e2a:	3b01      	subs	r3, #1
 8004e2c:	b29a      	uxth	r2, r3
 8004e2e:	68fb      	ldr	r3, [r7, #12]
 8004e30:	855a      	strh	r2, [r3, #42]	@ 0x2a
 8004e32:	e117      	b.n	8005064 <HAL_I2C_Master_Receive+0x430>
 8004e34:	68fb      	ldr	r3, [r7, #12]
 8004e36:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8004e38:	2b02      	cmp	r3, #2
 8004e3a:	d14e      	bne.n	8004eda <HAL_I2C_Master_Receive+0x2a6>
 8004e3c:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8004e3e:	9300      	str	r3, [sp, #0]
 8004e40:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8004e42:	2200      	movs	r2, #0
 8004e44:	4906      	ldr	r1, [pc, #24]	@ (8004e60 <HAL_I2C_Master_Receive+0x22c>)
 8004e46:	68f8      	ldr	r0, [r7, #12]
 8004e48:	f000 fa90 	bl	800536c <I2C_WaitOnFlagUntilTimeout>
 8004e4c:	4603      	mov	r3, r0
 8004e4e:	2b00      	cmp	r3, #0
 8004e50:	d008      	beq.n	8004e64 <HAL_I2C_Master_Receive+0x230>
 8004e52:	2301      	movs	r3, #1
 8004e54:	e11a      	b.n	800508c <HAL_I2C_Master_Receive+0x458>
 8004e56:	bf00      	nop
 8004e58:	00100002 	.word	0x00100002
 8004e5c:	ffff0000 	.word	0xffff0000
 8004e60:	00010004 	.word	0x00010004
 8004e64:	68fb      	ldr	r3, [r7, #12]
 8004e66:	681b      	ldr	r3, [r3, #0]
 8004e68:	681a      	ldr	r2, [r3, #0]
 8004e6a:	68fb      	ldr	r3, [r7, #12]
 8004e6c:	681b      	ldr	r3, [r3, #0]
 8004e6e:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 8004e72:	601a      	str	r2, [r3, #0]
 8004e74:	68fb      	ldr	r3, [r7, #12]
 8004e76:	681b      	ldr	r3, [r3, #0]
 8004e78:	691a      	ldr	r2, [r3, #16]
 8004e7a:	68fb      	ldr	r3, [r7, #12]
 8004e7c:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004e7e:	b2d2      	uxtb	r2, r2
 8004e80:	701a      	strb	r2, [r3, #0]
 8004e82:	68fb      	ldr	r3, [r7, #12]
 8004e84:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004e86:	1c5a      	adds	r2, r3, #1
 8004e88:	68fb      	ldr	r3, [r7, #12]
 8004e8a:	625a      	str	r2, [r3, #36]	@ 0x24
 8004e8c:	68fb      	ldr	r3, [r7, #12]
 8004e8e:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8004e90:	3b01      	subs	r3, #1
 8004e92:	b29a      	uxth	r2, r3
 8004e94:	68fb      	ldr	r3, [r7, #12]
 8004e96:	851a      	strh	r2, [r3, #40]	@ 0x28
 8004e98:	68fb      	ldr	r3, [r7, #12]
 8004e9a:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8004e9c:	b29b      	uxth	r3, r3
 8004e9e:	3b01      	subs	r3, #1
 8004ea0:	b29a      	uxth	r2, r3
 8004ea2:	68fb      	ldr	r3, [r7, #12]
 8004ea4:	855a      	strh	r2, [r3, #42]	@ 0x2a
 8004ea6:	68fb      	ldr	r3, [r7, #12]
 8004ea8:	681b      	ldr	r3, [r3, #0]
 8004eaa:	691a      	ldr	r2, [r3, #16]
 8004eac:	68fb      	ldr	r3, [r7, #12]
 8004eae:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004eb0:	b2d2      	uxtb	r2, r2
 8004eb2:	701a      	strb	r2, [r3, #0]
 8004eb4:	68fb      	ldr	r3, [r7, #12]
 8004eb6:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004eb8:	1c5a      	adds	r2, r3, #1
 8004eba:	68fb      	ldr	r3, [r7, #12]
 8004ebc:	625a      	str	r2, [r3, #36]	@ 0x24
 8004ebe:	68fb      	ldr	r3, [r7, #12]
 8004ec0:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8004ec2:	3b01      	subs	r3, #1
 8004ec4:	b29a      	uxth	r2, r3
 8004ec6:	68fb      	ldr	r3, [r7, #12]
 8004ec8:	851a      	strh	r2, [r3, #40]	@ 0x28
 8004eca:	68fb      	ldr	r3, [r7, #12]
 8004ecc:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8004ece:	b29b      	uxth	r3, r3
 8004ed0:	3b01      	subs	r3, #1
 8004ed2:	b29a      	uxth	r2, r3
 8004ed4:	68fb      	ldr	r3, [r7, #12]
 8004ed6:	855a      	strh	r2, [r3, #42]	@ 0x2a
 8004ed8:	e0c4      	b.n	8005064 <HAL_I2C_Master_Receive+0x430>
 8004eda:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8004edc:	9300      	str	r3, [sp, #0]
 8004ede:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8004ee0:	2200      	movs	r2, #0
 8004ee2:	496c      	ldr	r1, [pc, #432]	@ (8005094 <HAL_I2C_Master_Receive+0x460>)
 8004ee4:	68f8      	ldr	r0, [r7, #12]
 8004ee6:	f000 fa41 	bl	800536c <I2C_WaitOnFlagUntilTimeout>
 8004eea:	4603      	mov	r3, r0
 8004eec:	2b00      	cmp	r3, #0
 8004eee:	d001      	beq.n	8004ef4 <HAL_I2C_Master_Receive+0x2c0>
 8004ef0:	2301      	movs	r3, #1
 8004ef2:	e0cb      	b.n	800508c <HAL_I2C_Master_Receive+0x458>
 8004ef4:	68fb      	ldr	r3, [r7, #12]
 8004ef6:	681b      	ldr	r3, [r3, #0]
 8004ef8:	681a      	ldr	r2, [r3, #0]
 8004efa:	68fb      	ldr	r3, [r7, #12]
 8004efc:	681b      	ldr	r3, [r3, #0]
 8004efe:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 8004f02:	601a      	str	r2, [r3, #0]
 8004f04:	68fb      	ldr	r3, [r7, #12]
 8004f06:	681b      	ldr	r3, [r3, #0]
 8004f08:	691a      	ldr	r2, [r3, #16]
 8004f0a:	68fb      	ldr	r3, [r7, #12]
 8004f0c:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004f0e:	b2d2      	uxtb	r2, r2
 8004f10:	701a      	strb	r2, [r3, #0]
 8004f12:	68fb      	ldr	r3, [r7, #12]
 8004f14:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004f16:	1c5a      	adds	r2, r3, #1
 8004f18:	68fb      	ldr	r3, [r7, #12]
 8004f1a:	625a      	str	r2, [r3, #36]	@ 0x24
 8004f1c:	68fb      	ldr	r3, [r7, #12]
 8004f1e:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8004f20:	3b01      	subs	r3, #1
 8004f22:	b29a      	uxth	r2, r3
 8004f24:	68fb      	ldr	r3, [r7, #12]
 8004f26:	851a      	strh	r2, [r3, #40]	@ 0x28
 8004f28:	68fb      	ldr	r3, [r7, #12]
 8004f2a:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8004f2c:	b29b      	uxth	r3, r3
 8004f2e:	3b01      	subs	r3, #1
 8004f30:	b29a      	uxth	r2, r3
 8004f32:	68fb      	ldr	r3, [r7, #12]
 8004f34:	855a      	strh	r2, [r3, #42]	@ 0x2a
 8004f36:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8004f38:	9300      	str	r3, [sp, #0]
 8004f3a:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8004f3c:	2200      	movs	r2, #0
 8004f3e:	4955      	ldr	r1, [pc, #340]	@ (8005094 <HAL_I2C_Master_Receive+0x460>)
 8004f40:	68f8      	ldr	r0, [r7, #12]
 8004f42:	f000 fa13 	bl	800536c <I2C_WaitOnFlagUntilTimeout>
 8004f46:	4603      	mov	r3, r0
 8004f48:	2b00      	cmp	r3, #0
 8004f4a:	d001      	beq.n	8004f50 <HAL_I2C_Master_Receive+0x31c>
 8004f4c:	2301      	movs	r3, #1
 8004f4e:	e09d      	b.n	800508c <HAL_I2C_Master_Receive+0x458>
 8004f50:	68fb      	ldr	r3, [r7, #12]
 8004f52:	681b      	ldr	r3, [r3, #0]
 8004f54:	681a      	ldr	r2, [r3, #0]
 8004f56:	68fb      	ldr	r3, [r7, #12]
 8004f58:	681b      	ldr	r3, [r3, #0]
 8004f5a:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 8004f5e:	601a      	str	r2, [r3, #0]
 8004f60:	68fb      	ldr	r3, [r7, #12]
 8004f62:	681b      	ldr	r3, [r3, #0]
 8004f64:	691a      	ldr	r2, [r3, #16]
 8004f66:	68fb      	ldr	r3, [r7, #12]
 8004f68:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004f6a:	b2d2      	uxtb	r2, r2
 8004f6c:	701a      	strb	r2, [r3, #0]
 8004f6e:	68fb      	ldr	r3, [r7, #12]
 8004f70:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004f72:	1c5a      	adds	r2, r3, #1
 8004f74:	68fb      	ldr	r3, [r7, #12]
 8004f76:	625a      	str	r2, [r3, #36]	@ 0x24
 8004f78:	68fb      	ldr	r3, [r7, #12]
 8004f7a:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8004f7c:	3b01      	subs	r3, #1
 8004f7e:	b29a      	uxth	r2, r3
 8004f80:	68fb      	ldr	r3, [r7, #12]
 8004f82:	851a      	strh	r2, [r3, #40]	@ 0x28
 8004f84:	68fb      	ldr	r3, [r7, #12]
 8004f86:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8004f88:	b29b      	uxth	r3, r3
 8004f8a:	3b01      	subs	r3, #1
 8004f8c:	b29a      	uxth	r2, r3
 8004f8e:	68fb      	ldr	r3, [r7, #12]
 8004f90:	855a      	strh	r2, [r3, #42]	@ 0x2a
 8004f92:	68fb      	ldr	r3, [r7, #12]
 8004f94:	681b      	ldr	r3, [r3, #0]
 8004f96:	691a      	ldr	r2, [r3, #16]
 8004f98:	68fb      	ldr	r3, [r7, #12]
 8004f9a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004f9c:	b2d2      	uxtb	r2, r2
 8004f9e:	701a      	strb	r2, [r3, #0]
 8004fa0:	68fb      	ldr	r3, [r7, #12]
 8004fa2:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004fa4:	1c5a      	adds	r2, r3, #1
 8004fa6:	68fb      	ldr	r3, [r7, #12]
 8004fa8:	625a      	str	r2, [r3, #36]	@ 0x24
 8004faa:	68fb      	ldr	r3, [r7, #12]
 8004fac:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8004fae:	3b01      	subs	r3, #1
 8004fb0:	b29a      	uxth	r2, r3
 8004fb2:	68fb      	ldr	r3, [r7, #12]
 8004fb4:	851a      	strh	r2, [r3, #40]	@ 0x28
 8004fb6:	68fb      	ldr	r3, [r7, #12]
 8004fb8:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8004fba:	b29b      	uxth	r3, r3
 8004fbc:	3b01      	subs	r3, #1
 8004fbe:	b29a      	uxth	r2, r3
 8004fc0:	68fb      	ldr	r3, [r7, #12]
 8004fc2:	855a      	strh	r2, [r3, #42]	@ 0x2a
 8004fc4:	e04e      	b.n	8005064 <HAL_I2C_Master_Receive+0x430>
 8004fc6:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8004fc8:	6b39      	ldr	r1, [r7, #48]	@ 0x30
 8004fca:	68f8      	ldr	r0, [r7, #12]
 8004fcc:	f000 fb78 	bl	80056c0 <I2C_WaitOnRXNEFlagUntilTimeout>
 8004fd0:	4603      	mov	r3, r0
 8004fd2:	2b00      	cmp	r3, #0
 8004fd4:	d001      	beq.n	8004fda <HAL_I2C_Master_Receive+0x3a6>
 8004fd6:	2301      	movs	r3, #1
 8004fd8:	e058      	b.n	800508c <HAL_I2C_Master_Receive+0x458>
 8004fda:	68fb      	ldr	r3, [r7, #12]
 8004fdc:	681b      	ldr	r3, [r3, #0]
 8004fde:	691a      	ldr	r2, [r3, #16]
 8004fe0:	68fb      	ldr	r3, [r7, #12]
 8004fe2:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004fe4:	b2d2      	uxtb	r2, r2
 8004fe6:	701a      	strb	r2, [r3, #0]
 8004fe8:	68fb      	ldr	r3, [r7, #12]
 8004fea:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004fec:	1c5a      	adds	r2, r3, #1
 8004fee:	68fb      	ldr	r3, [r7, #12]
 8004ff0:	625a      	str	r2, [r3, #36]	@ 0x24
 8004ff2:	68fb      	ldr	r3, [r7, #12]
 8004ff4:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8004ff6:	3b01      	subs	r3, #1
 8004ff8:	b29a      	uxth	r2, r3
 8004ffa:	68fb      	ldr	r3, [r7, #12]
 8004ffc:	851a      	strh	r2, [r3, #40]	@ 0x28
 8004ffe:	68fb      	ldr	r3, [r7, #12]
 8005000:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8005002:	b29b      	uxth	r3, r3
 8005004:	3b01      	subs	r3, #1
 8005006:	b29a      	uxth	r2, r3
 8005008:	68fb      	ldr	r3, [r7, #12]
 800500a:	855a      	strh	r2, [r3, #42]	@ 0x2a
 800500c:	68fb      	ldr	r3, [r7, #12]
 800500e:	681b      	ldr	r3, [r3, #0]
 8005010:	695b      	ldr	r3, [r3, #20]
 8005012:	f003 0304 	and.w	r3, r3, #4
 8005016:	2b04      	cmp	r3, #4
 8005018:	d124      	bne.n	8005064 <HAL_I2C_Master_Receive+0x430>
 800501a:	68fb      	ldr	r3, [r7, #12]
 800501c:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 800501e:	2b03      	cmp	r3, #3
 8005020:	d107      	bne.n	8005032 <HAL_I2C_Master_Receive+0x3fe>
 8005022:	68fb      	ldr	r3, [r7, #12]
 8005024:	681b      	ldr	r3, [r3, #0]
 8005026:	681a      	ldr	r2, [r3, #0]
 8005028:	68fb      	ldr	r3, [r7, #12]
 800502a:	681b      	ldr	r3, [r3, #0]
 800502c:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 8005030:	601a      	str	r2, [r3, #0]
 8005032:	68fb      	ldr	r3, [r7, #12]
 8005034:	681b      	ldr	r3, [r3, #0]
 8005036:	691a      	ldr	r2, [r3, #16]
 8005038:	68fb      	ldr	r3, [r7, #12]
 800503a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800503c:	b2d2      	uxtb	r2, r2
 800503e:	701a      	strb	r2, [r3, #0]
 8005040:	68fb      	ldr	r3, [r7, #12]
 8005042:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8005044:	1c5a      	adds	r2, r3, #1
 8005046:	68fb      	ldr	r3, [r7, #12]
 8005048:	625a      	str	r2, [r3, #36]	@ 0x24
 800504a:	68fb      	ldr	r3, [r7, #12]
 800504c:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 800504e:	3b01      	subs	r3, #1
 8005050:	b29a      	uxth	r2, r3
 8005052:	68fb      	ldr	r3, [r7, #12]
 8005054:	851a      	strh	r2, [r3, #40]	@ 0x28
 8005056:	68fb      	ldr	r3, [r7, #12]
 8005058:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 800505a:	b29b      	uxth	r3, r3
 800505c:	3b01      	subs	r3, #1
 800505e:	b29a      	uxth	r2, r3
 8005060:	68fb      	ldr	r3, [r7, #12]
 8005062:	855a      	strh	r2, [r3, #42]	@ 0x2a
 8005064:	68fb      	ldr	r3, [r7, #12]
 8005066:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8005068:	2b00      	cmp	r3, #0
 800506a:	f47f aeb6 	bne.w	8004dda <HAL_I2C_Master_Receive+0x1a6>
 800506e:	68fb      	ldr	r3, [r7, #12]
 8005070:	2220      	movs	r2, #32
 8005072:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8005076:	68fb      	ldr	r3, [r7, #12]
 8005078:	2200      	movs	r2, #0
 800507a:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 800507e:	68fb      	ldr	r3, [r7, #12]
 8005080:	2200      	movs	r2, #0
 8005082:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8005086:	2300      	movs	r3, #0
 8005088:	e000      	b.n	800508c <HAL_I2C_Master_Receive+0x458>
 800508a:	2302      	movs	r3, #2
 800508c:	4618      	mov	r0, r3
 800508e:	3728      	adds	r7, #40	@ 0x28
 8005090:	46bd      	mov	sp, r7
 8005092:	bd80      	pop	{r7, pc}
 8005094:	00010004 	.word	0x00010004

08005098 <HAL_I2C_GetState>:
 8005098:	b480      	push	{r7}
 800509a:	b083      	sub	sp, #12
 800509c:	af00      	add	r7, sp, #0
 800509e:	6078      	str	r0, [r7, #4]
 80050a0:	687b      	ldr	r3, [r7, #4]
 80050a2:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 80050a6:	b2db      	uxtb	r3, r3
 80050a8:	4618      	mov	r0, r3
 80050aa:	370c      	adds	r7, #12
 80050ac:	46bd      	mov	sp, r7
 80050ae:	f85d 7b04 	ldr.w	r7, [sp], #4
 80050b2:	4770      	bx	lr

080050b4 <HAL_I2C_GetError>:
 80050b4:	b480      	push	{r7}
 80050b6:	b083      	sub	sp, #12
 80050b8:	af00      	add	r7, sp, #0
 80050ba:	6078      	str	r0, [r7, #4]
 80050bc:	687b      	ldr	r3, [r7, #4]
 80050be:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80050c0:	4618      	mov	r0, r3
 80050c2:	370c      	adds	r7, #12
 80050c4:	46bd      	mov	sp, r7
 80050c6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80050ca:	4770      	bx	lr

080050cc <I2C_MasterRequestWrite>:
 80050cc:	b580      	push	{r7, lr}
 80050ce:	b088      	sub	sp, #32
 80050d0:	af02      	add	r7, sp, #8
 80050d2:	60f8      	str	r0, [r7, #12]
 80050d4:	607a      	str	r2, [r7, #4]
 80050d6:	603b      	str	r3, [r7, #0]
 80050d8:	460b      	mov	r3, r1
 80050da:	817b      	strh	r3, [r7, #10]
 80050dc:	68fb      	ldr	r3, [r7, #12]
 80050de:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80050e0:	617b      	str	r3, [r7, #20]
 80050e2:	697b      	ldr	r3, [r7, #20]
 80050e4:	2b08      	cmp	r3, #8
 80050e6:	d006      	beq.n	80050f6 <I2C_MasterRequestWrite+0x2a>
 80050e8:	697b      	ldr	r3, [r7, #20]
 80050ea:	2b01      	cmp	r3, #1
 80050ec:	d003      	beq.n	80050f6 <I2C_MasterRequestWrite+0x2a>
 80050ee:	697b      	ldr	r3, [r7, #20]
 80050f0:	f513 3f80 	cmn.w	r3, #65536	@ 0x10000
 80050f4:	d108      	bne.n	8005108 <I2C_MasterRequestWrite+0x3c>
 80050f6:	68fb      	ldr	r3, [r7, #12]
 80050f8:	681b      	ldr	r3, [r3, #0]
 80050fa:	681a      	ldr	r2, [r3, #0]
 80050fc:	68fb      	ldr	r3, [r7, #12]
 80050fe:	681b      	ldr	r3, [r3, #0]
 8005100:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 8005104:	601a      	str	r2, [r3, #0]
 8005106:	e00b      	b.n	8005120 <I2C_MasterRequestWrite+0x54>
 8005108:	68fb      	ldr	r3, [r7, #12]
 800510a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800510c:	2b12      	cmp	r3, #18
 800510e:	d107      	bne.n	8005120 <I2C_MasterRequestWrite+0x54>
 8005110:	68fb      	ldr	r3, [r7, #12]
 8005112:	681b      	ldr	r3, [r3, #0]
 8005114:	681a      	ldr	r2, [r3, #0]
 8005116:	68fb      	ldr	r3, [r7, #12]
 8005118:	681b      	ldr	r3, [r3, #0]
 800511a:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 800511e:	601a      	str	r2, [r3, #0]
 8005120:	683b      	ldr	r3, [r7, #0]
 8005122:	9300      	str	r3, [sp, #0]
 8005124:	687b      	ldr	r3, [r7, #4]
 8005126:	2200      	movs	r2, #0
 8005128:	f04f 1101 	mov.w	r1, #65537	@ 0x10001
 800512c:	68f8      	ldr	r0, [r7, #12]
 800512e:	f000 f91d 	bl	800536c <I2C_WaitOnFlagUntilTimeout>
 8005132:	4603      	mov	r3, r0
 8005134:	2b00      	cmp	r3, #0
 8005136:	d00d      	beq.n	8005154 <I2C_MasterRequestWrite+0x88>
 8005138:	68fb      	ldr	r3, [r7, #12]
 800513a:	681b      	ldr	r3, [r3, #0]
 800513c:	681b      	ldr	r3, [r3, #0]
 800513e:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8005142:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 8005146:	d103      	bne.n	8005150 <I2C_MasterRequestWrite+0x84>
 8005148:	68fb      	ldr	r3, [r7, #12]
 800514a:	f44f 7200 	mov.w	r2, #512	@ 0x200
 800514e:	641a      	str	r2, [r3, #64]	@ 0x40
 8005150:	2303      	movs	r3, #3
 8005152:	e035      	b.n	80051c0 <I2C_MasterRequestWrite+0xf4>
 8005154:	68fb      	ldr	r3, [r7, #12]
 8005156:	691b      	ldr	r3, [r3, #16]
 8005158:	f5b3 4f80 	cmp.w	r3, #16384	@ 0x4000
 800515c:	d108      	bne.n	8005170 <I2C_MasterRequestWrite+0xa4>
 800515e:	897b      	ldrh	r3, [r7, #10]
 8005160:	b2db      	uxtb	r3, r3
 8005162:	461a      	mov	r2, r3
 8005164:	68fb      	ldr	r3, [r7, #12]
 8005166:	681b      	ldr	r3, [r3, #0]
 8005168:	f002 02fe 	and.w	r2, r2, #254	@ 0xfe
 800516c:	611a      	str	r2, [r3, #16]
 800516e:	e01b      	b.n	80051a8 <I2C_MasterRequestWrite+0xdc>
 8005170:	897b      	ldrh	r3, [r7, #10]
 8005172:	11db      	asrs	r3, r3, #7
 8005174:	b2db      	uxtb	r3, r3
 8005176:	f003 0306 	and.w	r3, r3, #6
 800517a:	b2db      	uxtb	r3, r3
 800517c:	f063 030f 	orn	r3, r3, #15
 8005180:	b2da      	uxtb	r2, r3
 8005182:	68fb      	ldr	r3, [r7, #12]
 8005184:	681b      	ldr	r3, [r3, #0]
 8005186:	611a      	str	r2, [r3, #16]
 8005188:	683b      	ldr	r3, [r7, #0]
 800518a:	687a      	ldr	r2, [r7, #4]
 800518c:	490e      	ldr	r1, [pc, #56]	@ (80051c8 <I2C_MasterRequestWrite+0xfc>)
 800518e:	68f8      	ldr	r0, [r7, #12]
 8005190:	f000 f966 	bl	8005460 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8005194:	4603      	mov	r3, r0
 8005196:	2b00      	cmp	r3, #0
 8005198:	d001      	beq.n	800519e <I2C_MasterRequestWrite+0xd2>
 800519a:	2301      	movs	r3, #1
 800519c:	e010      	b.n	80051c0 <I2C_MasterRequestWrite+0xf4>
 800519e:	897b      	ldrh	r3, [r7, #10]
 80051a0:	b2da      	uxtb	r2, r3
 80051a2:	68fb      	ldr	r3, [r7, #12]
 80051a4:	681b      	ldr	r3, [r3, #0]
 80051a6:	611a      	str	r2, [r3, #16]
 80051a8:	683b      	ldr	r3, [r7, #0]
 80051aa:	687a      	ldr	r2, [r7, #4]
 80051ac:	4907      	ldr	r1, [pc, #28]	@ (80051cc <I2C_MasterRequestWrite+0x100>)
 80051ae:	68f8      	ldr	r0, [r7, #12]
 80051b0:	f000 f956 	bl	8005460 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 80051b4:	4603      	mov	r3, r0
 80051b6:	2b00      	cmp	r3, #0
 80051b8:	d001      	beq.n	80051be <I2C_MasterRequestWrite+0xf2>
 80051ba:	2301      	movs	r3, #1
 80051bc:	e000      	b.n	80051c0 <I2C_MasterRequestWrite+0xf4>
 80051be:	2300      	movs	r3, #0
 80051c0:	4618      	mov	r0, r3
 80051c2:	3718      	adds	r7, #24
 80051c4:	46bd      	mov	sp, r7
 80051c6:	bd80      	pop	{r7, pc}
 80051c8:	00010008 	.word	0x00010008
 80051cc:	00010002 	.word	0x00010002

080051d0 <I2C_MasterRequestRead>:
 80051d0:	b580      	push	{r7, lr}
 80051d2:	b088      	sub	sp, #32
 80051d4:	af02      	add	r7, sp, #8
 80051d6:	60f8      	str	r0, [r7, #12]
 80051d8:	607a      	str	r2, [r7, #4]
 80051da:	603b      	str	r3, [r7, #0]
 80051dc:	460b      	mov	r3, r1
 80051de:	817b      	strh	r3, [r7, #10]
 80051e0:	68fb      	ldr	r3, [r7, #12]
 80051e2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80051e4:	617b      	str	r3, [r7, #20]
 80051e6:	68fb      	ldr	r3, [r7, #12]
 80051e8:	681b      	ldr	r3, [r3, #0]
 80051ea:	681a      	ldr	r2, [r3, #0]
 80051ec:	68fb      	ldr	r3, [r7, #12]
 80051ee:	681b      	ldr	r3, [r3, #0]
 80051f0:	f442 6280 	orr.w	r2, r2, #1024	@ 0x400
 80051f4:	601a      	str	r2, [r3, #0]
 80051f6:	697b      	ldr	r3, [r7, #20]
 80051f8:	2b08      	cmp	r3, #8
 80051fa:	d006      	beq.n	800520a <I2C_MasterRequestRead+0x3a>
 80051fc:	697b      	ldr	r3, [r7, #20]
 80051fe:	2b01      	cmp	r3, #1
 8005200:	d003      	beq.n	800520a <I2C_MasterRequestRead+0x3a>
 8005202:	697b      	ldr	r3, [r7, #20]
 8005204:	f513 3f80 	cmn.w	r3, #65536	@ 0x10000
 8005208:	d108      	bne.n	800521c <I2C_MasterRequestRead+0x4c>
 800520a:	68fb      	ldr	r3, [r7, #12]
 800520c:	681b      	ldr	r3, [r3, #0]
 800520e:	681a      	ldr	r2, [r3, #0]
 8005210:	68fb      	ldr	r3, [r7, #12]
 8005212:	681b      	ldr	r3, [r3, #0]
 8005214:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 8005218:	601a      	str	r2, [r3, #0]
 800521a:	e00b      	b.n	8005234 <I2C_MasterRequestRead+0x64>
 800521c:	68fb      	ldr	r3, [r7, #12]
 800521e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8005220:	2b11      	cmp	r3, #17
 8005222:	d107      	bne.n	8005234 <I2C_MasterRequestRead+0x64>
 8005224:	68fb      	ldr	r3, [r7, #12]
 8005226:	681b      	ldr	r3, [r3, #0]
 8005228:	681a      	ldr	r2, [r3, #0]
 800522a:	68fb      	ldr	r3, [r7, #12]
 800522c:	681b      	ldr	r3, [r3, #0]
 800522e:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 8005232:	601a      	str	r2, [r3, #0]
 8005234:	683b      	ldr	r3, [r7, #0]
 8005236:	9300      	str	r3, [sp, #0]
 8005238:	687b      	ldr	r3, [r7, #4]
 800523a:	2200      	movs	r2, #0
 800523c:	f04f 1101 	mov.w	r1, #65537	@ 0x10001
 8005240:	68f8      	ldr	r0, [r7, #12]
 8005242:	f000 f893 	bl	800536c <I2C_WaitOnFlagUntilTimeout>
 8005246:	4603      	mov	r3, r0
 8005248:	2b00      	cmp	r3, #0
 800524a:	d00d      	beq.n	8005268 <I2C_MasterRequestRead+0x98>
 800524c:	68fb      	ldr	r3, [r7, #12]
 800524e:	681b      	ldr	r3, [r3, #0]
 8005250:	681b      	ldr	r3, [r3, #0]
 8005252:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8005256:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 800525a:	d103      	bne.n	8005264 <I2C_MasterRequestRead+0x94>
 800525c:	68fb      	ldr	r3, [r7, #12]
 800525e:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8005262:	641a      	str	r2, [r3, #64]	@ 0x40
 8005264:	2303      	movs	r3, #3
 8005266:	e079      	b.n	800535c <I2C_MasterRequestRead+0x18c>
 8005268:	68fb      	ldr	r3, [r7, #12]
 800526a:	691b      	ldr	r3, [r3, #16]
 800526c:	f5b3 4f80 	cmp.w	r3, #16384	@ 0x4000
 8005270:	d108      	bne.n	8005284 <I2C_MasterRequestRead+0xb4>
 8005272:	897b      	ldrh	r3, [r7, #10]
 8005274:	b2db      	uxtb	r3, r3
 8005276:	f043 0301 	orr.w	r3, r3, #1
 800527a:	b2da      	uxtb	r2, r3
 800527c:	68fb      	ldr	r3, [r7, #12]
 800527e:	681b      	ldr	r3, [r3, #0]
 8005280:	611a      	str	r2, [r3, #16]
 8005282:	e05f      	b.n	8005344 <I2C_MasterRequestRead+0x174>
 8005284:	897b      	ldrh	r3, [r7, #10]
 8005286:	11db      	asrs	r3, r3, #7
 8005288:	b2db      	uxtb	r3, r3
 800528a:	f003 0306 	and.w	r3, r3, #6
 800528e:	b2db      	uxtb	r3, r3
 8005290:	f063 030f 	orn	r3, r3, #15
 8005294:	b2da      	uxtb	r2, r3
 8005296:	68fb      	ldr	r3, [r7, #12]
 8005298:	681b      	ldr	r3, [r3, #0]
 800529a:	611a      	str	r2, [r3, #16]
 800529c:	683b      	ldr	r3, [r7, #0]
 800529e:	687a      	ldr	r2, [r7, #4]
 80052a0:	4930      	ldr	r1, [pc, #192]	@ (8005364 <I2C_MasterRequestRead+0x194>)
 80052a2:	68f8      	ldr	r0, [r7, #12]
 80052a4:	f000 f8dc 	bl	8005460 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 80052a8:	4603      	mov	r3, r0
 80052aa:	2b00      	cmp	r3, #0
 80052ac:	d001      	beq.n	80052b2 <I2C_MasterRequestRead+0xe2>
 80052ae:	2301      	movs	r3, #1
 80052b0:	e054      	b.n	800535c <I2C_MasterRequestRead+0x18c>
 80052b2:	897b      	ldrh	r3, [r7, #10]
 80052b4:	b2da      	uxtb	r2, r3
 80052b6:	68fb      	ldr	r3, [r7, #12]
 80052b8:	681b      	ldr	r3, [r3, #0]
 80052ba:	611a      	str	r2, [r3, #16]
 80052bc:	683b      	ldr	r3, [r7, #0]
 80052be:	687a      	ldr	r2, [r7, #4]
 80052c0:	4929      	ldr	r1, [pc, #164]	@ (8005368 <I2C_MasterRequestRead+0x198>)
 80052c2:	68f8      	ldr	r0, [r7, #12]
 80052c4:	f000 f8cc 	bl	8005460 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 80052c8:	4603      	mov	r3, r0
 80052ca:	2b00      	cmp	r3, #0
 80052cc:	d001      	beq.n	80052d2 <I2C_MasterRequestRead+0x102>
 80052ce:	2301      	movs	r3, #1
 80052d0:	e044      	b.n	800535c <I2C_MasterRequestRead+0x18c>
 80052d2:	2300      	movs	r3, #0
 80052d4:	613b      	str	r3, [r7, #16]
 80052d6:	68fb      	ldr	r3, [r7, #12]
 80052d8:	681b      	ldr	r3, [r3, #0]
 80052da:	695b      	ldr	r3, [r3, #20]
 80052dc:	613b      	str	r3, [r7, #16]
 80052de:	68fb      	ldr	r3, [r7, #12]
 80052e0:	681b      	ldr	r3, [r3, #0]
 80052e2:	699b      	ldr	r3, [r3, #24]
 80052e4:	613b      	str	r3, [r7, #16]
 80052e6:	693b      	ldr	r3, [r7, #16]
 80052e8:	68fb      	ldr	r3, [r7, #12]
 80052ea:	681b      	ldr	r3, [r3, #0]
 80052ec:	681a      	ldr	r2, [r3, #0]
 80052ee:	68fb      	ldr	r3, [r7, #12]
 80052f0:	681b      	ldr	r3, [r3, #0]
 80052f2:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 80052f6:	601a      	str	r2, [r3, #0]
 80052f8:	683b      	ldr	r3, [r7, #0]
 80052fa:	9300      	str	r3, [sp, #0]
 80052fc:	687b      	ldr	r3, [r7, #4]
 80052fe:	2200      	movs	r2, #0
 8005300:	f04f 1101 	mov.w	r1, #65537	@ 0x10001
 8005304:	68f8      	ldr	r0, [r7, #12]
 8005306:	f000 f831 	bl	800536c <I2C_WaitOnFlagUntilTimeout>
 800530a:	4603      	mov	r3, r0
 800530c:	2b00      	cmp	r3, #0
 800530e:	d00d      	beq.n	800532c <I2C_MasterRequestRead+0x15c>
 8005310:	68fb      	ldr	r3, [r7, #12]
 8005312:	681b      	ldr	r3, [r3, #0]
 8005314:	681b      	ldr	r3, [r3, #0]
 8005316:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 800531a:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 800531e:	d103      	bne.n	8005328 <I2C_MasterRequestRead+0x158>
 8005320:	68fb      	ldr	r3, [r7, #12]
 8005322:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8005326:	641a      	str	r2, [r3, #64]	@ 0x40
 8005328:	2303      	movs	r3, #3
 800532a:	e017      	b.n	800535c <I2C_MasterRequestRead+0x18c>
 800532c:	897b      	ldrh	r3, [r7, #10]
 800532e:	11db      	asrs	r3, r3, #7
 8005330:	b2db      	uxtb	r3, r3
 8005332:	f003 0306 	and.w	r3, r3, #6
 8005336:	b2db      	uxtb	r3, r3
 8005338:	f063 030e 	orn	r3, r3, #14
 800533c:	b2da      	uxtb	r2, r3
 800533e:	68fb      	ldr	r3, [r7, #12]
 8005340:	681b      	ldr	r3, [r3, #0]
 8005342:	611a      	str	r2, [r3, #16]
 8005344:	683b      	ldr	r3, [r7, #0]
 8005346:	687a      	ldr	r2, [r7, #4]
 8005348:	4907      	ldr	r1, [pc, #28]	@ (8005368 <I2C_MasterRequestRead+0x198>)
 800534a:	68f8      	ldr	r0, [r7, #12]
 800534c:	f000 f888 	bl	8005460 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8005350:	4603      	mov	r3, r0
 8005352:	2b00      	cmp	r3, #0
 8005354:	d001      	beq.n	800535a <I2C_MasterRequestRead+0x18a>
 8005356:	2301      	movs	r3, #1
 8005358:	e000      	b.n	800535c <I2C_MasterRequestRead+0x18c>
 800535a:	2300      	movs	r3, #0
 800535c:	4618      	mov	r0, r3
 800535e:	3718      	adds	r7, #24
 8005360:	46bd      	mov	sp, r7
 8005362:	bd80      	pop	{r7, pc}
 8005364:	00010008 	.word	0x00010008
 8005368:	00010002 	.word	0x00010002

0800536c <I2C_WaitOnFlagUntilTimeout>:
 800536c:	b580      	push	{r7, lr}
 800536e:	b084      	sub	sp, #16
 8005370:	af00      	add	r7, sp, #0
 8005372:	60f8      	str	r0, [r7, #12]
 8005374:	60b9      	str	r1, [r7, #8]
 8005376:	603b      	str	r3, [r7, #0]
 8005378:	4613      	mov	r3, r2
 800537a:	71fb      	strb	r3, [r7, #7]
 800537c:	e048      	b.n	8005410 <I2C_WaitOnFlagUntilTimeout+0xa4>
 800537e:	683b      	ldr	r3, [r7, #0]
 8005380:	f1b3 3fff 	cmp.w	r3, #4294967295
 8005384:	d044      	beq.n	8005410 <I2C_WaitOnFlagUntilTimeout+0xa4>
 8005386:	f7fe fb21 	bl	80039cc <HAL_GetTick>
 800538a:	4602      	mov	r2, r0
 800538c:	69bb      	ldr	r3, [r7, #24]
 800538e:	1ad3      	subs	r3, r2, r3
 8005390:	683a      	ldr	r2, [r7, #0]
 8005392:	429a      	cmp	r2, r3
 8005394:	d302      	bcc.n	800539c <I2C_WaitOnFlagUntilTimeout+0x30>
 8005396:	683b      	ldr	r3, [r7, #0]
 8005398:	2b00      	cmp	r3, #0
 800539a:	d139      	bne.n	8005410 <I2C_WaitOnFlagUntilTimeout+0xa4>
 800539c:	68bb      	ldr	r3, [r7, #8]
 800539e:	0c1b      	lsrs	r3, r3, #16
 80053a0:	b2db      	uxtb	r3, r3
 80053a2:	2b01      	cmp	r3, #1
 80053a4:	d10d      	bne.n	80053c2 <I2C_WaitOnFlagUntilTimeout+0x56>
 80053a6:	68fb      	ldr	r3, [r7, #12]
 80053a8:	681b      	ldr	r3, [r3, #0]
 80053aa:	695b      	ldr	r3, [r3, #20]
 80053ac:	43da      	mvns	r2, r3
 80053ae:	68bb      	ldr	r3, [r7, #8]
 80053b0:	4013      	ands	r3, r2
 80053b2:	b29b      	uxth	r3, r3
 80053b4:	2b00      	cmp	r3, #0
 80053b6:	bf0c      	ite	eq
 80053b8:	2301      	moveq	r3, #1
 80053ba:	2300      	movne	r3, #0
 80053bc:	b2db      	uxtb	r3, r3
 80053be:	461a      	mov	r2, r3
 80053c0:	e00c      	b.n	80053dc <I2C_WaitOnFlagUntilTimeout+0x70>
 80053c2:	68fb      	ldr	r3, [r7, #12]
 80053c4:	681b      	ldr	r3, [r3, #0]
 80053c6:	699b      	ldr	r3, [r3, #24]
 80053c8:	43da      	mvns	r2, r3
 80053ca:	68bb      	ldr	r3, [r7, #8]
 80053cc:	4013      	ands	r3, r2
 80053ce:	b29b      	uxth	r3, r3
 80053d0:	2b00      	cmp	r3, #0
 80053d2:	bf0c      	ite	eq
 80053d4:	2301      	moveq	r3, #1
 80053d6:	2300      	movne	r3, #0
 80053d8:	b2db      	uxtb	r3, r3
 80053da:	461a      	mov	r2, r3
 80053dc:	79fb      	ldrb	r3, [r7, #7]
 80053de:	429a      	cmp	r2, r3
 80053e0:	d116      	bne.n	8005410 <I2C_WaitOnFlagUntilTimeout+0xa4>
 80053e2:	68fb      	ldr	r3, [r7, #12]
 80053e4:	2200      	movs	r2, #0
 80053e6:	631a      	str	r2, [r3, #48]	@ 0x30
 80053e8:	68fb      	ldr	r3, [r7, #12]
 80053ea:	2220      	movs	r2, #32
 80053ec:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 80053f0:	68fb      	ldr	r3, [r7, #12]
 80053f2:	2200      	movs	r2, #0
 80053f4:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 80053f8:	68fb      	ldr	r3, [r7, #12]
 80053fa:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80053fc:	f043 0220 	orr.w	r2, r3, #32
 8005400:	68fb      	ldr	r3, [r7, #12]
 8005402:	641a      	str	r2, [r3, #64]	@ 0x40
 8005404:	68fb      	ldr	r3, [r7, #12]
 8005406:	2200      	movs	r2, #0
 8005408:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 800540c:	2301      	movs	r3, #1
 800540e:	e023      	b.n	8005458 <I2C_WaitOnFlagUntilTimeout+0xec>
 8005410:	68bb      	ldr	r3, [r7, #8]
 8005412:	0c1b      	lsrs	r3, r3, #16
 8005414:	b2db      	uxtb	r3, r3
 8005416:	2b01      	cmp	r3, #1
 8005418:	d10d      	bne.n	8005436 <I2C_WaitOnFlagUntilTimeout+0xca>
 800541a:	68fb      	ldr	r3, [r7, #12]
 800541c:	681b      	ldr	r3, [r3, #0]
 800541e:	695b      	ldr	r3, [r3, #20]
 8005420:	43da      	mvns	r2, r3
 8005422:	68bb      	ldr	r3, [r7, #8]
 8005424:	4013      	ands	r3, r2
 8005426:	b29b      	uxth	r3, r3
 8005428:	2b00      	cmp	r3, #0
 800542a:	bf0c      	ite	eq
 800542c:	2301      	moveq	r3, #1
 800542e:	2300      	movne	r3, #0
 8005430:	b2db      	uxtb	r3, r3
 8005432:	461a      	mov	r2, r3
 8005434:	e00c      	b.n	8005450 <I2C_WaitOnFlagUntilTimeout+0xe4>
 8005436:	68fb      	ldr	r3, [r7, #12]
 8005438:	681b      	ldr	r3, [r3, #0]
 800543a:	699b      	ldr	r3, [r3, #24]
 800543c:	43da      	mvns	r2, r3
 800543e:	68bb      	ldr	r3, [r7, #8]
 8005440:	4013      	ands	r3, r2
 8005442:	b29b      	uxth	r3, r3
 8005444:	2b00      	cmp	r3, #0
 8005446:	bf0c      	ite	eq
 8005448:	2301      	moveq	r3, #1
 800544a:	2300      	movne	r3, #0
 800544c:	b2db      	uxtb	r3, r3
 800544e:	461a      	mov	r2, r3
 8005450:	79fb      	ldrb	r3, [r7, #7]
 8005452:	429a      	cmp	r2, r3
 8005454:	d093      	beq.n	800537e <I2C_WaitOnFlagUntilTimeout+0x12>
 8005456:	2300      	movs	r3, #0
 8005458:	4618      	mov	r0, r3
 800545a:	3710      	adds	r7, #16
 800545c:	46bd      	mov	sp, r7
 800545e:	bd80      	pop	{r7, pc}

08005460 <I2C_WaitOnMasterAddressFlagUntilTimeout>:
 8005460:	b580      	push	{r7, lr}
 8005462:	b084      	sub	sp, #16
 8005464:	af00      	add	r7, sp, #0
 8005466:	60f8      	str	r0, [r7, #12]
 8005468:	60b9      	str	r1, [r7, #8]
 800546a:	607a      	str	r2, [r7, #4]
 800546c:	603b      	str	r3, [r7, #0]
 800546e:	e071      	b.n	8005554 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xf4>
 8005470:	68fb      	ldr	r3, [r7, #12]
 8005472:	681b      	ldr	r3, [r3, #0]
 8005474:	695b      	ldr	r3, [r3, #20]
 8005476:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 800547a:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 800547e:	d123      	bne.n	80054c8 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x68>
 8005480:	68fb      	ldr	r3, [r7, #12]
 8005482:	681b      	ldr	r3, [r3, #0]
 8005484:	681a      	ldr	r2, [r3, #0]
 8005486:	68fb      	ldr	r3, [r7, #12]
 8005488:	681b      	ldr	r3, [r3, #0]
 800548a:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 800548e:	601a      	str	r2, [r3, #0]
 8005490:	68fb      	ldr	r3, [r7, #12]
 8005492:	681b      	ldr	r3, [r3, #0]
 8005494:	f46f 6280 	mvn.w	r2, #1024	@ 0x400
 8005498:	615a      	str	r2, [r3, #20]
 800549a:	68fb      	ldr	r3, [r7, #12]
 800549c:	2200      	movs	r2, #0
 800549e:	631a      	str	r2, [r3, #48]	@ 0x30
 80054a0:	68fb      	ldr	r3, [r7, #12]
 80054a2:	2220      	movs	r2, #32
 80054a4:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 80054a8:	68fb      	ldr	r3, [r7, #12]
 80054aa:	2200      	movs	r2, #0
 80054ac:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 80054b0:	68fb      	ldr	r3, [r7, #12]
 80054b2:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80054b4:	f043 0204 	orr.w	r2, r3, #4
 80054b8:	68fb      	ldr	r3, [r7, #12]
 80054ba:	641a      	str	r2, [r3, #64]	@ 0x40
 80054bc:	68fb      	ldr	r3, [r7, #12]
 80054be:	2200      	movs	r2, #0
 80054c0:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 80054c4:	2301      	movs	r3, #1
 80054c6:	e067      	b.n	8005598 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x138>
 80054c8:	687b      	ldr	r3, [r7, #4]
 80054ca:	f1b3 3fff 	cmp.w	r3, #4294967295
 80054ce:	d041      	beq.n	8005554 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xf4>
 80054d0:	f7fe fa7c 	bl	80039cc <HAL_GetTick>
 80054d4:	4602      	mov	r2, r0
 80054d6:	683b      	ldr	r3, [r7, #0]
 80054d8:	1ad3      	subs	r3, r2, r3
 80054da:	687a      	ldr	r2, [r7, #4]
 80054dc:	429a      	cmp	r2, r3
 80054de:	d302      	bcc.n	80054e6 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x86>
 80054e0:	687b      	ldr	r3, [r7, #4]
 80054e2:	2b00      	cmp	r3, #0
 80054e4:	d136      	bne.n	8005554 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xf4>
 80054e6:	68bb      	ldr	r3, [r7, #8]
 80054e8:	0c1b      	lsrs	r3, r3, #16
 80054ea:	b2db      	uxtb	r3, r3
 80054ec:	2b01      	cmp	r3, #1
 80054ee:	d10c      	bne.n	800550a <I2C_WaitOnMasterAddressFlagUntilTimeout+0xaa>
 80054f0:	68fb      	ldr	r3, [r7, #12]
 80054f2:	681b      	ldr	r3, [r3, #0]
 80054f4:	695b      	ldr	r3, [r3, #20]
 80054f6:	43da      	mvns	r2, r3
 80054f8:	68bb      	ldr	r3, [r7, #8]
 80054fa:	4013      	ands	r3, r2
 80054fc:	b29b      	uxth	r3, r3
 80054fe:	2b00      	cmp	r3, #0
 8005500:	bf14      	ite	ne
 8005502:	2301      	movne	r3, #1
 8005504:	2300      	moveq	r3, #0
 8005506:	b2db      	uxtb	r3, r3
 8005508:	e00b      	b.n	8005522 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xc2>
 800550a:	68fb      	ldr	r3, [r7, #12]
 800550c:	681b      	ldr	r3, [r3, #0]
 800550e:	699b      	ldr	r3, [r3, #24]
 8005510:	43da      	mvns	r2, r3
 8005512:	68bb      	ldr	r3, [r7, #8]
 8005514:	4013      	ands	r3, r2
 8005516:	b29b      	uxth	r3, r3
 8005518:	2b00      	cmp	r3, #0
 800551a:	bf14      	ite	ne
 800551c:	2301      	movne	r3, #1
 800551e:	2300      	moveq	r3, #0
 8005520:	b2db      	uxtb	r3, r3
 8005522:	2b00      	cmp	r3, #0
 8005524:	d016      	beq.n	8005554 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xf4>
 8005526:	68fb      	ldr	r3, [r7, #12]
 8005528:	2200      	movs	r2, #0
 800552a:	631a      	str	r2, [r3, #48]	@ 0x30
 800552c:	68fb      	ldr	r3, [r7, #12]
 800552e:	2220      	movs	r2, #32
 8005530:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8005534:	68fb      	ldr	r3, [r7, #12]
 8005536:	2200      	movs	r2, #0
 8005538:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 800553c:	68fb      	ldr	r3, [r7, #12]
 800553e:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8005540:	f043 0220 	orr.w	r2, r3, #32
 8005544:	68fb      	ldr	r3, [r7, #12]
 8005546:	641a      	str	r2, [r3, #64]	@ 0x40
 8005548:	68fb      	ldr	r3, [r7, #12]
 800554a:	2200      	movs	r2, #0
 800554c:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8005550:	2301      	movs	r3, #1
 8005552:	e021      	b.n	8005598 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x138>
 8005554:	68bb      	ldr	r3, [r7, #8]
 8005556:	0c1b      	lsrs	r3, r3, #16
 8005558:	b2db      	uxtb	r3, r3
 800555a:	2b01      	cmp	r3, #1
 800555c:	d10c      	bne.n	8005578 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x118>
 800555e:	68fb      	ldr	r3, [r7, #12]
 8005560:	681b      	ldr	r3, [r3, #0]
 8005562:	695b      	ldr	r3, [r3, #20]
 8005564:	43da      	mvns	r2, r3
 8005566:	68bb      	ldr	r3, [r7, #8]
 8005568:	4013      	ands	r3, r2
 800556a:	b29b      	uxth	r3, r3
 800556c:	2b00      	cmp	r3, #0
 800556e:	bf14      	ite	ne
 8005570:	2301      	movne	r3, #1
 8005572:	2300      	moveq	r3, #0
 8005574:	b2db      	uxtb	r3, r3
 8005576:	e00b      	b.n	8005590 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x130>
 8005578:	68fb      	ldr	r3, [r7, #12]
 800557a:	681b      	ldr	r3, [r3, #0]
 800557c:	699b      	ldr	r3, [r3, #24]
 800557e:	43da      	mvns	r2, r3
 8005580:	68bb      	ldr	r3, [r7, #8]
 8005582:	4013      	ands	r3, r2
 8005584:	b29b      	uxth	r3, r3
 8005586:	2b00      	cmp	r3, #0
 8005588:	bf14      	ite	ne
 800558a:	2301      	movne	r3, #1
 800558c:	2300      	moveq	r3, #0
 800558e:	b2db      	uxtb	r3, r3
 8005590:	2b00      	cmp	r3, #0
 8005592:	f47f af6d 	bne.w	8005470 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x10>
 8005596:	2300      	movs	r3, #0
 8005598:	4618      	mov	r0, r3
 800559a:	3710      	adds	r7, #16
 800559c:	46bd      	mov	sp, r7
 800559e:	bd80      	pop	{r7, pc}

080055a0 <I2C_WaitOnTXEFlagUntilTimeout>:
 80055a0:	b580      	push	{r7, lr}
 80055a2:	b084      	sub	sp, #16
 80055a4:	af00      	add	r7, sp, #0
 80055a6:	60f8      	str	r0, [r7, #12]
 80055a8:	60b9      	str	r1, [r7, #8]
 80055aa:	607a      	str	r2, [r7, #4]
 80055ac:	e034      	b.n	8005618 <I2C_WaitOnTXEFlagUntilTimeout+0x78>
 80055ae:	68f8      	ldr	r0, [r7, #12]
 80055b0:	f000 f8e3 	bl	800577a <I2C_IsAcknowledgeFailed>
 80055b4:	4603      	mov	r3, r0
 80055b6:	2b00      	cmp	r3, #0
 80055b8:	d001      	beq.n	80055be <I2C_WaitOnTXEFlagUntilTimeout+0x1e>
 80055ba:	2301      	movs	r3, #1
 80055bc:	e034      	b.n	8005628 <I2C_WaitOnTXEFlagUntilTimeout+0x88>
 80055be:	68bb      	ldr	r3, [r7, #8]
 80055c0:	f1b3 3fff 	cmp.w	r3, #4294967295
 80055c4:	d028      	beq.n	8005618 <I2C_WaitOnTXEFlagUntilTimeout+0x78>
 80055c6:	f7fe fa01 	bl	80039cc <HAL_GetTick>
 80055ca:	4602      	mov	r2, r0
 80055cc:	687b      	ldr	r3, [r7, #4]
 80055ce:	1ad3      	subs	r3, r2, r3
 80055d0:	68ba      	ldr	r2, [r7, #8]
 80055d2:	429a      	cmp	r2, r3
 80055d4:	d302      	bcc.n	80055dc <I2C_WaitOnTXEFlagUntilTimeout+0x3c>
 80055d6:	68bb      	ldr	r3, [r7, #8]
 80055d8:	2b00      	cmp	r3, #0
 80055da:	d11d      	bne.n	8005618 <I2C_WaitOnTXEFlagUntilTimeout+0x78>
 80055dc:	68fb      	ldr	r3, [r7, #12]
 80055de:	681b      	ldr	r3, [r3, #0]
 80055e0:	695b      	ldr	r3, [r3, #20]
 80055e2:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 80055e6:	2b80      	cmp	r3, #128	@ 0x80
 80055e8:	d016      	beq.n	8005618 <I2C_WaitOnTXEFlagUntilTimeout+0x78>
 80055ea:	68fb      	ldr	r3, [r7, #12]
 80055ec:	2200      	movs	r2, #0
 80055ee:	631a      	str	r2, [r3, #48]	@ 0x30
 80055f0:	68fb      	ldr	r3, [r7, #12]
 80055f2:	2220      	movs	r2, #32
 80055f4:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 80055f8:	68fb      	ldr	r3, [r7, #12]
 80055fa:	2200      	movs	r2, #0
 80055fc:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8005600:	68fb      	ldr	r3, [r7, #12]
 8005602:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8005604:	f043 0220 	orr.w	r2, r3, #32
 8005608:	68fb      	ldr	r3, [r7, #12]
 800560a:	641a      	str	r2, [r3, #64]	@ 0x40
 800560c:	68fb      	ldr	r3, [r7, #12]
 800560e:	2200      	movs	r2, #0
 8005610:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8005614:	2301      	movs	r3, #1
 8005616:	e007      	b.n	8005628 <I2C_WaitOnTXEFlagUntilTimeout+0x88>
 8005618:	68fb      	ldr	r3, [r7, #12]
 800561a:	681b      	ldr	r3, [r3, #0]
 800561c:	695b      	ldr	r3, [r3, #20]
 800561e:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8005622:	2b80      	cmp	r3, #128	@ 0x80
 8005624:	d1c3      	bne.n	80055ae <I2C_WaitOnTXEFlagUntilTimeout+0xe>
 8005626:	2300      	movs	r3, #0
 8005628:	4618      	mov	r0, r3
 800562a:	3710      	adds	r7, #16
 800562c:	46bd      	mov	sp, r7
 800562e:	bd80      	pop	{r7, pc}

08005630 <I2C_WaitOnBTFFlagUntilTimeout>:
 8005630:	b580      	push	{r7, lr}
 8005632:	b084      	sub	sp, #16
 8005634:	af00      	add	r7, sp, #0
 8005636:	60f8      	str	r0, [r7, #12]
 8005638:	60b9      	str	r1, [r7, #8]
 800563a:	607a      	str	r2, [r7, #4]
 800563c:	e034      	b.n	80056a8 <I2C_WaitOnBTFFlagUntilTimeout+0x78>
 800563e:	68f8      	ldr	r0, [r7, #12]
 8005640:	f000 f89b 	bl	800577a <I2C_IsAcknowledgeFailed>
 8005644:	4603      	mov	r3, r0
 8005646:	2b00      	cmp	r3, #0
 8005648:	d001      	beq.n	800564e <I2C_WaitOnBTFFlagUntilTimeout+0x1e>
 800564a:	2301      	movs	r3, #1
 800564c:	e034      	b.n	80056b8 <I2C_WaitOnBTFFlagUntilTimeout+0x88>
 800564e:	68bb      	ldr	r3, [r7, #8]
 8005650:	f1b3 3fff 	cmp.w	r3, #4294967295
 8005654:	d028      	beq.n	80056a8 <I2C_WaitOnBTFFlagUntilTimeout+0x78>
 8005656:	f7fe f9b9 	bl	80039cc <HAL_GetTick>
 800565a:	4602      	mov	r2, r0
 800565c:	687b      	ldr	r3, [r7, #4]
 800565e:	1ad3      	subs	r3, r2, r3
 8005660:	68ba      	ldr	r2, [r7, #8]
 8005662:	429a      	cmp	r2, r3
 8005664:	d302      	bcc.n	800566c <I2C_WaitOnBTFFlagUntilTimeout+0x3c>
 8005666:	68bb      	ldr	r3, [r7, #8]
 8005668:	2b00      	cmp	r3, #0
 800566a:	d11d      	bne.n	80056a8 <I2C_WaitOnBTFFlagUntilTimeout+0x78>
 800566c:	68fb      	ldr	r3, [r7, #12]
 800566e:	681b      	ldr	r3, [r3, #0]
 8005670:	695b      	ldr	r3, [r3, #20]
 8005672:	f003 0304 	and.w	r3, r3, #4
 8005676:	2b04      	cmp	r3, #4
 8005678:	d016      	beq.n	80056a8 <I2C_WaitOnBTFFlagUntilTimeout+0x78>
 800567a:	68fb      	ldr	r3, [r7, #12]
 800567c:	2200      	movs	r2, #0
 800567e:	631a      	str	r2, [r3, #48]	@ 0x30
 8005680:	68fb      	ldr	r3, [r7, #12]
 8005682:	2220      	movs	r2, #32
 8005684:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8005688:	68fb      	ldr	r3, [r7, #12]
 800568a:	2200      	movs	r2, #0
 800568c:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8005690:	68fb      	ldr	r3, [r7, #12]
 8005692:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8005694:	f043 0220 	orr.w	r2, r3, #32
 8005698:	68fb      	ldr	r3, [r7, #12]
 800569a:	641a      	str	r2, [r3, #64]	@ 0x40
 800569c:	68fb      	ldr	r3, [r7, #12]
 800569e:	2200      	movs	r2, #0
 80056a0:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 80056a4:	2301      	movs	r3, #1
 80056a6:	e007      	b.n	80056b8 <I2C_WaitOnBTFFlagUntilTimeout+0x88>
 80056a8:	68fb      	ldr	r3, [r7, #12]
 80056aa:	681b      	ldr	r3, [r3, #0]
 80056ac:	695b      	ldr	r3, [r3, #20]
 80056ae:	f003 0304 	and.w	r3, r3, #4
 80056b2:	2b04      	cmp	r3, #4
 80056b4:	d1c3      	bne.n	800563e <I2C_WaitOnBTFFlagUntilTimeout+0xe>
 80056b6:	2300      	movs	r3, #0
 80056b8:	4618      	mov	r0, r3
 80056ba:	3710      	adds	r7, #16
 80056bc:	46bd      	mov	sp, r7
 80056be:	bd80      	pop	{r7, pc}

080056c0 <I2C_WaitOnRXNEFlagUntilTimeout>:
 80056c0:	b580      	push	{r7, lr}
 80056c2:	b084      	sub	sp, #16
 80056c4:	af00      	add	r7, sp, #0
 80056c6:	60f8      	str	r0, [r7, #12]
 80056c8:	60b9      	str	r1, [r7, #8]
 80056ca:	607a      	str	r2, [r7, #4]
 80056cc:	e049      	b.n	8005762 <I2C_WaitOnRXNEFlagUntilTimeout+0xa2>
 80056ce:	68fb      	ldr	r3, [r7, #12]
 80056d0:	681b      	ldr	r3, [r3, #0]
 80056d2:	695b      	ldr	r3, [r3, #20]
 80056d4:	f003 0310 	and.w	r3, r3, #16
 80056d8:	2b10      	cmp	r3, #16
 80056da:	d119      	bne.n	8005710 <I2C_WaitOnRXNEFlagUntilTimeout+0x50>
 80056dc:	68fb      	ldr	r3, [r7, #12]
 80056de:	681b      	ldr	r3, [r3, #0]
 80056e0:	f06f 0210 	mvn.w	r2, #16
 80056e4:	615a      	str	r2, [r3, #20]
 80056e6:	68fb      	ldr	r3, [r7, #12]
 80056e8:	2200      	movs	r2, #0
 80056ea:	631a      	str	r2, [r3, #48]	@ 0x30
 80056ec:	68fb      	ldr	r3, [r7, #12]
 80056ee:	2220      	movs	r2, #32
 80056f0:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 80056f4:	68fb      	ldr	r3, [r7, #12]
 80056f6:	2200      	movs	r2, #0
 80056f8:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 80056fc:	68fb      	ldr	r3, [r7, #12]
 80056fe:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 8005700:	68fb      	ldr	r3, [r7, #12]
 8005702:	641a      	str	r2, [r3, #64]	@ 0x40
 8005704:	68fb      	ldr	r3, [r7, #12]
 8005706:	2200      	movs	r2, #0
 8005708:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 800570c:	2301      	movs	r3, #1
 800570e:	e030      	b.n	8005772 <I2C_WaitOnRXNEFlagUntilTimeout+0xb2>
 8005710:	f7fe f95c 	bl	80039cc <HAL_GetTick>
 8005714:	4602      	mov	r2, r0
 8005716:	687b      	ldr	r3, [r7, #4]
 8005718:	1ad3      	subs	r3, r2, r3
 800571a:	68ba      	ldr	r2, [r7, #8]
 800571c:	429a      	cmp	r2, r3
 800571e:	d302      	bcc.n	8005726 <I2C_WaitOnRXNEFlagUntilTimeout+0x66>
 8005720:	68bb      	ldr	r3, [r7, #8]
 8005722:	2b00      	cmp	r3, #0
 8005724:	d11d      	bne.n	8005762 <I2C_WaitOnRXNEFlagUntilTimeout+0xa2>
 8005726:	68fb      	ldr	r3, [r7, #12]
 8005728:	681b      	ldr	r3, [r3, #0]
 800572a:	695b      	ldr	r3, [r3, #20]
 800572c:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8005730:	2b40      	cmp	r3, #64	@ 0x40
 8005732:	d016      	beq.n	8005762 <I2C_WaitOnRXNEFlagUntilTimeout+0xa2>
 8005734:	68fb      	ldr	r3, [r7, #12]
 8005736:	2200      	movs	r2, #0
 8005738:	631a      	str	r2, [r3, #48]	@ 0x30
 800573a:	68fb      	ldr	r3, [r7, #12]
 800573c:	2220      	movs	r2, #32
 800573e:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8005742:	68fb      	ldr	r3, [r7, #12]
 8005744:	2200      	movs	r2, #0
 8005746:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 800574a:	68fb      	ldr	r3, [r7, #12]
 800574c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800574e:	f043 0220 	orr.w	r2, r3, #32
 8005752:	68fb      	ldr	r3, [r7, #12]
 8005754:	641a      	str	r2, [r3, #64]	@ 0x40
 8005756:	68fb      	ldr	r3, [r7, #12]
 8005758:	2200      	movs	r2, #0
 800575a:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 800575e:	2301      	movs	r3, #1
 8005760:	e007      	b.n	8005772 <I2C_WaitOnRXNEFlagUntilTimeout+0xb2>
 8005762:	68fb      	ldr	r3, [r7, #12]
 8005764:	681b      	ldr	r3, [r3, #0]
 8005766:	695b      	ldr	r3, [r3, #20]
 8005768:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 800576c:	2b40      	cmp	r3, #64	@ 0x40
 800576e:	d1ae      	bne.n	80056ce <I2C_WaitOnRXNEFlagUntilTimeout+0xe>
 8005770:	2300      	movs	r3, #0
 8005772:	4618      	mov	r0, r3
 8005774:	3710      	adds	r7, #16
 8005776:	46bd      	mov	sp, r7
 8005778:	bd80      	pop	{r7, pc}

0800577a <I2C_IsAcknowledgeFailed>:
 800577a:	b480      	push	{r7}
 800577c:	b083      	sub	sp, #12
 800577e:	af00      	add	r7, sp, #0
 8005780:	6078      	str	r0, [r7, #4]
 8005782:	687b      	ldr	r3, [r7, #4]
 8005784:	681b      	ldr	r3, [r3, #0]
 8005786:	695b      	ldr	r3, [r3, #20]
 8005788:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 800578c:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8005790:	d11b      	bne.n	80057ca <I2C_IsAcknowledgeFailed+0x50>
 8005792:	687b      	ldr	r3, [r7, #4]
 8005794:	681b      	ldr	r3, [r3, #0]
 8005796:	f46f 6280 	mvn.w	r2, #1024	@ 0x400
 800579a:	615a      	str	r2, [r3, #20]
 800579c:	687b      	ldr	r3, [r7, #4]
 800579e:	2200      	movs	r2, #0
 80057a0:	631a      	str	r2, [r3, #48]	@ 0x30
 80057a2:	687b      	ldr	r3, [r7, #4]
 80057a4:	2220      	movs	r2, #32
 80057a6:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 80057aa:	687b      	ldr	r3, [r7, #4]
 80057ac:	2200      	movs	r2, #0
 80057ae:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 80057b2:	687b      	ldr	r3, [r7, #4]
 80057b4:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80057b6:	f043 0204 	orr.w	r2, r3, #4
 80057ba:	687b      	ldr	r3, [r7, #4]
 80057bc:	641a      	str	r2, [r3, #64]	@ 0x40
 80057be:	687b      	ldr	r3, [r7, #4]
 80057c0:	2200      	movs	r2, #0
 80057c2:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 80057c6:	2301      	movs	r3, #1
 80057c8:	e000      	b.n	80057cc <I2C_IsAcknowledgeFailed+0x52>
 80057ca:	2300      	movs	r3, #0
 80057cc:	4618      	mov	r0, r3
 80057ce:	370c      	adds	r7, #12
 80057d0:	46bd      	mov	sp, r7
 80057d2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80057d6:	4770      	bx	lr

080057d8 <HAL_PWREx_EnableOverDrive>:
 80057d8:	b580      	push	{r7, lr}
 80057da:	b082      	sub	sp, #8
 80057dc:	af00      	add	r7, sp, #0
 80057de:	2300      	movs	r3, #0
 80057e0:	607b      	str	r3, [r7, #4]
 80057e2:	2300      	movs	r3, #0
 80057e4:	603b      	str	r3, [r7, #0]
 80057e6:	4b20      	ldr	r3, [pc, #128]	@ (8005868 <HAL_PWREx_EnableOverDrive+0x90>)
 80057e8:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80057ea:	4a1f      	ldr	r2, [pc, #124]	@ (8005868 <HAL_PWREx_EnableOverDrive+0x90>)
 80057ec:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 80057f0:	6413      	str	r3, [r2, #64]	@ 0x40
 80057f2:	4b1d      	ldr	r3, [pc, #116]	@ (8005868 <HAL_PWREx_EnableOverDrive+0x90>)
 80057f4:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80057f6:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 80057fa:	603b      	str	r3, [r7, #0]
 80057fc:	683b      	ldr	r3, [r7, #0]
 80057fe:	4b1b      	ldr	r3, [pc, #108]	@ (800586c <HAL_PWREx_EnableOverDrive+0x94>)
 8005800:	2201      	movs	r2, #1
 8005802:	601a      	str	r2, [r3, #0]
 8005804:	f7fe f8e2 	bl	80039cc <HAL_GetTick>
 8005808:	6078      	str	r0, [r7, #4]
 800580a:	e009      	b.n	8005820 <HAL_PWREx_EnableOverDrive+0x48>
 800580c:	f7fe f8de 	bl	80039cc <HAL_GetTick>
 8005810:	4602      	mov	r2, r0
 8005812:	687b      	ldr	r3, [r7, #4]
 8005814:	1ad3      	subs	r3, r2, r3
 8005816:	f5b3 7f7a 	cmp.w	r3, #1000	@ 0x3e8
 800581a:	d901      	bls.n	8005820 <HAL_PWREx_EnableOverDrive+0x48>
 800581c:	2303      	movs	r3, #3
 800581e:	e01f      	b.n	8005860 <HAL_PWREx_EnableOverDrive+0x88>
 8005820:	4b13      	ldr	r3, [pc, #76]	@ (8005870 <HAL_PWREx_EnableOverDrive+0x98>)
 8005822:	685b      	ldr	r3, [r3, #4]
 8005824:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 8005828:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 800582c:	d1ee      	bne.n	800580c <HAL_PWREx_EnableOverDrive+0x34>
 800582e:	4b11      	ldr	r3, [pc, #68]	@ (8005874 <HAL_PWREx_EnableOverDrive+0x9c>)
 8005830:	2201      	movs	r2, #1
 8005832:	601a      	str	r2, [r3, #0]
 8005834:	f7fe f8ca 	bl	80039cc <HAL_GetTick>
 8005838:	6078      	str	r0, [r7, #4]
 800583a:	e009      	b.n	8005850 <HAL_PWREx_EnableOverDrive+0x78>
 800583c:	f7fe f8c6 	bl	80039cc <HAL_GetTick>
 8005840:	4602      	mov	r2, r0
 8005842:	687b      	ldr	r3, [r7, #4]
 8005844:	1ad3      	subs	r3, r2, r3
 8005846:	f5b3 7f7a 	cmp.w	r3, #1000	@ 0x3e8
 800584a:	d901      	bls.n	8005850 <HAL_PWREx_EnableOverDrive+0x78>
 800584c:	2303      	movs	r3, #3
 800584e:	e007      	b.n	8005860 <HAL_PWREx_EnableOverDrive+0x88>
 8005850:	4b07      	ldr	r3, [pc, #28]	@ (8005870 <HAL_PWREx_EnableOverDrive+0x98>)
 8005852:	685b      	ldr	r3, [r3, #4]
 8005854:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8005858:	f5b3 3f00 	cmp.w	r3, #131072	@ 0x20000
 800585c:	d1ee      	bne.n	800583c <HAL_PWREx_EnableOverDrive+0x64>
 800585e:	2300      	movs	r3, #0
 8005860:	4618      	mov	r0, r3
 8005862:	3708      	adds	r7, #8
 8005864:	46bd      	mov	sp, r7
 8005866:	bd80      	pop	{r7, pc}
 8005868:	40023800 	.word	0x40023800
 800586c:	420e0040 	.word	0x420e0040
 8005870:	40007000 	.word	0x40007000
 8005874:	420e0044 	.word	0x420e0044

08005878 <HAL_RCC_ClockConfig>:
 8005878:	b580      	push	{r7, lr}
 800587a:	b084      	sub	sp, #16
 800587c:	af00      	add	r7, sp, #0
 800587e:	6078      	str	r0, [r7, #4]
 8005880:	6039      	str	r1, [r7, #0]
 8005882:	687b      	ldr	r3, [r7, #4]
 8005884:	2b00      	cmp	r3, #0
 8005886:	d101      	bne.n	800588c <HAL_RCC_ClockConfig+0x14>
 8005888:	2301      	movs	r3, #1
 800588a:	e0cc      	b.n	8005a26 <HAL_RCC_ClockConfig+0x1ae>
 800588c:	4b68      	ldr	r3, [pc, #416]	@ (8005a30 <HAL_RCC_ClockConfig+0x1b8>)
 800588e:	681b      	ldr	r3, [r3, #0]
 8005890:	f003 030f 	and.w	r3, r3, #15
 8005894:	683a      	ldr	r2, [r7, #0]
 8005896:	429a      	cmp	r2, r3
 8005898:	d90c      	bls.n	80058b4 <HAL_RCC_ClockConfig+0x3c>
 800589a:	4b65      	ldr	r3, [pc, #404]	@ (8005a30 <HAL_RCC_ClockConfig+0x1b8>)
 800589c:	683a      	ldr	r2, [r7, #0]
 800589e:	b2d2      	uxtb	r2, r2
 80058a0:	701a      	strb	r2, [r3, #0]
 80058a2:	4b63      	ldr	r3, [pc, #396]	@ (8005a30 <HAL_RCC_ClockConfig+0x1b8>)
 80058a4:	681b      	ldr	r3, [r3, #0]
 80058a6:	f003 030f 	and.w	r3, r3, #15
 80058aa:	683a      	ldr	r2, [r7, #0]
 80058ac:	429a      	cmp	r2, r3
 80058ae:	d001      	beq.n	80058b4 <HAL_RCC_ClockConfig+0x3c>
 80058b0:	2301      	movs	r3, #1
 80058b2:	e0b8      	b.n	8005a26 <HAL_RCC_ClockConfig+0x1ae>
 80058b4:	687b      	ldr	r3, [r7, #4]
 80058b6:	681b      	ldr	r3, [r3, #0]
 80058b8:	f003 0302 	and.w	r3, r3, #2
 80058bc:	2b00      	cmp	r3, #0
 80058be:	d020      	beq.n	8005902 <HAL_RCC_ClockConfig+0x8a>
 80058c0:	687b      	ldr	r3, [r7, #4]
 80058c2:	681b      	ldr	r3, [r3, #0]
 80058c4:	f003 0304 	and.w	r3, r3, #4
 80058c8:	2b00      	cmp	r3, #0
 80058ca:	d005      	beq.n	80058d8 <HAL_RCC_ClockConfig+0x60>
 80058cc:	4b59      	ldr	r3, [pc, #356]	@ (8005a34 <HAL_RCC_ClockConfig+0x1bc>)
 80058ce:	689b      	ldr	r3, [r3, #8]
 80058d0:	4a58      	ldr	r2, [pc, #352]	@ (8005a34 <HAL_RCC_ClockConfig+0x1bc>)
 80058d2:	f443 53e0 	orr.w	r3, r3, #7168	@ 0x1c00
 80058d6:	6093      	str	r3, [r2, #8]
 80058d8:	687b      	ldr	r3, [r7, #4]
 80058da:	681b      	ldr	r3, [r3, #0]
 80058dc:	f003 0308 	and.w	r3, r3, #8
 80058e0:	2b00      	cmp	r3, #0
 80058e2:	d005      	beq.n	80058f0 <HAL_RCC_ClockConfig+0x78>
 80058e4:	4b53      	ldr	r3, [pc, #332]	@ (8005a34 <HAL_RCC_ClockConfig+0x1bc>)
 80058e6:	689b      	ldr	r3, [r3, #8]
 80058e8:	4a52      	ldr	r2, [pc, #328]	@ (8005a34 <HAL_RCC_ClockConfig+0x1bc>)
 80058ea:	f443 4360 	orr.w	r3, r3, #57344	@ 0xe000
 80058ee:	6093      	str	r3, [r2, #8]
 80058f0:	4b50      	ldr	r3, [pc, #320]	@ (8005a34 <HAL_RCC_ClockConfig+0x1bc>)
 80058f2:	689b      	ldr	r3, [r3, #8]
 80058f4:	f023 02f0 	bic.w	r2, r3, #240	@ 0xf0
 80058f8:	687b      	ldr	r3, [r7, #4]
 80058fa:	689b      	ldr	r3, [r3, #8]
 80058fc:	494d      	ldr	r1, [pc, #308]	@ (8005a34 <HAL_RCC_ClockConfig+0x1bc>)
 80058fe:	4313      	orrs	r3, r2
 8005900:	608b      	str	r3, [r1, #8]
 8005902:	687b      	ldr	r3, [r7, #4]
 8005904:	681b      	ldr	r3, [r3, #0]
 8005906:	f003 0301 	and.w	r3, r3, #1
 800590a:	2b00      	cmp	r3, #0
 800590c:	d044      	beq.n	8005998 <HAL_RCC_ClockConfig+0x120>
 800590e:	687b      	ldr	r3, [r7, #4]
 8005910:	685b      	ldr	r3, [r3, #4]
 8005912:	2b01      	cmp	r3, #1
 8005914:	d107      	bne.n	8005926 <HAL_RCC_ClockConfig+0xae>
 8005916:	4b47      	ldr	r3, [pc, #284]	@ (8005a34 <HAL_RCC_ClockConfig+0x1bc>)
 8005918:	681b      	ldr	r3, [r3, #0]
 800591a:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 800591e:	2b00      	cmp	r3, #0
 8005920:	d119      	bne.n	8005956 <HAL_RCC_ClockConfig+0xde>
 8005922:	2301      	movs	r3, #1
 8005924:	e07f      	b.n	8005a26 <HAL_RCC_ClockConfig+0x1ae>
 8005926:	687b      	ldr	r3, [r7, #4]
 8005928:	685b      	ldr	r3, [r3, #4]
 800592a:	2b02      	cmp	r3, #2
 800592c:	d003      	beq.n	8005936 <HAL_RCC_ClockConfig+0xbe>
 800592e:	687b      	ldr	r3, [r7, #4]
 8005930:	685b      	ldr	r3, [r3, #4]
 8005932:	2b03      	cmp	r3, #3
 8005934:	d107      	bne.n	8005946 <HAL_RCC_ClockConfig+0xce>
 8005936:	4b3f      	ldr	r3, [pc, #252]	@ (8005a34 <HAL_RCC_ClockConfig+0x1bc>)
 8005938:	681b      	ldr	r3, [r3, #0]
 800593a:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 800593e:	2b00      	cmp	r3, #0
 8005940:	d109      	bne.n	8005956 <HAL_RCC_ClockConfig+0xde>
 8005942:	2301      	movs	r3, #1
 8005944:	e06f      	b.n	8005a26 <HAL_RCC_ClockConfig+0x1ae>
 8005946:	4b3b      	ldr	r3, [pc, #236]	@ (8005a34 <HAL_RCC_ClockConfig+0x1bc>)
 8005948:	681b      	ldr	r3, [r3, #0]
 800594a:	f003 0302 	and.w	r3, r3, #2
 800594e:	2b00      	cmp	r3, #0
 8005950:	d101      	bne.n	8005956 <HAL_RCC_ClockConfig+0xde>
 8005952:	2301      	movs	r3, #1
 8005954:	e067      	b.n	8005a26 <HAL_RCC_ClockConfig+0x1ae>
 8005956:	4b37      	ldr	r3, [pc, #220]	@ (8005a34 <HAL_RCC_ClockConfig+0x1bc>)
 8005958:	689b      	ldr	r3, [r3, #8]
 800595a:	f023 0203 	bic.w	r2, r3, #3
 800595e:	687b      	ldr	r3, [r7, #4]
 8005960:	685b      	ldr	r3, [r3, #4]
 8005962:	4934      	ldr	r1, [pc, #208]	@ (8005a34 <HAL_RCC_ClockConfig+0x1bc>)
 8005964:	4313      	orrs	r3, r2
 8005966:	608b      	str	r3, [r1, #8]
 8005968:	f7fe f830 	bl	80039cc <HAL_GetTick>
 800596c:	60f8      	str	r0, [r7, #12]
 800596e:	e00a      	b.n	8005986 <HAL_RCC_ClockConfig+0x10e>
 8005970:	f7fe f82c 	bl	80039cc <HAL_GetTick>
 8005974:	4602      	mov	r2, r0
 8005976:	68fb      	ldr	r3, [r7, #12]
 8005978:	1ad3      	subs	r3, r2, r3
 800597a:	f241 3288 	movw	r2, #5000	@ 0x1388
 800597e:	4293      	cmp	r3, r2
 8005980:	d901      	bls.n	8005986 <HAL_RCC_ClockConfig+0x10e>
 8005982:	2303      	movs	r3, #3
 8005984:	e04f      	b.n	8005a26 <HAL_RCC_ClockConfig+0x1ae>
 8005986:	4b2b      	ldr	r3, [pc, #172]	@ (8005a34 <HAL_RCC_ClockConfig+0x1bc>)
 8005988:	689b      	ldr	r3, [r3, #8]
 800598a:	f003 020c 	and.w	r2, r3, #12
 800598e:	687b      	ldr	r3, [r7, #4]
 8005990:	685b      	ldr	r3, [r3, #4]
 8005992:	009b      	lsls	r3, r3, #2
 8005994:	429a      	cmp	r2, r3
 8005996:	d1eb      	bne.n	8005970 <HAL_RCC_ClockConfig+0xf8>
 8005998:	4b25      	ldr	r3, [pc, #148]	@ (8005a30 <HAL_RCC_ClockConfig+0x1b8>)
 800599a:	681b      	ldr	r3, [r3, #0]
 800599c:	f003 030f 	and.w	r3, r3, #15
 80059a0:	683a      	ldr	r2, [r7, #0]
 80059a2:	429a      	cmp	r2, r3
 80059a4:	d20c      	bcs.n	80059c0 <HAL_RCC_ClockConfig+0x148>
 80059a6:	4b22      	ldr	r3, [pc, #136]	@ (8005a30 <HAL_RCC_ClockConfig+0x1b8>)
 80059a8:	683a      	ldr	r2, [r7, #0]
 80059aa:	b2d2      	uxtb	r2, r2
 80059ac:	701a      	strb	r2, [r3, #0]
 80059ae:	4b20      	ldr	r3, [pc, #128]	@ (8005a30 <HAL_RCC_ClockConfig+0x1b8>)
 80059b0:	681b      	ldr	r3, [r3, #0]
 80059b2:	f003 030f 	and.w	r3, r3, #15
 80059b6:	683a      	ldr	r2, [r7, #0]
 80059b8:	429a      	cmp	r2, r3
 80059ba:	d001      	beq.n	80059c0 <HAL_RCC_ClockConfig+0x148>
 80059bc:	2301      	movs	r3, #1
 80059be:	e032      	b.n	8005a26 <HAL_RCC_ClockConfig+0x1ae>
 80059c0:	687b      	ldr	r3, [r7, #4]
 80059c2:	681b      	ldr	r3, [r3, #0]
 80059c4:	f003 0304 	and.w	r3, r3, #4
 80059c8:	2b00      	cmp	r3, #0
 80059ca:	d008      	beq.n	80059de <HAL_RCC_ClockConfig+0x166>
 80059cc:	4b19      	ldr	r3, [pc, #100]	@ (8005a34 <HAL_RCC_ClockConfig+0x1bc>)
 80059ce:	689b      	ldr	r3, [r3, #8]
 80059d0:	f423 52e0 	bic.w	r2, r3, #7168	@ 0x1c00
 80059d4:	687b      	ldr	r3, [r7, #4]
 80059d6:	68db      	ldr	r3, [r3, #12]
 80059d8:	4916      	ldr	r1, [pc, #88]	@ (8005a34 <HAL_RCC_ClockConfig+0x1bc>)
 80059da:	4313      	orrs	r3, r2
 80059dc:	608b      	str	r3, [r1, #8]
 80059de:	687b      	ldr	r3, [r7, #4]
 80059e0:	681b      	ldr	r3, [r3, #0]
 80059e2:	f003 0308 	and.w	r3, r3, #8
 80059e6:	2b00      	cmp	r3, #0
 80059e8:	d009      	beq.n	80059fe <HAL_RCC_ClockConfig+0x186>
 80059ea:	4b12      	ldr	r3, [pc, #72]	@ (8005a34 <HAL_RCC_ClockConfig+0x1bc>)
 80059ec:	689b      	ldr	r3, [r3, #8]
 80059ee:	f423 4260 	bic.w	r2, r3, #57344	@ 0xe000
 80059f2:	687b      	ldr	r3, [r7, #4]
 80059f4:	691b      	ldr	r3, [r3, #16]
 80059f6:	00db      	lsls	r3, r3, #3
 80059f8:	490e      	ldr	r1, [pc, #56]	@ (8005a34 <HAL_RCC_ClockConfig+0x1bc>)
 80059fa:	4313      	orrs	r3, r2
 80059fc:	608b      	str	r3, [r1, #8]
 80059fe:	f000 f855 	bl	8005aac <HAL_RCC_GetSysClockFreq>
 8005a02:	4602      	mov	r2, r0
 8005a04:	4b0b      	ldr	r3, [pc, #44]	@ (8005a34 <HAL_RCC_ClockConfig+0x1bc>)
 8005a06:	689b      	ldr	r3, [r3, #8]
 8005a08:	091b      	lsrs	r3, r3, #4
 8005a0a:	f003 030f 	and.w	r3, r3, #15
 8005a0e:	490a      	ldr	r1, [pc, #40]	@ (8005a38 <HAL_RCC_ClockConfig+0x1c0>)
 8005a10:	5ccb      	ldrb	r3, [r1, r3]
 8005a12:	fa22 f303 	lsr.w	r3, r2, r3
 8005a16:	4a09      	ldr	r2, [pc, #36]	@ (8005a3c <HAL_RCC_ClockConfig+0x1c4>)
 8005a18:	6013      	str	r3, [r2, #0]
 8005a1a:	4b09      	ldr	r3, [pc, #36]	@ (8005a40 <HAL_RCC_ClockConfig+0x1c8>)
 8005a1c:	681b      	ldr	r3, [r3, #0]
 8005a1e:	4618      	mov	r0, r3
 8005a20:	f7fd ff90 	bl	8003944 <HAL_InitTick>
 8005a24:	2300      	movs	r3, #0
 8005a26:	4618      	mov	r0, r3
 8005a28:	3710      	adds	r7, #16
 8005a2a:	46bd      	mov	sp, r7
 8005a2c:	bd80      	pop	{r7, pc}
 8005a2e:	bf00      	nop
 8005a30:	40023c00 	.word	0x40023c00
 8005a34:	40023800 	.word	0x40023800
 8005a38:	0800d530 	.word	0x0800d530
 8005a3c:	20000028 	.word	0x20000028
 8005a40:	2000002c 	.word	0x2000002c

08005a44 <HAL_RCC_GetHCLKFreq>:
 8005a44:	b480      	push	{r7}
 8005a46:	af00      	add	r7, sp, #0
 8005a48:	4b03      	ldr	r3, [pc, #12]	@ (8005a58 <HAL_RCC_GetHCLKFreq+0x14>)
 8005a4a:	681b      	ldr	r3, [r3, #0]
 8005a4c:	4618      	mov	r0, r3
 8005a4e:	46bd      	mov	sp, r7
 8005a50:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005a54:	4770      	bx	lr
 8005a56:	bf00      	nop
 8005a58:	20000028 	.word	0x20000028

08005a5c <HAL_RCC_GetPCLK1Freq>:
 8005a5c:	b580      	push	{r7, lr}
 8005a5e:	af00      	add	r7, sp, #0
 8005a60:	f7ff fff0 	bl	8005a44 <HAL_RCC_GetHCLKFreq>
 8005a64:	4602      	mov	r2, r0
 8005a66:	4b05      	ldr	r3, [pc, #20]	@ (8005a7c <HAL_RCC_GetPCLK1Freq+0x20>)
 8005a68:	689b      	ldr	r3, [r3, #8]
 8005a6a:	0a9b      	lsrs	r3, r3, #10
 8005a6c:	f003 0307 	and.w	r3, r3, #7
 8005a70:	4903      	ldr	r1, [pc, #12]	@ (8005a80 <HAL_RCC_GetPCLK1Freq+0x24>)
 8005a72:	5ccb      	ldrb	r3, [r1, r3]
 8005a74:	fa22 f303 	lsr.w	r3, r2, r3
 8005a78:	4618      	mov	r0, r3
 8005a7a:	bd80      	pop	{r7, pc}
 8005a7c:	40023800 	.word	0x40023800
 8005a80:	0800d540 	.word	0x0800d540

08005a84 <HAL_RCC_GetPCLK2Freq>:
 8005a84:	b580      	push	{r7, lr}
 8005a86:	af00      	add	r7, sp, #0
 8005a88:	f7ff ffdc 	bl	8005a44 <HAL_RCC_GetHCLKFreq>
 8005a8c:	4602      	mov	r2, r0
 8005a8e:	4b05      	ldr	r3, [pc, #20]	@ (8005aa4 <HAL_RCC_GetPCLK2Freq+0x20>)
 8005a90:	689b      	ldr	r3, [r3, #8]
 8005a92:	0b5b      	lsrs	r3, r3, #13
 8005a94:	f003 0307 	and.w	r3, r3, #7
 8005a98:	4903      	ldr	r1, [pc, #12]	@ (8005aa8 <HAL_RCC_GetPCLK2Freq+0x24>)
 8005a9a:	5ccb      	ldrb	r3, [r1, r3]
 8005a9c:	fa22 f303 	lsr.w	r3, r2, r3
 8005aa0:	4618      	mov	r0, r3
 8005aa2:	bd80      	pop	{r7, pc}
 8005aa4:	40023800 	.word	0x40023800
 8005aa8:	0800d540 	.word	0x0800d540

08005aac <HAL_RCC_GetSysClockFreq>:
 8005aac:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 8005ab0:	b0ae      	sub	sp, #184	@ 0xb8
 8005ab2:	af00      	add	r7, sp, #0
 8005ab4:	2300      	movs	r3, #0
 8005ab6:	f8c7 30ac 	str.w	r3, [r7, #172]	@ 0xac
 8005aba:	2300      	movs	r3, #0
 8005abc:	f8c7 30b4 	str.w	r3, [r7, #180]	@ 0xb4
 8005ac0:	2300      	movs	r3, #0
 8005ac2:	f8c7 30a8 	str.w	r3, [r7, #168]	@ 0xa8
 8005ac6:	2300      	movs	r3, #0
 8005ac8:	f8c7 30a4 	str.w	r3, [r7, #164]	@ 0xa4
 8005acc:	2300      	movs	r3, #0
 8005ace:	f8c7 30b0 	str.w	r3, [r7, #176]	@ 0xb0
 8005ad2:	4bcb      	ldr	r3, [pc, #812]	@ (8005e00 <HAL_RCC_GetSysClockFreq+0x354>)
 8005ad4:	689b      	ldr	r3, [r3, #8]
 8005ad6:	f003 030c 	and.w	r3, r3, #12
 8005ada:	2b0c      	cmp	r3, #12
 8005adc:	f200 8206 	bhi.w	8005eec <HAL_RCC_GetSysClockFreq+0x440>
 8005ae0:	a201      	add	r2, pc, #4	@ (adr r2, 8005ae8 <HAL_RCC_GetSysClockFreq+0x3c>)
 8005ae2:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8005ae6:	bf00      	nop
 8005ae8:	08005b1d 	.word	0x08005b1d
 8005aec:	08005eed 	.word	0x08005eed
 8005af0:	08005eed 	.word	0x08005eed
 8005af4:	08005eed 	.word	0x08005eed
 8005af8:	08005b25 	.word	0x08005b25
 8005afc:	08005eed 	.word	0x08005eed
 8005b00:	08005eed 	.word	0x08005eed
 8005b04:	08005eed 	.word	0x08005eed
 8005b08:	08005b2d 	.word	0x08005b2d
 8005b0c:	08005eed 	.word	0x08005eed
 8005b10:	08005eed 	.word	0x08005eed
 8005b14:	08005eed 	.word	0x08005eed
 8005b18:	08005d1d 	.word	0x08005d1d
 8005b1c:	4bb9      	ldr	r3, [pc, #740]	@ (8005e04 <HAL_RCC_GetSysClockFreq+0x358>)
 8005b1e:	f8c7 30b0 	str.w	r3, [r7, #176]	@ 0xb0
 8005b22:	e1e7      	b.n	8005ef4 <HAL_RCC_GetSysClockFreq+0x448>
 8005b24:	4bb8      	ldr	r3, [pc, #736]	@ (8005e08 <HAL_RCC_GetSysClockFreq+0x35c>)
 8005b26:	f8c7 30b0 	str.w	r3, [r7, #176]	@ 0xb0
 8005b2a:	e1e3      	b.n	8005ef4 <HAL_RCC_GetSysClockFreq+0x448>
 8005b2c:	4bb4      	ldr	r3, [pc, #720]	@ (8005e00 <HAL_RCC_GetSysClockFreq+0x354>)
 8005b2e:	685b      	ldr	r3, [r3, #4]
 8005b30:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 8005b34:	f8c7 30ac 	str.w	r3, [r7, #172]	@ 0xac
 8005b38:	4bb1      	ldr	r3, [pc, #708]	@ (8005e00 <HAL_RCC_GetSysClockFreq+0x354>)
 8005b3a:	685b      	ldr	r3, [r3, #4]
 8005b3c:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 8005b40:	2b00      	cmp	r3, #0
 8005b42:	d071      	beq.n	8005c28 <HAL_RCC_GetSysClockFreq+0x17c>
 8005b44:	4bae      	ldr	r3, [pc, #696]	@ (8005e00 <HAL_RCC_GetSysClockFreq+0x354>)
 8005b46:	685b      	ldr	r3, [r3, #4]
 8005b48:	099b      	lsrs	r3, r3, #6
 8005b4a:	2200      	movs	r2, #0
 8005b4c:	f8c7 3098 	str.w	r3, [r7, #152]	@ 0x98
 8005b50:	f8c7 209c 	str.w	r2, [r7, #156]	@ 0x9c
 8005b54:	f8d7 3098 	ldr.w	r3, [r7, #152]	@ 0x98
 8005b58:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8005b5c:	f8c7 3090 	str.w	r3, [r7, #144]	@ 0x90
 8005b60:	2300      	movs	r3, #0
 8005b62:	f8c7 3094 	str.w	r3, [r7, #148]	@ 0x94
 8005b66:	e9d7 4524 	ldrd	r4, r5, [r7, #144]	@ 0x90
 8005b6a:	4622      	mov	r2, r4
 8005b6c:	462b      	mov	r3, r5
 8005b6e:	f04f 0000 	mov.w	r0, #0
 8005b72:	f04f 0100 	mov.w	r1, #0
 8005b76:	0159      	lsls	r1, r3, #5
 8005b78:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 8005b7c:	0150      	lsls	r0, r2, #5
 8005b7e:	4602      	mov	r2, r0
 8005b80:	460b      	mov	r3, r1
 8005b82:	4621      	mov	r1, r4
 8005b84:	1a51      	subs	r1, r2, r1
 8005b86:	6439      	str	r1, [r7, #64]	@ 0x40
 8005b88:	4629      	mov	r1, r5
 8005b8a:	eb63 0301 	sbc.w	r3, r3, r1
 8005b8e:	647b      	str	r3, [r7, #68]	@ 0x44
 8005b90:	f04f 0200 	mov.w	r2, #0
 8005b94:	f04f 0300 	mov.w	r3, #0
 8005b98:	e9d7 8910 	ldrd	r8, r9, [r7, #64]	@ 0x40
 8005b9c:	4649      	mov	r1, r9
 8005b9e:	018b      	lsls	r3, r1, #6
 8005ba0:	4641      	mov	r1, r8
 8005ba2:	ea43 6391 	orr.w	r3, r3, r1, lsr #26
 8005ba6:	4641      	mov	r1, r8
 8005ba8:	018a      	lsls	r2, r1, #6
 8005baa:	4641      	mov	r1, r8
 8005bac:	1a51      	subs	r1, r2, r1
 8005bae:	63b9      	str	r1, [r7, #56]	@ 0x38
 8005bb0:	4649      	mov	r1, r9
 8005bb2:	eb63 0301 	sbc.w	r3, r3, r1
 8005bb6:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8005bb8:	f04f 0200 	mov.w	r2, #0
 8005bbc:	f04f 0300 	mov.w	r3, #0
 8005bc0:	e9d7 890e 	ldrd	r8, r9, [r7, #56]	@ 0x38
 8005bc4:	4649      	mov	r1, r9
 8005bc6:	00cb      	lsls	r3, r1, #3
 8005bc8:	4641      	mov	r1, r8
 8005bca:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 8005bce:	4641      	mov	r1, r8
 8005bd0:	00ca      	lsls	r2, r1, #3
 8005bd2:	4610      	mov	r0, r2
 8005bd4:	4619      	mov	r1, r3
 8005bd6:	4603      	mov	r3, r0
 8005bd8:	4622      	mov	r2, r4
 8005bda:	189b      	adds	r3, r3, r2
 8005bdc:	633b      	str	r3, [r7, #48]	@ 0x30
 8005bde:	462b      	mov	r3, r5
 8005be0:	460a      	mov	r2, r1
 8005be2:	eb42 0303 	adc.w	r3, r2, r3
 8005be6:	637b      	str	r3, [r7, #52]	@ 0x34
 8005be8:	f04f 0200 	mov.w	r2, #0
 8005bec:	f04f 0300 	mov.w	r3, #0
 8005bf0:	e9d7 450c 	ldrd	r4, r5, [r7, #48]	@ 0x30
 8005bf4:	4629      	mov	r1, r5
 8005bf6:	024b      	lsls	r3, r1, #9
 8005bf8:	4621      	mov	r1, r4
 8005bfa:	ea43 53d1 	orr.w	r3, r3, r1, lsr #23
 8005bfe:	4621      	mov	r1, r4
 8005c00:	024a      	lsls	r2, r1, #9
 8005c02:	4610      	mov	r0, r2
 8005c04:	4619      	mov	r1, r3
 8005c06:	f8d7 30ac 	ldr.w	r3, [r7, #172]	@ 0xac
 8005c0a:	2200      	movs	r2, #0
 8005c0c:	f8c7 3088 	str.w	r3, [r7, #136]	@ 0x88
 8005c10:	f8c7 208c 	str.w	r2, [r7, #140]	@ 0x8c
 8005c14:	e9d7 2322 	ldrd	r2, r3, [r7, #136]	@ 0x88
 8005c18:	f7fb f856 	bl	8000cc8 <__aeabi_uldivmod>
 8005c1c:	4602      	mov	r2, r0
 8005c1e:	460b      	mov	r3, r1
 8005c20:	4613      	mov	r3, r2
 8005c22:	f8c7 30b4 	str.w	r3, [r7, #180]	@ 0xb4
 8005c26:	e067      	b.n	8005cf8 <HAL_RCC_GetSysClockFreq+0x24c>
 8005c28:	4b75      	ldr	r3, [pc, #468]	@ (8005e00 <HAL_RCC_GetSysClockFreq+0x354>)
 8005c2a:	685b      	ldr	r3, [r3, #4]
 8005c2c:	099b      	lsrs	r3, r3, #6
 8005c2e:	2200      	movs	r2, #0
 8005c30:	f8c7 3080 	str.w	r3, [r7, #128]	@ 0x80
 8005c34:	f8c7 2084 	str.w	r2, [r7, #132]	@ 0x84
 8005c38:	f8d7 3080 	ldr.w	r3, [r7, #128]	@ 0x80
 8005c3c:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8005c40:	67bb      	str	r3, [r7, #120]	@ 0x78
 8005c42:	2300      	movs	r3, #0
 8005c44:	67fb      	str	r3, [r7, #124]	@ 0x7c
 8005c46:	e9d7 451e 	ldrd	r4, r5, [r7, #120]	@ 0x78
 8005c4a:	4622      	mov	r2, r4
 8005c4c:	462b      	mov	r3, r5
 8005c4e:	f04f 0000 	mov.w	r0, #0
 8005c52:	f04f 0100 	mov.w	r1, #0
 8005c56:	0159      	lsls	r1, r3, #5
 8005c58:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 8005c5c:	0150      	lsls	r0, r2, #5
 8005c5e:	4602      	mov	r2, r0
 8005c60:	460b      	mov	r3, r1
 8005c62:	4621      	mov	r1, r4
 8005c64:	1a51      	subs	r1, r2, r1
 8005c66:	62b9      	str	r1, [r7, #40]	@ 0x28
 8005c68:	4629      	mov	r1, r5
 8005c6a:	eb63 0301 	sbc.w	r3, r3, r1
 8005c6e:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8005c70:	f04f 0200 	mov.w	r2, #0
 8005c74:	f04f 0300 	mov.w	r3, #0
 8005c78:	e9d7 890a 	ldrd	r8, r9, [r7, #40]	@ 0x28
 8005c7c:	4649      	mov	r1, r9
 8005c7e:	018b      	lsls	r3, r1, #6
 8005c80:	4641      	mov	r1, r8
 8005c82:	ea43 6391 	orr.w	r3, r3, r1, lsr #26
 8005c86:	4641      	mov	r1, r8
 8005c88:	018a      	lsls	r2, r1, #6
 8005c8a:	4641      	mov	r1, r8
 8005c8c:	ebb2 0a01 	subs.w	sl, r2, r1
 8005c90:	4649      	mov	r1, r9
 8005c92:	eb63 0b01 	sbc.w	fp, r3, r1
 8005c96:	f04f 0200 	mov.w	r2, #0
 8005c9a:	f04f 0300 	mov.w	r3, #0
 8005c9e:	ea4f 03cb 	mov.w	r3, fp, lsl #3
 8005ca2:	ea43 735a 	orr.w	r3, r3, sl, lsr #29
 8005ca6:	ea4f 02ca 	mov.w	r2, sl, lsl #3
 8005caa:	4692      	mov	sl, r2
 8005cac:	469b      	mov	fp, r3
 8005cae:	4623      	mov	r3, r4
 8005cb0:	eb1a 0303 	adds.w	r3, sl, r3
 8005cb4:	623b      	str	r3, [r7, #32]
 8005cb6:	462b      	mov	r3, r5
 8005cb8:	eb4b 0303 	adc.w	r3, fp, r3
 8005cbc:	627b      	str	r3, [r7, #36]	@ 0x24
 8005cbe:	f04f 0200 	mov.w	r2, #0
 8005cc2:	f04f 0300 	mov.w	r3, #0
 8005cc6:	e9d7 4508 	ldrd	r4, r5, [r7, #32]
 8005cca:	4629      	mov	r1, r5
 8005ccc:	028b      	lsls	r3, r1, #10
 8005cce:	4621      	mov	r1, r4
 8005cd0:	ea43 5391 	orr.w	r3, r3, r1, lsr #22
 8005cd4:	4621      	mov	r1, r4
 8005cd6:	028a      	lsls	r2, r1, #10
 8005cd8:	4610      	mov	r0, r2
 8005cda:	4619      	mov	r1, r3
 8005cdc:	f8d7 30ac 	ldr.w	r3, [r7, #172]	@ 0xac
 8005ce0:	2200      	movs	r2, #0
 8005ce2:	673b      	str	r3, [r7, #112]	@ 0x70
 8005ce4:	677a      	str	r2, [r7, #116]	@ 0x74
 8005ce6:	e9d7 231c 	ldrd	r2, r3, [r7, #112]	@ 0x70
 8005cea:	f7fa ffed 	bl	8000cc8 <__aeabi_uldivmod>
 8005cee:	4602      	mov	r2, r0
 8005cf0:	460b      	mov	r3, r1
 8005cf2:	4613      	mov	r3, r2
 8005cf4:	f8c7 30b4 	str.w	r3, [r7, #180]	@ 0xb4
 8005cf8:	4b41      	ldr	r3, [pc, #260]	@ (8005e00 <HAL_RCC_GetSysClockFreq+0x354>)
 8005cfa:	685b      	ldr	r3, [r3, #4]
 8005cfc:	0c1b      	lsrs	r3, r3, #16
 8005cfe:	f003 0303 	and.w	r3, r3, #3
 8005d02:	3301      	adds	r3, #1
 8005d04:	005b      	lsls	r3, r3, #1
 8005d06:	f8c7 30a8 	str.w	r3, [r7, #168]	@ 0xa8
 8005d0a:	f8d7 20b4 	ldr.w	r2, [r7, #180]	@ 0xb4
 8005d0e:	f8d7 30a8 	ldr.w	r3, [r7, #168]	@ 0xa8
 8005d12:	fbb2 f3f3 	udiv	r3, r2, r3
 8005d16:	f8c7 30b0 	str.w	r3, [r7, #176]	@ 0xb0
 8005d1a:	e0eb      	b.n	8005ef4 <HAL_RCC_GetSysClockFreq+0x448>
 8005d1c:	4b38      	ldr	r3, [pc, #224]	@ (8005e00 <HAL_RCC_GetSysClockFreq+0x354>)
 8005d1e:	685b      	ldr	r3, [r3, #4]
 8005d20:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 8005d24:	f8c7 30ac 	str.w	r3, [r7, #172]	@ 0xac
 8005d28:	4b35      	ldr	r3, [pc, #212]	@ (8005e00 <HAL_RCC_GetSysClockFreq+0x354>)
 8005d2a:	685b      	ldr	r3, [r3, #4]
 8005d2c:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 8005d30:	2b00      	cmp	r3, #0
 8005d32:	d06b      	beq.n	8005e0c <HAL_RCC_GetSysClockFreq+0x360>
 8005d34:	4b32      	ldr	r3, [pc, #200]	@ (8005e00 <HAL_RCC_GetSysClockFreq+0x354>)
 8005d36:	685b      	ldr	r3, [r3, #4]
 8005d38:	099b      	lsrs	r3, r3, #6
 8005d3a:	2200      	movs	r2, #0
 8005d3c:	66bb      	str	r3, [r7, #104]	@ 0x68
 8005d3e:	66fa      	str	r2, [r7, #108]	@ 0x6c
 8005d40:	6ebb      	ldr	r3, [r7, #104]	@ 0x68
 8005d42:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8005d46:	663b      	str	r3, [r7, #96]	@ 0x60
 8005d48:	2300      	movs	r3, #0
 8005d4a:	667b      	str	r3, [r7, #100]	@ 0x64
 8005d4c:	e9d7 4518 	ldrd	r4, r5, [r7, #96]	@ 0x60
 8005d50:	4622      	mov	r2, r4
 8005d52:	462b      	mov	r3, r5
 8005d54:	f04f 0000 	mov.w	r0, #0
 8005d58:	f04f 0100 	mov.w	r1, #0
 8005d5c:	0159      	lsls	r1, r3, #5
 8005d5e:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 8005d62:	0150      	lsls	r0, r2, #5
 8005d64:	4602      	mov	r2, r0
 8005d66:	460b      	mov	r3, r1
 8005d68:	4621      	mov	r1, r4
 8005d6a:	1a51      	subs	r1, r2, r1
 8005d6c:	61b9      	str	r1, [r7, #24]
 8005d6e:	4629      	mov	r1, r5
 8005d70:	eb63 0301 	sbc.w	r3, r3, r1
 8005d74:	61fb      	str	r3, [r7, #28]
 8005d76:	f04f 0200 	mov.w	r2, #0
 8005d7a:	f04f 0300 	mov.w	r3, #0
 8005d7e:	e9d7 ab06 	ldrd	sl, fp, [r7, #24]
 8005d82:	4659      	mov	r1, fp
 8005d84:	018b      	lsls	r3, r1, #6
 8005d86:	4651      	mov	r1, sl
 8005d88:	ea43 6391 	orr.w	r3, r3, r1, lsr #26
 8005d8c:	4651      	mov	r1, sl
 8005d8e:	018a      	lsls	r2, r1, #6
 8005d90:	4651      	mov	r1, sl
 8005d92:	ebb2 0801 	subs.w	r8, r2, r1
 8005d96:	4659      	mov	r1, fp
 8005d98:	eb63 0901 	sbc.w	r9, r3, r1
 8005d9c:	f04f 0200 	mov.w	r2, #0
 8005da0:	f04f 0300 	mov.w	r3, #0
 8005da4:	ea4f 03c9 	mov.w	r3, r9, lsl #3
 8005da8:	ea43 7358 	orr.w	r3, r3, r8, lsr #29
 8005dac:	ea4f 02c8 	mov.w	r2, r8, lsl #3
 8005db0:	4690      	mov	r8, r2
 8005db2:	4699      	mov	r9, r3
 8005db4:	4623      	mov	r3, r4
 8005db6:	eb18 0303 	adds.w	r3, r8, r3
 8005dba:	613b      	str	r3, [r7, #16]
 8005dbc:	462b      	mov	r3, r5
 8005dbe:	eb49 0303 	adc.w	r3, r9, r3
 8005dc2:	617b      	str	r3, [r7, #20]
 8005dc4:	f04f 0200 	mov.w	r2, #0
 8005dc8:	f04f 0300 	mov.w	r3, #0
 8005dcc:	e9d7 4504 	ldrd	r4, r5, [r7, #16]
 8005dd0:	4629      	mov	r1, r5
 8005dd2:	024b      	lsls	r3, r1, #9
 8005dd4:	4621      	mov	r1, r4
 8005dd6:	ea43 53d1 	orr.w	r3, r3, r1, lsr #23
 8005dda:	4621      	mov	r1, r4
 8005ddc:	024a      	lsls	r2, r1, #9
 8005dde:	4610      	mov	r0, r2
 8005de0:	4619      	mov	r1, r3
 8005de2:	f8d7 30ac 	ldr.w	r3, [r7, #172]	@ 0xac
 8005de6:	2200      	movs	r2, #0
 8005de8:	65bb      	str	r3, [r7, #88]	@ 0x58
 8005dea:	65fa      	str	r2, [r7, #92]	@ 0x5c
 8005dec:	e9d7 2316 	ldrd	r2, r3, [r7, #88]	@ 0x58
 8005df0:	f7fa ff6a 	bl	8000cc8 <__aeabi_uldivmod>
 8005df4:	4602      	mov	r2, r0
 8005df6:	460b      	mov	r3, r1
 8005df8:	4613      	mov	r3, r2
 8005dfa:	f8c7 30b4 	str.w	r3, [r7, #180]	@ 0xb4
 8005dfe:	e065      	b.n	8005ecc <HAL_RCC_GetSysClockFreq+0x420>
 8005e00:	40023800 	.word	0x40023800
 8005e04:	00f42400 	.word	0x00f42400
 8005e08:	007a1200 	.word	0x007a1200
 8005e0c:	4b3d      	ldr	r3, [pc, #244]	@ (8005f04 <HAL_RCC_GetSysClockFreq+0x458>)
 8005e0e:	685b      	ldr	r3, [r3, #4]
 8005e10:	099b      	lsrs	r3, r3, #6
 8005e12:	2200      	movs	r2, #0
 8005e14:	4618      	mov	r0, r3
 8005e16:	4611      	mov	r1, r2
 8005e18:	f3c0 0308 	ubfx	r3, r0, #0, #9
 8005e1c:	653b      	str	r3, [r7, #80]	@ 0x50
 8005e1e:	2300      	movs	r3, #0
 8005e20:	657b      	str	r3, [r7, #84]	@ 0x54
 8005e22:	e9d7 8914 	ldrd	r8, r9, [r7, #80]	@ 0x50
 8005e26:	4642      	mov	r2, r8
 8005e28:	464b      	mov	r3, r9
 8005e2a:	f04f 0000 	mov.w	r0, #0
 8005e2e:	f04f 0100 	mov.w	r1, #0
 8005e32:	0159      	lsls	r1, r3, #5
 8005e34:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 8005e38:	0150      	lsls	r0, r2, #5
 8005e3a:	4602      	mov	r2, r0
 8005e3c:	460b      	mov	r3, r1
 8005e3e:	4641      	mov	r1, r8
 8005e40:	1a51      	subs	r1, r2, r1
 8005e42:	60b9      	str	r1, [r7, #8]
 8005e44:	4649      	mov	r1, r9
 8005e46:	eb63 0301 	sbc.w	r3, r3, r1
 8005e4a:	60fb      	str	r3, [r7, #12]
 8005e4c:	f04f 0200 	mov.w	r2, #0
 8005e50:	f04f 0300 	mov.w	r3, #0
 8005e54:	e9d7 ab02 	ldrd	sl, fp, [r7, #8]
 8005e58:	4659      	mov	r1, fp
 8005e5a:	018b      	lsls	r3, r1, #6
 8005e5c:	4651      	mov	r1, sl
 8005e5e:	ea43 6391 	orr.w	r3, r3, r1, lsr #26
 8005e62:	4651      	mov	r1, sl
 8005e64:	018a      	lsls	r2, r1, #6
 8005e66:	4651      	mov	r1, sl
 8005e68:	1a54      	subs	r4, r2, r1
 8005e6a:	4659      	mov	r1, fp
 8005e6c:	eb63 0501 	sbc.w	r5, r3, r1
 8005e70:	f04f 0200 	mov.w	r2, #0
 8005e74:	f04f 0300 	mov.w	r3, #0
 8005e78:	00eb      	lsls	r3, r5, #3
 8005e7a:	ea43 7354 	orr.w	r3, r3, r4, lsr #29
 8005e7e:	00e2      	lsls	r2, r4, #3
 8005e80:	4614      	mov	r4, r2
 8005e82:	461d      	mov	r5, r3
 8005e84:	4643      	mov	r3, r8
 8005e86:	18e3      	adds	r3, r4, r3
 8005e88:	603b      	str	r3, [r7, #0]
 8005e8a:	464b      	mov	r3, r9
 8005e8c:	eb45 0303 	adc.w	r3, r5, r3
 8005e90:	607b      	str	r3, [r7, #4]
 8005e92:	f04f 0200 	mov.w	r2, #0
 8005e96:	f04f 0300 	mov.w	r3, #0
 8005e9a:	e9d7 4500 	ldrd	r4, r5, [r7]
 8005e9e:	4629      	mov	r1, r5
 8005ea0:	028b      	lsls	r3, r1, #10
 8005ea2:	4621      	mov	r1, r4
 8005ea4:	ea43 5391 	orr.w	r3, r3, r1, lsr #22
 8005ea8:	4621      	mov	r1, r4
 8005eaa:	028a      	lsls	r2, r1, #10
 8005eac:	4610      	mov	r0, r2
 8005eae:	4619      	mov	r1, r3
 8005eb0:	f8d7 30ac 	ldr.w	r3, [r7, #172]	@ 0xac
 8005eb4:	2200      	movs	r2, #0
 8005eb6:	64bb      	str	r3, [r7, #72]	@ 0x48
 8005eb8:	64fa      	str	r2, [r7, #76]	@ 0x4c
 8005eba:	e9d7 2312 	ldrd	r2, r3, [r7, #72]	@ 0x48
 8005ebe:	f7fa ff03 	bl	8000cc8 <__aeabi_uldivmod>
 8005ec2:	4602      	mov	r2, r0
 8005ec4:	460b      	mov	r3, r1
 8005ec6:	4613      	mov	r3, r2
 8005ec8:	f8c7 30b4 	str.w	r3, [r7, #180]	@ 0xb4
 8005ecc:	4b0d      	ldr	r3, [pc, #52]	@ (8005f04 <HAL_RCC_GetSysClockFreq+0x458>)
 8005ece:	685b      	ldr	r3, [r3, #4]
 8005ed0:	0f1b      	lsrs	r3, r3, #28
 8005ed2:	f003 0307 	and.w	r3, r3, #7
 8005ed6:	f8c7 30a4 	str.w	r3, [r7, #164]	@ 0xa4
 8005eda:	f8d7 20b4 	ldr.w	r2, [r7, #180]	@ 0xb4
 8005ede:	f8d7 30a4 	ldr.w	r3, [r7, #164]	@ 0xa4
 8005ee2:	fbb2 f3f3 	udiv	r3, r2, r3
 8005ee6:	f8c7 30b0 	str.w	r3, [r7, #176]	@ 0xb0
 8005eea:	e003      	b.n	8005ef4 <HAL_RCC_GetSysClockFreq+0x448>
 8005eec:	4b06      	ldr	r3, [pc, #24]	@ (8005f08 <HAL_RCC_GetSysClockFreq+0x45c>)
 8005eee:	f8c7 30b0 	str.w	r3, [r7, #176]	@ 0xb0
 8005ef2:	bf00      	nop
 8005ef4:	f8d7 30b0 	ldr.w	r3, [r7, #176]	@ 0xb0
 8005ef8:	4618      	mov	r0, r3
 8005efa:	37b8      	adds	r7, #184	@ 0xb8
 8005efc:	46bd      	mov	sp, r7
 8005efe:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 8005f02:	bf00      	nop
 8005f04:	40023800 	.word	0x40023800
 8005f08:	00f42400 	.word	0x00f42400

08005f0c <HAL_RCC_OscConfig>:
 8005f0c:	b580      	push	{r7, lr}
 8005f0e:	b086      	sub	sp, #24
 8005f10:	af00      	add	r7, sp, #0
 8005f12:	6078      	str	r0, [r7, #4]
 8005f14:	687b      	ldr	r3, [r7, #4]
 8005f16:	2b00      	cmp	r3, #0
 8005f18:	d101      	bne.n	8005f1e <HAL_RCC_OscConfig+0x12>
 8005f1a:	2301      	movs	r3, #1
 8005f1c:	e28d      	b.n	800643a <HAL_RCC_OscConfig+0x52e>
 8005f1e:	687b      	ldr	r3, [r7, #4]
 8005f20:	681b      	ldr	r3, [r3, #0]
 8005f22:	f003 0301 	and.w	r3, r3, #1
 8005f26:	2b00      	cmp	r3, #0
 8005f28:	f000 8083 	beq.w	8006032 <HAL_RCC_OscConfig+0x126>
 8005f2c:	4b94      	ldr	r3, [pc, #592]	@ (8006180 <HAL_RCC_OscConfig+0x274>)
 8005f2e:	689b      	ldr	r3, [r3, #8]
 8005f30:	f003 030c 	and.w	r3, r3, #12
 8005f34:	2b04      	cmp	r3, #4
 8005f36:	d019      	beq.n	8005f6c <HAL_RCC_OscConfig+0x60>
 8005f38:	4b91      	ldr	r3, [pc, #580]	@ (8006180 <HAL_RCC_OscConfig+0x274>)
 8005f3a:	689b      	ldr	r3, [r3, #8]
 8005f3c:	f003 030c 	and.w	r3, r3, #12
 8005f40:	2b08      	cmp	r3, #8
 8005f42:	d106      	bne.n	8005f52 <HAL_RCC_OscConfig+0x46>
 8005f44:	4b8e      	ldr	r3, [pc, #568]	@ (8006180 <HAL_RCC_OscConfig+0x274>)
 8005f46:	685b      	ldr	r3, [r3, #4]
 8005f48:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 8005f4c:	f5b3 0f80 	cmp.w	r3, #4194304	@ 0x400000
 8005f50:	d00c      	beq.n	8005f6c <HAL_RCC_OscConfig+0x60>
 8005f52:	4b8b      	ldr	r3, [pc, #556]	@ (8006180 <HAL_RCC_OscConfig+0x274>)
 8005f54:	689b      	ldr	r3, [r3, #8]
 8005f56:	f003 030c 	and.w	r3, r3, #12
 8005f5a:	2b0c      	cmp	r3, #12
 8005f5c:	d112      	bne.n	8005f84 <HAL_RCC_OscConfig+0x78>
 8005f5e:	4b88      	ldr	r3, [pc, #544]	@ (8006180 <HAL_RCC_OscConfig+0x274>)
 8005f60:	685b      	ldr	r3, [r3, #4]
 8005f62:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 8005f66:	f5b3 0f80 	cmp.w	r3, #4194304	@ 0x400000
 8005f6a:	d10b      	bne.n	8005f84 <HAL_RCC_OscConfig+0x78>
 8005f6c:	4b84      	ldr	r3, [pc, #528]	@ (8006180 <HAL_RCC_OscConfig+0x274>)
 8005f6e:	681b      	ldr	r3, [r3, #0]
 8005f70:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8005f74:	2b00      	cmp	r3, #0
 8005f76:	d05b      	beq.n	8006030 <HAL_RCC_OscConfig+0x124>
 8005f78:	687b      	ldr	r3, [r7, #4]
 8005f7a:	685b      	ldr	r3, [r3, #4]
 8005f7c:	2b00      	cmp	r3, #0
 8005f7e:	d157      	bne.n	8006030 <HAL_RCC_OscConfig+0x124>
 8005f80:	2301      	movs	r3, #1
 8005f82:	e25a      	b.n	800643a <HAL_RCC_OscConfig+0x52e>
 8005f84:	687b      	ldr	r3, [r7, #4]
 8005f86:	685b      	ldr	r3, [r3, #4]
 8005f88:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 8005f8c:	d106      	bne.n	8005f9c <HAL_RCC_OscConfig+0x90>
 8005f8e:	4b7c      	ldr	r3, [pc, #496]	@ (8006180 <HAL_RCC_OscConfig+0x274>)
 8005f90:	681b      	ldr	r3, [r3, #0]
 8005f92:	4a7b      	ldr	r2, [pc, #492]	@ (8006180 <HAL_RCC_OscConfig+0x274>)
 8005f94:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8005f98:	6013      	str	r3, [r2, #0]
 8005f9a:	e01d      	b.n	8005fd8 <HAL_RCC_OscConfig+0xcc>
 8005f9c:	687b      	ldr	r3, [r7, #4]
 8005f9e:	685b      	ldr	r3, [r3, #4]
 8005fa0:	f5b3 2fa0 	cmp.w	r3, #327680	@ 0x50000
 8005fa4:	d10c      	bne.n	8005fc0 <HAL_RCC_OscConfig+0xb4>
 8005fa6:	4b76      	ldr	r3, [pc, #472]	@ (8006180 <HAL_RCC_OscConfig+0x274>)
 8005fa8:	681b      	ldr	r3, [r3, #0]
 8005faa:	4a75      	ldr	r2, [pc, #468]	@ (8006180 <HAL_RCC_OscConfig+0x274>)
 8005fac:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
 8005fb0:	6013      	str	r3, [r2, #0]
 8005fb2:	4b73      	ldr	r3, [pc, #460]	@ (8006180 <HAL_RCC_OscConfig+0x274>)
 8005fb4:	681b      	ldr	r3, [r3, #0]
 8005fb6:	4a72      	ldr	r2, [pc, #456]	@ (8006180 <HAL_RCC_OscConfig+0x274>)
 8005fb8:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8005fbc:	6013      	str	r3, [r2, #0]
 8005fbe:	e00b      	b.n	8005fd8 <HAL_RCC_OscConfig+0xcc>
 8005fc0:	4b6f      	ldr	r3, [pc, #444]	@ (8006180 <HAL_RCC_OscConfig+0x274>)
 8005fc2:	681b      	ldr	r3, [r3, #0]
 8005fc4:	4a6e      	ldr	r2, [pc, #440]	@ (8006180 <HAL_RCC_OscConfig+0x274>)
 8005fc6:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 8005fca:	6013      	str	r3, [r2, #0]
 8005fcc:	4b6c      	ldr	r3, [pc, #432]	@ (8006180 <HAL_RCC_OscConfig+0x274>)
 8005fce:	681b      	ldr	r3, [r3, #0]
 8005fd0:	4a6b      	ldr	r2, [pc, #428]	@ (8006180 <HAL_RCC_OscConfig+0x274>)
 8005fd2:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
 8005fd6:	6013      	str	r3, [r2, #0]
 8005fd8:	687b      	ldr	r3, [r7, #4]
 8005fda:	685b      	ldr	r3, [r3, #4]
 8005fdc:	2b00      	cmp	r3, #0
 8005fde:	d013      	beq.n	8006008 <HAL_RCC_OscConfig+0xfc>
 8005fe0:	f7fd fcf4 	bl	80039cc <HAL_GetTick>
 8005fe4:	6138      	str	r0, [r7, #16]
 8005fe6:	e008      	b.n	8005ffa <HAL_RCC_OscConfig+0xee>
 8005fe8:	f7fd fcf0 	bl	80039cc <HAL_GetTick>
 8005fec:	4602      	mov	r2, r0
 8005fee:	693b      	ldr	r3, [r7, #16]
 8005ff0:	1ad3      	subs	r3, r2, r3
 8005ff2:	2b64      	cmp	r3, #100	@ 0x64
 8005ff4:	d901      	bls.n	8005ffa <HAL_RCC_OscConfig+0xee>
 8005ff6:	2303      	movs	r3, #3
 8005ff8:	e21f      	b.n	800643a <HAL_RCC_OscConfig+0x52e>
 8005ffa:	4b61      	ldr	r3, [pc, #388]	@ (8006180 <HAL_RCC_OscConfig+0x274>)
 8005ffc:	681b      	ldr	r3, [r3, #0]
 8005ffe:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8006002:	2b00      	cmp	r3, #0
 8006004:	d0f0      	beq.n	8005fe8 <HAL_RCC_OscConfig+0xdc>
 8006006:	e014      	b.n	8006032 <HAL_RCC_OscConfig+0x126>
 8006008:	f7fd fce0 	bl	80039cc <HAL_GetTick>
 800600c:	6138      	str	r0, [r7, #16]
 800600e:	e008      	b.n	8006022 <HAL_RCC_OscConfig+0x116>
 8006010:	f7fd fcdc 	bl	80039cc <HAL_GetTick>
 8006014:	4602      	mov	r2, r0
 8006016:	693b      	ldr	r3, [r7, #16]
 8006018:	1ad3      	subs	r3, r2, r3
 800601a:	2b64      	cmp	r3, #100	@ 0x64
 800601c:	d901      	bls.n	8006022 <HAL_RCC_OscConfig+0x116>
 800601e:	2303      	movs	r3, #3
 8006020:	e20b      	b.n	800643a <HAL_RCC_OscConfig+0x52e>
 8006022:	4b57      	ldr	r3, [pc, #348]	@ (8006180 <HAL_RCC_OscConfig+0x274>)
 8006024:	681b      	ldr	r3, [r3, #0]
 8006026:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 800602a:	2b00      	cmp	r3, #0
 800602c:	d1f0      	bne.n	8006010 <HAL_RCC_OscConfig+0x104>
 800602e:	e000      	b.n	8006032 <HAL_RCC_OscConfig+0x126>
 8006030:	bf00      	nop
 8006032:	687b      	ldr	r3, [r7, #4]
 8006034:	681b      	ldr	r3, [r3, #0]
 8006036:	f003 0302 	and.w	r3, r3, #2
 800603a:	2b00      	cmp	r3, #0
 800603c:	d06f      	beq.n	800611e <HAL_RCC_OscConfig+0x212>
 800603e:	4b50      	ldr	r3, [pc, #320]	@ (8006180 <HAL_RCC_OscConfig+0x274>)
 8006040:	689b      	ldr	r3, [r3, #8]
 8006042:	f003 030c 	and.w	r3, r3, #12
 8006046:	2b00      	cmp	r3, #0
 8006048:	d017      	beq.n	800607a <HAL_RCC_OscConfig+0x16e>
 800604a:	4b4d      	ldr	r3, [pc, #308]	@ (8006180 <HAL_RCC_OscConfig+0x274>)
 800604c:	689b      	ldr	r3, [r3, #8]
 800604e:	f003 030c 	and.w	r3, r3, #12
 8006052:	2b08      	cmp	r3, #8
 8006054:	d105      	bne.n	8006062 <HAL_RCC_OscConfig+0x156>
 8006056:	4b4a      	ldr	r3, [pc, #296]	@ (8006180 <HAL_RCC_OscConfig+0x274>)
 8006058:	685b      	ldr	r3, [r3, #4]
 800605a:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 800605e:	2b00      	cmp	r3, #0
 8006060:	d00b      	beq.n	800607a <HAL_RCC_OscConfig+0x16e>
 8006062:	4b47      	ldr	r3, [pc, #284]	@ (8006180 <HAL_RCC_OscConfig+0x274>)
 8006064:	689b      	ldr	r3, [r3, #8]
 8006066:	f003 030c 	and.w	r3, r3, #12
 800606a:	2b0c      	cmp	r3, #12
 800606c:	d11c      	bne.n	80060a8 <HAL_RCC_OscConfig+0x19c>
 800606e:	4b44      	ldr	r3, [pc, #272]	@ (8006180 <HAL_RCC_OscConfig+0x274>)
 8006070:	685b      	ldr	r3, [r3, #4]
 8006072:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 8006076:	2b00      	cmp	r3, #0
 8006078:	d116      	bne.n	80060a8 <HAL_RCC_OscConfig+0x19c>
 800607a:	4b41      	ldr	r3, [pc, #260]	@ (8006180 <HAL_RCC_OscConfig+0x274>)
 800607c:	681b      	ldr	r3, [r3, #0]
 800607e:	f003 0302 	and.w	r3, r3, #2
 8006082:	2b00      	cmp	r3, #0
 8006084:	d005      	beq.n	8006092 <HAL_RCC_OscConfig+0x186>
 8006086:	687b      	ldr	r3, [r7, #4]
 8006088:	68db      	ldr	r3, [r3, #12]
 800608a:	2b01      	cmp	r3, #1
 800608c:	d001      	beq.n	8006092 <HAL_RCC_OscConfig+0x186>
 800608e:	2301      	movs	r3, #1
 8006090:	e1d3      	b.n	800643a <HAL_RCC_OscConfig+0x52e>
 8006092:	4b3b      	ldr	r3, [pc, #236]	@ (8006180 <HAL_RCC_OscConfig+0x274>)
 8006094:	681b      	ldr	r3, [r3, #0]
 8006096:	f023 02f8 	bic.w	r2, r3, #248	@ 0xf8
 800609a:	687b      	ldr	r3, [r7, #4]
 800609c:	691b      	ldr	r3, [r3, #16]
 800609e:	00db      	lsls	r3, r3, #3
 80060a0:	4937      	ldr	r1, [pc, #220]	@ (8006180 <HAL_RCC_OscConfig+0x274>)
 80060a2:	4313      	orrs	r3, r2
 80060a4:	600b      	str	r3, [r1, #0]
 80060a6:	e03a      	b.n	800611e <HAL_RCC_OscConfig+0x212>
 80060a8:	687b      	ldr	r3, [r7, #4]
 80060aa:	68db      	ldr	r3, [r3, #12]
 80060ac:	2b00      	cmp	r3, #0
 80060ae:	d020      	beq.n	80060f2 <HAL_RCC_OscConfig+0x1e6>
 80060b0:	4b34      	ldr	r3, [pc, #208]	@ (8006184 <HAL_RCC_OscConfig+0x278>)
 80060b2:	2201      	movs	r2, #1
 80060b4:	601a      	str	r2, [r3, #0]
 80060b6:	f7fd fc89 	bl	80039cc <HAL_GetTick>
 80060ba:	6138      	str	r0, [r7, #16]
 80060bc:	e008      	b.n	80060d0 <HAL_RCC_OscConfig+0x1c4>
 80060be:	f7fd fc85 	bl	80039cc <HAL_GetTick>
 80060c2:	4602      	mov	r2, r0
 80060c4:	693b      	ldr	r3, [r7, #16]
 80060c6:	1ad3      	subs	r3, r2, r3
 80060c8:	2b02      	cmp	r3, #2
 80060ca:	d901      	bls.n	80060d0 <HAL_RCC_OscConfig+0x1c4>
 80060cc:	2303      	movs	r3, #3
 80060ce:	e1b4      	b.n	800643a <HAL_RCC_OscConfig+0x52e>
 80060d0:	4b2b      	ldr	r3, [pc, #172]	@ (8006180 <HAL_RCC_OscConfig+0x274>)
 80060d2:	681b      	ldr	r3, [r3, #0]
 80060d4:	f003 0302 	and.w	r3, r3, #2
 80060d8:	2b00      	cmp	r3, #0
 80060da:	d0f0      	beq.n	80060be <HAL_RCC_OscConfig+0x1b2>
 80060dc:	4b28      	ldr	r3, [pc, #160]	@ (8006180 <HAL_RCC_OscConfig+0x274>)
 80060de:	681b      	ldr	r3, [r3, #0]
 80060e0:	f023 02f8 	bic.w	r2, r3, #248	@ 0xf8
 80060e4:	687b      	ldr	r3, [r7, #4]
 80060e6:	691b      	ldr	r3, [r3, #16]
 80060e8:	00db      	lsls	r3, r3, #3
 80060ea:	4925      	ldr	r1, [pc, #148]	@ (8006180 <HAL_RCC_OscConfig+0x274>)
 80060ec:	4313      	orrs	r3, r2
 80060ee:	600b      	str	r3, [r1, #0]
 80060f0:	e015      	b.n	800611e <HAL_RCC_OscConfig+0x212>
 80060f2:	4b24      	ldr	r3, [pc, #144]	@ (8006184 <HAL_RCC_OscConfig+0x278>)
 80060f4:	2200      	movs	r2, #0
 80060f6:	601a      	str	r2, [r3, #0]
 80060f8:	f7fd fc68 	bl	80039cc <HAL_GetTick>
 80060fc:	6138      	str	r0, [r7, #16]
 80060fe:	e008      	b.n	8006112 <HAL_RCC_OscConfig+0x206>
 8006100:	f7fd fc64 	bl	80039cc <HAL_GetTick>
 8006104:	4602      	mov	r2, r0
 8006106:	693b      	ldr	r3, [r7, #16]
 8006108:	1ad3      	subs	r3, r2, r3
 800610a:	2b02      	cmp	r3, #2
 800610c:	d901      	bls.n	8006112 <HAL_RCC_OscConfig+0x206>
 800610e:	2303      	movs	r3, #3
 8006110:	e193      	b.n	800643a <HAL_RCC_OscConfig+0x52e>
 8006112:	4b1b      	ldr	r3, [pc, #108]	@ (8006180 <HAL_RCC_OscConfig+0x274>)
 8006114:	681b      	ldr	r3, [r3, #0]
 8006116:	f003 0302 	and.w	r3, r3, #2
 800611a:	2b00      	cmp	r3, #0
 800611c:	d1f0      	bne.n	8006100 <HAL_RCC_OscConfig+0x1f4>
 800611e:	687b      	ldr	r3, [r7, #4]
 8006120:	681b      	ldr	r3, [r3, #0]
 8006122:	f003 0308 	and.w	r3, r3, #8
 8006126:	2b00      	cmp	r3, #0
 8006128:	d036      	beq.n	8006198 <HAL_RCC_OscConfig+0x28c>
 800612a:	687b      	ldr	r3, [r7, #4]
 800612c:	695b      	ldr	r3, [r3, #20]
 800612e:	2b00      	cmp	r3, #0
 8006130:	d016      	beq.n	8006160 <HAL_RCC_OscConfig+0x254>
 8006132:	4b15      	ldr	r3, [pc, #84]	@ (8006188 <HAL_RCC_OscConfig+0x27c>)
 8006134:	2201      	movs	r2, #1
 8006136:	601a      	str	r2, [r3, #0]
 8006138:	f7fd fc48 	bl	80039cc <HAL_GetTick>
 800613c:	6138      	str	r0, [r7, #16]
 800613e:	e008      	b.n	8006152 <HAL_RCC_OscConfig+0x246>
 8006140:	f7fd fc44 	bl	80039cc <HAL_GetTick>
 8006144:	4602      	mov	r2, r0
 8006146:	693b      	ldr	r3, [r7, #16]
 8006148:	1ad3      	subs	r3, r2, r3
 800614a:	2b02      	cmp	r3, #2
 800614c:	d901      	bls.n	8006152 <HAL_RCC_OscConfig+0x246>
 800614e:	2303      	movs	r3, #3
 8006150:	e173      	b.n	800643a <HAL_RCC_OscConfig+0x52e>
 8006152:	4b0b      	ldr	r3, [pc, #44]	@ (8006180 <HAL_RCC_OscConfig+0x274>)
 8006154:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 8006156:	f003 0302 	and.w	r3, r3, #2
 800615a:	2b00      	cmp	r3, #0
 800615c:	d0f0      	beq.n	8006140 <HAL_RCC_OscConfig+0x234>
 800615e:	e01b      	b.n	8006198 <HAL_RCC_OscConfig+0x28c>
 8006160:	4b09      	ldr	r3, [pc, #36]	@ (8006188 <HAL_RCC_OscConfig+0x27c>)
 8006162:	2200      	movs	r2, #0
 8006164:	601a      	str	r2, [r3, #0]
 8006166:	f7fd fc31 	bl	80039cc <HAL_GetTick>
 800616a:	6138      	str	r0, [r7, #16]
 800616c:	e00e      	b.n	800618c <HAL_RCC_OscConfig+0x280>
 800616e:	f7fd fc2d 	bl	80039cc <HAL_GetTick>
 8006172:	4602      	mov	r2, r0
 8006174:	693b      	ldr	r3, [r7, #16]
 8006176:	1ad3      	subs	r3, r2, r3
 8006178:	2b02      	cmp	r3, #2
 800617a:	d907      	bls.n	800618c <HAL_RCC_OscConfig+0x280>
 800617c:	2303      	movs	r3, #3
 800617e:	e15c      	b.n	800643a <HAL_RCC_OscConfig+0x52e>
 8006180:	40023800 	.word	0x40023800
 8006184:	42470000 	.word	0x42470000
 8006188:	42470e80 	.word	0x42470e80
 800618c:	4b8a      	ldr	r3, [pc, #552]	@ (80063b8 <HAL_RCC_OscConfig+0x4ac>)
 800618e:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 8006190:	f003 0302 	and.w	r3, r3, #2
 8006194:	2b00      	cmp	r3, #0
 8006196:	d1ea      	bne.n	800616e <HAL_RCC_OscConfig+0x262>
 8006198:	687b      	ldr	r3, [r7, #4]
 800619a:	681b      	ldr	r3, [r3, #0]
 800619c:	f003 0304 	and.w	r3, r3, #4
 80061a0:	2b00      	cmp	r3, #0
 80061a2:	f000 8097 	beq.w	80062d4 <HAL_RCC_OscConfig+0x3c8>
 80061a6:	2300      	movs	r3, #0
 80061a8:	75fb      	strb	r3, [r7, #23]
 80061aa:	4b83      	ldr	r3, [pc, #524]	@ (80063b8 <HAL_RCC_OscConfig+0x4ac>)
 80061ac:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80061ae:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 80061b2:	2b00      	cmp	r3, #0
 80061b4:	d10f      	bne.n	80061d6 <HAL_RCC_OscConfig+0x2ca>
 80061b6:	2300      	movs	r3, #0
 80061b8:	60bb      	str	r3, [r7, #8]
 80061ba:	4b7f      	ldr	r3, [pc, #508]	@ (80063b8 <HAL_RCC_OscConfig+0x4ac>)
 80061bc:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80061be:	4a7e      	ldr	r2, [pc, #504]	@ (80063b8 <HAL_RCC_OscConfig+0x4ac>)
 80061c0:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 80061c4:	6413      	str	r3, [r2, #64]	@ 0x40
 80061c6:	4b7c      	ldr	r3, [pc, #496]	@ (80063b8 <HAL_RCC_OscConfig+0x4ac>)
 80061c8:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80061ca:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 80061ce:	60bb      	str	r3, [r7, #8]
 80061d0:	68bb      	ldr	r3, [r7, #8]
 80061d2:	2301      	movs	r3, #1
 80061d4:	75fb      	strb	r3, [r7, #23]
 80061d6:	4b79      	ldr	r3, [pc, #484]	@ (80063bc <HAL_RCC_OscConfig+0x4b0>)
 80061d8:	681b      	ldr	r3, [r3, #0]
 80061da:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 80061de:	2b00      	cmp	r3, #0
 80061e0:	d118      	bne.n	8006214 <HAL_RCC_OscConfig+0x308>
 80061e2:	4b76      	ldr	r3, [pc, #472]	@ (80063bc <HAL_RCC_OscConfig+0x4b0>)
 80061e4:	681b      	ldr	r3, [r3, #0]
 80061e6:	4a75      	ldr	r2, [pc, #468]	@ (80063bc <HAL_RCC_OscConfig+0x4b0>)
 80061e8:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 80061ec:	6013      	str	r3, [r2, #0]
 80061ee:	f7fd fbed 	bl	80039cc <HAL_GetTick>
 80061f2:	6138      	str	r0, [r7, #16]
 80061f4:	e008      	b.n	8006208 <HAL_RCC_OscConfig+0x2fc>
 80061f6:	f7fd fbe9 	bl	80039cc <HAL_GetTick>
 80061fa:	4602      	mov	r2, r0
 80061fc:	693b      	ldr	r3, [r7, #16]
 80061fe:	1ad3      	subs	r3, r2, r3
 8006200:	2b02      	cmp	r3, #2
 8006202:	d901      	bls.n	8006208 <HAL_RCC_OscConfig+0x2fc>
 8006204:	2303      	movs	r3, #3
 8006206:	e118      	b.n	800643a <HAL_RCC_OscConfig+0x52e>
 8006208:	4b6c      	ldr	r3, [pc, #432]	@ (80063bc <HAL_RCC_OscConfig+0x4b0>)
 800620a:	681b      	ldr	r3, [r3, #0]
 800620c:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8006210:	2b00      	cmp	r3, #0
 8006212:	d0f0      	beq.n	80061f6 <HAL_RCC_OscConfig+0x2ea>
 8006214:	687b      	ldr	r3, [r7, #4]
 8006216:	689b      	ldr	r3, [r3, #8]
 8006218:	2b01      	cmp	r3, #1
 800621a:	d106      	bne.n	800622a <HAL_RCC_OscConfig+0x31e>
 800621c:	4b66      	ldr	r3, [pc, #408]	@ (80063b8 <HAL_RCC_OscConfig+0x4ac>)
 800621e:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8006220:	4a65      	ldr	r2, [pc, #404]	@ (80063b8 <HAL_RCC_OscConfig+0x4ac>)
 8006222:	f043 0301 	orr.w	r3, r3, #1
 8006226:	6713      	str	r3, [r2, #112]	@ 0x70
 8006228:	e01c      	b.n	8006264 <HAL_RCC_OscConfig+0x358>
 800622a:	687b      	ldr	r3, [r7, #4]
 800622c:	689b      	ldr	r3, [r3, #8]
 800622e:	2b05      	cmp	r3, #5
 8006230:	d10c      	bne.n	800624c <HAL_RCC_OscConfig+0x340>
 8006232:	4b61      	ldr	r3, [pc, #388]	@ (80063b8 <HAL_RCC_OscConfig+0x4ac>)
 8006234:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8006236:	4a60      	ldr	r2, [pc, #384]	@ (80063b8 <HAL_RCC_OscConfig+0x4ac>)
 8006238:	f043 0304 	orr.w	r3, r3, #4
 800623c:	6713      	str	r3, [r2, #112]	@ 0x70
 800623e:	4b5e      	ldr	r3, [pc, #376]	@ (80063b8 <HAL_RCC_OscConfig+0x4ac>)
 8006240:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8006242:	4a5d      	ldr	r2, [pc, #372]	@ (80063b8 <HAL_RCC_OscConfig+0x4ac>)
 8006244:	f043 0301 	orr.w	r3, r3, #1
 8006248:	6713      	str	r3, [r2, #112]	@ 0x70
 800624a:	e00b      	b.n	8006264 <HAL_RCC_OscConfig+0x358>
 800624c:	4b5a      	ldr	r3, [pc, #360]	@ (80063b8 <HAL_RCC_OscConfig+0x4ac>)
 800624e:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8006250:	4a59      	ldr	r2, [pc, #356]	@ (80063b8 <HAL_RCC_OscConfig+0x4ac>)
 8006252:	f023 0301 	bic.w	r3, r3, #1
 8006256:	6713      	str	r3, [r2, #112]	@ 0x70
 8006258:	4b57      	ldr	r3, [pc, #348]	@ (80063b8 <HAL_RCC_OscConfig+0x4ac>)
 800625a:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 800625c:	4a56      	ldr	r2, [pc, #344]	@ (80063b8 <HAL_RCC_OscConfig+0x4ac>)
 800625e:	f023 0304 	bic.w	r3, r3, #4
 8006262:	6713      	str	r3, [r2, #112]	@ 0x70
 8006264:	687b      	ldr	r3, [r7, #4]
 8006266:	689b      	ldr	r3, [r3, #8]
 8006268:	2b00      	cmp	r3, #0
 800626a:	d015      	beq.n	8006298 <HAL_RCC_OscConfig+0x38c>
 800626c:	f7fd fbae 	bl	80039cc <HAL_GetTick>
 8006270:	6138      	str	r0, [r7, #16]
 8006272:	e00a      	b.n	800628a <HAL_RCC_OscConfig+0x37e>
 8006274:	f7fd fbaa 	bl	80039cc <HAL_GetTick>
 8006278:	4602      	mov	r2, r0
 800627a:	693b      	ldr	r3, [r7, #16]
 800627c:	1ad3      	subs	r3, r2, r3
 800627e:	f241 3288 	movw	r2, #5000	@ 0x1388
 8006282:	4293      	cmp	r3, r2
 8006284:	d901      	bls.n	800628a <HAL_RCC_OscConfig+0x37e>
 8006286:	2303      	movs	r3, #3
 8006288:	e0d7      	b.n	800643a <HAL_RCC_OscConfig+0x52e>
 800628a:	4b4b      	ldr	r3, [pc, #300]	@ (80063b8 <HAL_RCC_OscConfig+0x4ac>)
 800628c:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 800628e:	f003 0302 	and.w	r3, r3, #2
 8006292:	2b00      	cmp	r3, #0
 8006294:	d0ee      	beq.n	8006274 <HAL_RCC_OscConfig+0x368>
 8006296:	e014      	b.n	80062c2 <HAL_RCC_OscConfig+0x3b6>
 8006298:	f7fd fb98 	bl	80039cc <HAL_GetTick>
 800629c:	6138      	str	r0, [r7, #16]
 800629e:	e00a      	b.n	80062b6 <HAL_RCC_OscConfig+0x3aa>
 80062a0:	f7fd fb94 	bl	80039cc <HAL_GetTick>
 80062a4:	4602      	mov	r2, r0
 80062a6:	693b      	ldr	r3, [r7, #16]
 80062a8:	1ad3      	subs	r3, r2, r3
 80062aa:	f241 3288 	movw	r2, #5000	@ 0x1388
 80062ae:	4293      	cmp	r3, r2
 80062b0:	d901      	bls.n	80062b6 <HAL_RCC_OscConfig+0x3aa>
 80062b2:	2303      	movs	r3, #3
 80062b4:	e0c1      	b.n	800643a <HAL_RCC_OscConfig+0x52e>
 80062b6:	4b40      	ldr	r3, [pc, #256]	@ (80063b8 <HAL_RCC_OscConfig+0x4ac>)
 80062b8:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 80062ba:	f003 0302 	and.w	r3, r3, #2
 80062be:	2b00      	cmp	r3, #0
 80062c0:	d1ee      	bne.n	80062a0 <HAL_RCC_OscConfig+0x394>
 80062c2:	7dfb      	ldrb	r3, [r7, #23]
 80062c4:	2b01      	cmp	r3, #1
 80062c6:	d105      	bne.n	80062d4 <HAL_RCC_OscConfig+0x3c8>
 80062c8:	4b3b      	ldr	r3, [pc, #236]	@ (80063b8 <HAL_RCC_OscConfig+0x4ac>)
 80062ca:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80062cc:	4a3a      	ldr	r2, [pc, #232]	@ (80063b8 <HAL_RCC_OscConfig+0x4ac>)
 80062ce:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
 80062d2:	6413      	str	r3, [r2, #64]	@ 0x40
 80062d4:	687b      	ldr	r3, [r7, #4]
 80062d6:	699b      	ldr	r3, [r3, #24]
 80062d8:	2b00      	cmp	r3, #0
 80062da:	f000 80ad 	beq.w	8006438 <HAL_RCC_OscConfig+0x52c>
 80062de:	4b36      	ldr	r3, [pc, #216]	@ (80063b8 <HAL_RCC_OscConfig+0x4ac>)
 80062e0:	689b      	ldr	r3, [r3, #8]
 80062e2:	f003 030c 	and.w	r3, r3, #12
 80062e6:	2b08      	cmp	r3, #8
 80062e8:	d060      	beq.n	80063ac <HAL_RCC_OscConfig+0x4a0>
 80062ea:	687b      	ldr	r3, [r7, #4]
 80062ec:	699b      	ldr	r3, [r3, #24]
 80062ee:	2b02      	cmp	r3, #2
 80062f0:	d145      	bne.n	800637e <HAL_RCC_OscConfig+0x472>
 80062f2:	4b33      	ldr	r3, [pc, #204]	@ (80063c0 <HAL_RCC_OscConfig+0x4b4>)
 80062f4:	2200      	movs	r2, #0
 80062f6:	601a      	str	r2, [r3, #0]
 80062f8:	f7fd fb68 	bl	80039cc <HAL_GetTick>
 80062fc:	6138      	str	r0, [r7, #16]
 80062fe:	e008      	b.n	8006312 <HAL_RCC_OscConfig+0x406>
 8006300:	f7fd fb64 	bl	80039cc <HAL_GetTick>
 8006304:	4602      	mov	r2, r0
 8006306:	693b      	ldr	r3, [r7, #16]
 8006308:	1ad3      	subs	r3, r2, r3
 800630a:	2b02      	cmp	r3, #2
 800630c:	d901      	bls.n	8006312 <HAL_RCC_OscConfig+0x406>
 800630e:	2303      	movs	r3, #3
 8006310:	e093      	b.n	800643a <HAL_RCC_OscConfig+0x52e>
 8006312:	4b29      	ldr	r3, [pc, #164]	@ (80063b8 <HAL_RCC_OscConfig+0x4ac>)
 8006314:	681b      	ldr	r3, [r3, #0]
 8006316:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 800631a:	2b00      	cmp	r3, #0
 800631c:	d1f0      	bne.n	8006300 <HAL_RCC_OscConfig+0x3f4>
 800631e:	687b      	ldr	r3, [r7, #4]
 8006320:	69da      	ldr	r2, [r3, #28]
 8006322:	687b      	ldr	r3, [r7, #4]
 8006324:	6a1b      	ldr	r3, [r3, #32]
 8006326:	431a      	orrs	r2, r3
 8006328:	687b      	ldr	r3, [r7, #4]
 800632a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800632c:	019b      	lsls	r3, r3, #6
 800632e:	431a      	orrs	r2, r3
 8006330:	687b      	ldr	r3, [r7, #4]
 8006332:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8006334:	085b      	lsrs	r3, r3, #1
 8006336:	3b01      	subs	r3, #1
 8006338:	041b      	lsls	r3, r3, #16
 800633a:	431a      	orrs	r2, r3
 800633c:	687b      	ldr	r3, [r7, #4]
 800633e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8006340:	061b      	lsls	r3, r3, #24
 8006342:	431a      	orrs	r2, r3
 8006344:	687b      	ldr	r3, [r7, #4]
 8006346:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8006348:	071b      	lsls	r3, r3, #28
 800634a:	491b      	ldr	r1, [pc, #108]	@ (80063b8 <HAL_RCC_OscConfig+0x4ac>)
 800634c:	4313      	orrs	r3, r2
 800634e:	604b      	str	r3, [r1, #4]
 8006350:	4b1b      	ldr	r3, [pc, #108]	@ (80063c0 <HAL_RCC_OscConfig+0x4b4>)
 8006352:	2201      	movs	r2, #1
 8006354:	601a      	str	r2, [r3, #0]
 8006356:	f7fd fb39 	bl	80039cc <HAL_GetTick>
 800635a:	6138      	str	r0, [r7, #16]
 800635c:	e008      	b.n	8006370 <HAL_RCC_OscConfig+0x464>
 800635e:	f7fd fb35 	bl	80039cc <HAL_GetTick>
 8006362:	4602      	mov	r2, r0
 8006364:	693b      	ldr	r3, [r7, #16]
 8006366:	1ad3      	subs	r3, r2, r3
 8006368:	2b02      	cmp	r3, #2
 800636a:	d901      	bls.n	8006370 <HAL_RCC_OscConfig+0x464>
 800636c:	2303      	movs	r3, #3
 800636e:	e064      	b.n	800643a <HAL_RCC_OscConfig+0x52e>
 8006370:	4b11      	ldr	r3, [pc, #68]	@ (80063b8 <HAL_RCC_OscConfig+0x4ac>)
 8006372:	681b      	ldr	r3, [r3, #0]
 8006374:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8006378:	2b00      	cmp	r3, #0
 800637a:	d0f0      	beq.n	800635e <HAL_RCC_OscConfig+0x452>
 800637c:	e05c      	b.n	8006438 <HAL_RCC_OscConfig+0x52c>
 800637e:	4b10      	ldr	r3, [pc, #64]	@ (80063c0 <HAL_RCC_OscConfig+0x4b4>)
 8006380:	2200      	movs	r2, #0
 8006382:	601a      	str	r2, [r3, #0]
 8006384:	f7fd fb22 	bl	80039cc <HAL_GetTick>
 8006388:	6138      	str	r0, [r7, #16]
 800638a:	e008      	b.n	800639e <HAL_RCC_OscConfig+0x492>
 800638c:	f7fd fb1e 	bl	80039cc <HAL_GetTick>
 8006390:	4602      	mov	r2, r0
 8006392:	693b      	ldr	r3, [r7, #16]
 8006394:	1ad3      	subs	r3, r2, r3
 8006396:	2b02      	cmp	r3, #2
 8006398:	d901      	bls.n	800639e <HAL_RCC_OscConfig+0x492>
 800639a:	2303      	movs	r3, #3
 800639c:	e04d      	b.n	800643a <HAL_RCC_OscConfig+0x52e>
 800639e:	4b06      	ldr	r3, [pc, #24]	@ (80063b8 <HAL_RCC_OscConfig+0x4ac>)
 80063a0:	681b      	ldr	r3, [r3, #0]
 80063a2:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 80063a6:	2b00      	cmp	r3, #0
 80063a8:	d1f0      	bne.n	800638c <HAL_RCC_OscConfig+0x480>
 80063aa:	e045      	b.n	8006438 <HAL_RCC_OscConfig+0x52c>
 80063ac:	687b      	ldr	r3, [r7, #4]
 80063ae:	699b      	ldr	r3, [r3, #24]
 80063b0:	2b01      	cmp	r3, #1
 80063b2:	d107      	bne.n	80063c4 <HAL_RCC_OscConfig+0x4b8>
 80063b4:	2301      	movs	r3, #1
 80063b6:	e040      	b.n	800643a <HAL_RCC_OscConfig+0x52e>
 80063b8:	40023800 	.word	0x40023800
 80063bc:	40007000 	.word	0x40007000
 80063c0:	42470060 	.word	0x42470060
 80063c4:	4b1f      	ldr	r3, [pc, #124]	@ (8006444 <HAL_RCC_OscConfig+0x538>)
 80063c6:	685b      	ldr	r3, [r3, #4]
 80063c8:	60fb      	str	r3, [r7, #12]
 80063ca:	687b      	ldr	r3, [r7, #4]
 80063cc:	699b      	ldr	r3, [r3, #24]
 80063ce:	2b01      	cmp	r3, #1
 80063d0:	d030      	beq.n	8006434 <HAL_RCC_OscConfig+0x528>
 80063d2:	68fb      	ldr	r3, [r7, #12]
 80063d4:	f403 0280 	and.w	r2, r3, #4194304	@ 0x400000
 80063d8:	687b      	ldr	r3, [r7, #4]
 80063da:	69db      	ldr	r3, [r3, #28]
 80063dc:	429a      	cmp	r2, r3
 80063de:	d129      	bne.n	8006434 <HAL_RCC_OscConfig+0x528>
 80063e0:	68fb      	ldr	r3, [r7, #12]
 80063e2:	f003 023f 	and.w	r2, r3, #63	@ 0x3f
 80063e6:	687b      	ldr	r3, [r7, #4]
 80063e8:	6a1b      	ldr	r3, [r3, #32]
 80063ea:	429a      	cmp	r2, r3
 80063ec:	d122      	bne.n	8006434 <HAL_RCC_OscConfig+0x528>
 80063ee:	68fa      	ldr	r2, [r7, #12]
 80063f0:	f647 73c0 	movw	r3, #32704	@ 0x7fc0
 80063f4:	4013      	ands	r3, r2
 80063f6:	687a      	ldr	r2, [r7, #4]
 80063f8:	6a52      	ldr	r2, [r2, #36]	@ 0x24
 80063fa:	0192      	lsls	r2, r2, #6
 80063fc:	4293      	cmp	r3, r2
 80063fe:	d119      	bne.n	8006434 <HAL_RCC_OscConfig+0x528>
 8006400:	68fb      	ldr	r3, [r7, #12]
 8006402:	f403 3240 	and.w	r2, r3, #196608	@ 0x30000
 8006406:	687b      	ldr	r3, [r7, #4]
 8006408:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800640a:	085b      	lsrs	r3, r3, #1
 800640c:	3b01      	subs	r3, #1
 800640e:	041b      	lsls	r3, r3, #16
 8006410:	429a      	cmp	r2, r3
 8006412:	d10f      	bne.n	8006434 <HAL_RCC_OscConfig+0x528>
 8006414:	68fb      	ldr	r3, [r7, #12]
 8006416:	f003 6270 	and.w	r2, r3, #251658240	@ 0xf000000
 800641a:	687b      	ldr	r3, [r7, #4]
 800641c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800641e:	061b      	lsls	r3, r3, #24
 8006420:	429a      	cmp	r2, r3
 8006422:	d107      	bne.n	8006434 <HAL_RCC_OscConfig+0x528>
 8006424:	68fb      	ldr	r3, [r7, #12]
 8006426:	f003 42e0 	and.w	r2, r3, #1879048192	@ 0x70000000
 800642a:	687b      	ldr	r3, [r7, #4]
 800642c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800642e:	071b      	lsls	r3, r3, #28
 8006430:	429a      	cmp	r2, r3
 8006432:	d001      	beq.n	8006438 <HAL_RCC_OscConfig+0x52c>
 8006434:	2301      	movs	r3, #1
 8006436:	e000      	b.n	800643a <HAL_RCC_OscConfig+0x52e>
 8006438:	2300      	movs	r3, #0
 800643a:	4618      	mov	r0, r3
 800643c:	3718      	adds	r7, #24
 800643e:	46bd      	mov	sp, r7
 8006440:	bd80      	pop	{r7, pc}
 8006442:	bf00      	nop
 8006444:	40023800 	.word	0x40023800

08006448 <HAL_TIM_Base_Init>:
 8006448:	b580      	push	{r7, lr}
 800644a:	b082      	sub	sp, #8
 800644c:	af00      	add	r7, sp, #0
 800644e:	6078      	str	r0, [r7, #4]
 8006450:	687b      	ldr	r3, [r7, #4]
 8006452:	2b00      	cmp	r3, #0
 8006454:	d101      	bne.n	800645a <HAL_TIM_Base_Init+0x12>
 8006456:	2301      	movs	r3, #1
 8006458:	e041      	b.n	80064de <HAL_TIM_Base_Init+0x96>
 800645a:	687b      	ldr	r3, [r7, #4]
 800645c:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 8006460:	b2db      	uxtb	r3, r3
 8006462:	2b00      	cmp	r3, #0
 8006464:	d106      	bne.n	8006474 <HAL_TIM_Base_Init+0x2c>
 8006466:	687b      	ldr	r3, [r7, #4]
 8006468:	2200      	movs	r2, #0
 800646a:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 800646e:	6878      	ldr	r0, [r7, #4]
 8006470:	f7fc fe86 	bl	8003180 <HAL_TIM_Base_MspInit>
 8006474:	687b      	ldr	r3, [r7, #4]
 8006476:	2202      	movs	r2, #2
 8006478:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 800647c:	687b      	ldr	r3, [r7, #4]
 800647e:	681a      	ldr	r2, [r3, #0]
 8006480:	687b      	ldr	r3, [r7, #4]
 8006482:	3304      	adds	r3, #4
 8006484:	4619      	mov	r1, r3
 8006486:	4610      	mov	r0, r2
 8006488:	f000 fd50 	bl	8006f2c <TIM_Base_SetConfig>
 800648c:	687b      	ldr	r3, [r7, #4]
 800648e:	2201      	movs	r2, #1
 8006490:	f883 2046 	strb.w	r2, [r3, #70]	@ 0x46
 8006494:	687b      	ldr	r3, [r7, #4]
 8006496:	2201      	movs	r2, #1
 8006498:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 800649c:	687b      	ldr	r3, [r7, #4]
 800649e:	2201      	movs	r2, #1
 80064a0:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 80064a4:	687b      	ldr	r3, [r7, #4]
 80064a6:	2201      	movs	r2, #1
 80064a8:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 80064ac:	687b      	ldr	r3, [r7, #4]
 80064ae:	2201      	movs	r2, #1
 80064b0:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 80064b4:	687b      	ldr	r3, [r7, #4]
 80064b6:	2201      	movs	r2, #1
 80064b8:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 80064bc:	687b      	ldr	r3, [r7, #4]
 80064be:	2201      	movs	r2, #1
 80064c0:	f883 2043 	strb.w	r2, [r3, #67]	@ 0x43
 80064c4:	687b      	ldr	r3, [r7, #4]
 80064c6:	2201      	movs	r2, #1
 80064c8:	f883 2044 	strb.w	r2, [r3, #68]	@ 0x44
 80064cc:	687b      	ldr	r3, [r7, #4]
 80064ce:	2201      	movs	r2, #1
 80064d0:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45
 80064d4:	687b      	ldr	r3, [r7, #4]
 80064d6:	2201      	movs	r2, #1
 80064d8:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 80064dc:	2300      	movs	r3, #0
 80064de:	4618      	mov	r0, r3
 80064e0:	3708      	adds	r7, #8
 80064e2:	46bd      	mov	sp, r7
 80064e4:	bd80      	pop	{r7, pc}

080064e6 <HAL_TIM_OC_Init>:
 80064e6:	b580      	push	{r7, lr}
 80064e8:	b082      	sub	sp, #8
 80064ea:	af00      	add	r7, sp, #0
 80064ec:	6078      	str	r0, [r7, #4]
 80064ee:	687b      	ldr	r3, [r7, #4]
 80064f0:	2b00      	cmp	r3, #0
 80064f2:	d101      	bne.n	80064f8 <HAL_TIM_OC_Init+0x12>
 80064f4:	2301      	movs	r3, #1
 80064f6:	e041      	b.n	800657c <HAL_TIM_OC_Init+0x96>
 80064f8:	687b      	ldr	r3, [r7, #4]
 80064fa:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 80064fe:	b2db      	uxtb	r3, r3
 8006500:	2b00      	cmp	r3, #0
 8006502:	d106      	bne.n	8006512 <HAL_TIM_OC_Init+0x2c>
 8006504:	687b      	ldr	r3, [r7, #4]
 8006506:	2200      	movs	r2, #0
 8006508:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 800650c:	6878      	ldr	r0, [r7, #4]
 800650e:	f000 f839 	bl	8006584 <HAL_TIM_OC_MspInit>
 8006512:	687b      	ldr	r3, [r7, #4]
 8006514:	2202      	movs	r2, #2
 8006516:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 800651a:	687b      	ldr	r3, [r7, #4]
 800651c:	681a      	ldr	r2, [r3, #0]
 800651e:	687b      	ldr	r3, [r7, #4]
 8006520:	3304      	adds	r3, #4
 8006522:	4619      	mov	r1, r3
 8006524:	4610      	mov	r0, r2
 8006526:	f000 fd01 	bl	8006f2c <TIM_Base_SetConfig>
 800652a:	687b      	ldr	r3, [r7, #4]
 800652c:	2201      	movs	r2, #1
 800652e:	f883 2046 	strb.w	r2, [r3, #70]	@ 0x46
 8006532:	687b      	ldr	r3, [r7, #4]
 8006534:	2201      	movs	r2, #1
 8006536:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 800653a:	687b      	ldr	r3, [r7, #4]
 800653c:	2201      	movs	r2, #1
 800653e:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 8006542:	687b      	ldr	r3, [r7, #4]
 8006544:	2201      	movs	r2, #1
 8006546:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 800654a:	687b      	ldr	r3, [r7, #4]
 800654c:	2201      	movs	r2, #1
 800654e:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8006552:	687b      	ldr	r3, [r7, #4]
 8006554:	2201      	movs	r2, #1
 8006556:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 800655a:	687b      	ldr	r3, [r7, #4]
 800655c:	2201      	movs	r2, #1
 800655e:	f883 2043 	strb.w	r2, [r3, #67]	@ 0x43
 8006562:	687b      	ldr	r3, [r7, #4]
 8006564:	2201      	movs	r2, #1
 8006566:	f883 2044 	strb.w	r2, [r3, #68]	@ 0x44
 800656a:	687b      	ldr	r3, [r7, #4]
 800656c:	2201      	movs	r2, #1
 800656e:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45
 8006572:	687b      	ldr	r3, [r7, #4]
 8006574:	2201      	movs	r2, #1
 8006576:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 800657a:	2300      	movs	r3, #0
 800657c:	4618      	mov	r0, r3
 800657e:	3708      	adds	r7, #8
 8006580:	46bd      	mov	sp, r7
 8006582:	bd80      	pop	{r7, pc}

08006584 <HAL_TIM_OC_MspInit>:
 8006584:	b480      	push	{r7}
 8006586:	b083      	sub	sp, #12
 8006588:	af00      	add	r7, sp, #0
 800658a:	6078      	str	r0, [r7, #4]
 800658c:	bf00      	nop
 800658e:	370c      	adds	r7, #12
 8006590:	46bd      	mov	sp, r7
 8006592:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006596:	4770      	bx	lr

08006598 <HAL_TIM_PWM_Init>:
 8006598:	b580      	push	{r7, lr}
 800659a:	b082      	sub	sp, #8
 800659c:	af00      	add	r7, sp, #0
 800659e:	6078      	str	r0, [r7, #4]
 80065a0:	687b      	ldr	r3, [r7, #4]
 80065a2:	2b00      	cmp	r3, #0
 80065a4:	d101      	bne.n	80065aa <HAL_TIM_PWM_Init+0x12>
 80065a6:	2301      	movs	r3, #1
 80065a8:	e041      	b.n	800662e <HAL_TIM_PWM_Init+0x96>
 80065aa:	687b      	ldr	r3, [r7, #4]
 80065ac:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 80065b0:	b2db      	uxtb	r3, r3
 80065b2:	2b00      	cmp	r3, #0
 80065b4:	d106      	bne.n	80065c4 <HAL_TIM_PWM_Init+0x2c>
 80065b6:	687b      	ldr	r3, [r7, #4]
 80065b8:	2200      	movs	r2, #0
 80065ba:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 80065be:	6878      	ldr	r0, [r7, #4]
 80065c0:	f7fc fcc4 	bl	8002f4c <HAL_TIM_PWM_MspInit>
 80065c4:	687b      	ldr	r3, [r7, #4]
 80065c6:	2202      	movs	r2, #2
 80065c8:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 80065cc:	687b      	ldr	r3, [r7, #4]
 80065ce:	681a      	ldr	r2, [r3, #0]
 80065d0:	687b      	ldr	r3, [r7, #4]
 80065d2:	3304      	adds	r3, #4
 80065d4:	4619      	mov	r1, r3
 80065d6:	4610      	mov	r0, r2
 80065d8:	f000 fca8 	bl	8006f2c <TIM_Base_SetConfig>
 80065dc:	687b      	ldr	r3, [r7, #4]
 80065de:	2201      	movs	r2, #1
 80065e0:	f883 2046 	strb.w	r2, [r3, #70]	@ 0x46
 80065e4:	687b      	ldr	r3, [r7, #4]
 80065e6:	2201      	movs	r2, #1
 80065e8:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 80065ec:	687b      	ldr	r3, [r7, #4]
 80065ee:	2201      	movs	r2, #1
 80065f0:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 80065f4:	687b      	ldr	r3, [r7, #4]
 80065f6:	2201      	movs	r2, #1
 80065f8:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 80065fc:	687b      	ldr	r3, [r7, #4]
 80065fe:	2201      	movs	r2, #1
 8006600:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8006604:	687b      	ldr	r3, [r7, #4]
 8006606:	2201      	movs	r2, #1
 8006608:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 800660c:	687b      	ldr	r3, [r7, #4]
 800660e:	2201      	movs	r2, #1
 8006610:	f883 2043 	strb.w	r2, [r3, #67]	@ 0x43
 8006614:	687b      	ldr	r3, [r7, #4]
 8006616:	2201      	movs	r2, #1
 8006618:	f883 2044 	strb.w	r2, [r3, #68]	@ 0x44
 800661c:	687b      	ldr	r3, [r7, #4]
 800661e:	2201      	movs	r2, #1
 8006620:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45
 8006624:	687b      	ldr	r3, [r7, #4]
 8006626:	2201      	movs	r2, #1
 8006628:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 800662c:	2300      	movs	r3, #0
 800662e:	4618      	mov	r0, r3
 8006630:	3708      	adds	r7, #8
 8006632:	46bd      	mov	sp, r7
 8006634:	bd80      	pop	{r7, pc}
	...

08006638 <HAL_TIM_PWM_Start>:
 8006638:	b580      	push	{r7, lr}
 800663a:	b084      	sub	sp, #16
 800663c:	af00      	add	r7, sp, #0
 800663e:	6078      	str	r0, [r7, #4]
 8006640:	6039      	str	r1, [r7, #0]
 8006642:	683b      	ldr	r3, [r7, #0]
 8006644:	2b00      	cmp	r3, #0
 8006646:	d109      	bne.n	800665c <HAL_TIM_PWM_Start+0x24>
 8006648:	687b      	ldr	r3, [r7, #4]
 800664a:	f893 303e 	ldrb.w	r3, [r3, #62]	@ 0x3e
 800664e:	b2db      	uxtb	r3, r3
 8006650:	2b01      	cmp	r3, #1
 8006652:	bf14      	ite	ne
 8006654:	2301      	movne	r3, #1
 8006656:	2300      	moveq	r3, #0
 8006658:	b2db      	uxtb	r3, r3
 800665a:	e022      	b.n	80066a2 <HAL_TIM_PWM_Start+0x6a>
 800665c:	683b      	ldr	r3, [r7, #0]
 800665e:	2b04      	cmp	r3, #4
 8006660:	d109      	bne.n	8006676 <HAL_TIM_PWM_Start+0x3e>
 8006662:	687b      	ldr	r3, [r7, #4]
 8006664:	f893 303f 	ldrb.w	r3, [r3, #63]	@ 0x3f
 8006668:	b2db      	uxtb	r3, r3
 800666a:	2b01      	cmp	r3, #1
 800666c:	bf14      	ite	ne
 800666e:	2301      	movne	r3, #1
 8006670:	2300      	moveq	r3, #0
 8006672:	b2db      	uxtb	r3, r3
 8006674:	e015      	b.n	80066a2 <HAL_TIM_PWM_Start+0x6a>
 8006676:	683b      	ldr	r3, [r7, #0]
 8006678:	2b08      	cmp	r3, #8
 800667a:	d109      	bne.n	8006690 <HAL_TIM_PWM_Start+0x58>
 800667c:	687b      	ldr	r3, [r7, #4]
 800667e:	f893 3040 	ldrb.w	r3, [r3, #64]	@ 0x40
 8006682:	b2db      	uxtb	r3, r3
 8006684:	2b01      	cmp	r3, #1
 8006686:	bf14      	ite	ne
 8006688:	2301      	movne	r3, #1
 800668a:	2300      	moveq	r3, #0
 800668c:	b2db      	uxtb	r3, r3
 800668e:	e008      	b.n	80066a2 <HAL_TIM_PWM_Start+0x6a>
 8006690:	687b      	ldr	r3, [r7, #4]
 8006692:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 8006696:	b2db      	uxtb	r3, r3
 8006698:	2b01      	cmp	r3, #1
 800669a:	bf14      	ite	ne
 800669c:	2301      	movne	r3, #1
 800669e:	2300      	moveq	r3, #0
 80066a0:	b2db      	uxtb	r3, r3
 80066a2:	2b00      	cmp	r3, #0
 80066a4:	d001      	beq.n	80066aa <HAL_TIM_PWM_Start+0x72>
 80066a6:	2301      	movs	r3, #1
 80066a8:	e07c      	b.n	80067a4 <HAL_TIM_PWM_Start+0x16c>
 80066aa:	683b      	ldr	r3, [r7, #0]
 80066ac:	2b00      	cmp	r3, #0
 80066ae:	d104      	bne.n	80066ba <HAL_TIM_PWM_Start+0x82>
 80066b0:	687b      	ldr	r3, [r7, #4]
 80066b2:	2202      	movs	r2, #2
 80066b4:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 80066b8:	e013      	b.n	80066e2 <HAL_TIM_PWM_Start+0xaa>
 80066ba:	683b      	ldr	r3, [r7, #0]
 80066bc:	2b04      	cmp	r3, #4
 80066be:	d104      	bne.n	80066ca <HAL_TIM_PWM_Start+0x92>
 80066c0:	687b      	ldr	r3, [r7, #4]
 80066c2:	2202      	movs	r2, #2
 80066c4:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 80066c8:	e00b      	b.n	80066e2 <HAL_TIM_PWM_Start+0xaa>
 80066ca:	683b      	ldr	r3, [r7, #0]
 80066cc:	2b08      	cmp	r3, #8
 80066ce:	d104      	bne.n	80066da <HAL_TIM_PWM_Start+0xa2>
 80066d0:	687b      	ldr	r3, [r7, #4]
 80066d2:	2202      	movs	r2, #2
 80066d4:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 80066d8:	e003      	b.n	80066e2 <HAL_TIM_PWM_Start+0xaa>
 80066da:	687b      	ldr	r3, [r7, #4]
 80066dc:	2202      	movs	r2, #2
 80066de:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 80066e2:	687b      	ldr	r3, [r7, #4]
 80066e4:	681b      	ldr	r3, [r3, #0]
 80066e6:	2201      	movs	r2, #1
 80066e8:	6839      	ldr	r1, [r7, #0]
 80066ea:	4618      	mov	r0, r3
 80066ec:	f000 ff14 	bl	8007518 <TIM_CCxChannelCmd>
 80066f0:	687b      	ldr	r3, [r7, #4]
 80066f2:	681b      	ldr	r3, [r3, #0]
 80066f4:	4a2d      	ldr	r2, [pc, #180]	@ (80067ac <HAL_TIM_PWM_Start+0x174>)
 80066f6:	4293      	cmp	r3, r2
 80066f8:	d004      	beq.n	8006704 <HAL_TIM_PWM_Start+0xcc>
 80066fa:	687b      	ldr	r3, [r7, #4]
 80066fc:	681b      	ldr	r3, [r3, #0]
 80066fe:	4a2c      	ldr	r2, [pc, #176]	@ (80067b0 <HAL_TIM_PWM_Start+0x178>)
 8006700:	4293      	cmp	r3, r2
 8006702:	d101      	bne.n	8006708 <HAL_TIM_PWM_Start+0xd0>
 8006704:	2301      	movs	r3, #1
 8006706:	e000      	b.n	800670a <HAL_TIM_PWM_Start+0xd2>
 8006708:	2300      	movs	r3, #0
 800670a:	2b00      	cmp	r3, #0
 800670c:	d007      	beq.n	800671e <HAL_TIM_PWM_Start+0xe6>
 800670e:	687b      	ldr	r3, [r7, #4]
 8006710:	681b      	ldr	r3, [r3, #0]
 8006712:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 8006714:	687b      	ldr	r3, [r7, #4]
 8006716:	681b      	ldr	r3, [r3, #0]
 8006718:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
 800671c:	645a      	str	r2, [r3, #68]	@ 0x44
 800671e:	687b      	ldr	r3, [r7, #4]
 8006720:	681b      	ldr	r3, [r3, #0]
 8006722:	4a22      	ldr	r2, [pc, #136]	@ (80067ac <HAL_TIM_PWM_Start+0x174>)
 8006724:	4293      	cmp	r3, r2
 8006726:	d022      	beq.n	800676e <HAL_TIM_PWM_Start+0x136>
 8006728:	687b      	ldr	r3, [r7, #4]
 800672a:	681b      	ldr	r3, [r3, #0]
 800672c:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8006730:	d01d      	beq.n	800676e <HAL_TIM_PWM_Start+0x136>
 8006732:	687b      	ldr	r3, [r7, #4]
 8006734:	681b      	ldr	r3, [r3, #0]
 8006736:	4a1f      	ldr	r2, [pc, #124]	@ (80067b4 <HAL_TIM_PWM_Start+0x17c>)
 8006738:	4293      	cmp	r3, r2
 800673a:	d018      	beq.n	800676e <HAL_TIM_PWM_Start+0x136>
 800673c:	687b      	ldr	r3, [r7, #4]
 800673e:	681b      	ldr	r3, [r3, #0]
 8006740:	4a1d      	ldr	r2, [pc, #116]	@ (80067b8 <HAL_TIM_PWM_Start+0x180>)
 8006742:	4293      	cmp	r3, r2
 8006744:	d013      	beq.n	800676e <HAL_TIM_PWM_Start+0x136>
 8006746:	687b      	ldr	r3, [r7, #4]
 8006748:	681b      	ldr	r3, [r3, #0]
 800674a:	4a1c      	ldr	r2, [pc, #112]	@ (80067bc <HAL_TIM_PWM_Start+0x184>)
 800674c:	4293      	cmp	r3, r2
 800674e:	d00e      	beq.n	800676e <HAL_TIM_PWM_Start+0x136>
 8006750:	687b      	ldr	r3, [r7, #4]
 8006752:	681b      	ldr	r3, [r3, #0]
 8006754:	4a16      	ldr	r2, [pc, #88]	@ (80067b0 <HAL_TIM_PWM_Start+0x178>)
 8006756:	4293      	cmp	r3, r2
 8006758:	d009      	beq.n	800676e <HAL_TIM_PWM_Start+0x136>
 800675a:	687b      	ldr	r3, [r7, #4]
 800675c:	681b      	ldr	r3, [r3, #0]
 800675e:	4a18      	ldr	r2, [pc, #96]	@ (80067c0 <HAL_TIM_PWM_Start+0x188>)
 8006760:	4293      	cmp	r3, r2
 8006762:	d004      	beq.n	800676e <HAL_TIM_PWM_Start+0x136>
 8006764:	687b      	ldr	r3, [r7, #4]
 8006766:	681b      	ldr	r3, [r3, #0]
 8006768:	4a16      	ldr	r2, [pc, #88]	@ (80067c4 <HAL_TIM_PWM_Start+0x18c>)
 800676a:	4293      	cmp	r3, r2
 800676c:	d111      	bne.n	8006792 <HAL_TIM_PWM_Start+0x15a>
 800676e:	687b      	ldr	r3, [r7, #4]
 8006770:	681b      	ldr	r3, [r3, #0]
 8006772:	689b      	ldr	r3, [r3, #8]
 8006774:	f003 0307 	and.w	r3, r3, #7
 8006778:	60fb      	str	r3, [r7, #12]
 800677a:	68fb      	ldr	r3, [r7, #12]
 800677c:	2b06      	cmp	r3, #6
 800677e:	d010      	beq.n	80067a2 <HAL_TIM_PWM_Start+0x16a>
 8006780:	687b      	ldr	r3, [r7, #4]
 8006782:	681b      	ldr	r3, [r3, #0]
 8006784:	681a      	ldr	r2, [r3, #0]
 8006786:	687b      	ldr	r3, [r7, #4]
 8006788:	681b      	ldr	r3, [r3, #0]
 800678a:	f042 0201 	orr.w	r2, r2, #1
 800678e:	601a      	str	r2, [r3, #0]
 8006790:	e007      	b.n	80067a2 <HAL_TIM_PWM_Start+0x16a>
 8006792:	687b      	ldr	r3, [r7, #4]
 8006794:	681b      	ldr	r3, [r3, #0]
 8006796:	681a      	ldr	r2, [r3, #0]
 8006798:	687b      	ldr	r3, [r7, #4]
 800679a:	681b      	ldr	r3, [r3, #0]
 800679c:	f042 0201 	orr.w	r2, r2, #1
 80067a0:	601a      	str	r2, [r3, #0]
 80067a2:	2300      	movs	r3, #0
 80067a4:	4618      	mov	r0, r3
 80067a6:	3710      	adds	r7, #16
 80067a8:	46bd      	mov	sp, r7
 80067aa:	bd80      	pop	{r7, pc}
 80067ac:	40010000 	.word	0x40010000
 80067b0:	40010400 	.word	0x40010400
 80067b4:	40000400 	.word	0x40000400
 80067b8:	40000800 	.word	0x40000800
 80067bc:	40000c00 	.word	0x40000c00
 80067c0:	40014000 	.word	0x40014000
 80067c4:	40001800 	.word	0x40001800

080067c8 <HAL_TIM_Encoder_Init>:
 80067c8:	b580      	push	{r7, lr}
 80067ca:	b086      	sub	sp, #24
 80067cc:	af00      	add	r7, sp, #0
 80067ce:	6078      	str	r0, [r7, #4]
 80067d0:	6039      	str	r1, [r7, #0]
 80067d2:	687b      	ldr	r3, [r7, #4]
 80067d4:	2b00      	cmp	r3, #0
 80067d6:	d101      	bne.n	80067dc <HAL_TIM_Encoder_Init+0x14>
 80067d8:	2301      	movs	r3, #1
 80067da:	e097      	b.n	800690c <HAL_TIM_Encoder_Init+0x144>
 80067dc:	687b      	ldr	r3, [r7, #4]
 80067de:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 80067e2:	b2db      	uxtb	r3, r3
 80067e4:	2b00      	cmp	r3, #0
 80067e6:	d106      	bne.n	80067f6 <HAL_TIM_Encoder_Init+0x2e>
 80067e8:	687b      	ldr	r3, [r7, #4]
 80067ea:	2200      	movs	r2, #0
 80067ec:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 80067f0:	6878      	ldr	r0, [r7, #4]
 80067f2:	f7fc fc29 	bl	8003048 <HAL_TIM_Encoder_MspInit>
 80067f6:	687b      	ldr	r3, [r7, #4]
 80067f8:	2202      	movs	r2, #2
 80067fa:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 80067fe:	687b      	ldr	r3, [r7, #4]
 8006800:	681b      	ldr	r3, [r3, #0]
 8006802:	689b      	ldr	r3, [r3, #8]
 8006804:	687a      	ldr	r2, [r7, #4]
 8006806:	6812      	ldr	r2, [r2, #0]
 8006808:	f423 4380 	bic.w	r3, r3, #16384	@ 0x4000
 800680c:	f023 0307 	bic.w	r3, r3, #7
 8006810:	6093      	str	r3, [r2, #8]
 8006812:	687b      	ldr	r3, [r7, #4]
 8006814:	681a      	ldr	r2, [r3, #0]
 8006816:	687b      	ldr	r3, [r7, #4]
 8006818:	3304      	adds	r3, #4
 800681a:	4619      	mov	r1, r3
 800681c:	4610      	mov	r0, r2
 800681e:	f000 fb85 	bl	8006f2c <TIM_Base_SetConfig>
 8006822:	687b      	ldr	r3, [r7, #4]
 8006824:	681b      	ldr	r3, [r3, #0]
 8006826:	689b      	ldr	r3, [r3, #8]
 8006828:	617b      	str	r3, [r7, #20]
 800682a:	687b      	ldr	r3, [r7, #4]
 800682c:	681b      	ldr	r3, [r3, #0]
 800682e:	699b      	ldr	r3, [r3, #24]
 8006830:	613b      	str	r3, [r7, #16]
 8006832:	687b      	ldr	r3, [r7, #4]
 8006834:	681b      	ldr	r3, [r3, #0]
 8006836:	6a1b      	ldr	r3, [r3, #32]
 8006838:	60fb      	str	r3, [r7, #12]
 800683a:	683b      	ldr	r3, [r7, #0]
 800683c:	681b      	ldr	r3, [r3, #0]
 800683e:	697a      	ldr	r2, [r7, #20]
 8006840:	4313      	orrs	r3, r2
 8006842:	617b      	str	r3, [r7, #20]
 8006844:	693b      	ldr	r3, [r7, #16]
 8006846:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 800684a:	f023 0303 	bic.w	r3, r3, #3
 800684e:	613b      	str	r3, [r7, #16]
 8006850:	683b      	ldr	r3, [r7, #0]
 8006852:	689a      	ldr	r2, [r3, #8]
 8006854:	683b      	ldr	r3, [r7, #0]
 8006856:	699b      	ldr	r3, [r3, #24]
 8006858:	021b      	lsls	r3, r3, #8
 800685a:	4313      	orrs	r3, r2
 800685c:	693a      	ldr	r2, [r7, #16]
 800685e:	4313      	orrs	r3, r2
 8006860:	613b      	str	r3, [r7, #16]
 8006862:	693b      	ldr	r3, [r7, #16]
 8006864:	f423 6340 	bic.w	r3, r3, #3072	@ 0xc00
 8006868:	f023 030c 	bic.w	r3, r3, #12
 800686c:	613b      	str	r3, [r7, #16]
 800686e:	693b      	ldr	r3, [r7, #16]
 8006870:	f423 4370 	bic.w	r3, r3, #61440	@ 0xf000
 8006874:	f023 03f0 	bic.w	r3, r3, #240	@ 0xf0
 8006878:	613b      	str	r3, [r7, #16]
 800687a:	683b      	ldr	r3, [r7, #0]
 800687c:	68da      	ldr	r2, [r3, #12]
 800687e:	683b      	ldr	r3, [r7, #0]
 8006880:	69db      	ldr	r3, [r3, #28]
 8006882:	021b      	lsls	r3, r3, #8
 8006884:	4313      	orrs	r3, r2
 8006886:	693a      	ldr	r2, [r7, #16]
 8006888:	4313      	orrs	r3, r2
 800688a:	613b      	str	r3, [r7, #16]
 800688c:	683b      	ldr	r3, [r7, #0]
 800688e:	691b      	ldr	r3, [r3, #16]
 8006890:	011a      	lsls	r2, r3, #4
 8006892:	683b      	ldr	r3, [r7, #0]
 8006894:	6a1b      	ldr	r3, [r3, #32]
 8006896:	031b      	lsls	r3, r3, #12
 8006898:	4313      	orrs	r3, r2
 800689a:	693a      	ldr	r2, [r7, #16]
 800689c:	4313      	orrs	r3, r2
 800689e:	613b      	str	r3, [r7, #16]
 80068a0:	68fb      	ldr	r3, [r7, #12]
 80068a2:	f023 0322 	bic.w	r3, r3, #34	@ 0x22
 80068a6:	60fb      	str	r3, [r7, #12]
 80068a8:	68fb      	ldr	r3, [r7, #12]
 80068aa:	f023 0388 	bic.w	r3, r3, #136	@ 0x88
 80068ae:	60fb      	str	r3, [r7, #12]
 80068b0:	683b      	ldr	r3, [r7, #0]
 80068b2:	685a      	ldr	r2, [r3, #4]
 80068b4:	683b      	ldr	r3, [r7, #0]
 80068b6:	695b      	ldr	r3, [r3, #20]
 80068b8:	011b      	lsls	r3, r3, #4
 80068ba:	4313      	orrs	r3, r2
 80068bc:	68fa      	ldr	r2, [r7, #12]
 80068be:	4313      	orrs	r3, r2
 80068c0:	60fb      	str	r3, [r7, #12]
 80068c2:	687b      	ldr	r3, [r7, #4]
 80068c4:	681b      	ldr	r3, [r3, #0]
 80068c6:	697a      	ldr	r2, [r7, #20]
 80068c8:	609a      	str	r2, [r3, #8]
 80068ca:	687b      	ldr	r3, [r7, #4]
 80068cc:	681b      	ldr	r3, [r3, #0]
 80068ce:	693a      	ldr	r2, [r7, #16]
 80068d0:	619a      	str	r2, [r3, #24]
 80068d2:	687b      	ldr	r3, [r7, #4]
 80068d4:	681b      	ldr	r3, [r3, #0]
 80068d6:	68fa      	ldr	r2, [r7, #12]
 80068d8:	621a      	str	r2, [r3, #32]
 80068da:	687b      	ldr	r3, [r7, #4]
 80068dc:	2201      	movs	r2, #1
 80068de:	f883 2046 	strb.w	r2, [r3, #70]	@ 0x46
 80068e2:	687b      	ldr	r3, [r7, #4]
 80068e4:	2201      	movs	r2, #1
 80068e6:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 80068ea:	687b      	ldr	r3, [r7, #4]
 80068ec:	2201      	movs	r2, #1
 80068ee:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 80068f2:	687b      	ldr	r3, [r7, #4]
 80068f4:	2201      	movs	r2, #1
 80068f6:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 80068fa:	687b      	ldr	r3, [r7, #4]
 80068fc:	2201      	movs	r2, #1
 80068fe:	f883 2043 	strb.w	r2, [r3, #67]	@ 0x43
 8006902:	687b      	ldr	r3, [r7, #4]
 8006904:	2201      	movs	r2, #1
 8006906:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 800690a:	2300      	movs	r3, #0
 800690c:	4618      	mov	r0, r3
 800690e:	3718      	adds	r7, #24
 8006910:	46bd      	mov	sp, r7
 8006912:	bd80      	pop	{r7, pc}

08006914 <HAL_TIM_Encoder_Start>:
 8006914:	b580      	push	{r7, lr}
 8006916:	b084      	sub	sp, #16
 8006918:	af00      	add	r7, sp, #0
 800691a:	6078      	str	r0, [r7, #4]
 800691c:	6039      	str	r1, [r7, #0]
 800691e:	687b      	ldr	r3, [r7, #4]
 8006920:	f893 303e 	ldrb.w	r3, [r3, #62]	@ 0x3e
 8006924:	73fb      	strb	r3, [r7, #15]
 8006926:	687b      	ldr	r3, [r7, #4]
 8006928:	f893 303f 	ldrb.w	r3, [r3, #63]	@ 0x3f
 800692c:	73bb      	strb	r3, [r7, #14]
 800692e:	687b      	ldr	r3, [r7, #4]
 8006930:	f893 3042 	ldrb.w	r3, [r3, #66]	@ 0x42
 8006934:	737b      	strb	r3, [r7, #13]
 8006936:	687b      	ldr	r3, [r7, #4]
 8006938:	f893 3043 	ldrb.w	r3, [r3, #67]	@ 0x43
 800693c:	733b      	strb	r3, [r7, #12]
 800693e:	683b      	ldr	r3, [r7, #0]
 8006940:	2b00      	cmp	r3, #0
 8006942:	d110      	bne.n	8006966 <HAL_TIM_Encoder_Start+0x52>
 8006944:	7bfb      	ldrb	r3, [r7, #15]
 8006946:	2b01      	cmp	r3, #1
 8006948:	d102      	bne.n	8006950 <HAL_TIM_Encoder_Start+0x3c>
 800694a:	7b7b      	ldrb	r3, [r7, #13]
 800694c:	2b01      	cmp	r3, #1
 800694e:	d001      	beq.n	8006954 <HAL_TIM_Encoder_Start+0x40>
 8006950:	2301      	movs	r3, #1
 8006952:	e069      	b.n	8006a28 <HAL_TIM_Encoder_Start+0x114>
 8006954:	687b      	ldr	r3, [r7, #4]
 8006956:	2202      	movs	r2, #2
 8006958:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 800695c:	687b      	ldr	r3, [r7, #4]
 800695e:	2202      	movs	r2, #2
 8006960:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8006964:	e031      	b.n	80069ca <HAL_TIM_Encoder_Start+0xb6>
 8006966:	683b      	ldr	r3, [r7, #0]
 8006968:	2b04      	cmp	r3, #4
 800696a:	d110      	bne.n	800698e <HAL_TIM_Encoder_Start+0x7a>
 800696c:	7bbb      	ldrb	r3, [r7, #14]
 800696e:	2b01      	cmp	r3, #1
 8006970:	d102      	bne.n	8006978 <HAL_TIM_Encoder_Start+0x64>
 8006972:	7b3b      	ldrb	r3, [r7, #12]
 8006974:	2b01      	cmp	r3, #1
 8006976:	d001      	beq.n	800697c <HAL_TIM_Encoder_Start+0x68>
 8006978:	2301      	movs	r3, #1
 800697a:	e055      	b.n	8006a28 <HAL_TIM_Encoder_Start+0x114>
 800697c:	687b      	ldr	r3, [r7, #4]
 800697e:	2202      	movs	r2, #2
 8006980:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 8006984:	687b      	ldr	r3, [r7, #4]
 8006986:	2202      	movs	r2, #2
 8006988:	f883 2043 	strb.w	r2, [r3, #67]	@ 0x43
 800698c:	e01d      	b.n	80069ca <HAL_TIM_Encoder_Start+0xb6>
 800698e:	7bfb      	ldrb	r3, [r7, #15]
 8006990:	2b01      	cmp	r3, #1
 8006992:	d108      	bne.n	80069a6 <HAL_TIM_Encoder_Start+0x92>
 8006994:	7bbb      	ldrb	r3, [r7, #14]
 8006996:	2b01      	cmp	r3, #1
 8006998:	d105      	bne.n	80069a6 <HAL_TIM_Encoder_Start+0x92>
 800699a:	7b7b      	ldrb	r3, [r7, #13]
 800699c:	2b01      	cmp	r3, #1
 800699e:	d102      	bne.n	80069a6 <HAL_TIM_Encoder_Start+0x92>
 80069a0:	7b3b      	ldrb	r3, [r7, #12]
 80069a2:	2b01      	cmp	r3, #1
 80069a4:	d001      	beq.n	80069aa <HAL_TIM_Encoder_Start+0x96>
 80069a6:	2301      	movs	r3, #1
 80069a8:	e03e      	b.n	8006a28 <HAL_TIM_Encoder_Start+0x114>
 80069aa:	687b      	ldr	r3, [r7, #4]
 80069ac:	2202      	movs	r2, #2
 80069ae:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 80069b2:	687b      	ldr	r3, [r7, #4]
 80069b4:	2202      	movs	r2, #2
 80069b6:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 80069ba:	687b      	ldr	r3, [r7, #4]
 80069bc:	2202      	movs	r2, #2
 80069be:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 80069c2:	687b      	ldr	r3, [r7, #4]
 80069c4:	2202      	movs	r2, #2
 80069c6:	f883 2043 	strb.w	r2, [r3, #67]	@ 0x43
 80069ca:	683b      	ldr	r3, [r7, #0]
 80069cc:	2b00      	cmp	r3, #0
 80069ce:	d003      	beq.n	80069d8 <HAL_TIM_Encoder_Start+0xc4>
 80069d0:	683b      	ldr	r3, [r7, #0]
 80069d2:	2b04      	cmp	r3, #4
 80069d4:	d008      	beq.n	80069e8 <HAL_TIM_Encoder_Start+0xd4>
 80069d6:	e00f      	b.n	80069f8 <HAL_TIM_Encoder_Start+0xe4>
 80069d8:	687b      	ldr	r3, [r7, #4]
 80069da:	681b      	ldr	r3, [r3, #0]
 80069dc:	2201      	movs	r2, #1
 80069de:	2100      	movs	r1, #0
 80069e0:	4618      	mov	r0, r3
 80069e2:	f000 fd99 	bl	8007518 <TIM_CCxChannelCmd>
 80069e6:	e016      	b.n	8006a16 <HAL_TIM_Encoder_Start+0x102>
 80069e8:	687b      	ldr	r3, [r7, #4]
 80069ea:	681b      	ldr	r3, [r3, #0]
 80069ec:	2201      	movs	r2, #1
 80069ee:	2104      	movs	r1, #4
 80069f0:	4618      	mov	r0, r3
 80069f2:	f000 fd91 	bl	8007518 <TIM_CCxChannelCmd>
 80069f6:	e00e      	b.n	8006a16 <HAL_TIM_Encoder_Start+0x102>
 80069f8:	687b      	ldr	r3, [r7, #4]
 80069fa:	681b      	ldr	r3, [r3, #0]
 80069fc:	2201      	movs	r2, #1
 80069fe:	2100      	movs	r1, #0
 8006a00:	4618      	mov	r0, r3
 8006a02:	f000 fd89 	bl	8007518 <TIM_CCxChannelCmd>
 8006a06:	687b      	ldr	r3, [r7, #4]
 8006a08:	681b      	ldr	r3, [r3, #0]
 8006a0a:	2201      	movs	r2, #1
 8006a0c:	2104      	movs	r1, #4
 8006a0e:	4618      	mov	r0, r3
 8006a10:	f000 fd82 	bl	8007518 <TIM_CCxChannelCmd>
 8006a14:	bf00      	nop
 8006a16:	687b      	ldr	r3, [r7, #4]
 8006a18:	681b      	ldr	r3, [r3, #0]
 8006a1a:	681a      	ldr	r2, [r3, #0]
 8006a1c:	687b      	ldr	r3, [r7, #4]
 8006a1e:	681b      	ldr	r3, [r3, #0]
 8006a20:	f042 0201 	orr.w	r2, r2, #1
 8006a24:	601a      	str	r2, [r3, #0]
 8006a26:	2300      	movs	r3, #0
 8006a28:	4618      	mov	r0, r3
 8006a2a:	3710      	adds	r7, #16
 8006a2c:	46bd      	mov	sp, r7
 8006a2e:	bd80      	pop	{r7, pc}

08006a30 <HAL_TIM_Encoder_Stop>:
 8006a30:	b580      	push	{r7, lr}
 8006a32:	b082      	sub	sp, #8
 8006a34:	af00      	add	r7, sp, #0
 8006a36:	6078      	str	r0, [r7, #4]
 8006a38:	6039      	str	r1, [r7, #0]
 8006a3a:	683b      	ldr	r3, [r7, #0]
 8006a3c:	2b00      	cmp	r3, #0
 8006a3e:	d003      	beq.n	8006a48 <HAL_TIM_Encoder_Stop+0x18>
 8006a40:	683b      	ldr	r3, [r7, #0]
 8006a42:	2b04      	cmp	r3, #4
 8006a44:	d008      	beq.n	8006a58 <HAL_TIM_Encoder_Stop+0x28>
 8006a46:	e00f      	b.n	8006a68 <HAL_TIM_Encoder_Stop+0x38>
 8006a48:	687b      	ldr	r3, [r7, #4]
 8006a4a:	681b      	ldr	r3, [r3, #0]
 8006a4c:	2200      	movs	r2, #0
 8006a4e:	2100      	movs	r1, #0
 8006a50:	4618      	mov	r0, r3
 8006a52:	f000 fd61 	bl	8007518 <TIM_CCxChannelCmd>
 8006a56:	e016      	b.n	8006a86 <HAL_TIM_Encoder_Stop+0x56>
 8006a58:	687b      	ldr	r3, [r7, #4]
 8006a5a:	681b      	ldr	r3, [r3, #0]
 8006a5c:	2200      	movs	r2, #0
 8006a5e:	2104      	movs	r1, #4
 8006a60:	4618      	mov	r0, r3
 8006a62:	f000 fd59 	bl	8007518 <TIM_CCxChannelCmd>
 8006a66:	e00e      	b.n	8006a86 <HAL_TIM_Encoder_Stop+0x56>
 8006a68:	687b      	ldr	r3, [r7, #4]
 8006a6a:	681b      	ldr	r3, [r3, #0]
 8006a6c:	2200      	movs	r2, #0
 8006a6e:	2100      	movs	r1, #0
 8006a70:	4618      	mov	r0, r3
 8006a72:	f000 fd51 	bl	8007518 <TIM_CCxChannelCmd>
 8006a76:	687b      	ldr	r3, [r7, #4]
 8006a78:	681b      	ldr	r3, [r3, #0]
 8006a7a:	2200      	movs	r2, #0
 8006a7c:	2104      	movs	r1, #4
 8006a7e:	4618      	mov	r0, r3
 8006a80:	f000 fd4a 	bl	8007518 <TIM_CCxChannelCmd>
 8006a84:	bf00      	nop
 8006a86:	687b      	ldr	r3, [r7, #4]
 8006a88:	681b      	ldr	r3, [r3, #0]
 8006a8a:	6a1a      	ldr	r2, [r3, #32]
 8006a8c:	f241 1311 	movw	r3, #4369	@ 0x1111
 8006a90:	4013      	ands	r3, r2
 8006a92:	2b00      	cmp	r3, #0
 8006a94:	d10f      	bne.n	8006ab6 <HAL_TIM_Encoder_Stop+0x86>
 8006a96:	687b      	ldr	r3, [r7, #4]
 8006a98:	681b      	ldr	r3, [r3, #0]
 8006a9a:	6a1a      	ldr	r2, [r3, #32]
 8006a9c:	f240 4344 	movw	r3, #1092	@ 0x444
 8006aa0:	4013      	ands	r3, r2
 8006aa2:	2b00      	cmp	r3, #0
 8006aa4:	d107      	bne.n	8006ab6 <HAL_TIM_Encoder_Stop+0x86>
 8006aa6:	687b      	ldr	r3, [r7, #4]
 8006aa8:	681b      	ldr	r3, [r3, #0]
 8006aaa:	681a      	ldr	r2, [r3, #0]
 8006aac:	687b      	ldr	r3, [r7, #4]
 8006aae:	681b      	ldr	r3, [r3, #0]
 8006ab0:	f022 0201 	bic.w	r2, r2, #1
 8006ab4:	601a      	str	r2, [r3, #0]
 8006ab6:	683b      	ldr	r3, [r7, #0]
 8006ab8:	2b00      	cmp	r3, #0
 8006aba:	d002      	beq.n	8006ac2 <HAL_TIM_Encoder_Stop+0x92>
 8006abc:	683b      	ldr	r3, [r7, #0]
 8006abe:	2b04      	cmp	r3, #4
 8006ac0:	d138      	bne.n	8006b34 <HAL_TIM_Encoder_Stop+0x104>
 8006ac2:	683b      	ldr	r3, [r7, #0]
 8006ac4:	2b00      	cmp	r3, #0
 8006ac6:	d104      	bne.n	8006ad2 <HAL_TIM_Encoder_Stop+0xa2>
 8006ac8:	687b      	ldr	r3, [r7, #4]
 8006aca:	2201      	movs	r2, #1
 8006acc:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8006ad0:	e013      	b.n	8006afa <HAL_TIM_Encoder_Stop+0xca>
 8006ad2:	683b      	ldr	r3, [r7, #0]
 8006ad4:	2b04      	cmp	r3, #4
 8006ad6:	d104      	bne.n	8006ae2 <HAL_TIM_Encoder_Stop+0xb2>
 8006ad8:	687b      	ldr	r3, [r7, #4]
 8006ada:	2201      	movs	r2, #1
 8006adc:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 8006ae0:	e00b      	b.n	8006afa <HAL_TIM_Encoder_Stop+0xca>
 8006ae2:	683b      	ldr	r3, [r7, #0]
 8006ae4:	2b08      	cmp	r3, #8
 8006ae6:	d104      	bne.n	8006af2 <HAL_TIM_Encoder_Stop+0xc2>
 8006ae8:	687b      	ldr	r3, [r7, #4]
 8006aea:	2201      	movs	r2, #1
 8006aec:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8006af0:	e003      	b.n	8006afa <HAL_TIM_Encoder_Stop+0xca>
 8006af2:	687b      	ldr	r3, [r7, #4]
 8006af4:	2201      	movs	r2, #1
 8006af6:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8006afa:	683b      	ldr	r3, [r7, #0]
 8006afc:	2b00      	cmp	r3, #0
 8006afe:	d104      	bne.n	8006b0a <HAL_TIM_Encoder_Stop+0xda>
 8006b00:	687b      	ldr	r3, [r7, #4]
 8006b02:	2201      	movs	r2, #1
 8006b04:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8006b08:	e024      	b.n	8006b54 <HAL_TIM_Encoder_Stop+0x124>
 8006b0a:	683b      	ldr	r3, [r7, #0]
 8006b0c:	2b04      	cmp	r3, #4
 8006b0e:	d104      	bne.n	8006b1a <HAL_TIM_Encoder_Stop+0xea>
 8006b10:	687b      	ldr	r3, [r7, #4]
 8006b12:	2201      	movs	r2, #1
 8006b14:	f883 2043 	strb.w	r2, [r3, #67]	@ 0x43
 8006b18:	e01c      	b.n	8006b54 <HAL_TIM_Encoder_Stop+0x124>
 8006b1a:	683b      	ldr	r3, [r7, #0]
 8006b1c:	2b08      	cmp	r3, #8
 8006b1e:	d104      	bne.n	8006b2a <HAL_TIM_Encoder_Stop+0xfa>
 8006b20:	687b      	ldr	r3, [r7, #4]
 8006b22:	2201      	movs	r2, #1
 8006b24:	f883 2044 	strb.w	r2, [r3, #68]	@ 0x44
 8006b28:	e014      	b.n	8006b54 <HAL_TIM_Encoder_Stop+0x124>
 8006b2a:	687b      	ldr	r3, [r7, #4]
 8006b2c:	2201      	movs	r2, #1
 8006b2e:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45
 8006b32:	e00f      	b.n	8006b54 <HAL_TIM_Encoder_Stop+0x124>
 8006b34:	687b      	ldr	r3, [r7, #4]
 8006b36:	2201      	movs	r2, #1
 8006b38:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8006b3c:	687b      	ldr	r3, [r7, #4]
 8006b3e:	2201      	movs	r2, #1
 8006b40:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 8006b44:	687b      	ldr	r3, [r7, #4]
 8006b46:	2201      	movs	r2, #1
 8006b48:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8006b4c:	687b      	ldr	r3, [r7, #4]
 8006b4e:	2201      	movs	r2, #1
 8006b50:	f883 2043 	strb.w	r2, [r3, #67]	@ 0x43
 8006b54:	2300      	movs	r3, #0
 8006b56:	4618      	mov	r0, r3
 8006b58:	3708      	adds	r7, #8
 8006b5a:	46bd      	mov	sp, r7
 8006b5c:	bd80      	pop	{r7, pc}
	...

08006b60 <HAL_TIM_OC_ConfigChannel>:
 8006b60:	b580      	push	{r7, lr}
 8006b62:	b086      	sub	sp, #24
 8006b64:	af00      	add	r7, sp, #0
 8006b66:	60f8      	str	r0, [r7, #12]
 8006b68:	60b9      	str	r1, [r7, #8]
 8006b6a:	607a      	str	r2, [r7, #4]
 8006b6c:	2300      	movs	r3, #0
 8006b6e:	75fb      	strb	r3, [r7, #23]
 8006b70:	68fb      	ldr	r3, [r7, #12]
 8006b72:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 8006b76:	2b01      	cmp	r3, #1
 8006b78:	d101      	bne.n	8006b7e <HAL_TIM_OC_ConfigChannel+0x1e>
 8006b7a:	2302      	movs	r3, #2
 8006b7c:	e048      	b.n	8006c10 <HAL_TIM_OC_ConfigChannel+0xb0>
 8006b7e:	68fb      	ldr	r3, [r7, #12]
 8006b80:	2201      	movs	r2, #1
 8006b82:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8006b86:	687b      	ldr	r3, [r7, #4]
 8006b88:	2b0c      	cmp	r3, #12
 8006b8a:	d839      	bhi.n	8006c00 <HAL_TIM_OC_ConfigChannel+0xa0>
 8006b8c:	a201      	add	r2, pc, #4	@ (adr r2, 8006b94 <HAL_TIM_OC_ConfigChannel+0x34>)
 8006b8e:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8006b92:	bf00      	nop
 8006b94:	08006bc9 	.word	0x08006bc9
 8006b98:	08006c01 	.word	0x08006c01
 8006b9c:	08006c01 	.word	0x08006c01
 8006ba0:	08006c01 	.word	0x08006c01
 8006ba4:	08006bd7 	.word	0x08006bd7
 8006ba8:	08006c01 	.word	0x08006c01
 8006bac:	08006c01 	.word	0x08006c01
 8006bb0:	08006c01 	.word	0x08006c01
 8006bb4:	08006be5 	.word	0x08006be5
 8006bb8:	08006c01 	.word	0x08006c01
 8006bbc:	08006c01 	.word	0x08006c01
 8006bc0:	08006c01 	.word	0x08006c01
 8006bc4:	08006bf3 	.word	0x08006bf3
 8006bc8:	68fb      	ldr	r3, [r7, #12]
 8006bca:	681b      	ldr	r3, [r3, #0]
 8006bcc:	68b9      	ldr	r1, [r7, #8]
 8006bce:	4618      	mov	r0, r3
 8006bd0:	f000 fa58 	bl	8007084 <TIM_OC1_SetConfig>
 8006bd4:	e017      	b.n	8006c06 <HAL_TIM_OC_ConfigChannel+0xa6>
 8006bd6:	68fb      	ldr	r3, [r7, #12]
 8006bd8:	681b      	ldr	r3, [r3, #0]
 8006bda:	68b9      	ldr	r1, [r7, #8]
 8006bdc:	4618      	mov	r0, r3
 8006bde:	f000 fac1 	bl	8007164 <TIM_OC2_SetConfig>
 8006be2:	e010      	b.n	8006c06 <HAL_TIM_OC_ConfigChannel+0xa6>
 8006be4:	68fb      	ldr	r3, [r7, #12]
 8006be6:	681b      	ldr	r3, [r3, #0]
 8006be8:	68b9      	ldr	r1, [r7, #8]
 8006bea:	4618      	mov	r0, r3
 8006bec:	f000 fb30 	bl	8007250 <TIM_OC3_SetConfig>
 8006bf0:	e009      	b.n	8006c06 <HAL_TIM_OC_ConfigChannel+0xa6>
 8006bf2:	68fb      	ldr	r3, [r7, #12]
 8006bf4:	681b      	ldr	r3, [r3, #0]
 8006bf6:	68b9      	ldr	r1, [r7, #8]
 8006bf8:	4618      	mov	r0, r3
 8006bfa:	f000 fb9d 	bl	8007338 <TIM_OC4_SetConfig>
 8006bfe:	e002      	b.n	8006c06 <HAL_TIM_OC_ConfigChannel+0xa6>
 8006c00:	2301      	movs	r3, #1
 8006c02:	75fb      	strb	r3, [r7, #23]
 8006c04:	bf00      	nop
 8006c06:	68fb      	ldr	r3, [r7, #12]
 8006c08:	2200      	movs	r2, #0
 8006c0a:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8006c0e:	7dfb      	ldrb	r3, [r7, #23]
 8006c10:	4618      	mov	r0, r3
 8006c12:	3718      	adds	r7, #24
 8006c14:	46bd      	mov	sp, r7
 8006c16:	bd80      	pop	{r7, pc}

08006c18 <HAL_TIM_PWM_ConfigChannel>:
 8006c18:	b580      	push	{r7, lr}
 8006c1a:	b086      	sub	sp, #24
 8006c1c:	af00      	add	r7, sp, #0
 8006c1e:	60f8      	str	r0, [r7, #12]
 8006c20:	60b9      	str	r1, [r7, #8]
 8006c22:	607a      	str	r2, [r7, #4]
 8006c24:	2300      	movs	r3, #0
 8006c26:	75fb      	strb	r3, [r7, #23]
 8006c28:	68fb      	ldr	r3, [r7, #12]
 8006c2a:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 8006c2e:	2b01      	cmp	r3, #1
 8006c30:	d101      	bne.n	8006c36 <HAL_TIM_PWM_ConfigChannel+0x1e>
 8006c32:	2302      	movs	r3, #2
 8006c34:	e0ae      	b.n	8006d94 <HAL_TIM_PWM_ConfigChannel+0x17c>
 8006c36:	68fb      	ldr	r3, [r7, #12]
 8006c38:	2201      	movs	r2, #1
 8006c3a:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8006c3e:	687b      	ldr	r3, [r7, #4]
 8006c40:	2b0c      	cmp	r3, #12
 8006c42:	f200 809f 	bhi.w	8006d84 <HAL_TIM_PWM_ConfigChannel+0x16c>
 8006c46:	a201      	add	r2, pc, #4	@ (adr r2, 8006c4c <HAL_TIM_PWM_ConfigChannel+0x34>)
 8006c48:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8006c4c:	08006c81 	.word	0x08006c81
 8006c50:	08006d85 	.word	0x08006d85
 8006c54:	08006d85 	.word	0x08006d85
 8006c58:	08006d85 	.word	0x08006d85
 8006c5c:	08006cc1 	.word	0x08006cc1
 8006c60:	08006d85 	.word	0x08006d85
 8006c64:	08006d85 	.word	0x08006d85
 8006c68:	08006d85 	.word	0x08006d85
 8006c6c:	08006d03 	.word	0x08006d03
 8006c70:	08006d85 	.word	0x08006d85
 8006c74:	08006d85 	.word	0x08006d85
 8006c78:	08006d85 	.word	0x08006d85
 8006c7c:	08006d43 	.word	0x08006d43
 8006c80:	68fb      	ldr	r3, [r7, #12]
 8006c82:	681b      	ldr	r3, [r3, #0]
 8006c84:	68b9      	ldr	r1, [r7, #8]
 8006c86:	4618      	mov	r0, r3
 8006c88:	f000 f9fc 	bl	8007084 <TIM_OC1_SetConfig>
 8006c8c:	68fb      	ldr	r3, [r7, #12]
 8006c8e:	681b      	ldr	r3, [r3, #0]
 8006c90:	699a      	ldr	r2, [r3, #24]
 8006c92:	68fb      	ldr	r3, [r7, #12]
 8006c94:	681b      	ldr	r3, [r3, #0]
 8006c96:	f042 0208 	orr.w	r2, r2, #8
 8006c9a:	619a      	str	r2, [r3, #24]
 8006c9c:	68fb      	ldr	r3, [r7, #12]
 8006c9e:	681b      	ldr	r3, [r3, #0]
 8006ca0:	699a      	ldr	r2, [r3, #24]
 8006ca2:	68fb      	ldr	r3, [r7, #12]
 8006ca4:	681b      	ldr	r3, [r3, #0]
 8006ca6:	f022 0204 	bic.w	r2, r2, #4
 8006caa:	619a      	str	r2, [r3, #24]
 8006cac:	68fb      	ldr	r3, [r7, #12]
 8006cae:	681b      	ldr	r3, [r3, #0]
 8006cb0:	6999      	ldr	r1, [r3, #24]
 8006cb2:	68bb      	ldr	r3, [r7, #8]
 8006cb4:	691a      	ldr	r2, [r3, #16]
 8006cb6:	68fb      	ldr	r3, [r7, #12]
 8006cb8:	681b      	ldr	r3, [r3, #0]
 8006cba:	430a      	orrs	r2, r1
 8006cbc:	619a      	str	r2, [r3, #24]
 8006cbe:	e064      	b.n	8006d8a <HAL_TIM_PWM_ConfigChannel+0x172>
 8006cc0:	68fb      	ldr	r3, [r7, #12]
 8006cc2:	681b      	ldr	r3, [r3, #0]
 8006cc4:	68b9      	ldr	r1, [r7, #8]
 8006cc6:	4618      	mov	r0, r3
 8006cc8:	f000 fa4c 	bl	8007164 <TIM_OC2_SetConfig>
 8006ccc:	68fb      	ldr	r3, [r7, #12]
 8006cce:	681b      	ldr	r3, [r3, #0]
 8006cd0:	699a      	ldr	r2, [r3, #24]
 8006cd2:	68fb      	ldr	r3, [r7, #12]
 8006cd4:	681b      	ldr	r3, [r3, #0]
 8006cd6:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 8006cda:	619a      	str	r2, [r3, #24]
 8006cdc:	68fb      	ldr	r3, [r7, #12]
 8006cde:	681b      	ldr	r3, [r3, #0]
 8006ce0:	699a      	ldr	r2, [r3, #24]
 8006ce2:	68fb      	ldr	r3, [r7, #12]
 8006ce4:	681b      	ldr	r3, [r3, #0]
 8006ce6:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 8006cea:	619a      	str	r2, [r3, #24]
 8006cec:	68fb      	ldr	r3, [r7, #12]
 8006cee:	681b      	ldr	r3, [r3, #0]
 8006cf0:	6999      	ldr	r1, [r3, #24]
 8006cf2:	68bb      	ldr	r3, [r7, #8]
 8006cf4:	691b      	ldr	r3, [r3, #16]
 8006cf6:	021a      	lsls	r2, r3, #8
 8006cf8:	68fb      	ldr	r3, [r7, #12]
 8006cfa:	681b      	ldr	r3, [r3, #0]
 8006cfc:	430a      	orrs	r2, r1
 8006cfe:	619a      	str	r2, [r3, #24]
 8006d00:	e043      	b.n	8006d8a <HAL_TIM_PWM_ConfigChannel+0x172>
 8006d02:	68fb      	ldr	r3, [r7, #12]
 8006d04:	681b      	ldr	r3, [r3, #0]
 8006d06:	68b9      	ldr	r1, [r7, #8]
 8006d08:	4618      	mov	r0, r3
 8006d0a:	f000 faa1 	bl	8007250 <TIM_OC3_SetConfig>
 8006d0e:	68fb      	ldr	r3, [r7, #12]
 8006d10:	681b      	ldr	r3, [r3, #0]
 8006d12:	69da      	ldr	r2, [r3, #28]
 8006d14:	68fb      	ldr	r3, [r7, #12]
 8006d16:	681b      	ldr	r3, [r3, #0]
 8006d18:	f042 0208 	orr.w	r2, r2, #8
 8006d1c:	61da      	str	r2, [r3, #28]
 8006d1e:	68fb      	ldr	r3, [r7, #12]
 8006d20:	681b      	ldr	r3, [r3, #0]
 8006d22:	69da      	ldr	r2, [r3, #28]
 8006d24:	68fb      	ldr	r3, [r7, #12]
 8006d26:	681b      	ldr	r3, [r3, #0]
 8006d28:	f022 0204 	bic.w	r2, r2, #4
 8006d2c:	61da      	str	r2, [r3, #28]
 8006d2e:	68fb      	ldr	r3, [r7, #12]
 8006d30:	681b      	ldr	r3, [r3, #0]
 8006d32:	69d9      	ldr	r1, [r3, #28]
 8006d34:	68bb      	ldr	r3, [r7, #8]
 8006d36:	691a      	ldr	r2, [r3, #16]
 8006d38:	68fb      	ldr	r3, [r7, #12]
 8006d3a:	681b      	ldr	r3, [r3, #0]
 8006d3c:	430a      	orrs	r2, r1
 8006d3e:	61da      	str	r2, [r3, #28]
 8006d40:	e023      	b.n	8006d8a <HAL_TIM_PWM_ConfigChannel+0x172>
 8006d42:	68fb      	ldr	r3, [r7, #12]
 8006d44:	681b      	ldr	r3, [r3, #0]
 8006d46:	68b9      	ldr	r1, [r7, #8]
 8006d48:	4618      	mov	r0, r3
 8006d4a:	f000 faf5 	bl	8007338 <TIM_OC4_SetConfig>
 8006d4e:	68fb      	ldr	r3, [r7, #12]
 8006d50:	681b      	ldr	r3, [r3, #0]
 8006d52:	69da      	ldr	r2, [r3, #28]
 8006d54:	68fb      	ldr	r3, [r7, #12]
 8006d56:	681b      	ldr	r3, [r3, #0]
 8006d58:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 8006d5c:	61da      	str	r2, [r3, #28]
 8006d5e:	68fb      	ldr	r3, [r7, #12]
 8006d60:	681b      	ldr	r3, [r3, #0]
 8006d62:	69da      	ldr	r2, [r3, #28]
 8006d64:	68fb      	ldr	r3, [r7, #12]
 8006d66:	681b      	ldr	r3, [r3, #0]
 8006d68:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 8006d6c:	61da      	str	r2, [r3, #28]
 8006d6e:	68fb      	ldr	r3, [r7, #12]
 8006d70:	681b      	ldr	r3, [r3, #0]
 8006d72:	69d9      	ldr	r1, [r3, #28]
 8006d74:	68bb      	ldr	r3, [r7, #8]
 8006d76:	691b      	ldr	r3, [r3, #16]
 8006d78:	021a      	lsls	r2, r3, #8
 8006d7a:	68fb      	ldr	r3, [r7, #12]
 8006d7c:	681b      	ldr	r3, [r3, #0]
 8006d7e:	430a      	orrs	r2, r1
 8006d80:	61da      	str	r2, [r3, #28]
 8006d82:	e002      	b.n	8006d8a <HAL_TIM_PWM_ConfigChannel+0x172>
 8006d84:	2301      	movs	r3, #1
 8006d86:	75fb      	strb	r3, [r7, #23]
 8006d88:	bf00      	nop
 8006d8a:	68fb      	ldr	r3, [r7, #12]
 8006d8c:	2200      	movs	r2, #0
 8006d8e:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8006d92:	7dfb      	ldrb	r3, [r7, #23]
 8006d94:	4618      	mov	r0, r3
 8006d96:	3718      	adds	r7, #24
 8006d98:	46bd      	mov	sp, r7
 8006d9a:	bd80      	pop	{r7, pc}

08006d9c <HAL_TIM_ConfigClockSource>:
 8006d9c:	b580      	push	{r7, lr}
 8006d9e:	b084      	sub	sp, #16
 8006da0:	af00      	add	r7, sp, #0
 8006da2:	6078      	str	r0, [r7, #4]
 8006da4:	6039      	str	r1, [r7, #0]
 8006da6:	2300      	movs	r3, #0
 8006da8:	73fb      	strb	r3, [r7, #15]
 8006daa:	687b      	ldr	r3, [r7, #4]
 8006dac:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 8006db0:	2b01      	cmp	r3, #1
 8006db2:	d101      	bne.n	8006db8 <HAL_TIM_ConfigClockSource+0x1c>
 8006db4:	2302      	movs	r3, #2
 8006db6:	e0b4      	b.n	8006f22 <HAL_TIM_ConfigClockSource+0x186>
 8006db8:	687b      	ldr	r3, [r7, #4]
 8006dba:	2201      	movs	r2, #1
 8006dbc:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8006dc0:	687b      	ldr	r3, [r7, #4]
 8006dc2:	2202      	movs	r2, #2
 8006dc4:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8006dc8:	687b      	ldr	r3, [r7, #4]
 8006dca:	681b      	ldr	r3, [r3, #0]
 8006dcc:	689b      	ldr	r3, [r3, #8]
 8006dce:	60bb      	str	r3, [r7, #8]
 8006dd0:	68bb      	ldr	r3, [r7, #8]
 8006dd2:	f023 0377 	bic.w	r3, r3, #119	@ 0x77
 8006dd6:	60bb      	str	r3, [r7, #8]
 8006dd8:	68bb      	ldr	r3, [r7, #8]
 8006dda:	f423 437f 	bic.w	r3, r3, #65280	@ 0xff00
 8006dde:	60bb      	str	r3, [r7, #8]
 8006de0:	687b      	ldr	r3, [r7, #4]
 8006de2:	681b      	ldr	r3, [r3, #0]
 8006de4:	68ba      	ldr	r2, [r7, #8]
 8006de6:	609a      	str	r2, [r3, #8]
 8006de8:	683b      	ldr	r3, [r7, #0]
 8006dea:	681b      	ldr	r3, [r3, #0]
 8006dec:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 8006df0:	d03e      	beq.n	8006e70 <HAL_TIM_ConfigClockSource+0xd4>
 8006df2:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 8006df6:	f200 8087 	bhi.w	8006f08 <HAL_TIM_ConfigClockSource+0x16c>
 8006dfa:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8006dfe:	f000 8086 	beq.w	8006f0e <HAL_TIM_ConfigClockSource+0x172>
 8006e02:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8006e06:	d87f      	bhi.n	8006f08 <HAL_TIM_ConfigClockSource+0x16c>
 8006e08:	2b70      	cmp	r3, #112	@ 0x70
 8006e0a:	d01a      	beq.n	8006e42 <HAL_TIM_ConfigClockSource+0xa6>
 8006e0c:	2b70      	cmp	r3, #112	@ 0x70
 8006e0e:	d87b      	bhi.n	8006f08 <HAL_TIM_ConfigClockSource+0x16c>
 8006e10:	2b60      	cmp	r3, #96	@ 0x60
 8006e12:	d050      	beq.n	8006eb6 <HAL_TIM_ConfigClockSource+0x11a>
 8006e14:	2b60      	cmp	r3, #96	@ 0x60
 8006e16:	d877      	bhi.n	8006f08 <HAL_TIM_ConfigClockSource+0x16c>
 8006e18:	2b50      	cmp	r3, #80	@ 0x50
 8006e1a:	d03c      	beq.n	8006e96 <HAL_TIM_ConfigClockSource+0xfa>
 8006e1c:	2b50      	cmp	r3, #80	@ 0x50
 8006e1e:	d873      	bhi.n	8006f08 <HAL_TIM_ConfigClockSource+0x16c>
 8006e20:	2b40      	cmp	r3, #64	@ 0x40
 8006e22:	d058      	beq.n	8006ed6 <HAL_TIM_ConfigClockSource+0x13a>
 8006e24:	2b40      	cmp	r3, #64	@ 0x40
 8006e26:	d86f      	bhi.n	8006f08 <HAL_TIM_ConfigClockSource+0x16c>
 8006e28:	2b30      	cmp	r3, #48	@ 0x30
 8006e2a:	d064      	beq.n	8006ef6 <HAL_TIM_ConfigClockSource+0x15a>
 8006e2c:	2b30      	cmp	r3, #48	@ 0x30
 8006e2e:	d86b      	bhi.n	8006f08 <HAL_TIM_ConfigClockSource+0x16c>
 8006e30:	2b20      	cmp	r3, #32
 8006e32:	d060      	beq.n	8006ef6 <HAL_TIM_ConfigClockSource+0x15a>
 8006e34:	2b20      	cmp	r3, #32
 8006e36:	d867      	bhi.n	8006f08 <HAL_TIM_ConfigClockSource+0x16c>
 8006e38:	2b00      	cmp	r3, #0
 8006e3a:	d05c      	beq.n	8006ef6 <HAL_TIM_ConfigClockSource+0x15a>
 8006e3c:	2b10      	cmp	r3, #16
 8006e3e:	d05a      	beq.n	8006ef6 <HAL_TIM_ConfigClockSource+0x15a>
 8006e40:	e062      	b.n	8006f08 <HAL_TIM_ConfigClockSource+0x16c>
 8006e42:	687b      	ldr	r3, [r7, #4]
 8006e44:	6818      	ldr	r0, [r3, #0]
 8006e46:	683b      	ldr	r3, [r7, #0]
 8006e48:	6899      	ldr	r1, [r3, #8]
 8006e4a:	683b      	ldr	r3, [r7, #0]
 8006e4c:	685a      	ldr	r2, [r3, #4]
 8006e4e:	683b      	ldr	r3, [r7, #0]
 8006e50:	68db      	ldr	r3, [r3, #12]
 8006e52:	f000 fb41 	bl	80074d8 <TIM_ETR_SetConfig>
 8006e56:	687b      	ldr	r3, [r7, #4]
 8006e58:	681b      	ldr	r3, [r3, #0]
 8006e5a:	689b      	ldr	r3, [r3, #8]
 8006e5c:	60bb      	str	r3, [r7, #8]
 8006e5e:	68bb      	ldr	r3, [r7, #8]
 8006e60:	f043 0377 	orr.w	r3, r3, #119	@ 0x77
 8006e64:	60bb      	str	r3, [r7, #8]
 8006e66:	687b      	ldr	r3, [r7, #4]
 8006e68:	681b      	ldr	r3, [r3, #0]
 8006e6a:	68ba      	ldr	r2, [r7, #8]
 8006e6c:	609a      	str	r2, [r3, #8]
 8006e6e:	e04f      	b.n	8006f10 <HAL_TIM_ConfigClockSource+0x174>
 8006e70:	687b      	ldr	r3, [r7, #4]
 8006e72:	6818      	ldr	r0, [r3, #0]
 8006e74:	683b      	ldr	r3, [r7, #0]
 8006e76:	6899      	ldr	r1, [r3, #8]
 8006e78:	683b      	ldr	r3, [r7, #0]
 8006e7a:	685a      	ldr	r2, [r3, #4]
 8006e7c:	683b      	ldr	r3, [r7, #0]
 8006e7e:	68db      	ldr	r3, [r3, #12]
 8006e80:	f000 fb2a 	bl	80074d8 <TIM_ETR_SetConfig>
 8006e84:	687b      	ldr	r3, [r7, #4]
 8006e86:	681b      	ldr	r3, [r3, #0]
 8006e88:	689a      	ldr	r2, [r3, #8]
 8006e8a:	687b      	ldr	r3, [r7, #4]
 8006e8c:	681b      	ldr	r3, [r3, #0]
 8006e8e:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
 8006e92:	609a      	str	r2, [r3, #8]
 8006e94:	e03c      	b.n	8006f10 <HAL_TIM_ConfigClockSource+0x174>
 8006e96:	687b      	ldr	r3, [r7, #4]
 8006e98:	6818      	ldr	r0, [r3, #0]
 8006e9a:	683b      	ldr	r3, [r7, #0]
 8006e9c:	6859      	ldr	r1, [r3, #4]
 8006e9e:	683b      	ldr	r3, [r7, #0]
 8006ea0:	68db      	ldr	r3, [r3, #12]
 8006ea2:	461a      	mov	r2, r3
 8006ea4:	f000 fa9e 	bl	80073e4 <TIM_TI1_ConfigInputStage>
 8006ea8:	687b      	ldr	r3, [r7, #4]
 8006eaa:	681b      	ldr	r3, [r3, #0]
 8006eac:	2150      	movs	r1, #80	@ 0x50
 8006eae:	4618      	mov	r0, r3
 8006eb0:	f000 faf7 	bl	80074a2 <TIM_ITRx_SetConfig>
 8006eb4:	e02c      	b.n	8006f10 <HAL_TIM_ConfigClockSource+0x174>
 8006eb6:	687b      	ldr	r3, [r7, #4]
 8006eb8:	6818      	ldr	r0, [r3, #0]
 8006eba:	683b      	ldr	r3, [r7, #0]
 8006ebc:	6859      	ldr	r1, [r3, #4]
 8006ebe:	683b      	ldr	r3, [r7, #0]
 8006ec0:	68db      	ldr	r3, [r3, #12]
 8006ec2:	461a      	mov	r2, r3
 8006ec4:	f000 fabd 	bl	8007442 <TIM_TI2_ConfigInputStage>
 8006ec8:	687b      	ldr	r3, [r7, #4]
 8006eca:	681b      	ldr	r3, [r3, #0]
 8006ecc:	2160      	movs	r1, #96	@ 0x60
 8006ece:	4618      	mov	r0, r3
 8006ed0:	f000 fae7 	bl	80074a2 <TIM_ITRx_SetConfig>
 8006ed4:	e01c      	b.n	8006f10 <HAL_TIM_ConfigClockSource+0x174>
 8006ed6:	687b      	ldr	r3, [r7, #4]
 8006ed8:	6818      	ldr	r0, [r3, #0]
 8006eda:	683b      	ldr	r3, [r7, #0]
 8006edc:	6859      	ldr	r1, [r3, #4]
 8006ede:	683b      	ldr	r3, [r7, #0]
 8006ee0:	68db      	ldr	r3, [r3, #12]
 8006ee2:	461a      	mov	r2, r3
 8006ee4:	f000 fa7e 	bl	80073e4 <TIM_TI1_ConfigInputStage>
 8006ee8:	687b      	ldr	r3, [r7, #4]
 8006eea:	681b      	ldr	r3, [r3, #0]
 8006eec:	2140      	movs	r1, #64	@ 0x40
 8006eee:	4618      	mov	r0, r3
 8006ef0:	f000 fad7 	bl	80074a2 <TIM_ITRx_SetConfig>
 8006ef4:	e00c      	b.n	8006f10 <HAL_TIM_ConfigClockSource+0x174>
 8006ef6:	687b      	ldr	r3, [r7, #4]
 8006ef8:	681a      	ldr	r2, [r3, #0]
 8006efa:	683b      	ldr	r3, [r7, #0]
 8006efc:	681b      	ldr	r3, [r3, #0]
 8006efe:	4619      	mov	r1, r3
 8006f00:	4610      	mov	r0, r2
 8006f02:	f000 face 	bl	80074a2 <TIM_ITRx_SetConfig>
 8006f06:	e003      	b.n	8006f10 <HAL_TIM_ConfigClockSource+0x174>
 8006f08:	2301      	movs	r3, #1
 8006f0a:	73fb      	strb	r3, [r7, #15]
 8006f0c:	e000      	b.n	8006f10 <HAL_TIM_ConfigClockSource+0x174>
 8006f0e:	bf00      	nop
 8006f10:	687b      	ldr	r3, [r7, #4]
 8006f12:	2201      	movs	r2, #1
 8006f14:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8006f18:	687b      	ldr	r3, [r7, #4]
 8006f1a:	2200      	movs	r2, #0
 8006f1c:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8006f20:	7bfb      	ldrb	r3, [r7, #15]
 8006f22:	4618      	mov	r0, r3
 8006f24:	3710      	adds	r7, #16
 8006f26:	46bd      	mov	sp, r7
 8006f28:	bd80      	pop	{r7, pc}
	...

08006f2c <TIM_Base_SetConfig>:
 8006f2c:	b480      	push	{r7}
 8006f2e:	b085      	sub	sp, #20
 8006f30:	af00      	add	r7, sp, #0
 8006f32:	6078      	str	r0, [r7, #4]
 8006f34:	6039      	str	r1, [r7, #0]
 8006f36:	687b      	ldr	r3, [r7, #4]
 8006f38:	681b      	ldr	r3, [r3, #0]
 8006f3a:	60fb      	str	r3, [r7, #12]
 8006f3c:	687b      	ldr	r3, [r7, #4]
 8006f3e:	4a46      	ldr	r2, [pc, #280]	@ (8007058 <TIM_Base_SetConfig+0x12c>)
 8006f40:	4293      	cmp	r3, r2
 8006f42:	d013      	beq.n	8006f6c <TIM_Base_SetConfig+0x40>
 8006f44:	687b      	ldr	r3, [r7, #4]
 8006f46:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8006f4a:	d00f      	beq.n	8006f6c <TIM_Base_SetConfig+0x40>
 8006f4c:	687b      	ldr	r3, [r7, #4]
 8006f4e:	4a43      	ldr	r2, [pc, #268]	@ (800705c <TIM_Base_SetConfig+0x130>)
 8006f50:	4293      	cmp	r3, r2
 8006f52:	d00b      	beq.n	8006f6c <TIM_Base_SetConfig+0x40>
 8006f54:	687b      	ldr	r3, [r7, #4]
 8006f56:	4a42      	ldr	r2, [pc, #264]	@ (8007060 <TIM_Base_SetConfig+0x134>)
 8006f58:	4293      	cmp	r3, r2
 8006f5a:	d007      	beq.n	8006f6c <TIM_Base_SetConfig+0x40>
 8006f5c:	687b      	ldr	r3, [r7, #4]
 8006f5e:	4a41      	ldr	r2, [pc, #260]	@ (8007064 <TIM_Base_SetConfig+0x138>)
 8006f60:	4293      	cmp	r3, r2
 8006f62:	d003      	beq.n	8006f6c <TIM_Base_SetConfig+0x40>
 8006f64:	687b      	ldr	r3, [r7, #4]
 8006f66:	4a40      	ldr	r2, [pc, #256]	@ (8007068 <TIM_Base_SetConfig+0x13c>)
 8006f68:	4293      	cmp	r3, r2
 8006f6a:	d108      	bne.n	8006f7e <TIM_Base_SetConfig+0x52>
 8006f6c:	68fb      	ldr	r3, [r7, #12]
 8006f6e:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8006f72:	60fb      	str	r3, [r7, #12]
 8006f74:	683b      	ldr	r3, [r7, #0]
 8006f76:	685b      	ldr	r3, [r3, #4]
 8006f78:	68fa      	ldr	r2, [r7, #12]
 8006f7a:	4313      	orrs	r3, r2
 8006f7c:	60fb      	str	r3, [r7, #12]
 8006f7e:	687b      	ldr	r3, [r7, #4]
 8006f80:	4a35      	ldr	r2, [pc, #212]	@ (8007058 <TIM_Base_SetConfig+0x12c>)
 8006f82:	4293      	cmp	r3, r2
 8006f84:	d02b      	beq.n	8006fde <TIM_Base_SetConfig+0xb2>
 8006f86:	687b      	ldr	r3, [r7, #4]
 8006f88:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8006f8c:	d027      	beq.n	8006fde <TIM_Base_SetConfig+0xb2>
 8006f8e:	687b      	ldr	r3, [r7, #4]
 8006f90:	4a32      	ldr	r2, [pc, #200]	@ (800705c <TIM_Base_SetConfig+0x130>)
 8006f92:	4293      	cmp	r3, r2
 8006f94:	d023      	beq.n	8006fde <TIM_Base_SetConfig+0xb2>
 8006f96:	687b      	ldr	r3, [r7, #4]
 8006f98:	4a31      	ldr	r2, [pc, #196]	@ (8007060 <TIM_Base_SetConfig+0x134>)
 8006f9a:	4293      	cmp	r3, r2
 8006f9c:	d01f      	beq.n	8006fde <TIM_Base_SetConfig+0xb2>
 8006f9e:	687b      	ldr	r3, [r7, #4]
 8006fa0:	4a30      	ldr	r2, [pc, #192]	@ (8007064 <TIM_Base_SetConfig+0x138>)
 8006fa2:	4293      	cmp	r3, r2
 8006fa4:	d01b      	beq.n	8006fde <TIM_Base_SetConfig+0xb2>
 8006fa6:	687b      	ldr	r3, [r7, #4]
 8006fa8:	4a2f      	ldr	r2, [pc, #188]	@ (8007068 <TIM_Base_SetConfig+0x13c>)
 8006faa:	4293      	cmp	r3, r2
 8006fac:	d017      	beq.n	8006fde <TIM_Base_SetConfig+0xb2>
 8006fae:	687b      	ldr	r3, [r7, #4]
 8006fb0:	4a2e      	ldr	r2, [pc, #184]	@ (800706c <TIM_Base_SetConfig+0x140>)
 8006fb2:	4293      	cmp	r3, r2
 8006fb4:	d013      	beq.n	8006fde <TIM_Base_SetConfig+0xb2>
 8006fb6:	687b      	ldr	r3, [r7, #4]
 8006fb8:	4a2d      	ldr	r2, [pc, #180]	@ (8007070 <TIM_Base_SetConfig+0x144>)
 8006fba:	4293      	cmp	r3, r2
 8006fbc:	d00f      	beq.n	8006fde <TIM_Base_SetConfig+0xb2>
 8006fbe:	687b      	ldr	r3, [r7, #4]
 8006fc0:	4a2c      	ldr	r2, [pc, #176]	@ (8007074 <TIM_Base_SetConfig+0x148>)
 8006fc2:	4293      	cmp	r3, r2
 8006fc4:	d00b      	beq.n	8006fde <TIM_Base_SetConfig+0xb2>
 8006fc6:	687b      	ldr	r3, [r7, #4]
 8006fc8:	4a2b      	ldr	r2, [pc, #172]	@ (8007078 <TIM_Base_SetConfig+0x14c>)
 8006fca:	4293      	cmp	r3, r2
 8006fcc:	d007      	beq.n	8006fde <TIM_Base_SetConfig+0xb2>
 8006fce:	687b      	ldr	r3, [r7, #4]
 8006fd0:	4a2a      	ldr	r2, [pc, #168]	@ (800707c <TIM_Base_SetConfig+0x150>)
 8006fd2:	4293      	cmp	r3, r2
 8006fd4:	d003      	beq.n	8006fde <TIM_Base_SetConfig+0xb2>
 8006fd6:	687b      	ldr	r3, [r7, #4]
 8006fd8:	4a29      	ldr	r2, [pc, #164]	@ (8007080 <TIM_Base_SetConfig+0x154>)
 8006fda:	4293      	cmp	r3, r2
 8006fdc:	d108      	bne.n	8006ff0 <TIM_Base_SetConfig+0xc4>
 8006fde:	68fb      	ldr	r3, [r7, #12]
 8006fe0:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 8006fe4:	60fb      	str	r3, [r7, #12]
 8006fe6:	683b      	ldr	r3, [r7, #0]
 8006fe8:	68db      	ldr	r3, [r3, #12]
 8006fea:	68fa      	ldr	r2, [r7, #12]
 8006fec:	4313      	orrs	r3, r2
 8006fee:	60fb      	str	r3, [r7, #12]
 8006ff0:	68fb      	ldr	r3, [r7, #12]
 8006ff2:	f023 0280 	bic.w	r2, r3, #128	@ 0x80
 8006ff6:	683b      	ldr	r3, [r7, #0]
 8006ff8:	695b      	ldr	r3, [r3, #20]
 8006ffa:	4313      	orrs	r3, r2
 8006ffc:	60fb      	str	r3, [r7, #12]
 8006ffe:	687b      	ldr	r3, [r7, #4]
 8007000:	68fa      	ldr	r2, [r7, #12]
 8007002:	601a      	str	r2, [r3, #0]
 8007004:	683b      	ldr	r3, [r7, #0]
 8007006:	689a      	ldr	r2, [r3, #8]
 8007008:	687b      	ldr	r3, [r7, #4]
 800700a:	62da      	str	r2, [r3, #44]	@ 0x2c
 800700c:	683b      	ldr	r3, [r7, #0]
 800700e:	681a      	ldr	r2, [r3, #0]
 8007010:	687b      	ldr	r3, [r7, #4]
 8007012:	629a      	str	r2, [r3, #40]	@ 0x28
 8007014:	687b      	ldr	r3, [r7, #4]
 8007016:	4a10      	ldr	r2, [pc, #64]	@ (8007058 <TIM_Base_SetConfig+0x12c>)
 8007018:	4293      	cmp	r3, r2
 800701a:	d003      	beq.n	8007024 <TIM_Base_SetConfig+0xf8>
 800701c:	687b      	ldr	r3, [r7, #4]
 800701e:	4a12      	ldr	r2, [pc, #72]	@ (8007068 <TIM_Base_SetConfig+0x13c>)
 8007020:	4293      	cmp	r3, r2
 8007022:	d103      	bne.n	800702c <TIM_Base_SetConfig+0x100>
 8007024:	683b      	ldr	r3, [r7, #0]
 8007026:	691a      	ldr	r2, [r3, #16]
 8007028:	687b      	ldr	r3, [r7, #4]
 800702a:	631a      	str	r2, [r3, #48]	@ 0x30
 800702c:	687b      	ldr	r3, [r7, #4]
 800702e:	2201      	movs	r2, #1
 8007030:	615a      	str	r2, [r3, #20]
 8007032:	687b      	ldr	r3, [r7, #4]
 8007034:	691b      	ldr	r3, [r3, #16]
 8007036:	f003 0301 	and.w	r3, r3, #1
 800703a:	2b01      	cmp	r3, #1
 800703c:	d105      	bne.n	800704a <TIM_Base_SetConfig+0x11e>
 800703e:	687b      	ldr	r3, [r7, #4]
 8007040:	691b      	ldr	r3, [r3, #16]
 8007042:	f023 0201 	bic.w	r2, r3, #1
 8007046:	687b      	ldr	r3, [r7, #4]
 8007048:	611a      	str	r2, [r3, #16]
 800704a:	bf00      	nop
 800704c:	3714      	adds	r7, #20
 800704e:	46bd      	mov	sp, r7
 8007050:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007054:	4770      	bx	lr
 8007056:	bf00      	nop
 8007058:	40010000 	.word	0x40010000
 800705c:	40000400 	.word	0x40000400
 8007060:	40000800 	.word	0x40000800
 8007064:	40000c00 	.word	0x40000c00
 8007068:	40010400 	.word	0x40010400
 800706c:	40014000 	.word	0x40014000
 8007070:	40014400 	.word	0x40014400
 8007074:	40014800 	.word	0x40014800
 8007078:	40001800 	.word	0x40001800
 800707c:	40001c00 	.word	0x40001c00
 8007080:	40002000 	.word	0x40002000

08007084 <TIM_OC1_SetConfig>:
 8007084:	b480      	push	{r7}
 8007086:	b087      	sub	sp, #28
 8007088:	af00      	add	r7, sp, #0
 800708a:	6078      	str	r0, [r7, #4]
 800708c:	6039      	str	r1, [r7, #0]
 800708e:	687b      	ldr	r3, [r7, #4]
 8007090:	6a1b      	ldr	r3, [r3, #32]
 8007092:	617b      	str	r3, [r7, #20]
 8007094:	687b      	ldr	r3, [r7, #4]
 8007096:	6a1b      	ldr	r3, [r3, #32]
 8007098:	f023 0201 	bic.w	r2, r3, #1
 800709c:	687b      	ldr	r3, [r7, #4]
 800709e:	621a      	str	r2, [r3, #32]
 80070a0:	687b      	ldr	r3, [r7, #4]
 80070a2:	685b      	ldr	r3, [r3, #4]
 80070a4:	613b      	str	r3, [r7, #16]
 80070a6:	687b      	ldr	r3, [r7, #4]
 80070a8:	699b      	ldr	r3, [r3, #24]
 80070aa:	60fb      	str	r3, [r7, #12]
 80070ac:	68fb      	ldr	r3, [r7, #12]
 80070ae:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 80070b2:	60fb      	str	r3, [r7, #12]
 80070b4:	68fb      	ldr	r3, [r7, #12]
 80070b6:	f023 0303 	bic.w	r3, r3, #3
 80070ba:	60fb      	str	r3, [r7, #12]
 80070bc:	683b      	ldr	r3, [r7, #0]
 80070be:	681b      	ldr	r3, [r3, #0]
 80070c0:	68fa      	ldr	r2, [r7, #12]
 80070c2:	4313      	orrs	r3, r2
 80070c4:	60fb      	str	r3, [r7, #12]
 80070c6:	697b      	ldr	r3, [r7, #20]
 80070c8:	f023 0302 	bic.w	r3, r3, #2
 80070cc:	617b      	str	r3, [r7, #20]
 80070ce:	683b      	ldr	r3, [r7, #0]
 80070d0:	689b      	ldr	r3, [r3, #8]
 80070d2:	697a      	ldr	r2, [r7, #20]
 80070d4:	4313      	orrs	r3, r2
 80070d6:	617b      	str	r3, [r7, #20]
 80070d8:	687b      	ldr	r3, [r7, #4]
 80070da:	4a20      	ldr	r2, [pc, #128]	@ (800715c <TIM_OC1_SetConfig+0xd8>)
 80070dc:	4293      	cmp	r3, r2
 80070de:	d003      	beq.n	80070e8 <TIM_OC1_SetConfig+0x64>
 80070e0:	687b      	ldr	r3, [r7, #4]
 80070e2:	4a1f      	ldr	r2, [pc, #124]	@ (8007160 <TIM_OC1_SetConfig+0xdc>)
 80070e4:	4293      	cmp	r3, r2
 80070e6:	d10c      	bne.n	8007102 <TIM_OC1_SetConfig+0x7e>
 80070e8:	697b      	ldr	r3, [r7, #20]
 80070ea:	f023 0308 	bic.w	r3, r3, #8
 80070ee:	617b      	str	r3, [r7, #20]
 80070f0:	683b      	ldr	r3, [r7, #0]
 80070f2:	68db      	ldr	r3, [r3, #12]
 80070f4:	697a      	ldr	r2, [r7, #20]
 80070f6:	4313      	orrs	r3, r2
 80070f8:	617b      	str	r3, [r7, #20]
 80070fa:	697b      	ldr	r3, [r7, #20]
 80070fc:	f023 0304 	bic.w	r3, r3, #4
 8007100:	617b      	str	r3, [r7, #20]
 8007102:	687b      	ldr	r3, [r7, #4]
 8007104:	4a15      	ldr	r2, [pc, #84]	@ (800715c <TIM_OC1_SetConfig+0xd8>)
 8007106:	4293      	cmp	r3, r2
 8007108:	d003      	beq.n	8007112 <TIM_OC1_SetConfig+0x8e>
 800710a:	687b      	ldr	r3, [r7, #4]
 800710c:	4a14      	ldr	r2, [pc, #80]	@ (8007160 <TIM_OC1_SetConfig+0xdc>)
 800710e:	4293      	cmp	r3, r2
 8007110:	d111      	bne.n	8007136 <TIM_OC1_SetConfig+0xb2>
 8007112:	693b      	ldr	r3, [r7, #16]
 8007114:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 8007118:	613b      	str	r3, [r7, #16]
 800711a:	693b      	ldr	r3, [r7, #16]
 800711c:	f423 7300 	bic.w	r3, r3, #512	@ 0x200
 8007120:	613b      	str	r3, [r7, #16]
 8007122:	683b      	ldr	r3, [r7, #0]
 8007124:	695b      	ldr	r3, [r3, #20]
 8007126:	693a      	ldr	r2, [r7, #16]
 8007128:	4313      	orrs	r3, r2
 800712a:	613b      	str	r3, [r7, #16]
 800712c:	683b      	ldr	r3, [r7, #0]
 800712e:	699b      	ldr	r3, [r3, #24]
 8007130:	693a      	ldr	r2, [r7, #16]
 8007132:	4313      	orrs	r3, r2
 8007134:	613b      	str	r3, [r7, #16]
 8007136:	687b      	ldr	r3, [r7, #4]
 8007138:	693a      	ldr	r2, [r7, #16]
 800713a:	605a      	str	r2, [r3, #4]
 800713c:	687b      	ldr	r3, [r7, #4]
 800713e:	68fa      	ldr	r2, [r7, #12]
 8007140:	619a      	str	r2, [r3, #24]
 8007142:	683b      	ldr	r3, [r7, #0]
 8007144:	685a      	ldr	r2, [r3, #4]
 8007146:	687b      	ldr	r3, [r7, #4]
 8007148:	635a      	str	r2, [r3, #52]	@ 0x34
 800714a:	687b      	ldr	r3, [r7, #4]
 800714c:	697a      	ldr	r2, [r7, #20]
 800714e:	621a      	str	r2, [r3, #32]
 8007150:	bf00      	nop
 8007152:	371c      	adds	r7, #28
 8007154:	46bd      	mov	sp, r7
 8007156:	f85d 7b04 	ldr.w	r7, [sp], #4
 800715a:	4770      	bx	lr
 800715c:	40010000 	.word	0x40010000
 8007160:	40010400 	.word	0x40010400

08007164 <TIM_OC2_SetConfig>:
 8007164:	b480      	push	{r7}
 8007166:	b087      	sub	sp, #28
 8007168:	af00      	add	r7, sp, #0
 800716a:	6078      	str	r0, [r7, #4]
 800716c:	6039      	str	r1, [r7, #0]
 800716e:	687b      	ldr	r3, [r7, #4]
 8007170:	6a1b      	ldr	r3, [r3, #32]
 8007172:	617b      	str	r3, [r7, #20]
 8007174:	687b      	ldr	r3, [r7, #4]
 8007176:	6a1b      	ldr	r3, [r3, #32]
 8007178:	f023 0210 	bic.w	r2, r3, #16
 800717c:	687b      	ldr	r3, [r7, #4]
 800717e:	621a      	str	r2, [r3, #32]
 8007180:	687b      	ldr	r3, [r7, #4]
 8007182:	685b      	ldr	r3, [r3, #4]
 8007184:	613b      	str	r3, [r7, #16]
 8007186:	687b      	ldr	r3, [r7, #4]
 8007188:	699b      	ldr	r3, [r3, #24]
 800718a:	60fb      	str	r3, [r7, #12]
 800718c:	68fb      	ldr	r3, [r7, #12]
 800718e:	f423 43e0 	bic.w	r3, r3, #28672	@ 0x7000
 8007192:	60fb      	str	r3, [r7, #12]
 8007194:	68fb      	ldr	r3, [r7, #12]
 8007196:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 800719a:	60fb      	str	r3, [r7, #12]
 800719c:	683b      	ldr	r3, [r7, #0]
 800719e:	681b      	ldr	r3, [r3, #0]
 80071a0:	021b      	lsls	r3, r3, #8
 80071a2:	68fa      	ldr	r2, [r7, #12]
 80071a4:	4313      	orrs	r3, r2
 80071a6:	60fb      	str	r3, [r7, #12]
 80071a8:	697b      	ldr	r3, [r7, #20]
 80071aa:	f023 0320 	bic.w	r3, r3, #32
 80071ae:	617b      	str	r3, [r7, #20]
 80071b0:	683b      	ldr	r3, [r7, #0]
 80071b2:	689b      	ldr	r3, [r3, #8]
 80071b4:	011b      	lsls	r3, r3, #4
 80071b6:	697a      	ldr	r2, [r7, #20]
 80071b8:	4313      	orrs	r3, r2
 80071ba:	617b      	str	r3, [r7, #20]
 80071bc:	687b      	ldr	r3, [r7, #4]
 80071be:	4a22      	ldr	r2, [pc, #136]	@ (8007248 <TIM_OC2_SetConfig+0xe4>)
 80071c0:	4293      	cmp	r3, r2
 80071c2:	d003      	beq.n	80071cc <TIM_OC2_SetConfig+0x68>
 80071c4:	687b      	ldr	r3, [r7, #4]
 80071c6:	4a21      	ldr	r2, [pc, #132]	@ (800724c <TIM_OC2_SetConfig+0xe8>)
 80071c8:	4293      	cmp	r3, r2
 80071ca:	d10d      	bne.n	80071e8 <TIM_OC2_SetConfig+0x84>
 80071cc:	697b      	ldr	r3, [r7, #20]
 80071ce:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 80071d2:	617b      	str	r3, [r7, #20]
 80071d4:	683b      	ldr	r3, [r7, #0]
 80071d6:	68db      	ldr	r3, [r3, #12]
 80071d8:	011b      	lsls	r3, r3, #4
 80071da:	697a      	ldr	r2, [r7, #20]
 80071dc:	4313      	orrs	r3, r2
 80071de:	617b      	str	r3, [r7, #20]
 80071e0:	697b      	ldr	r3, [r7, #20]
 80071e2:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 80071e6:	617b      	str	r3, [r7, #20]
 80071e8:	687b      	ldr	r3, [r7, #4]
 80071ea:	4a17      	ldr	r2, [pc, #92]	@ (8007248 <TIM_OC2_SetConfig+0xe4>)
 80071ec:	4293      	cmp	r3, r2
 80071ee:	d003      	beq.n	80071f8 <TIM_OC2_SetConfig+0x94>
 80071f0:	687b      	ldr	r3, [r7, #4]
 80071f2:	4a16      	ldr	r2, [pc, #88]	@ (800724c <TIM_OC2_SetConfig+0xe8>)
 80071f4:	4293      	cmp	r3, r2
 80071f6:	d113      	bne.n	8007220 <TIM_OC2_SetConfig+0xbc>
 80071f8:	693b      	ldr	r3, [r7, #16]
 80071fa:	f423 6380 	bic.w	r3, r3, #1024	@ 0x400
 80071fe:	613b      	str	r3, [r7, #16]
 8007200:	693b      	ldr	r3, [r7, #16]
 8007202:	f423 6300 	bic.w	r3, r3, #2048	@ 0x800
 8007206:	613b      	str	r3, [r7, #16]
 8007208:	683b      	ldr	r3, [r7, #0]
 800720a:	695b      	ldr	r3, [r3, #20]
 800720c:	009b      	lsls	r3, r3, #2
 800720e:	693a      	ldr	r2, [r7, #16]
 8007210:	4313      	orrs	r3, r2
 8007212:	613b      	str	r3, [r7, #16]
 8007214:	683b      	ldr	r3, [r7, #0]
 8007216:	699b      	ldr	r3, [r3, #24]
 8007218:	009b      	lsls	r3, r3, #2
 800721a:	693a      	ldr	r2, [r7, #16]
 800721c:	4313      	orrs	r3, r2
 800721e:	613b      	str	r3, [r7, #16]
 8007220:	687b      	ldr	r3, [r7, #4]
 8007222:	693a      	ldr	r2, [r7, #16]
 8007224:	605a      	str	r2, [r3, #4]
 8007226:	687b      	ldr	r3, [r7, #4]
 8007228:	68fa      	ldr	r2, [r7, #12]
 800722a:	619a      	str	r2, [r3, #24]
 800722c:	683b      	ldr	r3, [r7, #0]
 800722e:	685a      	ldr	r2, [r3, #4]
 8007230:	687b      	ldr	r3, [r7, #4]
 8007232:	639a      	str	r2, [r3, #56]	@ 0x38
 8007234:	687b      	ldr	r3, [r7, #4]
 8007236:	697a      	ldr	r2, [r7, #20]
 8007238:	621a      	str	r2, [r3, #32]
 800723a:	bf00      	nop
 800723c:	371c      	adds	r7, #28
 800723e:	46bd      	mov	sp, r7
 8007240:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007244:	4770      	bx	lr
 8007246:	bf00      	nop
 8007248:	40010000 	.word	0x40010000
 800724c:	40010400 	.word	0x40010400

08007250 <TIM_OC3_SetConfig>:
 8007250:	b480      	push	{r7}
 8007252:	b087      	sub	sp, #28
 8007254:	af00      	add	r7, sp, #0
 8007256:	6078      	str	r0, [r7, #4]
 8007258:	6039      	str	r1, [r7, #0]
 800725a:	687b      	ldr	r3, [r7, #4]
 800725c:	6a1b      	ldr	r3, [r3, #32]
 800725e:	617b      	str	r3, [r7, #20]
 8007260:	687b      	ldr	r3, [r7, #4]
 8007262:	6a1b      	ldr	r3, [r3, #32]
 8007264:	f423 7280 	bic.w	r2, r3, #256	@ 0x100
 8007268:	687b      	ldr	r3, [r7, #4]
 800726a:	621a      	str	r2, [r3, #32]
 800726c:	687b      	ldr	r3, [r7, #4]
 800726e:	685b      	ldr	r3, [r3, #4]
 8007270:	613b      	str	r3, [r7, #16]
 8007272:	687b      	ldr	r3, [r7, #4]
 8007274:	69db      	ldr	r3, [r3, #28]
 8007276:	60fb      	str	r3, [r7, #12]
 8007278:	68fb      	ldr	r3, [r7, #12]
 800727a:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 800727e:	60fb      	str	r3, [r7, #12]
 8007280:	68fb      	ldr	r3, [r7, #12]
 8007282:	f023 0303 	bic.w	r3, r3, #3
 8007286:	60fb      	str	r3, [r7, #12]
 8007288:	683b      	ldr	r3, [r7, #0]
 800728a:	681b      	ldr	r3, [r3, #0]
 800728c:	68fa      	ldr	r2, [r7, #12]
 800728e:	4313      	orrs	r3, r2
 8007290:	60fb      	str	r3, [r7, #12]
 8007292:	697b      	ldr	r3, [r7, #20]
 8007294:	f423 7300 	bic.w	r3, r3, #512	@ 0x200
 8007298:	617b      	str	r3, [r7, #20]
 800729a:	683b      	ldr	r3, [r7, #0]
 800729c:	689b      	ldr	r3, [r3, #8]
 800729e:	021b      	lsls	r3, r3, #8
 80072a0:	697a      	ldr	r2, [r7, #20]
 80072a2:	4313      	orrs	r3, r2
 80072a4:	617b      	str	r3, [r7, #20]
 80072a6:	687b      	ldr	r3, [r7, #4]
 80072a8:	4a21      	ldr	r2, [pc, #132]	@ (8007330 <TIM_OC3_SetConfig+0xe0>)
 80072aa:	4293      	cmp	r3, r2
 80072ac:	d003      	beq.n	80072b6 <TIM_OC3_SetConfig+0x66>
 80072ae:	687b      	ldr	r3, [r7, #4]
 80072b0:	4a20      	ldr	r2, [pc, #128]	@ (8007334 <TIM_OC3_SetConfig+0xe4>)
 80072b2:	4293      	cmp	r3, r2
 80072b4:	d10d      	bne.n	80072d2 <TIM_OC3_SetConfig+0x82>
 80072b6:	697b      	ldr	r3, [r7, #20]
 80072b8:	f423 6300 	bic.w	r3, r3, #2048	@ 0x800
 80072bc:	617b      	str	r3, [r7, #20]
 80072be:	683b      	ldr	r3, [r7, #0]
 80072c0:	68db      	ldr	r3, [r3, #12]
 80072c2:	021b      	lsls	r3, r3, #8
 80072c4:	697a      	ldr	r2, [r7, #20]
 80072c6:	4313      	orrs	r3, r2
 80072c8:	617b      	str	r3, [r7, #20]
 80072ca:	697b      	ldr	r3, [r7, #20]
 80072cc:	f423 6380 	bic.w	r3, r3, #1024	@ 0x400
 80072d0:	617b      	str	r3, [r7, #20]
 80072d2:	687b      	ldr	r3, [r7, #4]
 80072d4:	4a16      	ldr	r2, [pc, #88]	@ (8007330 <TIM_OC3_SetConfig+0xe0>)
 80072d6:	4293      	cmp	r3, r2
 80072d8:	d003      	beq.n	80072e2 <TIM_OC3_SetConfig+0x92>
 80072da:	687b      	ldr	r3, [r7, #4]
 80072dc:	4a15      	ldr	r2, [pc, #84]	@ (8007334 <TIM_OC3_SetConfig+0xe4>)
 80072de:	4293      	cmp	r3, r2
 80072e0:	d113      	bne.n	800730a <TIM_OC3_SetConfig+0xba>
 80072e2:	693b      	ldr	r3, [r7, #16]
 80072e4:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 80072e8:	613b      	str	r3, [r7, #16]
 80072ea:	693b      	ldr	r3, [r7, #16]
 80072ec:	f423 5300 	bic.w	r3, r3, #8192	@ 0x2000
 80072f0:	613b      	str	r3, [r7, #16]
 80072f2:	683b      	ldr	r3, [r7, #0]
 80072f4:	695b      	ldr	r3, [r3, #20]
 80072f6:	011b      	lsls	r3, r3, #4
 80072f8:	693a      	ldr	r2, [r7, #16]
 80072fa:	4313      	orrs	r3, r2
 80072fc:	613b      	str	r3, [r7, #16]
 80072fe:	683b      	ldr	r3, [r7, #0]
 8007300:	699b      	ldr	r3, [r3, #24]
 8007302:	011b      	lsls	r3, r3, #4
 8007304:	693a      	ldr	r2, [r7, #16]
 8007306:	4313      	orrs	r3, r2
 8007308:	613b      	str	r3, [r7, #16]
 800730a:	687b      	ldr	r3, [r7, #4]
 800730c:	693a      	ldr	r2, [r7, #16]
 800730e:	605a      	str	r2, [r3, #4]
 8007310:	687b      	ldr	r3, [r7, #4]
 8007312:	68fa      	ldr	r2, [r7, #12]
 8007314:	61da      	str	r2, [r3, #28]
 8007316:	683b      	ldr	r3, [r7, #0]
 8007318:	685a      	ldr	r2, [r3, #4]
 800731a:	687b      	ldr	r3, [r7, #4]
 800731c:	63da      	str	r2, [r3, #60]	@ 0x3c
 800731e:	687b      	ldr	r3, [r7, #4]
 8007320:	697a      	ldr	r2, [r7, #20]
 8007322:	621a      	str	r2, [r3, #32]
 8007324:	bf00      	nop
 8007326:	371c      	adds	r7, #28
 8007328:	46bd      	mov	sp, r7
 800732a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800732e:	4770      	bx	lr
 8007330:	40010000 	.word	0x40010000
 8007334:	40010400 	.word	0x40010400

08007338 <TIM_OC4_SetConfig>:
 8007338:	b480      	push	{r7}
 800733a:	b087      	sub	sp, #28
 800733c:	af00      	add	r7, sp, #0
 800733e:	6078      	str	r0, [r7, #4]
 8007340:	6039      	str	r1, [r7, #0]
 8007342:	687b      	ldr	r3, [r7, #4]
 8007344:	6a1b      	ldr	r3, [r3, #32]
 8007346:	613b      	str	r3, [r7, #16]
 8007348:	687b      	ldr	r3, [r7, #4]
 800734a:	6a1b      	ldr	r3, [r3, #32]
 800734c:	f423 5280 	bic.w	r2, r3, #4096	@ 0x1000
 8007350:	687b      	ldr	r3, [r7, #4]
 8007352:	621a      	str	r2, [r3, #32]
 8007354:	687b      	ldr	r3, [r7, #4]
 8007356:	685b      	ldr	r3, [r3, #4]
 8007358:	617b      	str	r3, [r7, #20]
 800735a:	687b      	ldr	r3, [r7, #4]
 800735c:	69db      	ldr	r3, [r3, #28]
 800735e:	60fb      	str	r3, [r7, #12]
 8007360:	68fb      	ldr	r3, [r7, #12]
 8007362:	f423 43e0 	bic.w	r3, r3, #28672	@ 0x7000
 8007366:	60fb      	str	r3, [r7, #12]
 8007368:	68fb      	ldr	r3, [r7, #12]
 800736a:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 800736e:	60fb      	str	r3, [r7, #12]
 8007370:	683b      	ldr	r3, [r7, #0]
 8007372:	681b      	ldr	r3, [r3, #0]
 8007374:	021b      	lsls	r3, r3, #8
 8007376:	68fa      	ldr	r2, [r7, #12]
 8007378:	4313      	orrs	r3, r2
 800737a:	60fb      	str	r3, [r7, #12]
 800737c:	693b      	ldr	r3, [r7, #16]
 800737e:	f423 5300 	bic.w	r3, r3, #8192	@ 0x2000
 8007382:	613b      	str	r3, [r7, #16]
 8007384:	683b      	ldr	r3, [r7, #0]
 8007386:	689b      	ldr	r3, [r3, #8]
 8007388:	031b      	lsls	r3, r3, #12
 800738a:	693a      	ldr	r2, [r7, #16]
 800738c:	4313      	orrs	r3, r2
 800738e:	613b      	str	r3, [r7, #16]
 8007390:	687b      	ldr	r3, [r7, #4]
 8007392:	4a12      	ldr	r2, [pc, #72]	@ (80073dc <TIM_OC4_SetConfig+0xa4>)
 8007394:	4293      	cmp	r3, r2
 8007396:	d003      	beq.n	80073a0 <TIM_OC4_SetConfig+0x68>
 8007398:	687b      	ldr	r3, [r7, #4]
 800739a:	4a11      	ldr	r2, [pc, #68]	@ (80073e0 <TIM_OC4_SetConfig+0xa8>)
 800739c:	4293      	cmp	r3, r2
 800739e:	d109      	bne.n	80073b4 <TIM_OC4_SetConfig+0x7c>
 80073a0:	697b      	ldr	r3, [r7, #20]
 80073a2:	f423 4380 	bic.w	r3, r3, #16384	@ 0x4000
 80073a6:	617b      	str	r3, [r7, #20]
 80073a8:	683b      	ldr	r3, [r7, #0]
 80073aa:	695b      	ldr	r3, [r3, #20]
 80073ac:	019b      	lsls	r3, r3, #6
 80073ae:	697a      	ldr	r2, [r7, #20]
 80073b0:	4313      	orrs	r3, r2
 80073b2:	617b      	str	r3, [r7, #20]
 80073b4:	687b      	ldr	r3, [r7, #4]
 80073b6:	697a      	ldr	r2, [r7, #20]
 80073b8:	605a      	str	r2, [r3, #4]
 80073ba:	687b      	ldr	r3, [r7, #4]
 80073bc:	68fa      	ldr	r2, [r7, #12]
 80073be:	61da      	str	r2, [r3, #28]
 80073c0:	683b      	ldr	r3, [r7, #0]
 80073c2:	685a      	ldr	r2, [r3, #4]
 80073c4:	687b      	ldr	r3, [r7, #4]
 80073c6:	641a      	str	r2, [r3, #64]	@ 0x40
 80073c8:	687b      	ldr	r3, [r7, #4]
 80073ca:	693a      	ldr	r2, [r7, #16]
 80073cc:	621a      	str	r2, [r3, #32]
 80073ce:	bf00      	nop
 80073d0:	371c      	adds	r7, #28
 80073d2:	46bd      	mov	sp, r7
 80073d4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80073d8:	4770      	bx	lr
 80073da:	bf00      	nop
 80073dc:	40010000 	.word	0x40010000
 80073e0:	40010400 	.word	0x40010400

080073e4 <TIM_TI1_ConfigInputStage>:
 80073e4:	b480      	push	{r7}
 80073e6:	b087      	sub	sp, #28
 80073e8:	af00      	add	r7, sp, #0
 80073ea:	60f8      	str	r0, [r7, #12]
 80073ec:	60b9      	str	r1, [r7, #8]
 80073ee:	607a      	str	r2, [r7, #4]
 80073f0:	68fb      	ldr	r3, [r7, #12]
 80073f2:	6a1b      	ldr	r3, [r3, #32]
 80073f4:	617b      	str	r3, [r7, #20]
 80073f6:	68fb      	ldr	r3, [r7, #12]
 80073f8:	6a1b      	ldr	r3, [r3, #32]
 80073fa:	f023 0201 	bic.w	r2, r3, #1
 80073fe:	68fb      	ldr	r3, [r7, #12]
 8007400:	621a      	str	r2, [r3, #32]
 8007402:	68fb      	ldr	r3, [r7, #12]
 8007404:	699b      	ldr	r3, [r3, #24]
 8007406:	613b      	str	r3, [r7, #16]
 8007408:	693b      	ldr	r3, [r7, #16]
 800740a:	f023 03f0 	bic.w	r3, r3, #240	@ 0xf0
 800740e:	613b      	str	r3, [r7, #16]
 8007410:	687b      	ldr	r3, [r7, #4]
 8007412:	011b      	lsls	r3, r3, #4
 8007414:	693a      	ldr	r2, [r7, #16]
 8007416:	4313      	orrs	r3, r2
 8007418:	613b      	str	r3, [r7, #16]
 800741a:	697b      	ldr	r3, [r7, #20]
 800741c:	f023 030a 	bic.w	r3, r3, #10
 8007420:	617b      	str	r3, [r7, #20]
 8007422:	697a      	ldr	r2, [r7, #20]
 8007424:	68bb      	ldr	r3, [r7, #8]
 8007426:	4313      	orrs	r3, r2
 8007428:	617b      	str	r3, [r7, #20]
 800742a:	68fb      	ldr	r3, [r7, #12]
 800742c:	693a      	ldr	r2, [r7, #16]
 800742e:	619a      	str	r2, [r3, #24]
 8007430:	68fb      	ldr	r3, [r7, #12]
 8007432:	697a      	ldr	r2, [r7, #20]
 8007434:	621a      	str	r2, [r3, #32]
 8007436:	bf00      	nop
 8007438:	371c      	adds	r7, #28
 800743a:	46bd      	mov	sp, r7
 800743c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007440:	4770      	bx	lr

08007442 <TIM_TI2_ConfigInputStage>:
 8007442:	b480      	push	{r7}
 8007444:	b087      	sub	sp, #28
 8007446:	af00      	add	r7, sp, #0
 8007448:	60f8      	str	r0, [r7, #12]
 800744a:	60b9      	str	r1, [r7, #8]
 800744c:	607a      	str	r2, [r7, #4]
 800744e:	68fb      	ldr	r3, [r7, #12]
 8007450:	6a1b      	ldr	r3, [r3, #32]
 8007452:	617b      	str	r3, [r7, #20]
 8007454:	68fb      	ldr	r3, [r7, #12]
 8007456:	6a1b      	ldr	r3, [r3, #32]
 8007458:	f023 0210 	bic.w	r2, r3, #16
 800745c:	68fb      	ldr	r3, [r7, #12]
 800745e:	621a      	str	r2, [r3, #32]
 8007460:	68fb      	ldr	r3, [r7, #12]
 8007462:	699b      	ldr	r3, [r3, #24]
 8007464:	613b      	str	r3, [r7, #16]
 8007466:	693b      	ldr	r3, [r7, #16]
 8007468:	f423 4370 	bic.w	r3, r3, #61440	@ 0xf000
 800746c:	613b      	str	r3, [r7, #16]
 800746e:	687b      	ldr	r3, [r7, #4]
 8007470:	031b      	lsls	r3, r3, #12
 8007472:	693a      	ldr	r2, [r7, #16]
 8007474:	4313      	orrs	r3, r2
 8007476:	613b      	str	r3, [r7, #16]
 8007478:	697b      	ldr	r3, [r7, #20]
 800747a:	f023 03a0 	bic.w	r3, r3, #160	@ 0xa0
 800747e:	617b      	str	r3, [r7, #20]
 8007480:	68bb      	ldr	r3, [r7, #8]
 8007482:	011b      	lsls	r3, r3, #4
 8007484:	697a      	ldr	r2, [r7, #20]
 8007486:	4313      	orrs	r3, r2
 8007488:	617b      	str	r3, [r7, #20]
 800748a:	68fb      	ldr	r3, [r7, #12]
 800748c:	693a      	ldr	r2, [r7, #16]
 800748e:	619a      	str	r2, [r3, #24]
 8007490:	68fb      	ldr	r3, [r7, #12]
 8007492:	697a      	ldr	r2, [r7, #20]
 8007494:	621a      	str	r2, [r3, #32]
 8007496:	bf00      	nop
 8007498:	371c      	adds	r7, #28
 800749a:	46bd      	mov	sp, r7
 800749c:	f85d 7b04 	ldr.w	r7, [sp], #4
 80074a0:	4770      	bx	lr

080074a2 <TIM_ITRx_SetConfig>:
 80074a2:	b480      	push	{r7}
 80074a4:	b085      	sub	sp, #20
 80074a6:	af00      	add	r7, sp, #0
 80074a8:	6078      	str	r0, [r7, #4]
 80074aa:	6039      	str	r1, [r7, #0]
 80074ac:	687b      	ldr	r3, [r7, #4]
 80074ae:	689b      	ldr	r3, [r3, #8]
 80074b0:	60fb      	str	r3, [r7, #12]
 80074b2:	68fb      	ldr	r3, [r7, #12]
 80074b4:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 80074b8:	60fb      	str	r3, [r7, #12]
 80074ba:	683a      	ldr	r2, [r7, #0]
 80074bc:	68fb      	ldr	r3, [r7, #12]
 80074be:	4313      	orrs	r3, r2
 80074c0:	f043 0307 	orr.w	r3, r3, #7
 80074c4:	60fb      	str	r3, [r7, #12]
 80074c6:	687b      	ldr	r3, [r7, #4]
 80074c8:	68fa      	ldr	r2, [r7, #12]
 80074ca:	609a      	str	r2, [r3, #8]
 80074cc:	bf00      	nop
 80074ce:	3714      	adds	r7, #20
 80074d0:	46bd      	mov	sp, r7
 80074d2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80074d6:	4770      	bx	lr

080074d8 <TIM_ETR_SetConfig>:
 80074d8:	b480      	push	{r7}
 80074da:	b087      	sub	sp, #28
 80074dc:	af00      	add	r7, sp, #0
 80074de:	60f8      	str	r0, [r7, #12]
 80074e0:	60b9      	str	r1, [r7, #8]
 80074e2:	607a      	str	r2, [r7, #4]
 80074e4:	603b      	str	r3, [r7, #0]
 80074e6:	68fb      	ldr	r3, [r7, #12]
 80074e8:	689b      	ldr	r3, [r3, #8]
 80074ea:	617b      	str	r3, [r7, #20]
 80074ec:	697b      	ldr	r3, [r7, #20]
 80074ee:	f423 437f 	bic.w	r3, r3, #65280	@ 0xff00
 80074f2:	617b      	str	r3, [r7, #20]
 80074f4:	683b      	ldr	r3, [r7, #0]
 80074f6:	021a      	lsls	r2, r3, #8
 80074f8:	687b      	ldr	r3, [r7, #4]
 80074fa:	431a      	orrs	r2, r3
 80074fc:	68bb      	ldr	r3, [r7, #8]
 80074fe:	4313      	orrs	r3, r2
 8007500:	697a      	ldr	r2, [r7, #20]
 8007502:	4313      	orrs	r3, r2
 8007504:	617b      	str	r3, [r7, #20]
 8007506:	68fb      	ldr	r3, [r7, #12]
 8007508:	697a      	ldr	r2, [r7, #20]
 800750a:	609a      	str	r2, [r3, #8]
 800750c:	bf00      	nop
 800750e:	371c      	adds	r7, #28
 8007510:	46bd      	mov	sp, r7
 8007512:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007516:	4770      	bx	lr

08007518 <TIM_CCxChannelCmd>:
 8007518:	b480      	push	{r7}
 800751a:	b087      	sub	sp, #28
 800751c:	af00      	add	r7, sp, #0
 800751e:	60f8      	str	r0, [r7, #12]
 8007520:	60b9      	str	r1, [r7, #8]
 8007522:	607a      	str	r2, [r7, #4]
 8007524:	68bb      	ldr	r3, [r7, #8]
 8007526:	f003 031f 	and.w	r3, r3, #31
 800752a:	2201      	movs	r2, #1
 800752c:	fa02 f303 	lsl.w	r3, r2, r3
 8007530:	617b      	str	r3, [r7, #20]
 8007532:	68fb      	ldr	r3, [r7, #12]
 8007534:	6a1a      	ldr	r2, [r3, #32]
 8007536:	697b      	ldr	r3, [r7, #20]
 8007538:	43db      	mvns	r3, r3
 800753a:	401a      	ands	r2, r3
 800753c:	68fb      	ldr	r3, [r7, #12]
 800753e:	621a      	str	r2, [r3, #32]
 8007540:	68fb      	ldr	r3, [r7, #12]
 8007542:	6a1a      	ldr	r2, [r3, #32]
 8007544:	68bb      	ldr	r3, [r7, #8]
 8007546:	f003 031f 	and.w	r3, r3, #31
 800754a:	6879      	ldr	r1, [r7, #4]
 800754c:	fa01 f303 	lsl.w	r3, r1, r3
 8007550:	431a      	orrs	r2, r3
 8007552:	68fb      	ldr	r3, [r7, #12]
 8007554:	621a      	str	r2, [r3, #32]
 8007556:	bf00      	nop
 8007558:	371c      	adds	r7, #28
 800755a:	46bd      	mov	sp, r7
 800755c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007560:	4770      	bx	lr
	...

08007564 <HAL_TIMEx_MasterConfigSynchronization>:
 8007564:	b480      	push	{r7}
 8007566:	b085      	sub	sp, #20
 8007568:	af00      	add	r7, sp, #0
 800756a:	6078      	str	r0, [r7, #4]
 800756c:	6039      	str	r1, [r7, #0]
 800756e:	687b      	ldr	r3, [r7, #4]
 8007570:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 8007574:	2b01      	cmp	r3, #1
 8007576:	d101      	bne.n	800757c <HAL_TIMEx_MasterConfigSynchronization+0x18>
 8007578:	2302      	movs	r3, #2
 800757a:	e05a      	b.n	8007632 <HAL_TIMEx_MasterConfigSynchronization+0xce>
 800757c:	687b      	ldr	r3, [r7, #4]
 800757e:	2201      	movs	r2, #1
 8007580:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8007584:	687b      	ldr	r3, [r7, #4]
 8007586:	2202      	movs	r2, #2
 8007588:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 800758c:	687b      	ldr	r3, [r7, #4]
 800758e:	681b      	ldr	r3, [r3, #0]
 8007590:	685b      	ldr	r3, [r3, #4]
 8007592:	60fb      	str	r3, [r7, #12]
 8007594:	687b      	ldr	r3, [r7, #4]
 8007596:	681b      	ldr	r3, [r3, #0]
 8007598:	689b      	ldr	r3, [r3, #8]
 800759a:	60bb      	str	r3, [r7, #8]
 800759c:	68fb      	ldr	r3, [r7, #12]
 800759e:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 80075a2:	60fb      	str	r3, [r7, #12]
 80075a4:	683b      	ldr	r3, [r7, #0]
 80075a6:	681b      	ldr	r3, [r3, #0]
 80075a8:	68fa      	ldr	r2, [r7, #12]
 80075aa:	4313      	orrs	r3, r2
 80075ac:	60fb      	str	r3, [r7, #12]
 80075ae:	687b      	ldr	r3, [r7, #4]
 80075b0:	681b      	ldr	r3, [r3, #0]
 80075b2:	68fa      	ldr	r2, [r7, #12]
 80075b4:	605a      	str	r2, [r3, #4]
 80075b6:	687b      	ldr	r3, [r7, #4]
 80075b8:	681b      	ldr	r3, [r3, #0]
 80075ba:	4a21      	ldr	r2, [pc, #132]	@ (8007640 <HAL_TIMEx_MasterConfigSynchronization+0xdc>)
 80075bc:	4293      	cmp	r3, r2
 80075be:	d022      	beq.n	8007606 <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 80075c0:	687b      	ldr	r3, [r7, #4]
 80075c2:	681b      	ldr	r3, [r3, #0]
 80075c4:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 80075c8:	d01d      	beq.n	8007606 <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 80075ca:	687b      	ldr	r3, [r7, #4]
 80075cc:	681b      	ldr	r3, [r3, #0]
 80075ce:	4a1d      	ldr	r2, [pc, #116]	@ (8007644 <HAL_TIMEx_MasterConfigSynchronization+0xe0>)
 80075d0:	4293      	cmp	r3, r2
 80075d2:	d018      	beq.n	8007606 <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 80075d4:	687b      	ldr	r3, [r7, #4]
 80075d6:	681b      	ldr	r3, [r3, #0]
 80075d8:	4a1b      	ldr	r2, [pc, #108]	@ (8007648 <HAL_TIMEx_MasterConfigSynchronization+0xe4>)
 80075da:	4293      	cmp	r3, r2
 80075dc:	d013      	beq.n	8007606 <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 80075de:	687b      	ldr	r3, [r7, #4]
 80075e0:	681b      	ldr	r3, [r3, #0]
 80075e2:	4a1a      	ldr	r2, [pc, #104]	@ (800764c <HAL_TIMEx_MasterConfigSynchronization+0xe8>)
 80075e4:	4293      	cmp	r3, r2
 80075e6:	d00e      	beq.n	8007606 <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 80075e8:	687b      	ldr	r3, [r7, #4]
 80075ea:	681b      	ldr	r3, [r3, #0]
 80075ec:	4a18      	ldr	r2, [pc, #96]	@ (8007650 <HAL_TIMEx_MasterConfigSynchronization+0xec>)
 80075ee:	4293      	cmp	r3, r2
 80075f0:	d009      	beq.n	8007606 <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 80075f2:	687b      	ldr	r3, [r7, #4]
 80075f4:	681b      	ldr	r3, [r3, #0]
 80075f6:	4a17      	ldr	r2, [pc, #92]	@ (8007654 <HAL_TIMEx_MasterConfigSynchronization+0xf0>)
 80075f8:	4293      	cmp	r3, r2
 80075fa:	d004      	beq.n	8007606 <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 80075fc:	687b      	ldr	r3, [r7, #4]
 80075fe:	681b      	ldr	r3, [r3, #0]
 8007600:	4a15      	ldr	r2, [pc, #84]	@ (8007658 <HAL_TIMEx_MasterConfigSynchronization+0xf4>)
 8007602:	4293      	cmp	r3, r2
 8007604:	d10c      	bne.n	8007620 <HAL_TIMEx_MasterConfigSynchronization+0xbc>
 8007606:	68bb      	ldr	r3, [r7, #8]
 8007608:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 800760c:	60bb      	str	r3, [r7, #8]
 800760e:	683b      	ldr	r3, [r7, #0]
 8007610:	685b      	ldr	r3, [r3, #4]
 8007612:	68ba      	ldr	r2, [r7, #8]
 8007614:	4313      	orrs	r3, r2
 8007616:	60bb      	str	r3, [r7, #8]
 8007618:	687b      	ldr	r3, [r7, #4]
 800761a:	681b      	ldr	r3, [r3, #0]
 800761c:	68ba      	ldr	r2, [r7, #8]
 800761e:	609a      	str	r2, [r3, #8]
 8007620:	687b      	ldr	r3, [r7, #4]
 8007622:	2201      	movs	r2, #1
 8007624:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8007628:	687b      	ldr	r3, [r7, #4]
 800762a:	2200      	movs	r2, #0
 800762c:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8007630:	2300      	movs	r3, #0
 8007632:	4618      	mov	r0, r3
 8007634:	3714      	adds	r7, #20
 8007636:	46bd      	mov	sp, r7
 8007638:	f85d 7b04 	ldr.w	r7, [sp], #4
 800763c:	4770      	bx	lr
 800763e:	bf00      	nop
 8007640:	40010000 	.word	0x40010000
 8007644:	40000400 	.word	0x40000400
 8007648:	40000800 	.word	0x40000800
 800764c:	40000c00 	.word	0x40000c00
 8007650:	40010400 	.word	0x40010400
 8007654:	40014000 	.word	0x40014000
 8007658:	40001800 	.word	0x40001800

0800765c <HAL_TIMEx_ConfigBreakDeadTime>:
 800765c:	b480      	push	{r7}
 800765e:	b085      	sub	sp, #20
 8007660:	af00      	add	r7, sp, #0
 8007662:	6078      	str	r0, [r7, #4]
 8007664:	6039      	str	r1, [r7, #0]
 8007666:	2300      	movs	r3, #0
 8007668:	60fb      	str	r3, [r7, #12]
 800766a:	687b      	ldr	r3, [r7, #4]
 800766c:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 8007670:	2b01      	cmp	r3, #1
 8007672:	d101      	bne.n	8007678 <HAL_TIMEx_ConfigBreakDeadTime+0x1c>
 8007674:	2302      	movs	r3, #2
 8007676:	e03d      	b.n	80076f4 <HAL_TIMEx_ConfigBreakDeadTime+0x98>
 8007678:	687b      	ldr	r3, [r7, #4]
 800767a:	2201      	movs	r2, #1
 800767c:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8007680:	68fb      	ldr	r3, [r7, #12]
 8007682:	f023 02ff 	bic.w	r2, r3, #255	@ 0xff
 8007686:	683b      	ldr	r3, [r7, #0]
 8007688:	68db      	ldr	r3, [r3, #12]
 800768a:	4313      	orrs	r3, r2
 800768c:	60fb      	str	r3, [r7, #12]
 800768e:	68fb      	ldr	r3, [r7, #12]
 8007690:	f423 7240 	bic.w	r2, r3, #768	@ 0x300
 8007694:	683b      	ldr	r3, [r7, #0]
 8007696:	689b      	ldr	r3, [r3, #8]
 8007698:	4313      	orrs	r3, r2
 800769a:	60fb      	str	r3, [r7, #12]
 800769c:	68fb      	ldr	r3, [r7, #12]
 800769e:	f423 6280 	bic.w	r2, r3, #1024	@ 0x400
 80076a2:	683b      	ldr	r3, [r7, #0]
 80076a4:	685b      	ldr	r3, [r3, #4]
 80076a6:	4313      	orrs	r3, r2
 80076a8:	60fb      	str	r3, [r7, #12]
 80076aa:	68fb      	ldr	r3, [r7, #12]
 80076ac:	f423 6200 	bic.w	r2, r3, #2048	@ 0x800
 80076b0:	683b      	ldr	r3, [r7, #0]
 80076b2:	681b      	ldr	r3, [r3, #0]
 80076b4:	4313      	orrs	r3, r2
 80076b6:	60fb      	str	r3, [r7, #12]
 80076b8:	68fb      	ldr	r3, [r7, #12]
 80076ba:	f423 5280 	bic.w	r2, r3, #4096	@ 0x1000
 80076be:	683b      	ldr	r3, [r7, #0]
 80076c0:	691b      	ldr	r3, [r3, #16]
 80076c2:	4313      	orrs	r3, r2
 80076c4:	60fb      	str	r3, [r7, #12]
 80076c6:	68fb      	ldr	r3, [r7, #12]
 80076c8:	f423 5200 	bic.w	r2, r3, #8192	@ 0x2000
 80076cc:	683b      	ldr	r3, [r7, #0]
 80076ce:	695b      	ldr	r3, [r3, #20]
 80076d0:	4313      	orrs	r3, r2
 80076d2:	60fb      	str	r3, [r7, #12]
 80076d4:	68fb      	ldr	r3, [r7, #12]
 80076d6:	f423 4280 	bic.w	r2, r3, #16384	@ 0x4000
 80076da:	683b      	ldr	r3, [r7, #0]
 80076dc:	69db      	ldr	r3, [r3, #28]
 80076de:	4313      	orrs	r3, r2
 80076e0:	60fb      	str	r3, [r7, #12]
 80076e2:	687b      	ldr	r3, [r7, #4]
 80076e4:	681b      	ldr	r3, [r3, #0]
 80076e6:	68fa      	ldr	r2, [r7, #12]
 80076e8:	645a      	str	r2, [r3, #68]	@ 0x44
 80076ea:	687b      	ldr	r3, [r7, #4]
 80076ec:	2200      	movs	r2, #0
 80076ee:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 80076f2:	2300      	movs	r3, #0
 80076f4:	4618      	mov	r0, r3
 80076f6:	3714      	adds	r7, #20
 80076f8:	46bd      	mov	sp, r7
 80076fa:	f85d 7b04 	ldr.w	r7, [sp], #4
 80076fe:	4770      	bx	lr

08007700 <HAL_UART_Init>:
 8007700:	b580      	push	{r7, lr}
 8007702:	b082      	sub	sp, #8
 8007704:	af00      	add	r7, sp, #0
 8007706:	6078      	str	r0, [r7, #4]
 8007708:	687b      	ldr	r3, [r7, #4]
 800770a:	2b00      	cmp	r3, #0
 800770c:	d101      	bne.n	8007712 <HAL_UART_Init+0x12>
 800770e:	2301      	movs	r3, #1
 8007710:	e042      	b.n	8007798 <HAL_UART_Init+0x98>
 8007712:	687b      	ldr	r3, [r7, #4]
 8007714:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 8007718:	b2db      	uxtb	r3, r3
 800771a:	2b00      	cmp	r3, #0
 800771c:	d106      	bne.n	800772c <HAL_UART_Init+0x2c>
 800771e:	687b      	ldr	r3, [r7, #4]
 8007720:	2200      	movs	r2, #0
 8007722:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8007726:	6878      	ldr	r0, [r7, #4]
 8007728:	f7fb ff06 	bl	8003538 <HAL_UART_MspInit>
 800772c:	687b      	ldr	r3, [r7, #4]
 800772e:	2224      	movs	r2, #36	@ 0x24
 8007730:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8007734:	687b      	ldr	r3, [r7, #4]
 8007736:	681b      	ldr	r3, [r3, #0]
 8007738:	68da      	ldr	r2, [r3, #12]
 800773a:	687b      	ldr	r3, [r7, #4]
 800773c:	681b      	ldr	r3, [r3, #0]
 800773e:	f422 5200 	bic.w	r2, r2, #8192	@ 0x2000
 8007742:	60da      	str	r2, [r3, #12]
 8007744:	6878      	ldr	r0, [r7, #4]
 8007746:	f000 ff4f 	bl	80085e8 <UART_SetConfig>
 800774a:	687b      	ldr	r3, [r7, #4]
 800774c:	681b      	ldr	r3, [r3, #0]
 800774e:	691a      	ldr	r2, [r3, #16]
 8007750:	687b      	ldr	r3, [r7, #4]
 8007752:	681b      	ldr	r3, [r3, #0]
 8007754:	f422 4290 	bic.w	r2, r2, #18432	@ 0x4800
 8007758:	611a      	str	r2, [r3, #16]
 800775a:	687b      	ldr	r3, [r7, #4]
 800775c:	681b      	ldr	r3, [r3, #0]
 800775e:	695a      	ldr	r2, [r3, #20]
 8007760:	687b      	ldr	r3, [r7, #4]
 8007762:	681b      	ldr	r3, [r3, #0]
 8007764:	f022 022a 	bic.w	r2, r2, #42	@ 0x2a
 8007768:	615a      	str	r2, [r3, #20]
 800776a:	687b      	ldr	r3, [r7, #4]
 800776c:	681b      	ldr	r3, [r3, #0]
 800776e:	68da      	ldr	r2, [r3, #12]
 8007770:	687b      	ldr	r3, [r7, #4]
 8007772:	681b      	ldr	r3, [r3, #0]
 8007774:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
 8007778:	60da      	str	r2, [r3, #12]
 800777a:	687b      	ldr	r3, [r7, #4]
 800777c:	2200      	movs	r2, #0
 800777e:	645a      	str	r2, [r3, #68]	@ 0x44
 8007780:	687b      	ldr	r3, [r7, #4]
 8007782:	2220      	movs	r2, #32
 8007784:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8007788:	687b      	ldr	r3, [r7, #4]
 800778a:	2220      	movs	r2, #32
 800778c:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8007790:	687b      	ldr	r3, [r7, #4]
 8007792:	2200      	movs	r2, #0
 8007794:	635a      	str	r2, [r3, #52]	@ 0x34
 8007796:	2300      	movs	r3, #0
 8007798:	4618      	mov	r0, r3
 800779a:	3708      	adds	r7, #8
 800779c:	46bd      	mov	sp, r7
 800779e:	bd80      	pop	{r7, pc}

080077a0 <HAL_UART_Transmit>:
 80077a0:	b580      	push	{r7, lr}
 80077a2:	b08a      	sub	sp, #40	@ 0x28
 80077a4:	af02      	add	r7, sp, #8
 80077a6:	60f8      	str	r0, [r7, #12]
 80077a8:	60b9      	str	r1, [r7, #8]
 80077aa:	603b      	str	r3, [r7, #0]
 80077ac:	4613      	mov	r3, r2
 80077ae:	80fb      	strh	r3, [r7, #6]
 80077b0:	2300      	movs	r3, #0
 80077b2:	617b      	str	r3, [r7, #20]
 80077b4:	68fb      	ldr	r3, [r7, #12]
 80077b6:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 80077ba:	b2db      	uxtb	r3, r3
 80077bc:	2b20      	cmp	r3, #32
 80077be:	d175      	bne.n	80078ac <HAL_UART_Transmit+0x10c>
 80077c0:	68bb      	ldr	r3, [r7, #8]
 80077c2:	2b00      	cmp	r3, #0
 80077c4:	d002      	beq.n	80077cc <HAL_UART_Transmit+0x2c>
 80077c6:	88fb      	ldrh	r3, [r7, #6]
 80077c8:	2b00      	cmp	r3, #0
 80077ca:	d101      	bne.n	80077d0 <HAL_UART_Transmit+0x30>
 80077cc:	2301      	movs	r3, #1
 80077ce:	e06e      	b.n	80078ae <HAL_UART_Transmit+0x10e>
 80077d0:	68fb      	ldr	r3, [r7, #12]
 80077d2:	2200      	movs	r2, #0
 80077d4:	645a      	str	r2, [r3, #68]	@ 0x44
 80077d6:	68fb      	ldr	r3, [r7, #12]
 80077d8:	2221      	movs	r2, #33	@ 0x21
 80077da:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 80077de:	f7fc f8f5 	bl	80039cc <HAL_GetTick>
 80077e2:	6178      	str	r0, [r7, #20]
 80077e4:	68fb      	ldr	r3, [r7, #12]
 80077e6:	88fa      	ldrh	r2, [r7, #6]
 80077e8:	849a      	strh	r2, [r3, #36]	@ 0x24
 80077ea:	68fb      	ldr	r3, [r7, #12]
 80077ec:	88fa      	ldrh	r2, [r7, #6]
 80077ee:	84da      	strh	r2, [r3, #38]	@ 0x26
 80077f0:	68fb      	ldr	r3, [r7, #12]
 80077f2:	689b      	ldr	r3, [r3, #8]
 80077f4:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 80077f8:	d108      	bne.n	800780c <HAL_UART_Transmit+0x6c>
 80077fa:	68fb      	ldr	r3, [r7, #12]
 80077fc:	691b      	ldr	r3, [r3, #16]
 80077fe:	2b00      	cmp	r3, #0
 8007800:	d104      	bne.n	800780c <HAL_UART_Transmit+0x6c>
 8007802:	2300      	movs	r3, #0
 8007804:	61fb      	str	r3, [r7, #28]
 8007806:	68bb      	ldr	r3, [r7, #8]
 8007808:	61bb      	str	r3, [r7, #24]
 800780a:	e003      	b.n	8007814 <HAL_UART_Transmit+0x74>
 800780c:	68bb      	ldr	r3, [r7, #8]
 800780e:	61fb      	str	r3, [r7, #28]
 8007810:	2300      	movs	r3, #0
 8007812:	61bb      	str	r3, [r7, #24]
 8007814:	e02e      	b.n	8007874 <HAL_UART_Transmit+0xd4>
 8007816:	683b      	ldr	r3, [r7, #0]
 8007818:	9300      	str	r3, [sp, #0]
 800781a:	697b      	ldr	r3, [r7, #20]
 800781c:	2200      	movs	r2, #0
 800781e:	2180      	movs	r1, #128	@ 0x80
 8007820:	68f8      	ldr	r0, [r7, #12]
 8007822:	f000 fc27 	bl	8008074 <UART_WaitOnFlagUntilTimeout>
 8007826:	4603      	mov	r3, r0
 8007828:	2b00      	cmp	r3, #0
 800782a:	d005      	beq.n	8007838 <HAL_UART_Transmit+0x98>
 800782c:	68fb      	ldr	r3, [r7, #12]
 800782e:	2220      	movs	r2, #32
 8007830:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8007834:	2303      	movs	r3, #3
 8007836:	e03a      	b.n	80078ae <HAL_UART_Transmit+0x10e>
 8007838:	69fb      	ldr	r3, [r7, #28]
 800783a:	2b00      	cmp	r3, #0
 800783c:	d10b      	bne.n	8007856 <HAL_UART_Transmit+0xb6>
 800783e:	69bb      	ldr	r3, [r7, #24]
 8007840:	881b      	ldrh	r3, [r3, #0]
 8007842:	461a      	mov	r2, r3
 8007844:	68fb      	ldr	r3, [r7, #12]
 8007846:	681b      	ldr	r3, [r3, #0]
 8007848:	f3c2 0208 	ubfx	r2, r2, #0, #9
 800784c:	605a      	str	r2, [r3, #4]
 800784e:	69bb      	ldr	r3, [r7, #24]
 8007850:	3302      	adds	r3, #2
 8007852:	61bb      	str	r3, [r7, #24]
 8007854:	e007      	b.n	8007866 <HAL_UART_Transmit+0xc6>
 8007856:	69fb      	ldr	r3, [r7, #28]
 8007858:	781a      	ldrb	r2, [r3, #0]
 800785a:	68fb      	ldr	r3, [r7, #12]
 800785c:	681b      	ldr	r3, [r3, #0]
 800785e:	605a      	str	r2, [r3, #4]
 8007860:	69fb      	ldr	r3, [r7, #28]
 8007862:	3301      	adds	r3, #1
 8007864:	61fb      	str	r3, [r7, #28]
 8007866:	68fb      	ldr	r3, [r7, #12]
 8007868:	8cdb      	ldrh	r3, [r3, #38]	@ 0x26
 800786a:	b29b      	uxth	r3, r3
 800786c:	3b01      	subs	r3, #1
 800786e:	b29a      	uxth	r2, r3
 8007870:	68fb      	ldr	r3, [r7, #12]
 8007872:	84da      	strh	r2, [r3, #38]	@ 0x26
 8007874:	68fb      	ldr	r3, [r7, #12]
 8007876:	8cdb      	ldrh	r3, [r3, #38]	@ 0x26
 8007878:	b29b      	uxth	r3, r3
 800787a:	2b00      	cmp	r3, #0
 800787c:	d1cb      	bne.n	8007816 <HAL_UART_Transmit+0x76>
 800787e:	683b      	ldr	r3, [r7, #0]
 8007880:	9300      	str	r3, [sp, #0]
 8007882:	697b      	ldr	r3, [r7, #20]
 8007884:	2200      	movs	r2, #0
 8007886:	2140      	movs	r1, #64	@ 0x40
 8007888:	68f8      	ldr	r0, [r7, #12]
 800788a:	f000 fbf3 	bl	8008074 <UART_WaitOnFlagUntilTimeout>
 800788e:	4603      	mov	r3, r0
 8007890:	2b00      	cmp	r3, #0
 8007892:	d005      	beq.n	80078a0 <HAL_UART_Transmit+0x100>
 8007894:	68fb      	ldr	r3, [r7, #12]
 8007896:	2220      	movs	r2, #32
 8007898:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 800789c:	2303      	movs	r3, #3
 800789e:	e006      	b.n	80078ae <HAL_UART_Transmit+0x10e>
 80078a0:	68fb      	ldr	r3, [r7, #12]
 80078a2:	2220      	movs	r2, #32
 80078a4:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 80078a8:	2300      	movs	r3, #0
 80078aa:	e000      	b.n	80078ae <HAL_UART_Transmit+0x10e>
 80078ac:	2302      	movs	r3, #2
 80078ae:	4618      	mov	r0, r3
 80078b0:	3720      	adds	r7, #32
 80078b2:	46bd      	mov	sp, r7
 80078b4:	bd80      	pop	{r7, pc}

080078b6 <HAL_UART_Receive_DMA>:
 80078b6:	b580      	push	{r7, lr}
 80078b8:	b084      	sub	sp, #16
 80078ba:	af00      	add	r7, sp, #0
 80078bc:	60f8      	str	r0, [r7, #12]
 80078be:	60b9      	str	r1, [r7, #8]
 80078c0:	4613      	mov	r3, r2
 80078c2:	80fb      	strh	r3, [r7, #6]
 80078c4:	68fb      	ldr	r3, [r7, #12]
 80078c6:	f893 3042 	ldrb.w	r3, [r3, #66]	@ 0x42
 80078ca:	b2db      	uxtb	r3, r3
 80078cc:	2b20      	cmp	r3, #32
 80078ce:	d112      	bne.n	80078f6 <HAL_UART_Receive_DMA+0x40>
 80078d0:	68bb      	ldr	r3, [r7, #8]
 80078d2:	2b00      	cmp	r3, #0
 80078d4:	d002      	beq.n	80078dc <HAL_UART_Receive_DMA+0x26>
 80078d6:	88fb      	ldrh	r3, [r7, #6]
 80078d8:	2b00      	cmp	r3, #0
 80078da:	d101      	bne.n	80078e0 <HAL_UART_Receive_DMA+0x2a>
 80078dc:	2301      	movs	r3, #1
 80078de:	e00b      	b.n	80078f8 <HAL_UART_Receive_DMA+0x42>
 80078e0:	68fb      	ldr	r3, [r7, #12]
 80078e2:	2200      	movs	r2, #0
 80078e4:	631a      	str	r2, [r3, #48]	@ 0x30
 80078e6:	88fb      	ldrh	r3, [r7, #6]
 80078e8:	461a      	mov	r2, r3
 80078ea:	68b9      	ldr	r1, [r7, #8]
 80078ec:	68f8      	ldr	r0, [r7, #12]
 80078ee:	f000 fc1b 	bl	8008128 <UART_Start_Receive_DMA>
 80078f2:	4603      	mov	r3, r0
 80078f4:	e000      	b.n	80078f8 <HAL_UART_Receive_DMA+0x42>
 80078f6:	2302      	movs	r3, #2
 80078f8:	4618      	mov	r0, r3
 80078fa:	3710      	adds	r7, #16
 80078fc:	46bd      	mov	sp, r7
 80078fe:	bd80      	pop	{r7, pc}

08007900 <HAL_UART_IRQHandler>:
 8007900:	b580      	push	{r7, lr}
 8007902:	b0ba      	sub	sp, #232	@ 0xe8
 8007904:	af00      	add	r7, sp, #0
 8007906:	6078      	str	r0, [r7, #4]
 8007908:	687b      	ldr	r3, [r7, #4]
 800790a:	681b      	ldr	r3, [r3, #0]
 800790c:	681b      	ldr	r3, [r3, #0]
 800790e:	f8c7 30e4 	str.w	r3, [r7, #228]	@ 0xe4
 8007912:	687b      	ldr	r3, [r7, #4]
 8007914:	681b      	ldr	r3, [r3, #0]
 8007916:	68db      	ldr	r3, [r3, #12]
 8007918:	f8c7 30e0 	str.w	r3, [r7, #224]	@ 0xe0
 800791c:	687b      	ldr	r3, [r7, #4]
 800791e:	681b      	ldr	r3, [r3, #0]
 8007920:	695b      	ldr	r3, [r3, #20]
 8007922:	f8c7 30dc 	str.w	r3, [r7, #220]	@ 0xdc
 8007926:	2300      	movs	r3, #0
 8007928:	f8c7 30d8 	str.w	r3, [r7, #216]	@ 0xd8
 800792c:	2300      	movs	r3, #0
 800792e:	f8c7 30d4 	str.w	r3, [r7, #212]	@ 0xd4
 8007932:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8007936:	f003 030f 	and.w	r3, r3, #15
 800793a:	f8c7 30d8 	str.w	r3, [r7, #216]	@ 0xd8
 800793e:	f8d7 30d8 	ldr.w	r3, [r7, #216]	@ 0xd8
 8007942:	2b00      	cmp	r3, #0
 8007944:	d10f      	bne.n	8007966 <HAL_UART_IRQHandler+0x66>
 8007946:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 800794a:	f003 0320 	and.w	r3, r3, #32
 800794e:	2b00      	cmp	r3, #0
 8007950:	d009      	beq.n	8007966 <HAL_UART_IRQHandler+0x66>
 8007952:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 8007956:	f003 0320 	and.w	r3, r3, #32
 800795a:	2b00      	cmp	r3, #0
 800795c:	d003      	beq.n	8007966 <HAL_UART_IRQHandler+0x66>
 800795e:	6878      	ldr	r0, [r7, #4]
 8007960:	f000 fd83 	bl	800846a <UART_Receive_IT>
 8007964:	e25b      	b.n	8007e1e <HAL_UART_IRQHandler+0x51e>
 8007966:	f8d7 30d8 	ldr.w	r3, [r7, #216]	@ 0xd8
 800796a:	2b00      	cmp	r3, #0
 800796c:	f000 80de 	beq.w	8007b2c <HAL_UART_IRQHandler+0x22c>
 8007970:	f8d7 30dc 	ldr.w	r3, [r7, #220]	@ 0xdc
 8007974:	f003 0301 	and.w	r3, r3, #1
 8007978:	2b00      	cmp	r3, #0
 800797a:	d106      	bne.n	800798a <HAL_UART_IRQHandler+0x8a>
 800797c:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 8007980:	f403 7390 	and.w	r3, r3, #288	@ 0x120
 8007984:	2b00      	cmp	r3, #0
 8007986:	f000 80d1 	beq.w	8007b2c <HAL_UART_IRQHandler+0x22c>
 800798a:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 800798e:	f003 0301 	and.w	r3, r3, #1
 8007992:	2b00      	cmp	r3, #0
 8007994:	d00b      	beq.n	80079ae <HAL_UART_IRQHandler+0xae>
 8007996:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 800799a:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 800799e:	2b00      	cmp	r3, #0
 80079a0:	d005      	beq.n	80079ae <HAL_UART_IRQHandler+0xae>
 80079a2:	687b      	ldr	r3, [r7, #4]
 80079a4:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80079a6:	f043 0201 	orr.w	r2, r3, #1
 80079aa:	687b      	ldr	r3, [r7, #4]
 80079ac:	645a      	str	r2, [r3, #68]	@ 0x44
 80079ae:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 80079b2:	f003 0304 	and.w	r3, r3, #4
 80079b6:	2b00      	cmp	r3, #0
 80079b8:	d00b      	beq.n	80079d2 <HAL_UART_IRQHandler+0xd2>
 80079ba:	f8d7 30dc 	ldr.w	r3, [r7, #220]	@ 0xdc
 80079be:	f003 0301 	and.w	r3, r3, #1
 80079c2:	2b00      	cmp	r3, #0
 80079c4:	d005      	beq.n	80079d2 <HAL_UART_IRQHandler+0xd2>
 80079c6:	687b      	ldr	r3, [r7, #4]
 80079c8:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80079ca:	f043 0202 	orr.w	r2, r3, #2
 80079ce:	687b      	ldr	r3, [r7, #4]
 80079d0:	645a      	str	r2, [r3, #68]	@ 0x44
 80079d2:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 80079d6:	f003 0302 	and.w	r3, r3, #2
 80079da:	2b00      	cmp	r3, #0
 80079dc:	d00b      	beq.n	80079f6 <HAL_UART_IRQHandler+0xf6>
 80079de:	f8d7 30dc 	ldr.w	r3, [r7, #220]	@ 0xdc
 80079e2:	f003 0301 	and.w	r3, r3, #1
 80079e6:	2b00      	cmp	r3, #0
 80079e8:	d005      	beq.n	80079f6 <HAL_UART_IRQHandler+0xf6>
 80079ea:	687b      	ldr	r3, [r7, #4]
 80079ec:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80079ee:	f043 0204 	orr.w	r2, r3, #4
 80079f2:	687b      	ldr	r3, [r7, #4]
 80079f4:	645a      	str	r2, [r3, #68]	@ 0x44
 80079f6:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 80079fa:	f003 0308 	and.w	r3, r3, #8
 80079fe:	2b00      	cmp	r3, #0
 8007a00:	d011      	beq.n	8007a26 <HAL_UART_IRQHandler+0x126>
 8007a02:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 8007a06:	f003 0320 	and.w	r3, r3, #32
 8007a0a:	2b00      	cmp	r3, #0
 8007a0c:	d105      	bne.n	8007a1a <HAL_UART_IRQHandler+0x11a>
 8007a0e:	f8d7 30dc 	ldr.w	r3, [r7, #220]	@ 0xdc
 8007a12:	f003 0301 	and.w	r3, r3, #1
 8007a16:	2b00      	cmp	r3, #0
 8007a18:	d005      	beq.n	8007a26 <HAL_UART_IRQHandler+0x126>
 8007a1a:	687b      	ldr	r3, [r7, #4]
 8007a1c:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8007a1e:	f043 0208 	orr.w	r2, r3, #8
 8007a22:	687b      	ldr	r3, [r7, #4]
 8007a24:	645a      	str	r2, [r3, #68]	@ 0x44
 8007a26:	687b      	ldr	r3, [r7, #4]
 8007a28:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8007a2a:	2b00      	cmp	r3, #0
 8007a2c:	f000 81f2 	beq.w	8007e14 <HAL_UART_IRQHandler+0x514>
 8007a30:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8007a34:	f003 0320 	and.w	r3, r3, #32
 8007a38:	2b00      	cmp	r3, #0
 8007a3a:	d008      	beq.n	8007a4e <HAL_UART_IRQHandler+0x14e>
 8007a3c:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 8007a40:	f003 0320 	and.w	r3, r3, #32
 8007a44:	2b00      	cmp	r3, #0
 8007a46:	d002      	beq.n	8007a4e <HAL_UART_IRQHandler+0x14e>
 8007a48:	6878      	ldr	r0, [r7, #4]
 8007a4a:	f000 fd0e 	bl	800846a <UART_Receive_IT>
 8007a4e:	687b      	ldr	r3, [r7, #4]
 8007a50:	681b      	ldr	r3, [r3, #0]
 8007a52:	695b      	ldr	r3, [r3, #20]
 8007a54:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8007a58:	2b40      	cmp	r3, #64	@ 0x40
 8007a5a:	bf0c      	ite	eq
 8007a5c:	2301      	moveq	r3, #1
 8007a5e:	2300      	movne	r3, #0
 8007a60:	b2db      	uxtb	r3, r3
 8007a62:	f8c7 30d4 	str.w	r3, [r7, #212]	@ 0xd4
 8007a66:	687b      	ldr	r3, [r7, #4]
 8007a68:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8007a6a:	f003 0308 	and.w	r3, r3, #8
 8007a6e:	2b00      	cmp	r3, #0
 8007a70:	d103      	bne.n	8007a7a <HAL_UART_IRQHandler+0x17a>
 8007a72:	f8d7 30d4 	ldr.w	r3, [r7, #212]	@ 0xd4
 8007a76:	2b00      	cmp	r3, #0
 8007a78:	d04f      	beq.n	8007b1a <HAL_UART_IRQHandler+0x21a>
 8007a7a:	6878      	ldr	r0, [r7, #4]
 8007a7c:	f000 fc16 	bl	80082ac <UART_EndRxTransfer>
 8007a80:	687b      	ldr	r3, [r7, #4]
 8007a82:	681b      	ldr	r3, [r3, #0]
 8007a84:	695b      	ldr	r3, [r3, #20]
 8007a86:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8007a8a:	2b40      	cmp	r3, #64	@ 0x40
 8007a8c:	d141      	bne.n	8007b12 <HAL_UART_IRQHandler+0x212>
 8007a8e:	687b      	ldr	r3, [r7, #4]
 8007a90:	681b      	ldr	r3, [r3, #0]
 8007a92:	3314      	adds	r3, #20
 8007a94:	f8c7 309c 	str.w	r3, [r7, #156]	@ 0x9c
 8007a98:	f8d7 309c 	ldr.w	r3, [r7, #156]	@ 0x9c
 8007a9c:	e853 3f00 	ldrex	r3, [r3]
 8007aa0:	f8c7 3098 	str.w	r3, [r7, #152]	@ 0x98
 8007aa4:	f8d7 3098 	ldr.w	r3, [r7, #152]	@ 0x98
 8007aa8:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 8007aac:	f8c7 30d0 	str.w	r3, [r7, #208]	@ 0xd0
 8007ab0:	687b      	ldr	r3, [r7, #4]
 8007ab2:	681b      	ldr	r3, [r3, #0]
 8007ab4:	3314      	adds	r3, #20
 8007ab6:	f8d7 20d0 	ldr.w	r2, [r7, #208]	@ 0xd0
 8007aba:	f8c7 20a8 	str.w	r2, [r7, #168]	@ 0xa8
 8007abe:	f8c7 30a4 	str.w	r3, [r7, #164]	@ 0xa4
 8007ac2:	f8d7 10a4 	ldr.w	r1, [r7, #164]	@ 0xa4
 8007ac6:	f8d7 20a8 	ldr.w	r2, [r7, #168]	@ 0xa8
 8007aca:	e841 2300 	strex	r3, r2, [r1]
 8007ace:	f8c7 30a0 	str.w	r3, [r7, #160]	@ 0xa0
 8007ad2:	f8d7 30a0 	ldr.w	r3, [r7, #160]	@ 0xa0
 8007ad6:	2b00      	cmp	r3, #0
 8007ad8:	d1d9      	bne.n	8007a8e <HAL_UART_IRQHandler+0x18e>
 8007ada:	687b      	ldr	r3, [r7, #4]
 8007adc:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8007ade:	2b00      	cmp	r3, #0
 8007ae0:	d013      	beq.n	8007b0a <HAL_UART_IRQHandler+0x20a>
 8007ae2:	687b      	ldr	r3, [r7, #4]
 8007ae4:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8007ae6:	4a7e      	ldr	r2, [pc, #504]	@ (8007ce0 <HAL_UART_IRQHandler+0x3e0>)
 8007ae8:	651a      	str	r2, [r3, #80]	@ 0x50
 8007aea:	687b      	ldr	r3, [r7, #4]
 8007aec:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8007aee:	4618      	mov	r0, r3
 8007af0:	f7fc fa24 	bl	8003f3c <HAL_DMA_Abort_IT>
 8007af4:	4603      	mov	r3, r0
 8007af6:	2b00      	cmp	r3, #0
 8007af8:	d016      	beq.n	8007b28 <HAL_UART_IRQHandler+0x228>
 8007afa:	687b      	ldr	r3, [r7, #4]
 8007afc:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8007afe:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8007b00:	687a      	ldr	r2, [r7, #4]
 8007b02:	6bd2      	ldr	r2, [r2, #60]	@ 0x3c
 8007b04:	4610      	mov	r0, r2
 8007b06:	4798      	blx	r3
 8007b08:	e00e      	b.n	8007b28 <HAL_UART_IRQHandler+0x228>
 8007b0a:	6878      	ldr	r0, [r7, #4]
 8007b0c:	f000 f99e 	bl	8007e4c <HAL_UART_ErrorCallback>
 8007b10:	e00a      	b.n	8007b28 <HAL_UART_IRQHandler+0x228>
 8007b12:	6878      	ldr	r0, [r7, #4]
 8007b14:	f000 f99a 	bl	8007e4c <HAL_UART_ErrorCallback>
 8007b18:	e006      	b.n	8007b28 <HAL_UART_IRQHandler+0x228>
 8007b1a:	6878      	ldr	r0, [r7, #4]
 8007b1c:	f000 f996 	bl	8007e4c <HAL_UART_ErrorCallback>
 8007b20:	687b      	ldr	r3, [r7, #4]
 8007b22:	2200      	movs	r2, #0
 8007b24:	645a      	str	r2, [r3, #68]	@ 0x44
 8007b26:	e175      	b.n	8007e14 <HAL_UART_IRQHandler+0x514>
 8007b28:	bf00      	nop
 8007b2a:	e173      	b.n	8007e14 <HAL_UART_IRQHandler+0x514>
 8007b2c:	687b      	ldr	r3, [r7, #4]
 8007b2e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8007b30:	2b01      	cmp	r3, #1
 8007b32:	f040 814f 	bne.w	8007dd4 <HAL_UART_IRQHandler+0x4d4>
 8007b36:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8007b3a:	f003 0310 	and.w	r3, r3, #16
 8007b3e:	2b00      	cmp	r3, #0
 8007b40:	f000 8148 	beq.w	8007dd4 <HAL_UART_IRQHandler+0x4d4>
 8007b44:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 8007b48:	f003 0310 	and.w	r3, r3, #16
 8007b4c:	2b00      	cmp	r3, #0
 8007b4e:	f000 8141 	beq.w	8007dd4 <HAL_UART_IRQHandler+0x4d4>
 8007b52:	2300      	movs	r3, #0
 8007b54:	60bb      	str	r3, [r7, #8]
 8007b56:	687b      	ldr	r3, [r7, #4]
 8007b58:	681b      	ldr	r3, [r3, #0]
 8007b5a:	681b      	ldr	r3, [r3, #0]
 8007b5c:	60bb      	str	r3, [r7, #8]
 8007b5e:	687b      	ldr	r3, [r7, #4]
 8007b60:	681b      	ldr	r3, [r3, #0]
 8007b62:	685b      	ldr	r3, [r3, #4]
 8007b64:	60bb      	str	r3, [r7, #8]
 8007b66:	68bb      	ldr	r3, [r7, #8]
 8007b68:	687b      	ldr	r3, [r7, #4]
 8007b6a:	681b      	ldr	r3, [r3, #0]
 8007b6c:	695b      	ldr	r3, [r3, #20]
 8007b6e:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8007b72:	2b40      	cmp	r3, #64	@ 0x40
 8007b74:	f040 80b6 	bne.w	8007ce4 <HAL_UART_IRQHandler+0x3e4>
 8007b78:	687b      	ldr	r3, [r7, #4]
 8007b7a:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8007b7c:	681b      	ldr	r3, [r3, #0]
 8007b7e:	685b      	ldr	r3, [r3, #4]
 8007b80:	f8a7 30be 	strh.w	r3, [r7, #190]	@ 0xbe
 8007b84:	f8b7 30be 	ldrh.w	r3, [r7, #190]	@ 0xbe
 8007b88:	2b00      	cmp	r3, #0
 8007b8a:	f000 8145 	beq.w	8007e18 <HAL_UART_IRQHandler+0x518>
 8007b8e:	687b      	ldr	r3, [r7, #4]
 8007b90:	8d9b      	ldrh	r3, [r3, #44]	@ 0x2c
 8007b92:	f8b7 20be 	ldrh.w	r2, [r7, #190]	@ 0xbe
 8007b96:	429a      	cmp	r2, r3
 8007b98:	f080 813e 	bcs.w	8007e18 <HAL_UART_IRQHandler+0x518>
 8007b9c:	687b      	ldr	r3, [r7, #4]
 8007b9e:	f8b7 20be 	ldrh.w	r2, [r7, #190]	@ 0xbe
 8007ba2:	85da      	strh	r2, [r3, #46]	@ 0x2e
 8007ba4:	687b      	ldr	r3, [r7, #4]
 8007ba6:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8007ba8:	69db      	ldr	r3, [r3, #28]
 8007baa:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 8007bae:	f000 8088 	beq.w	8007cc2 <HAL_UART_IRQHandler+0x3c2>
 8007bb2:	687b      	ldr	r3, [r7, #4]
 8007bb4:	681b      	ldr	r3, [r3, #0]
 8007bb6:	330c      	adds	r3, #12
 8007bb8:	f8c7 3088 	str.w	r3, [r7, #136]	@ 0x88
 8007bbc:	f8d7 3088 	ldr.w	r3, [r7, #136]	@ 0x88
 8007bc0:	e853 3f00 	ldrex	r3, [r3]
 8007bc4:	f8c7 3084 	str.w	r3, [r7, #132]	@ 0x84
 8007bc8:	f8d7 3084 	ldr.w	r3, [r7, #132]	@ 0x84
 8007bcc:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 8007bd0:	f8c7 30b8 	str.w	r3, [r7, #184]	@ 0xb8
 8007bd4:	687b      	ldr	r3, [r7, #4]
 8007bd6:	681b      	ldr	r3, [r3, #0]
 8007bd8:	330c      	adds	r3, #12
 8007bda:	f8d7 20b8 	ldr.w	r2, [r7, #184]	@ 0xb8
 8007bde:	f8c7 2094 	str.w	r2, [r7, #148]	@ 0x94
 8007be2:	f8c7 3090 	str.w	r3, [r7, #144]	@ 0x90
 8007be6:	f8d7 1090 	ldr.w	r1, [r7, #144]	@ 0x90
 8007bea:	f8d7 2094 	ldr.w	r2, [r7, #148]	@ 0x94
 8007bee:	e841 2300 	strex	r3, r2, [r1]
 8007bf2:	f8c7 308c 	str.w	r3, [r7, #140]	@ 0x8c
 8007bf6:	f8d7 308c 	ldr.w	r3, [r7, #140]	@ 0x8c
 8007bfa:	2b00      	cmp	r3, #0
 8007bfc:	d1d9      	bne.n	8007bb2 <HAL_UART_IRQHandler+0x2b2>
 8007bfe:	687b      	ldr	r3, [r7, #4]
 8007c00:	681b      	ldr	r3, [r3, #0]
 8007c02:	3314      	adds	r3, #20
 8007c04:	677b      	str	r3, [r7, #116]	@ 0x74
 8007c06:	6f7b      	ldr	r3, [r7, #116]	@ 0x74
 8007c08:	e853 3f00 	ldrex	r3, [r3]
 8007c0c:	673b      	str	r3, [r7, #112]	@ 0x70
 8007c0e:	6f3b      	ldr	r3, [r7, #112]	@ 0x70
 8007c10:	f023 0301 	bic.w	r3, r3, #1
 8007c14:	f8c7 30b4 	str.w	r3, [r7, #180]	@ 0xb4
 8007c18:	687b      	ldr	r3, [r7, #4]
 8007c1a:	681b      	ldr	r3, [r3, #0]
 8007c1c:	3314      	adds	r3, #20
 8007c1e:	f8d7 20b4 	ldr.w	r2, [r7, #180]	@ 0xb4
 8007c22:	f8c7 2080 	str.w	r2, [r7, #128]	@ 0x80
 8007c26:	67fb      	str	r3, [r7, #124]	@ 0x7c
 8007c28:	6ff9      	ldr	r1, [r7, #124]	@ 0x7c
 8007c2a:	f8d7 2080 	ldr.w	r2, [r7, #128]	@ 0x80
 8007c2e:	e841 2300 	strex	r3, r2, [r1]
 8007c32:	67bb      	str	r3, [r7, #120]	@ 0x78
 8007c34:	6fbb      	ldr	r3, [r7, #120]	@ 0x78
 8007c36:	2b00      	cmp	r3, #0
 8007c38:	d1e1      	bne.n	8007bfe <HAL_UART_IRQHandler+0x2fe>
 8007c3a:	687b      	ldr	r3, [r7, #4]
 8007c3c:	681b      	ldr	r3, [r3, #0]
 8007c3e:	3314      	adds	r3, #20
 8007c40:	663b      	str	r3, [r7, #96]	@ 0x60
 8007c42:	6e3b      	ldr	r3, [r7, #96]	@ 0x60
 8007c44:	e853 3f00 	ldrex	r3, [r3]
 8007c48:	65fb      	str	r3, [r7, #92]	@ 0x5c
 8007c4a:	6dfb      	ldr	r3, [r7, #92]	@ 0x5c
 8007c4c:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 8007c50:	f8c7 30b0 	str.w	r3, [r7, #176]	@ 0xb0
 8007c54:	687b      	ldr	r3, [r7, #4]
 8007c56:	681b      	ldr	r3, [r3, #0]
 8007c58:	3314      	adds	r3, #20
 8007c5a:	f8d7 20b0 	ldr.w	r2, [r7, #176]	@ 0xb0
 8007c5e:	66fa      	str	r2, [r7, #108]	@ 0x6c
 8007c60:	66bb      	str	r3, [r7, #104]	@ 0x68
 8007c62:	6eb9      	ldr	r1, [r7, #104]	@ 0x68
 8007c64:	6efa      	ldr	r2, [r7, #108]	@ 0x6c
 8007c66:	e841 2300 	strex	r3, r2, [r1]
 8007c6a:	667b      	str	r3, [r7, #100]	@ 0x64
 8007c6c:	6e7b      	ldr	r3, [r7, #100]	@ 0x64
 8007c6e:	2b00      	cmp	r3, #0
 8007c70:	d1e3      	bne.n	8007c3a <HAL_UART_IRQHandler+0x33a>
 8007c72:	687b      	ldr	r3, [r7, #4]
 8007c74:	2220      	movs	r2, #32
 8007c76:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8007c7a:	687b      	ldr	r3, [r7, #4]
 8007c7c:	2200      	movs	r2, #0
 8007c7e:	631a      	str	r2, [r3, #48]	@ 0x30
 8007c80:	687b      	ldr	r3, [r7, #4]
 8007c82:	681b      	ldr	r3, [r3, #0]
 8007c84:	330c      	adds	r3, #12
 8007c86:	64fb      	str	r3, [r7, #76]	@ 0x4c
 8007c88:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 8007c8a:	e853 3f00 	ldrex	r3, [r3]
 8007c8e:	64bb      	str	r3, [r7, #72]	@ 0x48
 8007c90:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
 8007c92:	f023 0310 	bic.w	r3, r3, #16
 8007c96:	f8c7 30ac 	str.w	r3, [r7, #172]	@ 0xac
 8007c9a:	687b      	ldr	r3, [r7, #4]
 8007c9c:	681b      	ldr	r3, [r3, #0]
 8007c9e:	330c      	adds	r3, #12
 8007ca0:	f8d7 20ac 	ldr.w	r2, [r7, #172]	@ 0xac
 8007ca4:	65ba      	str	r2, [r7, #88]	@ 0x58
 8007ca6:	657b      	str	r3, [r7, #84]	@ 0x54
 8007ca8:	6d79      	ldr	r1, [r7, #84]	@ 0x54
 8007caa:	6dba      	ldr	r2, [r7, #88]	@ 0x58
 8007cac:	e841 2300 	strex	r3, r2, [r1]
 8007cb0:	653b      	str	r3, [r7, #80]	@ 0x50
 8007cb2:	6d3b      	ldr	r3, [r7, #80]	@ 0x50
 8007cb4:	2b00      	cmp	r3, #0
 8007cb6:	d1e3      	bne.n	8007c80 <HAL_UART_IRQHandler+0x380>
 8007cb8:	687b      	ldr	r3, [r7, #4]
 8007cba:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8007cbc:	4618      	mov	r0, r3
 8007cbe:	f7fc f8cd 	bl	8003e5c <HAL_DMA_Abort>
 8007cc2:	687b      	ldr	r3, [r7, #4]
 8007cc4:	2202      	movs	r2, #2
 8007cc6:	635a      	str	r2, [r3, #52]	@ 0x34
 8007cc8:	687b      	ldr	r3, [r7, #4]
 8007cca:	8d9a      	ldrh	r2, [r3, #44]	@ 0x2c
 8007ccc:	687b      	ldr	r3, [r7, #4]
 8007cce:	8ddb      	ldrh	r3, [r3, #46]	@ 0x2e
 8007cd0:	b29b      	uxth	r3, r3
 8007cd2:	1ad3      	subs	r3, r2, r3
 8007cd4:	b29b      	uxth	r3, r3
 8007cd6:	4619      	mov	r1, r3
 8007cd8:	6878      	ldr	r0, [r7, #4]
 8007cda:	f000 f8c1 	bl	8007e60 <HAL_UARTEx_RxEventCallback>
 8007cde:	e09b      	b.n	8007e18 <HAL_UART_IRQHandler+0x518>
 8007ce0:	08008373 	.word	0x08008373
 8007ce4:	687b      	ldr	r3, [r7, #4]
 8007ce6:	8d9a      	ldrh	r2, [r3, #44]	@ 0x2c
 8007ce8:	687b      	ldr	r3, [r7, #4]
 8007cea:	8ddb      	ldrh	r3, [r3, #46]	@ 0x2e
 8007cec:	b29b      	uxth	r3, r3
 8007cee:	1ad3      	subs	r3, r2, r3
 8007cf0:	f8a7 30ce 	strh.w	r3, [r7, #206]	@ 0xce
 8007cf4:	687b      	ldr	r3, [r7, #4]
 8007cf6:	8ddb      	ldrh	r3, [r3, #46]	@ 0x2e
 8007cf8:	b29b      	uxth	r3, r3
 8007cfa:	2b00      	cmp	r3, #0
 8007cfc:	f000 808e 	beq.w	8007e1c <HAL_UART_IRQHandler+0x51c>
 8007d00:	f8b7 30ce 	ldrh.w	r3, [r7, #206]	@ 0xce
 8007d04:	2b00      	cmp	r3, #0
 8007d06:	f000 8089 	beq.w	8007e1c <HAL_UART_IRQHandler+0x51c>
 8007d0a:	687b      	ldr	r3, [r7, #4]
 8007d0c:	681b      	ldr	r3, [r3, #0]
 8007d0e:	330c      	adds	r3, #12
 8007d10:	63bb      	str	r3, [r7, #56]	@ 0x38
 8007d12:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8007d14:	e853 3f00 	ldrex	r3, [r3]
 8007d18:	637b      	str	r3, [r7, #52]	@ 0x34
 8007d1a:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8007d1c:	f423 7390 	bic.w	r3, r3, #288	@ 0x120
 8007d20:	f8c7 30c8 	str.w	r3, [r7, #200]	@ 0xc8
 8007d24:	687b      	ldr	r3, [r7, #4]
 8007d26:	681b      	ldr	r3, [r3, #0]
 8007d28:	330c      	adds	r3, #12
 8007d2a:	f8d7 20c8 	ldr.w	r2, [r7, #200]	@ 0xc8
 8007d2e:	647a      	str	r2, [r7, #68]	@ 0x44
 8007d30:	643b      	str	r3, [r7, #64]	@ 0x40
 8007d32:	6c39      	ldr	r1, [r7, #64]	@ 0x40
 8007d34:	6c7a      	ldr	r2, [r7, #68]	@ 0x44
 8007d36:	e841 2300 	strex	r3, r2, [r1]
 8007d3a:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8007d3c:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 8007d3e:	2b00      	cmp	r3, #0
 8007d40:	d1e3      	bne.n	8007d0a <HAL_UART_IRQHandler+0x40a>
 8007d42:	687b      	ldr	r3, [r7, #4]
 8007d44:	681b      	ldr	r3, [r3, #0]
 8007d46:	3314      	adds	r3, #20
 8007d48:	627b      	str	r3, [r7, #36]	@ 0x24
 8007d4a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8007d4c:	e853 3f00 	ldrex	r3, [r3]
 8007d50:	623b      	str	r3, [r7, #32]
 8007d52:	6a3b      	ldr	r3, [r7, #32]
 8007d54:	f023 0301 	bic.w	r3, r3, #1
 8007d58:	f8c7 30c4 	str.w	r3, [r7, #196]	@ 0xc4
 8007d5c:	687b      	ldr	r3, [r7, #4]
 8007d5e:	681b      	ldr	r3, [r3, #0]
 8007d60:	3314      	adds	r3, #20
 8007d62:	f8d7 20c4 	ldr.w	r2, [r7, #196]	@ 0xc4
 8007d66:	633a      	str	r2, [r7, #48]	@ 0x30
 8007d68:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8007d6a:	6af9      	ldr	r1, [r7, #44]	@ 0x2c
 8007d6c:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 8007d6e:	e841 2300 	strex	r3, r2, [r1]
 8007d72:	62bb      	str	r3, [r7, #40]	@ 0x28
 8007d74:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8007d76:	2b00      	cmp	r3, #0
 8007d78:	d1e3      	bne.n	8007d42 <HAL_UART_IRQHandler+0x442>
 8007d7a:	687b      	ldr	r3, [r7, #4]
 8007d7c:	2220      	movs	r2, #32
 8007d7e:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8007d82:	687b      	ldr	r3, [r7, #4]
 8007d84:	2200      	movs	r2, #0
 8007d86:	631a      	str	r2, [r3, #48]	@ 0x30
 8007d88:	687b      	ldr	r3, [r7, #4]
 8007d8a:	681b      	ldr	r3, [r3, #0]
 8007d8c:	330c      	adds	r3, #12
 8007d8e:	613b      	str	r3, [r7, #16]
 8007d90:	693b      	ldr	r3, [r7, #16]
 8007d92:	e853 3f00 	ldrex	r3, [r3]
 8007d96:	60fb      	str	r3, [r7, #12]
 8007d98:	68fb      	ldr	r3, [r7, #12]
 8007d9a:	f023 0310 	bic.w	r3, r3, #16
 8007d9e:	f8c7 30c0 	str.w	r3, [r7, #192]	@ 0xc0
 8007da2:	687b      	ldr	r3, [r7, #4]
 8007da4:	681b      	ldr	r3, [r3, #0]
 8007da6:	330c      	adds	r3, #12
 8007da8:	f8d7 20c0 	ldr.w	r2, [r7, #192]	@ 0xc0
 8007dac:	61fa      	str	r2, [r7, #28]
 8007dae:	61bb      	str	r3, [r7, #24]
 8007db0:	69b9      	ldr	r1, [r7, #24]
 8007db2:	69fa      	ldr	r2, [r7, #28]
 8007db4:	e841 2300 	strex	r3, r2, [r1]
 8007db8:	617b      	str	r3, [r7, #20]
 8007dba:	697b      	ldr	r3, [r7, #20]
 8007dbc:	2b00      	cmp	r3, #0
 8007dbe:	d1e3      	bne.n	8007d88 <HAL_UART_IRQHandler+0x488>
 8007dc0:	687b      	ldr	r3, [r7, #4]
 8007dc2:	2202      	movs	r2, #2
 8007dc4:	635a      	str	r2, [r3, #52]	@ 0x34
 8007dc6:	f8b7 30ce 	ldrh.w	r3, [r7, #206]	@ 0xce
 8007dca:	4619      	mov	r1, r3
 8007dcc:	6878      	ldr	r0, [r7, #4]
 8007dce:	f000 f847 	bl	8007e60 <HAL_UARTEx_RxEventCallback>
 8007dd2:	e023      	b.n	8007e1c <HAL_UART_IRQHandler+0x51c>
 8007dd4:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8007dd8:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8007ddc:	2b00      	cmp	r3, #0
 8007dde:	d009      	beq.n	8007df4 <HAL_UART_IRQHandler+0x4f4>
 8007de0:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 8007de4:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8007de8:	2b00      	cmp	r3, #0
 8007dea:	d003      	beq.n	8007df4 <HAL_UART_IRQHandler+0x4f4>
 8007dec:	6878      	ldr	r0, [r7, #4]
 8007dee:	f000 fad4 	bl	800839a <UART_Transmit_IT>
 8007df2:	e014      	b.n	8007e1e <HAL_UART_IRQHandler+0x51e>
 8007df4:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8007df8:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8007dfc:	2b00      	cmp	r3, #0
 8007dfe:	d00e      	beq.n	8007e1e <HAL_UART_IRQHandler+0x51e>
 8007e00:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 8007e04:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8007e08:	2b00      	cmp	r3, #0
 8007e0a:	d008      	beq.n	8007e1e <HAL_UART_IRQHandler+0x51e>
 8007e0c:	6878      	ldr	r0, [r7, #4]
 8007e0e:	f000 fb14 	bl	800843a <UART_EndTransmit_IT>
 8007e12:	e004      	b.n	8007e1e <HAL_UART_IRQHandler+0x51e>
 8007e14:	bf00      	nop
 8007e16:	e002      	b.n	8007e1e <HAL_UART_IRQHandler+0x51e>
 8007e18:	bf00      	nop
 8007e1a:	e000      	b.n	8007e1e <HAL_UART_IRQHandler+0x51e>
 8007e1c:	bf00      	nop
 8007e1e:	37e8      	adds	r7, #232	@ 0xe8
 8007e20:	46bd      	mov	sp, r7
 8007e22:	bd80      	pop	{r7, pc}

08007e24 <HAL_UART_TxCpltCallback>:
 8007e24:	b480      	push	{r7}
 8007e26:	b083      	sub	sp, #12
 8007e28:	af00      	add	r7, sp, #0
 8007e2a:	6078      	str	r0, [r7, #4]
 8007e2c:	bf00      	nop
 8007e2e:	370c      	adds	r7, #12
 8007e30:	46bd      	mov	sp, r7
 8007e32:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007e36:	4770      	bx	lr

08007e38 <HAL_UART_RxHalfCpltCallback>:
 8007e38:	b480      	push	{r7}
 8007e3a:	b083      	sub	sp, #12
 8007e3c:	af00      	add	r7, sp, #0
 8007e3e:	6078      	str	r0, [r7, #4]
 8007e40:	bf00      	nop
 8007e42:	370c      	adds	r7, #12
 8007e44:	46bd      	mov	sp, r7
 8007e46:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007e4a:	4770      	bx	lr

08007e4c <HAL_UART_ErrorCallback>:
 8007e4c:	b480      	push	{r7}
 8007e4e:	b083      	sub	sp, #12
 8007e50:	af00      	add	r7, sp, #0
 8007e52:	6078      	str	r0, [r7, #4]
 8007e54:	bf00      	nop
 8007e56:	370c      	adds	r7, #12
 8007e58:	46bd      	mov	sp, r7
 8007e5a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007e5e:	4770      	bx	lr

08007e60 <HAL_UARTEx_RxEventCallback>:
 8007e60:	b480      	push	{r7}
 8007e62:	b083      	sub	sp, #12
 8007e64:	af00      	add	r7, sp, #0
 8007e66:	6078      	str	r0, [r7, #4]
 8007e68:	460b      	mov	r3, r1
 8007e6a:	807b      	strh	r3, [r7, #2]
 8007e6c:	bf00      	nop
 8007e6e:	370c      	adds	r7, #12
 8007e70:	46bd      	mov	sp, r7
 8007e72:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007e76:	4770      	bx	lr

08007e78 <UART_DMAReceiveCplt>:
 8007e78:	b580      	push	{r7, lr}
 8007e7a:	b09c      	sub	sp, #112	@ 0x70
 8007e7c:	af00      	add	r7, sp, #0
 8007e7e:	6078      	str	r0, [r7, #4]
 8007e80:	687b      	ldr	r3, [r7, #4]
 8007e82:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8007e84:	66fb      	str	r3, [r7, #108]	@ 0x6c
 8007e86:	687b      	ldr	r3, [r7, #4]
 8007e88:	681b      	ldr	r3, [r3, #0]
 8007e8a:	681b      	ldr	r3, [r3, #0]
 8007e8c:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8007e90:	2b00      	cmp	r3, #0
 8007e92:	d172      	bne.n	8007f7a <UART_DMAReceiveCplt+0x102>
 8007e94:	6efb      	ldr	r3, [r7, #108]	@ 0x6c
 8007e96:	2200      	movs	r2, #0
 8007e98:	85da      	strh	r2, [r3, #46]	@ 0x2e
 8007e9a:	6efb      	ldr	r3, [r7, #108]	@ 0x6c
 8007e9c:	681b      	ldr	r3, [r3, #0]
 8007e9e:	330c      	adds	r3, #12
 8007ea0:	64fb      	str	r3, [r7, #76]	@ 0x4c
 8007ea2:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 8007ea4:	e853 3f00 	ldrex	r3, [r3]
 8007ea8:	64bb      	str	r3, [r7, #72]	@ 0x48
 8007eaa:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
 8007eac:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 8007eb0:	66bb      	str	r3, [r7, #104]	@ 0x68
 8007eb2:	6efb      	ldr	r3, [r7, #108]	@ 0x6c
 8007eb4:	681b      	ldr	r3, [r3, #0]
 8007eb6:	330c      	adds	r3, #12
 8007eb8:	6eba      	ldr	r2, [r7, #104]	@ 0x68
 8007eba:	65ba      	str	r2, [r7, #88]	@ 0x58
 8007ebc:	657b      	str	r3, [r7, #84]	@ 0x54
 8007ebe:	6d79      	ldr	r1, [r7, #84]	@ 0x54
 8007ec0:	6dba      	ldr	r2, [r7, #88]	@ 0x58
 8007ec2:	e841 2300 	strex	r3, r2, [r1]
 8007ec6:	653b      	str	r3, [r7, #80]	@ 0x50
 8007ec8:	6d3b      	ldr	r3, [r7, #80]	@ 0x50
 8007eca:	2b00      	cmp	r3, #0
 8007ecc:	d1e5      	bne.n	8007e9a <UART_DMAReceiveCplt+0x22>
 8007ece:	6efb      	ldr	r3, [r7, #108]	@ 0x6c
 8007ed0:	681b      	ldr	r3, [r3, #0]
 8007ed2:	3314      	adds	r3, #20
 8007ed4:	63bb      	str	r3, [r7, #56]	@ 0x38
 8007ed6:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8007ed8:	e853 3f00 	ldrex	r3, [r3]
 8007edc:	637b      	str	r3, [r7, #52]	@ 0x34
 8007ede:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8007ee0:	f023 0301 	bic.w	r3, r3, #1
 8007ee4:	667b      	str	r3, [r7, #100]	@ 0x64
 8007ee6:	6efb      	ldr	r3, [r7, #108]	@ 0x6c
 8007ee8:	681b      	ldr	r3, [r3, #0]
 8007eea:	3314      	adds	r3, #20
 8007eec:	6e7a      	ldr	r2, [r7, #100]	@ 0x64
 8007eee:	647a      	str	r2, [r7, #68]	@ 0x44
 8007ef0:	643b      	str	r3, [r7, #64]	@ 0x40
 8007ef2:	6c39      	ldr	r1, [r7, #64]	@ 0x40
 8007ef4:	6c7a      	ldr	r2, [r7, #68]	@ 0x44
 8007ef6:	e841 2300 	strex	r3, r2, [r1]
 8007efa:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8007efc:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 8007efe:	2b00      	cmp	r3, #0
 8007f00:	d1e5      	bne.n	8007ece <UART_DMAReceiveCplt+0x56>
 8007f02:	6efb      	ldr	r3, [r7, #108]	@ 0x6c
 8007f04:	681b      	ldr	r3, [r3, #0]
 8007f06:	3314      	adds	r3, #20
 8007f08:	627b      	str	r3, [r7, #36]	@ 0x24
 8007f0a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8007f0c:	e853 3f00 	ldrex	r3, [r3]
 8007f10:	623b      	str	r3, [r7, #32]
 8007f12:	6a3b      	ldr	r3, [r7, #32]
 8007f14:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 8007f18:	663b      	str	r3, [r7, #96]	@ 0x60
 8007f1a:	6efb      	ldr	r3, [r7, #108]	@ 0x6c
 8007f1c:	681b      	ldr	r3, [r3, #0]
 8007f1e:	3314      	adds	r3, #20
 8007f20:	6e3a      	ldr	r2, [r7, #96]	@ 0x60
 8007f22:	633a      	str	r2, [r7, #48]	@ 0x30
 8007f24:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8007f26:	6af9      	ldr	r1, [r7, #44]	@ 0x2c
 8007f28:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 8007f2a:	e841 2300 	strex	r3, r2, [r1]
 8007f2e:	62bb      	str	r3, [r7, #40]	@ 0x28
 8007f30:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8007f32:	2b00      	cmp	r3, #0
 8007f34:	d1e5      	bne.n	8007f02 <UART_DMAReceiveCplt+0x8a>
 8007f36:	6efb      	ldr	r3, [r7, #108]	@ 0x6c
 8007f38:	2220      	movs	r2, #32
 8007f3a:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8007f3e:	6efb      	ldr	r3, [r7, #108]	@ 0x6c
 8007f40:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8007f42:	2b01      	cmp	r3, #1
 8007f44:	d119      	bne.n	8007f7a <UART_DMAReceiveCplt+0x102>
 8007f46:	6efb      	ldr	r3, [r7, #108]	@ 0x6c
 8007f48:	681b      	ldr	r3, [r3, #0]
 8007f4a:	330c      	adds	r3, #12
 8007f4c:	613b      	str	r3, [r7, #16]
 8007f4e:	693b      	ldr	r3, [r7, #16]
 8007f50:	e853 3f00 	ldrex	r3, [r3]
 8007f54:	60fb      	str	r3, [r7, #12]
 8007f56:	68fb      	ldr	r3, [r7, #12]
 8007f58:	f023 0310 	bic.w	r3, r3, #16
 8007f5c:	65fb      	str	r3, [r7, #92]	@ 0x5c
 8007f5e:	6efb      	ldr	r3, [r7, #108]	@ 0x6c
 8007f60:	681b      	ldr	r3, [r3, #0]
 8007f62:	330c      	adds	r3, #12
 8007f64:	6dfa      	ldr	r2, [r7, #92]	@ 0x5c
 8007f66:	61fa      	str	r2, [r7, #28]
 8007f68:	61bb      	str	r3, [r7, #24]
 8007f6a:	69b9      	ldr	r1, [r7, #24]
 8007f6c:	69fa      	ldr	r2, [r7, #28]
 8007f6e:	e841 2300 	strex	r3, r2, [r1]
 8007f72:	617b      	str	r3, [r7, #20]
 8007f74:	697b      	ldr	r3, [r7, #20]
 8007f76:	2b00      	cmp	r3, #0
 8007f78:	d1e5      	bne.n	8007f46 <UART_DMAReceiveCplt+0xce>
 8007f7a:	6efb      	ldr	r3, [r7, #108]	@ 0x6c
 8007f7c:	2200      	movs	r2, #0
 8007f7e:	635a      	str	r2, [r3, #52]	@ 0x34
 8007f80:	6efb      	ldr	r3, [r7, #108]	@ 0x6c
 8007f82:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8007f84:	2b01      	cmp	r3, #1
 8007f86:	d106      	bne.n	8007f96 <UART_DMAReceiveCplt+0x11e>
 8007f88:	6efb      	ldr	r3, [r7, #108]	@ 0x6c
 8007f8a:	8d9b      	ldrh	r3, [r3, #44]	@ 0x2c
 8007f8c:	4619      	mov	r1, r3
 8007f8e:	6ef8      	ldr	r0, [r7, #108]	@ 0x6c
 8007f90:	f7ff ff66 	bl	8007e60 <HAL_UARTEx_RxEventCallback>
 8007f94:	e002      	b.n	8007f9c <UART_DMAReceiveCplt+0x124>
 8007f96:	6ef8      	ldr	r0, [r7, #108]	@ 0x6c
 8007f98:	f7f9 f9d6 	bl	8001348 <HAL_UART_RxCpltCallback>
 8007f9c:	bf00      	nop
 8007f9e:	3770      	adds	r7, #112	@ 0x70
 8007fa0:	46bd      	mov	sp, r7
 8007fa2:	bd80      	pop	{r7, pc}

08007fa4 <UART_DMARxHalfCplt>:
 8007fa4:	b580      	push	{r7, lr}
 8007fa6:	b084      	sub	sp, #16
 8007fa8:	af00      	add	r7, sp, #0
 8007faa:	6078      	str	r0, [r7, #4]
 8007fac:	687b      	ldr	r3, [r7, #4]
 8007fae:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8007fb0:	60fb      	str	r3, [r7, #12]
 8007fb2:	68fb      	ldr	r3, [r7, #12]
 8007fb4:	2201      	movs	r2, #1
 8007fb6:	635a      	str	r2, [r3, #52]	@ 0x34
 8007fb8:	68fb      	ldr	r3, [r7, #12]
 8007fba:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8007fbc:	2b01      	cmp	r3, #1
 8007fbe:	d108      	bne.n	8007fd2 <UART_DMARxHalfCplt+0x2e>
 8007fc0:	68fb      	ldr	r3, [r7, #12]
 8007fc2:	8d9b      	ldrh	r3, [r3, #44]	@ 0x2c
 8007fc4:	085b      	lsrs	r3, r3, #1
 8007fc6:	b29b      	uxth	r3, r3
 8007fc8:	4619      	mov	r1, r3
 8007fca:	68f8      	ldr	r0, [r7, #12]
 8007fcc:	f7ff ff48 	bl	8007e60 <HAL_UARTEx_RxEventCallback>
 8007fd0:	e002      	b.n	8007fd8 <UART_DMARxHalfCplt+0x34>
 8007fd2:	68f8      	ldr	r0, [r7, #12]
 8007fd4:	f7ff ff30 	bl	8007e38 <HAL_UART_RxHalfCpltCallback>
 8007fd8:	bf00      	nop
 8007fda:	3710      	adds	r7, #16
 8007fdc:	46bd      	mov	sp, r7
 8007fde:	bd80      	pop	{r7, pc}

08007fe0 <UART_DMAError>:
 8007fe0:	b580      	push	{r7, lr}
 8007fe2:	b084      	sub	sp, #16
 8007fe4:	af00      	add	r7, sp, #0
 8007fe6:	6078      	str	r0, [r7, #4]
 8007fe8:	2300      	movs	r3, #0
 8007fea:	60fb      	str	r3, [r7, #12]
 8007fec:	687b      	ldr	r3, [r7, #4]
 8007fee:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8007ff0:	60bb      	str	r3, [r7, #8]
 8007ff2:	68bb      	ldr	r3, [r7, #8]
 8007ff4:	681b      	ldr	r3, [r3, #0]
 8007ff6:	695b      	ldr	r3, [r3, #20]
 8007ff8:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8007ffc:	2b80      	cmp	r3, #128	@ 0x80
 8007ffe:	bf0c      	ite	eq
 8008000:	2301      	moveq	r3, #1
 8008002:	2300      	movne	r3, #0
 8008004:	b2db      	uxtb	r3, r3
 8008006:	60fb      	str	r3, [r7, #12]
 8008008:	68bb      	ldr	r3, [r7, #8]
 800800a:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 800800e:	b2db      	uxtb	r3, r3
 8008010:	2b21      	cmp	r3, #33	@ 0x21
 8008012:	d108      	bne.n	8008026 <UART_DMAError+0x46>
 8008014:	68fb      	ldr	r3, [r7, #12]
 8008016:	2b00      	cmp	r3, #0
 8008018:	d005      	beq.n	8008026 <UART_DMAError+0x46>
 800801a:	68bb      	ldr	r3, [r7, #8]
 800801c:	2200      	movs	r2, #0
 800801e:	84da      	strh	r2, [r3, #38]	@ 0x26
 8008020:	68b8      	ldr	r0, [r7, #8]
 8008022:	f000 f91b 	bl	800825c <UART_EndTxTransfer>
 8008026:	68bb      	ldr	r3, [r7, #8]
 8008028:	681b      	ldr	r3, [r3, #0]
 800802a:	695b      	ldr	r3, [r3, #20]
 800802c:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8008030:	2b40      	cmp	r3, #64	@ 0x40
 8008032:	bf0c      	ite	eq
 8008034:	2301      	moveq	r3, #1
 8008036:	2300      	movne	r3, #0
 8008038:	b2db      	uxtb	r3, r3
 800803a:	60fb      	str	r3, [r7, #12]
 800803c:	68bb      	ldr	r3, [r7, #8]
 800803e:	f893 3042 	ldrb.w	r3, [r3, #66]	@ 0x42
 8008042:	b2db      	uxtb	r3, r3
 8008044:	2b22      	cmp	r3, #34	@ 0x22
 8008046:	d108      	bne.n	800805a <UART_DMAError+0x7a>
 8008048:	68fb      	ldr	r3, [r7, #12]
 800804a:	2b00      	cmp	r3, #0
 800804c:	d005      	beq.n	800805a <UART_DMAError+0x7a>
 800804e:	68bb      	ldr	r3, [r7, #8]
 8008050:	2200      	movs	r2, #0
 8008052:	85da      	strh	r2, [r3, #46]	@ 0x2e
 8008054:	68b8      	ldr	r0, [r7, #8]
 8008056:	f000 f929 	bl	80082ac <UART_EndRxTransfer>
 800805a:	68bb      	ldr	r3, [r7, #8]
 800805c:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800805e:	f043 0210 	orr.w	r2, r3, #16
 8008062:	68bb      	ldr	r3, [r7, #8]
 8008064:	645a      	str	r2, [r3, #68]	@ 0x44
 8008066:	68b8      	ldr	r0, [r7, #8]
 8008068:	f7ff fef0 	bl	8007e4c <HAL_UART_ErrorCallback>
 800806c:	bf00      	nop
 800806e:	3710      	adds	r7, #16
 8008070:	46bd      	mov	sp, r7
 8008072:	bd80      	pop	{r7, pc}

08008074 <UART_WaitOnFlagUntilTimeout>:
 8008074:	b580      	push	{r7, lr}
 8008076:	b086      	sub	sp, #24
 8008078:	af00      	add	r7, sp, #0
 800807a:	60f8      	str	r0, [r7, #12]
 800807c:	60b9      	str	r1, [r7, #8]
 800807e:	603b      	str	r3, [r7, #0]
 8008080:	4613      	mov	r3, r2
 8008082:	71fb      	strb	r3, [r7, #7]
 8008084:	e03b      	b.n	80080fe <UART_WaitOnFlagUntilTimeout+0x8a>
 8008086:	6a3b      	ldr	r3, [r7, #32]
 8008088:	f1b3 3fff 	cmp.w	r3, #4294967295
 800808c:	d037      	beq.n	80080fe <UART_WaitOnFlagUntilTimeout+0x8a>
 800808e:	f7fb fc9d 	bl	80039cc <HAL_GetTick>
 8008092:	4602      	mov	r2, r0
 8008094:	683b      	ldr	r3, [r7, #0]
 8008096:	1ad3      	subs	r3, r2, r3
 8008098:	6a3a      	ldr	r2, [r7, #32]
 800809a:	429a      	cmp	r2, r3
 800809c:	d302      	bcc.n	80080a4 <UART_WaitOnFlagUntilTimeout+0x30>
 800809e:	6a3b      	ldr	r3, [r7, #32]
 80080a0:	2b00      	cmp	r3, #0
 80080a2:	d101      	bne.n	80080a8 <UART_WaitOnFlagUntilTimeout+0x34>
 80080a4:	2303      	movs	r3, #3
 80080a6:	e03a      	b.n	800811e <UART_WaitOnFlagUntilTimeout+0xaa>
 80080a8:	68fb      	ldr	r3, [r7, #12]
 80080aa:	681b      	ldr	r3, [r3, #0]
 80080ac:	68db      	ldr	r3, [r3, #12]
 80080ae:	f003 0304 	and.w	r3, r3, #4
 80080b2:	2b00      	cmp	r3, #0
 80080b4:	d023      	beq.n	80080fe <UART_WaitOnFlagUntilTimeout+0x8a>
 80080b6:	68bb      	ldr	r3, [r7, #8]
 80080b8:	2b80      	cmp	r3, #128	@ 0x80
 80080ba:	d020      	beq.n	80080fe <UART_WaitOnFlagUntilTimeout+0x8a>
 80080bc:	68bb      	ldr	r3, [r7, #8]
 80080be:	2b40      	cmp	r3, #64	@ 0x40
 80080c0:	d01d      	beq.n	80080fe <UART_WaitOnFlagUntilTimeout+0x8a>
 80080c2:	68fb      	ldr	r3, [r7, #12]
 80080c4:	681b      	ldr	r3, [r3, #0]
 80080c6:	681b      	ldr	r3, [r3, #0]
 80080c8:	f003 0308 	and.w	r3, r3, #8
 80080cc:	2b08      	cmp	r3, #8
 80080ce:	d116      	bne.n	80080fe <UART_WaitOnFlagUntilTimeout+0x8a>
 80080d0:	2300      	movs	r3, #0
 80080d2:	617b      	str	r3, [r7, #20]
 80080d4:	68fb      	ldr	r3, [r7, #12]
 80080d6:	681b      	ldr	r3, [r3, #0]
 80080d8:	681b      	ldr	r3, [r3, #0]
 80080da:	617b      	str	r3, [r7, #20]
 80080dc:	68fb      	ldr	r3, [r7, #12]
 80080de:	681b      	ldr	r3, [r3, #0]
 80080e0:	685b      	ldr	r3, [r3, #4]
 80080e2:	617b      	str	r3, [r7, #20]
 80080e4:	697b      	ldr	r3, [r7, #20]
 80080e6:	68f8      	ldr	r0, [r7, #12]
 80080e8:	f000 f8e0 	bl	80082ac <UART_EndRxTransfer>
 80080ec:	68fb      	ldr	r3, [r7, #12]
 80080ee:	2208      	movs	r2, #8
 80080f0:	645a      	str	r2, [r3, #68]	@ 0x44
 80080f2:	68fb      	ldr	r3, [r7, #12]
 80080f4:	2200      	movs	r2, #0
 80080f6:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 80080fa:	2301      	movs	r3, #1
 80080fc:	e00f      	b.n	800811e <UART_WaitOnFlagUntilTimeout+0xaa>
 80080fe:	68fb      	ldr	r3, [r7, #12]
 8008100:	681b      	ldr	r3, [r3, #0]
 8008102:	681a      	ldr	r2, [r3, #0]
 8008104:	68bb      	ldr	r3, [r7, #8]
 8008106:	4013      	ands	r3, r2
 8008108:	68ba      	ldr	r2, [r7, #8]
 800810a:	429a      	cmp	r2, r3
 800810c:	bf0c      	ite	eq
 800810e:	2301      	moveq	r3, #1
 8008110:	2300      	movne	r3, #0
 8008112:	b2db      	uxtb	r3, r3
 8008114:	461a      	mov	r2, r3
 8008116:	79fb      	ldrb	r3, [r7, #7]
 8008118:	429a      	cmp	r2, r3
 800811a:	d0b4      	beq.n	8008086 <UART_WaitOnFlagUntilTimeout+0x12>
 800811c:	2300      	movs	r3, #0
 800811e:	4618      	mov	r0, r3
 8008120:	3718      	adds	r7, #24
 8008122:	46bd      	mov	sp, r7
 8008124:	bd80      	pop	{r7, pc}
	...

08008128 <UART_Start_Receive_DMA>:
 8008128:	b580      	push	{r7, lr}
 800812a:	b098      	sub	sp, #96	@ 0x60
 800812c:	af00      	add	r7, sp, #0
 800812e:	60f8      	str	r0, [r7, #12]
 8008130:	60b9      	str	r1, [r7, #8]
 8008132:	4613      	mov	r3, r2
 8008134:	80fb      	strh	r3, [r7, #6]
 8008136:	68ba      	ldr	r2, [r7, #8]
 8008138:	68fb      	ldr	r3, [r7, #12]
 800813a:	629a      	str	r2, [r3, #40]	@ 0x28
 800813c:	68fb      	ldr	r3, [r7, #12]
 800813e:	88fa      	ldrh	r2, [r7, #6]
 8008140:	859a      	strh	r2, [r3, #44]	@ 0x2c
 8008142:	68fb      	ldr	r3, [r7, #12]
 8008144:	2200      	movs	r2, #0
 8008146:	645a      	str	r2, [r3, #68]	@ 0x44
 8008148:	68fb      	ldr	r3, [r7, #12]
 800814a:	2222      	movs	r2, #34	@ 0x22
 800814c:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8008150:	68fb      	ldr	r3, [r7, #12]
 8008152:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8008154:	4a3e      	ldr	r2, [pc, #248]	@ (8008250 <UART_Start_Receive_DMA+0x128>)
 8008156:	63da      	str	r2, [r3, #60]	@ 0x3c
 8008158:	68fb      	ldr	r3, [r7, #12]
 800815a:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800815c:	4a3d      	ldr	r2, [pc, #244]	@ (8008254 <UART_Start_Receive_DMA+0x12c>)
 800815e:	641a      	str	r2, [r3, #64]	@ 0x40
 8008160:	68fb      	ldr	r3, [r7, #12]
 8008162:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8008164:	4a3c      	ldr	r2, [pc, #240]	@ (8008258 <UART_Start_Receive_DMA+0x130>)
 8008166:	64da      	str	r2, [r3, #76]	@ 0x4c
 8008168:	68fb      	ldr	r3, [r7, #12]
 800816a:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800816c:	2200      	movs	r2, #0
 800816e:	651a      	str	r2, [r3, #80]	@ 0x50
 8008170:	f107 0308 	add.w	r3, r7, #8
 8008174:	65fb      	str	r3, [r7, #92]	@ 0x5c
 8008176:	68fb      	ldr	r3, [r7, #12]
 8008178:	6bd8      	ldr	r0, [r3, #60]	@ 0x3c
 800817a:	68fb      	ldr	r3, [r7, #12]
 800817c:	681b      	ldr	r3, [r3, #0]
 800817e:	3304      	adds	r3, #4
 8008180:	4619      	mov	r1, r3
 8008182:	6dfb      	ldr	r3, [r7, #92]	@ 0x5c
 8008184:	681a      	ldr	r2, [r3, #0]
 8008186:	88fb      	ldrh	r3, [r7, #6]
 8008188:	f7fb fe10 	bl	8003dac <HAL_DMA_Start_IT>
 800818c:	2300      	movs	r3, #0
 800818e:	613b      	str	r3, [r7, #16]
 8008190:	68fb      	ldr	r3, [r7, #12]
 8008192:	681b      	ldr	r3, [r3, #0]
 8008194:	681b      	ldr	r3, [r3, #0]
 8008196:	613b      	str	r3, [r7, #16]
 8008198:	68fb      	ldr	r3, [r7, #12]
 800819a:	681b      	ldr	r3, [r3, #0]
 800819c:	685b      	ldr	r3, [r3, #4]
 800819e:	613b      	str	r3, [r7, #16]
 80081a0:	693b      	ldr	r3, [r7, #16]
 80081a2:	68fb      	ldr	r3, [r7, #12]
 80081a4:	691b      	ldr	r3, [r3, #16]
 80081a6:	2b00      	cmp	r3, #0
 80081a8:	d019      	beq.n	80081de <UART_Start_Receive_DMA+0xb6>
 80081aa:	68fb      	ldr	r3, [r7, #12]
 80081ac:	681b      	ldr	r3, [r3, #0]
 80081ae:	330c      	adds	r3, #12
 80081b0:	643b      	str	r3, [r7, #64]	@ 0x40
 80081b2:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
 80081b4:	e853 3f00 	ldrex	r3, [r3]
 80081b8:	63fb      	str	r3, [r7, #60]	@ 0x3c
 80081ba:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 80081bc:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 80081c0:	65bb      	str	r3, [r7, #88]	@ 0x58
 80081c2:	68fb      	ldr	r3, [r7, #12]
 80081c4:	681b      	ldr	r3, [r3, #0]
 80081c6:	330c      	adds	r3, #12
 80081c8:	6dba      	ldr	r2, [r7, #88]	@ 0x58
 80081ca:	64fa      	str	r2, [r7, #76]	@ 0x4c
 80081cc:	64bb      	str	r3, [r7, #72]	@ 0x48
 80081ce:	6cb9      	ldr	r1, [r7, #72]	@ 0x48
 80081d0:	6cfa      	ldr	r2, [r7, #76]	@ 0x4c
 80081d2:	e841 2300 	strex	r3, r2, [r1]
 80081d6:	647b      	str	r3, [r7, #68]	@ 0x44
 80081d8:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
 80081da:	2b00      	cmp	r3, #0
 80081dc:	d1e5      	bne.n	80081aa <UART_Start_Receive_DMA+0x82>
 80081de:	68fb      	ldr	r3, [r7, #12]
 80081e0:	681b      	ldr	r3, [r3, #0]
 80081e2:	3314      	adds	r3, #20
 80081e4:	62fb      	str	r3, [r7, #44]	@ 0x2c
 80081e6:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 80081e8:	e853 3f00 	ldrex	r3, [r3]
 80081ec:	62bb      	str	r3, [r7, #40]	@ 0x28
 80081ee:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 80081f0:	f043 0301 	orr.w	r3, r3, #1
 80081f4:	657b      	str	r3, [r7, #84]	@ 0x54
 80081f6:	68fb      	ldr	r3, [r7, #12]
 80081f8:	681b      	ldr	r3, [r3, #0]
 80081fa:	3314      	adds	r3, #20
 80081fc:	6d7a      	ldr	r2, [r7, #84]	@ 0x54
 80081fe:	63ba      	str	r2, [r7, #56]	@ 0x38
 8008200:	637b      	str	r3, [r7, #52]	@ 0x34
 8008202:	6b79      	ldr	r1, [r7, #52]	@ 0x34
 8008204:	6bba      	ldr	r2, [r7, #56]	@ 0x38
 8008206:	e841 2300 	strex	r3, r2, [r1]
 800820a:	633b      	str	r3, [r7, #48]	@ 0x30
 800820c:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800820e:	2b00      	cmp	r3, #0
 8008210:	d1e5      	bne.n	80081de <UART_Start_Receive_DMA+0xb6>
 8008212:	68fb      	ldr	r3, [r7, #12]
 8008214:	681b      	ldr	r3, [r3, #0]
 8008216:	3314      	adds	r3, #20
 8008218:	61bb      	str	r3, [r7, #24]
 800821a:	69bb      	ldr	r3, [r7, #24]
 800821c:	e853 3f00 	ldrex	r3, [r3]
 8008220:	617b      	str	r3, [r7, #20]
 8008222:	697b      	ldr	r3, [r7, #20]
 8008224:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8008228:	653b      	str	r3, [r7, #80]	@ 0x50
 800822a:	68fb      	ldr	r3, [r7, #12]
 800822c:	681b      	ldr	r3, [r3, #0]
 800822e:	3314      	adds	r3, #20
 8008230:	6d3a      	ldr	r2, [r7, #80]	@ 0x50
 8008232:	627a      	str	r2, [r7, #36]	@ 0x24
 8008234:	623b      	str	r3, [r7, #32]
 8008236:	6a39      	ldr	r1, [r7, #32]
 8008238:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 800823a:	e841 2300 	strex	r3, r2, [r1]
 800823e:	61fb      	str	r3, [r7, #28]
 8008240:	69fb      	ldr	r3, [r7, #28]
 8008242:	2b00      	cmp	r3, #0
 8008244:	d1e5      	bne.n	8008212 <UART_Start_Receive_DMA+0xea>
 8008246:	2300      	movs	r3, #0
 8008248:	4618      	mov	r0, r3
 800824a:	3760      	adds	r7, #96	@ 0x60
 800824c:	46bd      	mov	sp, r7
 800824e:	bd80      	pop	{r7, pc}
 8008250:	08007e79 	.word	0x08007e79
 8008254:	08007fa5 	.word	0x08007fa5
 8008258:	08007fe1 	.word	0x08007fe1

0800825c <UART_EndTxTransfer>:
 800825c:	b480      	push	{r7}
 800825e:	b089      	sub	sp, #36	@ 0x24
 8008260:	af00      	add	r7, sp, #0
 8008262:	6078      	str	r0, [r7, #4]
 8008264:	687b      	ldr	r3, [r7, #4]
 8008266:	681b      	ldr	r3, [r3, #0]
 8008268:	330c      	adds	r3, #12
 800826a:	60fb      	str	r3, [r7, #12]
 800826c:	68fb      	ldr	r3, [r7, #12]
 800826e:	e853 3f00 	ldrex	r3, [r3]
 8008272:	60bb      	str	r3, [r7, #8]
 8008274:	68bb      	ldr	r3, [r7, #8]
 8008276:	f023 03c0 	bic.w	r3, r3, #192	@ 0xc0
 800827a:	61fb      	str	r3, [r7, #28]
 800827c:	687b      	ldr	r3, [r7, #4]
 800827e:	681b      	ldr	r3, [r3, #0]
 8008280:	330c      	adds	r3, #12
 8008282:	69fa      	ldr	r2, [r7, #28]
 8008284:	61ba      	str	r2, [r7, #24]
 8008286:	617b      	str	r3, [r7, #20]
 8008288:	6979      	ldr	r1, [r7, #20]
 800828a:	69ba      	ldr	r2, [r7, #24]
 800828c:	e841 2300 	strex	r3, r2, [r1]
 8008290:	613b      	str	r3, [r7, #16]
 8008292:	693b      	ldr	r3, [r7, #16]
 8008294:	2b00      	cmp	r3, #0
 8008296:	d1e5      	bne.n	8008264 <UART_EndTxTransfer+0x8>
 8008298:	687b      	ldr	r3, [r7, #4]
 800829a:	2220      	movs	r2, #32
 800829c:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 80082a0:	bf00      	nop
 80082a2:	3724      	adds	r7, #36	@ 0x24
 80082a4:	46bd      	mov	sp, r7
 80082a6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80082aa:	4770      	bx	lr

080082ac <UART_EndRxTransfer>:
 80082ac:	b480      	push	{r7}
 80082ae:	b095      	sub	sp, #84	@ 0x54
 80082b0:	af00      	add	r7, sp, #0
 80082b2:	6078      	str	r0, [r7, #4]
 80082b4:	687b      	ldr	r3, [r7, #4]
 80082b6:	681b      	ldr	r3, [r3, #0]
 80082b8:	330c      	adds	r3, #12
 80082ba:	637b      	str	r3, [r7, #52]	@ 0x34
 80082bc:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 80082be:	e853 3f00 	ldrex	r3, [r3]
 80082c2:	633b      	str	r3, [r7, #48]	@ 0x30
 80082c4:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80082c6:	f423 7390 	bic.w	r3, r3, #288	@ 0x120
 80082ca:	64fb      	str	r3, [r7, #76]	@ 0x4c
 80082cc:	687b      	ldr	r3, [r7, #4]
 80082ce:	681b      	ldr	r3, [r3, #0]
 80082d0:	330c      	adds	r3, #12
 80082d2:	6cfa      	ldr	r2, [r7, #76]	@ 0x4c
 80082d4:	643a      	str	r2, [r7, #64]	@ 0x40
 80082d6:	63fb      	str	r3, [r7, #60]	@ 0x3c
 80082d8:	6bf9      	ldr	r1, [r7, #60]	@ 0x3c
 80082da:	6c3a      	ldr	r2, [r7, #64]	@ 0x40
 80082dc:	e841 2300 	strex	r3, r2, [r1]
 80082e0:	63bb      	str	r3, [r7, #56]	@ 0x38
 80082e2:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 80082e4:	2b00      	cmp	r3, #0
 80082e6:	d1e5      	bne.n	80082b4 <UART_EndRxTransfer+0x8>
 80082e8:	687b      	ldr	r3, [r7, #4]
 80082ea:	681b      	ldr	r3, [r3, #0]
 80082ec:	3314      	adds	r3, #20
 80082ee:	623b      	str	r3, [r7, #32]
 80082f0:	6a3b      	ldr	r3, [r7, #32]
 80082f2:	e853 3f00 	ldrex	r3, [r3]
 80082f6:	61fb      	str	r3, [r7, #28]
 80082f8:	69fb      	ldr	r3, [r7, #28]
 80082fa:	f023 0301 	bic.w	r3, r3, #1
 80082fe:	64bb      	str	r3, [r7, #72]	@ 0x48
 8008300:	687b      	ldr	r3, [r7, #4]
 8008302:	681b      	ldr	r3, [r3, #0]
 8008304:	3314      	adds	r3, #20
 8008306:	6cba      	ldr	r2, [r7, #72]	@ 0x48
 8008308:	62fa      	str	r2, [r7, #44]	@ 0x2c
 800830a:	62bb      	str	r3, [r7, #40]	@ 0x28
 800830c:	6ab9      	ldr	r1, [r7, #40]	@ 0x28
 800830e:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 8008310:	e841 2300 	strex	r3, r2, [r1]
 8008314:	627b      	str	r3, [r7, #36]	@ 0x24
 8008316:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8008318:	2b00      	cmp	r3, #0
 800831a:	d1e5      	bne.n	80082e8 <UART_EndRxTransfer+0x3c>
 800831c:	687b      	ldr	r3, [r7, #4]
 800831e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8008320:	2b01      	cmp	r3, #1
 8008322:	d119      	bne.n	8008358 <UART_EndRxTransfer+0xac>
 8008324:	687b      	ldr	r3, [r7, #4]
 8008326:	681b      	ldr	r3, [r3, #0]
 8008328:	330c      	adds	r3, #12
 800832a:	60fb      	str	r3, [r7, #12]
 800832c:	68fb      	ldr	r3, [r7, #12]
 800832e:	e853 3f00 	ldrex	r3, [r3]
 8008332:	60bb      	str	r3, [r7, #8]
 8008334:	68bb      	ldr	r3, [r7, #8]
 8008336:	f023 0310 	bic.w	r3, r3, #16
 800833a:	647b      	str	r3, [r7, #68]	@ 0x44
 800833c:	687b      	ldr	r3, [r7, #4]
 800833e:	681b      	ldr	r3, [r3, #0]
 8008340:	330c      	adds	r3, #12
 8008342:	6c7a      	ldr	r2, [r7, #68]	@ 0x44
 8008344:	61ba      	str	r2, [r7, #24]
 8008346:	617b      	str	r3, [r7, #20]
 8008348:	6979      	ldr	r1, [r7, #20]
 800834a:	69ba      	ldr	r2, [r7, #24]
 800834c:	e841 2300 	strex	r3, r2, [r1]
 8008350:	613b      	str	r3, [r7, #16]
 8008352:	693b      	ldr	r3, [r7, #16]
 8008354:	2b00      	cmp	r3, #0
 8008356:	d1e5      	bne.n	8008324 <UART_EndRxTransfer+0x78>
 8008358:	687b      	ldr	r3, [r7, #4]
 800835a:	2220      	movs	r2, #32
 800835c:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8008360:	687b      	ldr	r3, [r7, #4]
 8008362:	2200      	movs	r2, #0
 8008364:	631a      	str	r2, [r3, #48]	@ 0x30
 8008366:	bf00      	nop
 8008368:	3754      	adds	r7, #84	@ 0x54
 800836a:	46bd      	mov	sp, r7
 800836c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008370:	4770      	bx	lr

08008372 <UART_DMAAbortOnError>:
 8008372:	b580      	push	{r7, lr}
 8008374:	b084      	sub	sp, #16
 8008376:	af00      	add	r7, sp, #0
 8008378:	6078      	str	r0, [r7, #4]
 800837a:	687b      	ldr	r3, [r7, #4]
 800837c:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800837e:	60fb      	str	r3, [r7, #12]
 8008380:	68fb      	ldr	r3, [r7, #12]
 8008382:	2200      	movs	r2, #0
 8008384:	85da      	strh	r2, [r3, #46]	@ 0x2e
 8008386:	68fb      	ldr	r3, [r7, #12]
 8008388:	2200      	movs	r2, #0
 800838a:	84da      	strh	r2, [r3, #38]	@ 0x26
 800838c:	68f8      	ldr	r0, [r7, #12]
 800838e:	f7ff fd5d 	bl	8007e4c <HAL_UART_ErrorCallback>
 8008392:	bf00      	nop
 8008394:	3710      	adds	r7, #16
 8008396:	46bd      	mov	sp, r7
 8008398:	bd80      	pop	{r7, pc}

0800839a <UART_Transmit_IT>:
 800839a:	b480      	push	{r7}
 800839c:	b085      	sub	sp, #20
 800839e:	af00      	add	r7, sp, #0
 80083a0:	6078      	str	r0, [r7, #4]
 80083a2:	687b      	ldr	r3, [r7, #4]
 80083a4:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 80083a8:	b2db      	uxtb	r3, r3
 80083aa:	2b21      	cmp	r3, #33	@ 0x21
 80083ac:	d13e      	bne.n	800842c <UART_Transmit_IT+0x92>
 80083ae:	687b      	ldr	r3, [r7, #4]
 80083b0:	689b      	ldr	r3, [r3, #8]
 80083b2:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 80083b6:	d114      	bne.n	80083e2 <UART_Transmit_IT+0x48>
 80083b8:	687b      	ldr	r3, [r7, #4]
 80083ba:	691b      	ldr	r3, [r3, #16]
 80083bc:	2b00      	cmp	r3, #0
 80083be:	d110      	bne.n	80083e2 <UART_Transmit_IT+0x48>
 80083c0:	687b      	ldr	r3, [r7, #4]
 80083c2:	6a1b      	ldr	r3, [r3, #32]
 80083c4:	60fb      	str	r3, [r7, #12]
 80083c6:	68fb      	ldr	r3, [r7, #12]
 80083c8:	881b      	ldrh	r3, [r3, #0]
 80083ca:	461a      	mov	r2, r3
 80083cc:	687b      	ldr	r3, [r7, #4]
 80083ce:	681b      	ldr	r3, [r3, #0]
 80083d0:	f3c2 0208 	ubfx	r2, r2, #0, #9
 80083d4:	605a      	str	r2, [r3, #4]
 80083d6:	687b      	ldr	r3, [r7, #4]
 80083d8:	6a1b      	ldr	r3, [r3, #32]
 80083da:	1c9a      	adds	r2, r3, #2
 80083dc:	687b      	ldr	r3, [r7, #4]
 80083de:	621a      	str	r2, [r3, #32]
 80083e0:	e008      	b.n	80083f4 <UART_Transmit_IT+0x5a>
 80083e2:	687b      	ldr	r3, [r7, #4]
 80083e4:	6a1b      	ldr	r3, [r3, #32]
 80083e6:	1c59      	adds	r1, r3, #1
 80083e8:	687a      	ldr	r2, [r7, #4]
 80083ea:	6211      	str	r1, [r2, #32]
 80083ec:	781a      	ldrb	r2, [r3, #0]
 80083ee:	687b      	ldr	r3, [r7, #4]
 80083f0:	681b      	ldr	r3, [r3, #0]
 80083f2:	605a      	str	r2, [r3, #4]
 80083f4:	687b      	ldr	r3, [r7, #4]
 80083f6:	8cdb      	ldrh	r3, [r3, #38]	@ 0x26
 80083f8:	b29b      	uxth	r3, r3
 80083fa:	3b01      	subs	r3, #1
 80083fc:	b29b      	uxth	r3, r3
 80083fe:	687a      	ldr	r2, [r7, #4]
 8008400:	4619      	mov	r1, r3
 8008402:	84d1      	strh	r1, [r2, #38]	@ 0x26
 8008404:	2b00      	cmp	r3, #0
 8008406:	d10f      	bne.n	8008428 <UART_Transmit_IT+0x8e>
 8008408:	687b      	ldr	r3, [r7, #4]
 800840a:	681b      	ldr	r3, [r3, #0]
 800840c:	68da      	ldr	r2, [r3, #12]
 800840e:	687b      	ldr	r3, [r7, #4]
 8008410:	681b      	ldr	r3, [r3, #0]
 8008412:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
 8008416:	60da      	str	r2, [r3, #12]
 8008418:	687b      	ldr	r3, [r7, #4]
 800841a:	681b      	ldr	r3, [r3, #0]
 800841c:	68da      	ldr	r2, [r3, #12]
 800841e:	687b      	ldr	r3, [r7, #4]
 8008420:	681b      	ldr	r3, [r3, #0]
 8008422:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 8008426:	60da      	str	r2, [r3, #12]
 8008428:	2300      	movs	r3, #0
 800842a:	e000      	b.n	800842e <UART_Transmit_IT+0x94>
 800842c:	2302      	movs	r3, #2
 800842e:	4618      	mov	r0, r3
 8008430:	3714      	adds	r7, #20
 8008432:	46bd      	mov	sp, r7
 8008434:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008438:	4770      	bx	lr

0800843a <UART_EndTransmit_IT>:
 800843a:	b580      	push	{r7, lr}
 800843c:	b082      	sub	sp, #8
 800843e:	af00      	add	r7, sp, #0
 8008440:	6078      	str	r0, [r7, #4]
 8008442:	687b      	ldr	r3, [r7, #4]
 8008444:	681b      	ldr	r3, [r3, #0]
 8008446:	68da      	ldr	r2, [r3, #12]
 8008448:	687b      	ldr	r3, [r7, #4]
 800844a:	681b      	ldr	r3, [r3, #0]
 800844c:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 8008450:	60da      	str	r2, [r3, #12]
 8008452:	687b      	ldr	r3, [r7, #4]
 8008454:	2220      	movs	r2, #32
 8008456:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 800845a:	6878      	ldr	r0, [r7, #4]
 800845c:	f7ff fce2 	bl	8007e24 <HAL_UART_TxCpltCallback>
 8008460:	2300      	movs	r3, #0
 8008462:	4618      	mov	r0, r3
 8008464:	3708      	adds	r7, #8
 8008466:	46bd      	mov	sp, r7
 8008468:	bd80      	pop	{r7, pc}

0800846a <UART_Receive_IT>:
 800846a:	b580      	push	{r7, lr}
 800846c:	b08c      	sub	sp, #48	@ 0x30
 800846e:	af00      	add	r7, sp, #0
 8008470:	6078      	str	r0, [r7, #4]
 8008472:	687b      	ldr	r3, [r7, #4]
 8008474:	f893 3042 	ldrb.w	r3, [r3, #66]	@ 0x42
 8008478:	b2db      	uxtb	r3, r3
 800847a:	2b22      	cmp	r3, #34	@ 0x22
 800847c:	f040 80ae 	bne.w	80085dc <UART_Receive_IT+0x172>
 8008480:	687b      	ldr	r3, [r7, #4]
 8008482:	689b      	ldr	r3, [r3, #8]
 8008484:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8008488:	d117      	bne.n	80084ba <UART_Receive_IT+0x50>
 800848a:	687b      	ldr	r3, [r7, #4]
 800848c:	691b      	ldr	r3, [r3, #16]
 800848e:	2b00      	cmp	r3, #0
 8008490:	d113      	bne.n	80084ba <UART_Receive_IT+0x50>
 8008492:	2300      	movs	r3, #0
 8008494:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8008496:	687b      	ldr	r3, [r7, #4]
 8008498:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800849a:	62bb      	str	r3, [r7, #40]	@ 0x28
 800849c:	687b      	ldr	r3, [r7, #4]
 800849e:	681b      	ldr	r3, [r3, #0]
 80084a0:	685b      	ldr	r3, [r3, #4]
 80084a2:	b29b      	uxth	r3, r3
 80084a4:	f3c3 0308 	ubfx	r3, r3, #0, #9
 80084a8:	b29a      	uxth	r2, r3
 80084aa:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 80084ac:	801a      	strh	r2, [r3, #0]
 80084ae:	687b      	ldr	r3, [r7, #4]
 80084b0:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80084b2:	1c9a      	adds	r2, r3, #2
 80084b4:	687b      	ldr	r3, [r7, #4]
 80084b6:	629a      	str	r2, [r3, #40]	@ 0x28
 80084b8:	e026      	b.n	8008508 <UART_Receive_IT+0x9e>
 80084ba:	687b      	ldr	r3, [r7, #4]
 80084bc:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80084be:	62fb      	str	r3, [r7, #44]	@ 0x2c
 80084c0:	2300      	movs	r3, #0
 80084c2:	62bb      	str	r3, [r7, #40]	@ 0x28
 80084c4:	687b      	ldr	r3, [r7, #4]
 80084c6:	689b      	ldr	r3, [r3, #8]
 80084c8:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 80084cc:	d007      	beq.n	80084de <UART_Receive_IT+0x74>
 80084ce:	687b      	ldr	r3, [r7, #4]
 80084d0:	689b      	ldr	r3, [r3, #8]
 80084d2:	2b00      	cmp	r3, #0
 80084d4:	d10a      	bne.n	80084ec <UART_Receive_IT+0x82>
 80084d6:	687b      	ldr	r3, [r7, #4]
 80084d8:	691b      	ldr	r3, [r3, #16]
 80084da:	2b00      	cmp	r3, #0
 80084dc:	d106      	bne.n	80084ec <UART_Receive_IT+0x82>
 80084de:	687b      	ldr	r3, [r7, #4]
 80084e0:	681b      	ldr	r3, [r3, #0]
 80084e2:	685b      	ldr	r3, [r3, #4]
 80084e4:	b2da      	uxtb	r2, r3
 80084e6:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 80084e8:	701a      	strb	r2, [r3, #0]
 80084ea:	e008      	b.n	80084fe <UART_Receive_IT+0x94>
 80084ec:	687b      	ldr	r3, [r7, #4]
 80084ee:	681b      	ldr	r3, [r3, #0]
 80084f0:	685b      	ldr	r3, [r3, #4]
 80084f2:	b2db      	uxtb	r3, r3
 80084f4:	f003 037f 	and.w	r3, r3, #127	@ 0x7f
 80084f8:	b2da      	uxtb	r2, r3
 80084fa:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 80084fc:	701a      	strb	r2, [r3, #0]
 80084fe:	687b      	ldr	r3, [r7, #4]
 8008500:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8008502:	1c5a      	adds	r2, r3, #1
 8008504:	687b      	ldr	r3, [r7, #4]
 8008506:	629a      	str	r2, [r3, #40]	@ 0x28
 8008508:	687b      	ldr	r3, [r7, #4]
 800850a:	8ddb      	ldrh	r3, [r3, #46]	@ 0x2e
 800850c:	b29b      	uxth	r3, r3
 800850e:	3b01      	subs	r3, #1
 8008510:	b29b      	uxth	r3, r3
 8008512:	687a      	ldr	r2, [r7, #4]
 8008514:	4619      	mov	r1, r3
 8008516:	85d1      	strh	r1, [r2, #46]	@ 0x2e
 8008518:	2b00      	cmp	r3, #0
 800851a:	d15d      	bne.n	80085d8 <UART_Receive_IT+0x16e>
 800851c:	687b      	ldr	r3, [r7, #4]
 800851e:	681b      	ldr	r3, [r3, #0]
 8008520:	68da      	ldr	r2, [r3, #12]
 8008522:	687b      	ldr	r3, [r7, #4]
 8008524:	681b      	ldr	r3, [r3, #0]
 8008526:	f022 0220 	bic.w	r2, r2, #32
 800852a:	60da      	str	r2, [r3, #12]
 800852c:	687b      	ldr	r3, [r7, #4]
 800852e:	681b      	ldr	r3, [r3, #0]
 8008530:	68da      	ldr	r2, [r3, #12]
 8008532:	687b      	ldr	r3, [r7, #4]
 8008534:	681b      	ldr	r3, [r3, #0]
 8008536:	f422 7280 	bic.w	r2, r2, #256	@ 0x100
 800853a:	60da      	str	r2, [r3, #12]
 800853c:	687b      	ldr	r3, [r7, #4]
 800853e:	681b      	ldr	r3, [r3, #0]
 8008540:	695a      	ldr	r2, [r3, #20]
 8008542:	687b      	ldr	r3, [r7, #4]
 8008544:	681b      	ldr	r3, [r3, #0]
 8008546:	f022 0201 	bic.w	r2, r2, #1
 800854a:	615a      	str	r2, [r3, #20]
 800854c:	687b      	ldr	r3, [r7, #4]
 800854e:	2220      	movs	r2, #32
 8008550:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8008554:	687b      	ldr	r3, [r7, #4]
 8008556:	2200      	movs	r2, #0
 8008558:	635a      	str	r2, [r3, #52]	@ 0x34
 800855a:	687b      	ldr	r3, [r7, #4]
 800855c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800855e:	2b01      	cmp	r3, #1
 8008560:	d135      	bne.n	80085ce <UART_Receive_IT+0x164>
 8008562:	687b      	ldr	r3, [r7, #4]
 8008564:	2200      	movs	r2, #0
 8008566:	631a      	str	r2, [r3, #48]	@ 0x30
 8008568:	687b      	ldr	r3, [r7, #4]
 800856a:	681b      	ldr	r3, [r3, #0]
 800856c:	330c      	adds	r3, #12
 800856e:	617b      	str	r3, [r7, #20]
 8008570:	697b      	ldr	r3, [r7, #20]
 8008572:	e853 3f00 	ldrex	r3, [r3]
 8008576:	613b      	str	r3, [r7, #16]
 8008578:	693b      	ldr	r3, [r7, #16]
 800857a:	f023 0310 	bic.w	r3, r3, #16
 800857e:	627b      	str	r3, [r7, #36]	@ 0x24
 8008580:	687b      	ldr	r3, [r7, #4]
 8008582:	681b      	ldr	r3, [r3, #0]
 8008584:	330c      	adds	r3, #12
 8008586:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8008588:	623a      	str	r2, [r7, #32]
 800858a:	61fb      	str	r3, [r7, #28]
 800858c:	69f9      	ldr	r1, [r7, #28]
 800858e:	6a3a      	ldr	r2, [r7, #32]
 8008590:	e841 2300 	strex	r3, r2, [r1]
 8008594:	61bb      	str	r3, [r7, #24]
 8008596:	69bb      	ldr	r3, [r7, #24]
 8008598:	2b00      	cmp	r3, #0
 800859a:	d1e5      	bne.n	8008568 <UART_Receive_IT+0xfe>
 800859c:	687b      	ldr	r3, [r7, #4]
 800859e:	681b      	ldr	r3, [r3, #0]
 80085a0:	681b      	ldr	r3, [r3, #0]
 80085a2:	f003 0310 	and.w	r3, r3, #16
 80085a6:	2b10      	cmp	r3, #16
 80085a8:	d10a      	bne.n	80085c0 <UART_Receive_IT+0x156>
 80085aa:	2300      	movs	r3, #0
 80085ac:	60fb      	str	r3, [r7, #12]
 80085ae:	687b      	ldr	r3, [r7, #4]
 80085b0:	681b      	ldr	r3, [r3, #0]
 80085b2:	681b      	ldr	r3, [r3, #0]
 80085b4:	60fb      	str	r3, [r7, #12]
 80085b6:	687b      	ldr	r3, [r7, #4]
 80085b8:	681b      	ldr	r3, [r3, #0]
 80085ba:	685b      	ldr	r3, [r3, #4]
 80085bc:	60fb      	str	r3, [r7, #12]
 80085be:	68fb      	ldr	r3, [r7, #12]
 80085c0:	687b      	ldr	r3, [r7, #4]
 80085c2:	8d9b      	ldrh	r3, [r3, #44]	@ 0x2c
 80085c4:	4619      	mov	r1, r3
 80085c6:	6878      	ldr	r0, [r7, #4]
 80085c8:	f7ff fc4a 	bl	8007e60 <HAL_UARTEx_RxEventCallback>
 80085cc:	e002      	b.n	80085d4 <UART_Receive_IT+0x16a>
 80085ce:	6878      	ldr	r0, [r7, #4]
 80085d0:	f7f8 feba 	bl	8001348 <HAL_UART_RxCpltCallback>
 80085d4:	2300      	movs	r3, #0
 80085d6:	e002      	b.n	80085de <UART_Receive_IT+0x174>
 80085d8:	2300      	movs	r3, #0
 80085da:	e000      	b.n	80085de <UART_Receive_IT+0x174>
 80085dc:	2302      	movs	r3, #2
 80085de:	4618      	mov	r0, r3
 80085e0:	3730      	adds	r7, #48	@ 0x30
 80085e2:	46bd      	mov	sp, r7
 80085e4:	bd80      	pop	{r7, pc}
	...

080085e8 <UART_SetConfig>:
 80085e8:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 80085ec:	b0c0      	sub	sp, #256	@ 0x100
 80085ee:	af00      	add	r7, sp, #0
 80085f0:	f8c7 00f4 	str.w	r0, [r7, #244]	@ 0xf4
 80085f4:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 80085f8:	681b      	ldr	r3, [r3, #0]
 80085fa:	691b      	ldr	r3, [r3, #16]
 80085fc:	f423 5040 	bic.w	r0, r3, #12288	@ 0x3000
 8008600:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8008604:	68d9      	ldr	r1, [r3, #12]
 8008606:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 800860a:	681a      	ldr	r2, [r3, #0]
 800860c:	ea40 0301 	orr.w	r3, r0, r1
 8008610:	6113      	str	r3, [r2, #16]
 8008612:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8008616:	689a      	ldr	r2, [r3, #8]
 8008618:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 800861c:	691b      	ldr	r3, [r3, #16]
 800861e:	431a      	orrs	r2, r3
 8008620:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8008624:	695b      	ldr	r3, [r3, #20]
 8008626:	431a      	orrs	r2, r3
 8008628:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 800862c:	69db      	ldr	r3, [r3, #28]
 800862e:	4313      	orrs	r3, r2
 8008630:	f8c7 30f8 	str.w	r3, [r7, #248]	@ 0xf8
 8008634:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8008638:	681b      	ldr	r3, [r3, #0]
 800863a:	68db      	ldr	r3, [r3, #12]
 800863c:	f423 4116 	bic.w	r1, r3, #38400	@ 0x9600
 8008640:	f021 010c 	bic.w	r1, r1, #12
 8008644:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8008648:	681a      	ldr	r2, [r3, #0]
 800864a:	f8d7 30f8 	ldr.w	r3, [r7, #248]	@ 0xf8
 800864e:	430b      	orrs	r3, r1
 8008650:	60d3      	str	r3, [r2, #12]
 8008652:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8008656:	681b      	ldr	r3, [r3, #0]
 8008658:	695b      	ldr	r3, [r3, #20]
 800865a:	f423 7040 	bic.w	r0, r3, #768	@ 0x300
 800865e:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8008662:	6999      	ldr	r1, [r3, #24]
 8008664:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8008668:	681a      	ldr	r2, [r3, #0]
 800866a:	ea40 0301 	orr.w	r3, r0, r1
 800866e:	6153      	str	r3, [r2, #20]
 8008670:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8008674:	681a      	ldr	r2, [r3, #0]
 8008676:	4b8f      	ldr	r3, [pc, #572]	@ (80088b4 <UART_SetConfig+0x2cc>)
 8008678:	429a      	cmp	r2, r3
 800867a:	d005      	beq.n	8008688 <UART_SetConfig+0xa0>
 800867c:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8008680:	681a      	ldr	r2, [r3, #0]
 8008682:	4b8d      	ldr	r3, [pc, #564]	@ (80088b8 <UART_SetConfig+0x2d0>)
 8008684:	429a      	cmp	r2, r3
 8008686:	d104      	bne.n	8008692 <UART_SetConfig+0xaa>
 8008688:	f7fd f9fc 	bl	8005a84 <HAL_RCC_GetPCLK2Freq>
 800868c:	f8c7 00fc 	str.w	r0, [r7, #252]	@ 0xfc
 8008690:	e003      	b.n	800869a <UART_SetConfig+0xb2>
 8008692:	f7fd f9e3 	bl	8005a5c <HAL_RCC_GetPCLK1Freq>
 8008696:	f8c7 00fc 	str.w	r0, [r7, #252]	@ 0xfc
 800869a:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 800869e:	69db      	ldr	r3, [r3, #28]
 80086a0:	f5b3 4f00 	cmp.w	r3, #32768	@ 0x8000
 80086a4:	f040 810c 	bne.w	80088c0 <UART_SetConfig+0x2d8>
 80086a8:	f8d7 30fc 	ldr.w	r3, [r7, #252]	@ 0xfc
 80086ac:	2200      	movs	r2, #0
 80086ae:	f8c7 30e8 	str.w	r3, [r7, #232]	@ 0xe8
 80086b2:	f8c7 20ec 	str.w	r2, [r7, #236]	@ 0xec
 80086b6:	e9d7 453a 	ldrd	r4, r5, [r7, #232]	@ 0xe8
 80086ba:	4622      	mov	r2, r4
 80086bc:	462b      	mov	r3, r5
 80086be:	1891      	adds	r1, r2, r2
 80086c0:	65b9      	str	r1, [r7, #88]	@ 0x58
 80086c2:	415b      	adcs	r3, r3
 80086c4:	65fb      	str	r3, [r7, #92]	@ 0x5c
 80086c6:	e9d7 2316 	ldrd	r2, r3, [r7, #88]	@ 0x58
 80086ca:	4621      	mov	r1, r4
 80086cc:	eb12 0801 	adds.w	r8, r2, r1
 80086d0:	4629      	mov	r1, r5
 80086d2:	eb43 0901 	adc.w	r9, r3, r1
 80086d6:	f04f 0200 	mov.w	r2, #0
 80086da:	f04f 0300 	mov.w	r3, #0
 80086de:	ea4f 03c9 	mov.w	r3, r9, lsl #3
 80086e2:	ea43 7358 	orr.w	r3, r3, r8, lsr #29
 80086e6:	ea4f 02c8 	mov.w	r2, r8, lsl #3
 80086ea:	4690      	mov	r8, r2
 80086ec:	4699      	mov	r9, r3
 80086ee:	4623      	mov	r3, r4
 80086f0:	eb18 0303 	adds.w	r3, r8, r3
 80086f4:	f8c7 30e0 	str.w	r3, [r7, #224]	@ 0xe0
 80086f8:	462b      	mov	r3, r5
 80086fa:	eb49 0303 	adc.w	r3, r9, r3
 80086fe:	f8c7 30e4 	str.w	r3, [r7, #228]	@ 0xe4
 8008702:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8008706:	685b      	ldr	r3, [r3, #4]
 8008708:	2200      	movs	r2, #0
 800870a:	f8c7 30d8 	str.w	r3, [r7, #216]	@ 0xd8
 800870e:	f8c7 20dc 	str.w	r2, [r7, #220]	@ 0xdc
 8008712:	e9d7 1236 	ldrd	r1, r2, [r7, #216]	@ 0xd8
 8008716:	460b      	mov	r3, r1
 8008718:	18db      	adds	r3, r3, r3
 800871a:	653b      	str	r3, [r7, #80]	@ 0x50
 800871c:	4613      	mov	r3, r2
 800871e:	eb42 0303 	adc.w	r3, r2, r3
 8008722:	657b      	str	r3, [r7, #84]	@ 0x54
 8008724:	e9d7 2314 	ldrd	r2, r3, [r7, #80]	@ 0x50
 8008728:	e9d7 0138 	ldrd	r0, r1, [r7, #224]	@ 0xe0
 800872c:	f7f8 facc 	bl	8000cc8 <__aeabi_uldivmod>
 8008730:	4602      	mov	r2, r0
 8008732:	460b      	mov	r3, r1
 8008734:	4b61      	ldr	r3, [pc, #388]	@ (80088bc <UART_SetConfig+0x2d4>)
 8008736:	fba3 2302 	umull	r2, r3, r3, r2
 800873a:	095b      	lsrs	r3, r3, #5
 800873c:	011c      	lsls	r4, r3, #4
 800873e:	f8d7 30fc 	ldr.w	r3, [r7, #252]	@ 0xfc
 8008742:	2200      	movs	r2, #0
 8008744:	f8c7 30d0 	str.w	r3, [r7, #208]	@ 0xd0
 8008748:	f8c7 20d4 	str.w	r2, [r7, #212]	@ 0xd4
 800874c:	e9d7 8934 	ldrd	r8, r9, [r7, #208]	@ 0xd0
 8008750:	4642      	mov	r2, r8
 8008752:	464b      	mov	r3, r9
 8008754:	1891      	adds	r1, r2, r2
 8008756:	64b9      	str	r1, [r7, #72]	@ 0x48
 8008758:	415b      	adcs	r3, r3
 800875a:	64fb      	str	r3, [r7, #76]	@ 0x4c
 800875c:	e9d7 2312 	ldrd	r2, r3, [r7, #72]	@ 0x48
 8008760:	4641      	mov	r1, r8
 8008762:	eb12 0a01 	adds.w	sl, r2, r1
 8008766:	4649      	mov	r1, r9
 8008768:	eb43 0b01 	adc.w	fp, r3, r1
 800876c:	f04f 0200 	mov.w	r2, #0
 8008770:	f04f 0300 	mov.w	r3, #0
 8008774:	ea4f 03cb 	mov.w	r3, fp, lsl #3
 8008778:	ea43 735a 	orr.w	r3, r3, sl, lsr #29
 800877c:	ea4f 02ca 	mov.w	r2, sl, lsl #3
 8008780:	4692      	mov	sl, r2
 8008782:	469b      	mov	fp, r3
 8008784:	4643      	mov	r3, r8
 8008786:	eb1a 0303 	adds.w	r3, sl, r3
 800878a:	f8c7 30c8 	str.w	r3, [r7, #200]	@ 0xc8
 800878e:	464b      	mov	r3, r9
 8008790:	eb4b 0303 	adc.w	r3, fp, r3
 8008794:	f8c7 30cc 	str.w	r3, [r7, #204]	@ 0xcc
 8008798:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 800879c:	685b      	ldr	r3, [r3, #4]
 800879e:	2200      	movs	r2, #0
 80087a0:	f8c7 30c0 	str.w	r3, [r7, #192]	@ 0xc0
 80087a4:	f8c7 20c4 	str.w	r2, [r7, #196]	@ 0xc4
 80087a8:	e9d7 1230 	ldrd	r1, r2, [r7, #192]	@ 0xc0
 80087ac:	460b      	mov	r3, r1
 80087ae:	18db      	adds	r3, r3, r3
 80087b0:	643b      	str	r3, [r7, #64]	@ 0x40
 80087b2:	4613      	mov	r3, r2
 80087b4:	eb42 0303 	adc.w	r3, r2, r3
 80087b8:	647b      	str	r3, [r7, #68]	@ 0x44
 80087ba:	e9d7 2310 	ldrd	r2, r3, [r7, #64]	@ 0x40
 80087be:	e9d7 0132 	ldrd	r0, r1, [r7, #200]	@ 0xc8
 80087c2:	f7f8 fa81 	bl	8000cc8 <__aeabi_uldivmod>
 80087c6:	4602      	mov	r2, r0
 80087c8:	460b      	mov	r3, r1
 80087ca:	4611      	mov	r1, r2
 80087cc:	4b3b      	ldr	r3, [pc, #236]	@ (80088bc <UART_SetConfig+0x2d4>)
 80087ce:	fba3 2301 	umull	r2, r3, r3, r1
 80087d2:	095b      	lsrs	r3, r3, #5
 80087d4:	2264      	movs	r2, #100	@ 0x64
 80087d6:	fb02 f303 	mul.w	r3, r2, r3
 80087da:	1acb      	subs	r3, r1, r3
 80087dc:	00db      	lsls	r3, r3, #3
 80087de:	f103 0232 	add.w	r2, r3, #50	@ 0x32
 80087e2:	4b36      	ldr	r3, [pc, #216]	@ (80088bc <UART_SetConfig+0x2d4>)
 80087e4:	fba3 2302 	umull	r2, r3, r3, r2
 80087e8:	095b      	lsrs	r3, r3, #5
 80087ea:	005b      	lsls	r3, r3, #1
 80087ec:	f403 73f8 	and.w	r3, r3, #496	@ 0x1f0
 80087f0:	441c      	add	r4, r3
 80087f2:	f8d7 30fc 	ldr.w	r3, [r7, #252]	@ 0xfc
 80087f6:	2200      	movs	r2, #0
 80087f8:	f8c7 30b8 	str.w	r3, [r7, #184]	@ 0xb8
 80087fc:	f8c7 20bc 	str.w	r2, [r7, #188]	@ 0xbc
 8008800:	e9d7 892e 	ldrd	r8, r9, [r7, #184]	@ 0xb8
 8008804:	4642      	mov	r2, r8
 8008806:	464b      	mov	r3, r9
 8008808:	1891      	adds	r1, r2, r2
 800880a:	63b9      	str	r1, [r7, #56]	@ 0x38
 800880c:	415b      	adcs	r3, r3
 800880e:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8008810:	e9d7 230e 	ldrd	r2, r3, [r7, #56]	@ 0x38
 8008814:	4641      	mov	r1, r8
 8008816:	1851      	adds	r1, r2, r1
 8008818:	6339      	str	r1, [r7, #48]	@ 0x30
 800881a:	4649      	mov	r1, r9
 800881c:	414b      	adcs	r3, r1
 800881e:	637b      	str	r3, [r7, #52]	@ 0x34
 8008820:	f04f 0200 	mov.w	r2, #0
 8008824:	f04f 0300 	mov.w	r3, #0
 8008828:	e9d7 ab0c 	ldrd	sl, fp, [r7, #48]	@ 0x30
 800882c:	4659      	mov	r1, fp
 800882e:	00cb      	lsls	r3, r1, #3
 8008830:	4651      	mov	r1, sl
 8008832:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 8008836:	4651      	mov	r1, sl
 8008838:	00ca      	lsls	r2, r1, #3
 800883a:	4610      	mov	r0, r2
 800883c:	4619      	mov	r1, r3
 800883e:	4603      	mov	r3, r0
 8008840:	4642      	mov	r2, r8
 8008842:	189b      	adds	r3, r3, r2
 8008844:	f8c7 30b0 	str.w	r3, [r7, #176]	@ 0xb0
 8008848:	464b      	mov	r3, r9
 800884a:	460a      	mov	r2, r1
 800884c:	eb42 0303 	adc.w	r3, r2, r3
 8008850:	f8c7 30b4 	str.w	r3, [r7, #180]	@ 0xb4
 8008854:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8008858:	685b      	ldr	r3, [r3, #4]
 800885a:	2200      	movs	r2, #0
 800885c:	f8c7 30a8 	str.w	r3, [r7, #168]	@ 0xa8
 8008860:	f8c7 20ac 	str.w	r2, [r7, #172]	@ 0xac
 8008864:	e9d7 122a 	ldrd	r1, r2, [r7, #168]	@ 0xa8
 8008868:	460b      	mov	r3, r1
 800886a:	18db      	adds	r3, r3, r3
 800886c:	62bb      	str	r3, [r7, #40]	@ 0x28
 800886e:	4613      	mov	r3, r2
 8008870:	eb42 0303 	adc.w	r3, r2, r3
 8008874:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8008876:	e9d7 230a 	ldrd	r2, r3, [r7, #40]	@ 0x28
 800887a:	e9d7 012c 	ldrd	r0, r1, [r7, #176]	@ 0xb0
 800887e:	f7f8 fa23 	bl	8000cc8 <__aeabi_uldivmod>
 8008882:	4602      	mov	r2, r0
 8008884:	460b      	mov	r3, r1
 8008886:	4b0d      	ldr	r3, [pc, #52]	@ (80088bc <UART_SetConfig+0x2d4>)
 8008888:	fba3 1302 	umull	r1, r3, r3, r2
 800888c:	095b      	lsrs	r3, r3, #5
 800888e:	2164      	movs	r1, #100	@ 0x64
 8008890:	fb01 f303 	mul.w	r3, r1, r3
 8008894:	1ad3      	subs	r3, r2, r3
 8008896:	00db      	lsls	r3, r3, #3
 8008898:	3332      	adds	r3, #50	@ 0x32
 800889a:	4a08      	ldr	r2, [pc, #32]	@ (80088bc <UART_SetConfig+0x2d4>)
 800889c:	fba2 2303 	umull	r2, r3, r2, r3
 80088a0:	095b      	lsrs	r3, r3, #5
 80088a2:	f003 0207 	and.w	r2, r3, #7
 80088a6:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 80088aa:	681b      	ldr	r3, [r3, #0]
 80088ac:	4422      	add	r2, r4
 80088ae:	609a      	str	r2, [r3, #8]
 80088b0:	e106      	b.n	8008ac0 <UART_SetConfig+0x4d8>
 80088b2:	bf00      	nop
 80088b4:	40011000 	.word	0x40011000
 80088b8:	40011400 	.word	0x40011400
 80088bc:	51eb851f 	.word	0x51eb851f
 80088c0:	f8d7 30fc 	ldr.w	r3, [r7, #252]	@ 0xfc
 80088c4:	2200      	movs	r2, #0
 80088c6:	f8c7 30a0 	str.w	r3, [r7, #160]	@ 0xa0
 80088ca:	f8c7 20a4 	str.w	r2, [r7, #164]	@ 0xa4
 80088ce:	e9d7 8928 	ldrd	r8, r9, [r7, #160]	@ 0xa0
 80088d2:	4642      	mov	r2, r8
 80088d4:	464b      	mov	r3, r9
 80088d6:	1891      	adds	r1, r2, r2
 80088d8:	6239      	str	r1, [r7, #32]
 80088da:	415b      	adcs	r3, r3
 80088dc:	627b      	str	r3, [r7, #36]	@ 0x24
 80088de:	e9d7 2308 	ldrd	r2, r3, [r7, #32]
 80088e2:	4641      	mov	r1, r8
 80088e4:	1854      	adds	r4, r2, r1
 80088e6:	4649      	mov	r1, r9
 80088e8:	eb43 0501 	adc.w	r5, r3, r1
 80088ec:	f04f 0200 	mov.w	r2, #0
 80088f0:	f04f 0300 	mov.w	r3, #0
 80088f4:	00eb      	lsls	r3, r5, #3
 80088f6:	ea43 7354 	orr.w	r3, r3, r4, lsr #29
 80088fa:	00e2      	lsls	r2, r4, #3
 80088fc:	4614      	mov	r4, r2
 80088fe:	461d      	mov	r5, r3
 8008900:	4643      	mov	r3, r8
 8008902:	18e3      	adds	r3, r4, r3
 8008904:	f8c7 3098 	str.w	r3, [r7, #152]	@ 0x98
 8008908:	464b      	mov	r3, r9
 800890a:	eb45 0303 	adc.w	r3, r5, r3
 800890e:	f8c7 309c 	str.w	r3, [r7, #156]	@ 0x9c
 8008912:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8008916:	685b      	ldr	r3, [r3, #4]
 8008918:	2200      	movs	r2, #0
 800891a:	f8c7 3090 	str.w	r3, [r7, #144]	@ 0x90
 800891e:	f8c7 2094 	str.w	r2, [r7, #148]	@ 0x94
 8008922:	f04f 0200 	mov.w	r2, #0
 8008926:	f04f 0300 	mov.w	r3, #0
 800892a:	e9d7 4524 	ldrd	r4, r5, [r7, #144]	@ 0x90
 800892e:	4629      	mov	r1, r5
 8008930:	008b      	lsls	r3, r1, #2
 8008932:	4621      	mov	r1, r4
 8008934:	ea43 7391 	orr.w	r3, r3, r1, lsr #30
 8008938:	4621      	mov	r1, r4
 800893a:	008a      	lsls	r2, r1, #2
 800893c:	e9d7 0126 	ldrd	r0, r1, [r7, #152]	@ 0x98
 8008940:	f7f8 f9c2 	bl	8000cc8 <__aeabi_uldivmod>
 8008944:	4602      	mov	r2, r0
 8008946:	460b      	mov	r3, r1
 8008948:	4b60      	ldr	r3, [pc, #384]	@ (8008acc <UART_SetConfig+0x4e4>)
 800894a:	fba3 2302 	umull	r2, r3, r3, r2
 800894e:	095b      	lsrs	r3, r3, #5
 8008950:	011c      	lsls	r4, r3, #4
 8008952:	f8d7 30fc 	ldr.w	r3, [r7, #252]	@ 0xfc
 8008956:	2200      	movs	r2, #0
 8008958:	f8c7 3088 	str.w	r3, [r7, #136]	@ 0x88
 800895c:	f8c7 208c 	str.w	r2, [r7, #140]	@ 0x8c
 8008960:	e9d7 8922 	ldrd	r8, r9, [r7, #136]	@ 0x88
 8008964:	4642      	mov	r2, r8
 8008966:	464b      	mov	r3, r9
 8008968:	1891      	adds	r1, r2, r2
 800896a:	61b9      	str	r1, [r7, #24]
 800896c:	415b      	adcs	r3, r3
 800896e:	61fb      	str	r3, [r7, #28]
 8008970:	e9d7 2306 	ldrd	r2, r3, [r7, #24]
 8008974:	4641      	mov	r1, r8
 8008976:	1851      	adds	r1, r2, r1
 8008978:	6139      	str	r1, [r7, #16]
 800897a:	4649      	mov	r1, r9
 800897c:	414b      	adcs	r3, r1
 800897e:	617b      	str	r3, [r7, #20]
 8008980:	f04f 0200 	mov.w	r2, #0
 8008984:	f04f 0300 	mov.w	r3, #0
 8008988:	e9d7 ab04 	ldrd	sl, fp, [r7, #16]
 800898c:	4659      	mov	r1, fp
 800898e:	00cb      	lsls	r3, r1, #3
 8008990:	4651      	mov	r1, sl
 8008992:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 8008996:	4651      	mov	r1, sl
 8008998:	00ca      	lsls	r2, r1, #3
 800899a:	4610      	mov	r0, r2
 800899c:	4619      	mov	r1, r3
 800899e:	4603      	mov	r3, r0
 80089a0:	4642      	mov	r2, r8
 80089a2:	189b      	adds	r3, r3, r2
 80089a4:	f8c7 3080 	str.w	r3, [r7, #128]	@ 0x80
 80089a8:	464b      	mov	r3, r9
 80089aa:	460a      	mov	r2, r1
 80089ac:	eb42 0303 	adc.w	r3, r2, r3
 80089b0:	f8c7 3084 	str.w	r3, [r7, #132]	@ 0x84
 80089b4:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 80089b8:	685b      	ldr	r3, [r3, #4]
 80089ba:	2200      	movs	r2, #0
 80089bc:	67bb      	str	r3, [r7, #120]	@ 0x78
 80089be:	67fa      	str	r2, [r7, #124]	@ 0x7c
 80089c0:	f04f 0200 	mov.w	r2, #0
 80089c4:	f04f 0300 	mov.w	r3, #0
 80089c8:	e9d7 891e 	ldrd	r8, r9, [r7, #120]	@ 0x78
 80089cc:	4649      	mov	r1, r9
 80089ce:	008b      	lsls	r3, r1, #2
 80089d0:	4641      	mov	r1, r8
 80089d2:	ea43 7391 	orr.w	r3, r3, r1, lsr #30
 80089d6:	4641      	mov	r1, r8
 80089d8:	008a      	lsls	r2, r1, #2
 80089da:	e9d7 0120 	ldrd	r0, r1, [r7, #128]	@ 0x80
 80089de:	f7f8 f973 	bl	8000cc8 <__aeabi_uldivmod>
 80089e2:	4602      	mov	r2, r0
 80089e4:	460b      	mov	r3, r1
 80089e6:	4611      	mov	r1, r2
 80089e8:	4b38      	ldr	r3, [pc, #224]	@ (8008acc <UART_SetConfig+0x4e4>)
 80089ea:	fba3 2301 	umull	r2, r3, r3, r1
 80089ee:	095b      	lsrs	r3, r3, #5
 80089f0:	2264      	movs	r2, #100	@ 0x64
 80089f2:	fb02 f303 	mul.w	r3, r2, r3
 80089f6:	1acb      	subs	r3, r1, r3
 80089f8:	011b      	lsls	r3, r3, #4
 80089fa:	3332      	adds	r3, #50	@ 0x32
 80089fc:	4a33      	ldr	r2, [pc, #204]	@ (8008acc <UART_SetConfig+0x4e4>)
 80089fe:	fba2 2303 	umull	r2, r3, r2, r3
 8008a02:	095b      	lsrs	r3, r3, #5
 8008a04:	f003 03f0 	and.w	r3, r3, #240	@ 0xf0
 8008a08:	441c      	add	r4, r3
 8008a0a:	f8d7 30fc 	ldr.w	r3, [r7, #252]	@ 0xfc
 8008a0e:	2200      	movs	r2, #0
 8008a10:	673b      	str	r3, [r7, #112]	@ 0x70
 8008a12:	677a      	str	r2, [r7, #116]	@ 0x74
 8008a14:	e9d7 891c 	ldrd	r8, r9, [r7, #112]	@ 0x70
 8008a18:	4642      	mov	r2, r8
 8008a1a:	464b      	mov	r3, r9
 8008a1c:	1891      	adds	r1, r2, r2
 8008a1e:	60b9      	str	r1, [r7, #8]
 8008a20:	415b      	adcs	r3, r3
 8008a22:	60fb      	str	r3, [r7, #12]
 8008a24:	e9d7 2302 	ldrd	r2, r3, [r7, #8]
 8008a28:	4641      	mov	r1, r8
 8008a2a:	1851      	adds	r1, r2, r1
 8008a2c:	6039      	str	r1, [r7, #0]
 8008a2e:	4649      	mov	r1, r9
 8008a30:	414b      	adcs	r3, r1
 8008a32:	607b      	str	r3, [r7, #4]
 8008a34:	f04f 0200 	mov.w	r2, #0
 8008a38:	f04f 0300 	mov.w	r3, #0
 8008a3c:	e9d7 ab00 	ldrd	sl, fp, [r7]
 8008a40:	4659      	mov	r1, fp
 8008a42:	00cb      	lsls	r3, r1, #3
 8008a44:	4651      	mov	r1, sl
 8008a46:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 8008a4a:	4651      	mov	r1, sl
 8008a4c:	00ca      	lsls	r2, r1, #3
 8008a4e:	4610      	mov	r0, r2
 8008a50:	4619      	mov	r1, r3
 8008a52:	4603      	mov	r3, r0
 8008a54:	4642      	mov	r2, r8
 8008a56:	189b      	adds	r3, r3, r2
 8008a58:	66bb      	str	r3, [r7, #104]	@ 0x68
 8008a5a:	464b      	mov	r3, r9
 8008a5c:	460a      	mov	r2, r1
 8008a5e:	eb42 0303 	adc.w	r3, r2, r3
 8008a62:	66fb      	str	r3, [r7, #108]	@ 0x6c
 8008a64:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8008a68:	685b      	ldr	r3, [r3, #4]
 8008a6a:	2200      	movs	r2, #0
 8008a6c:	663b      	str	r3, [r7, #96]	@ 0x60
 8008a6e:	667a      	str	r2, [r7, #100]	@ 0x64
 8008a70:	f04f 0200 	mov.w	r2, #0
 8008a74:	f04f 0300 	mov.w	r3, #0
 8008a78:	e9d7 8918 	ldrd	r8, r9, [r7, #96]	@ 0x60
 8008a7c:	4649      	mov	r1, r9
 8008a7e:	008b      	lsls	r3, r1, #2
 8008a80:	4641      	mov	r1, r8
 8008a82:	ea43 7391 	orr.w	r3, r3, r1, lsr #30
 8008a86:	4641      	mov	r1, r8
 8008a88:	008a      	lsls	r2, r1, #2
 8008a8a:	e9d7 011a 	ldrd	r0, r1, [r7, #104]	@ 0x68
 8008a8e:	f7f8 f91b 	bl	8000cc8 <__aeabi_uldivmod>
 8008a92:	4602      	mov	r2, r0
 8008a94:	460b      	mov	r3, r1
 8008a96:	4b0d      	ldr	r3, [pc, #52]	@ (8008acc <UART_SetConfig+0x4e4>)
 8008a98:	fba3 1302 	umull	r1, r3, r3, r2
 8008a9c:	095b      	lsrs	r3, r3, #5
 8008a9e:	2164      	movs	r1, #100	@ 0x64
 8008aa0:	fb01 f303 	mul.w	r3, r1, r3
 8008aa4:	1ad3      	subs	r3, r2, r3
 8008aa6:	011b      	lsls	r3, r3, #4
 8008aa8:	3332      	adds	r3, #50	@ 0x32
 8008aaa:	4a08      	ldr	r2, [pc, #32]	@ (8008acc <UART_SetConfig+0x4e4>)
 8008aac:	fba2 2303 	umull	r2, r3, r2, r3
 8008ab0:	095b      	lsrs	r3, r3, #5
 8008ab2:	f003 020f 	and.w	r2, r3, #15
 8008ab6:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8008aba:	681b      	ldr	r3, [r3, #0]
 8008abc:	4422      	add	r2, r4
 8008abe:	609a      	str	r2, [r3, #8]
 8008ac0:	bf00      	nop
 8008ac2:	f507 7780 	add.w	r7, r7, #256	@ 0x100
 8008ac6:	46bd      	mov	sp, r7
 8008ac8:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 8008acc:	51eb851f 	.word	0x51eb851f

08008ad0 <__cvt>:
 8008ad0:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8008ad4:	ec57 6b10 	vmov	r6, r7, d0
 8008ad8:	2f00      	cmp	r7, #0
 8008ada:	460c      	mov	r4, r1
 8008adc:	4619      	mov	r1, r3
 8008ade:	463b      	mov	r3, r7
 8008ae0:	bfbb      	ittet	lt
 8008ae2:	f107 4300 	addlt.w	r3, r7, #2147483648	@ 0x80000000
 8008ae6:	461f      	movlt	r7, r3
 8008ae8:	2300      	movge	r3, #0
 8008aea:	232d      	movlt	r3, #45	@ 0x2d
 8008aec:	700b      	strb	r3, [r1, #0]
 8008aee:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8008af0:	f8dd a030 	ldr.w	sl, [sp, #48]	@ 0x30
 8008af4:	4691      	mov	r9, r2
 8008af6:	f023 0820 	bic.w	r8, r3, #32
 8008afa:	bfbc      	itt	lt
 8008afc:	4632      	movlt	r2, r6
 8008afe:	4616      	movlt	r6, r2
 8008b00:	f1b8 0f46 	cmp.w	r8, #70	@ 0x46
 8008b04:	d005      	beq.n	8008b12 <__cvt+0x42>
 8008b06:	f1b8 0f45 	cmp.w	r8, #69	@ 0x45
 8008b0a:	d100      	bne.n	8008b0e <__cvt+0x3e>
 8008b0c:	3401      	adds	r4, #1
 8008b0e:	2102      	movs	r1, #2
 8008b10:	e000      	b.n	8008b14 <__cvt+0x44>
 8008b12:	2103      	movs	r1, #3
 8008b14:	ab03      	add	r3, sp, #12
 8008b16:	9301      	str	r3, [sp, #4]
 8008b18:	ab02      	add	r3, sp, #8
 8008b1a:	9300      	str	r3, [sp, #0]
 8008b1c:	ec47 6b10 	vmov	d0, r6, r7
 8008b20:	4653      	mov	r3, sl
 8008b22:	4622      	mov	r2, r4
 8008b24:	f001 f988 	bl	8009e38 <_dtoa_r>
 8008b28:	f1b8 0f47 	cmp.w	r8, #71	@ 0x47
 8008b2c:	4605      	mov	r5, r0
 8008b2e:	d119      	bne.n	8008b64 <__cvt+0x94>
 8008b30:	f019 0f01 	tst.w	r9, #1
 8008b34:	d00e      	beq.n	8008b54 <__cvt+0x84>
 8008b36:	eb00 0904 	add.w	r9, r0, r4
 8008b3a:	2200      	movs	r2, #0
 8008b3c:	2300      	movs	r3, #0
 8008b3e:	4630      	mov	r0, r6
 8008b40:	4639      	mov	r1, r7
 8008b42:	f7f7 ffe1 	bl	8000b08 <__aeabi_dcmpeq>
 8008b46:	b108      	cbz	r0, 8008b4c <__cvt+0x7c>
 8008b48:	f8cd 900c 	str.w	r9, [sp, #12]
 8008b4c:	2230      	movs	r2, #48	@ 0x30
 8008b4e:	9b03      	ldr	r3, [sp, #12]
 8008b50:	454b      	cmp	r3, r9
 8008b52:	d31e      	bcc.n	8008b92 <__cvt+0xc2>
 8008b54:	9b03      	ldr	r3, [sp, #12]
 8008b56:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 8008b58:	1b5b      	subs	r3, r3, r5
 8008b5a:	4628      	mov	r0, r5
 8008b5c:	6013      	str	r3, [r2, #0]
 8008b5e:	b004      	add	sp, #16
 8008b60:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8008b64:	f1b8 0f46 	cmp.w	r8, #70	@ 0x46
 8008b68:	eb00 0904 	add.w	r9, r0, r4
 8008b6c:	d1e5      	bne.n	8008b3a <__cvt+0x6a>
 8008b6e:	7803      	ldrb	r3, [r0, #0]
 8008b70:	2b30      	cmp	r3, #48	@ 0x30
 8008b72:	d10a      	bne.n	8008b8a <__cvt+0xba>
 8008b74:	2200      	movs	r2, #0
 8008b76:	2300      	movs	r3, #0
 8008b78:	4630      	mov	r0, r6
 8008b7a:	4639      	mov	r1, r7
 8008b7c:	f7f7 ffc4 	bl	8000b08 <__aeabi_dcmpeq>
 8008b80:	b918      	cbnz	r0, 8008b8a <__cvt+0xba>
 8008b82:	f1c4 0401 	rsb	r4, r4, #1
 8008b86:	f8ca 4000 	str.w	r4, [sl]
 8008b8a:	f8da 3000 	ldr.w	r3, [sl]
 8008b8e:	4499      	add	r9, r3
 8008b90:	e7d3      	b.n	8008b3a <__cvt+0x6a>
 8008b92:	1c59      	adds	r1, r3, #1
 8008b94:	9103      	str	r1, [sp, #12]
 8008b96:	701a      	strb	r2, [r3, #0]
 8008b98:	e7d9      	b.n	8008b4e <__cvt+0x7e>

08008b9a <__exponent>:
 8008b9a:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8008b9c:	2900      	cmp	r1, #0
 8008b9e:	bfba      	itte	lt
 8008ba0:	4249      	neglt	r1, r1
 8008ba2:	232d      	movlt	r3, #45	@ 0x2d
 8008ba4:	232b      	movge	r3, #43	@ 0x2b
 8008ba6:	2909      	cmp	r1, #9
 8008ba8:	7002      	strb	r2, [r0, #0]
 8008baa:	7043      	strb	r3, [r0, #1]
 8008bac:	dd29      	ble.n	8008c02 <__exponent+0x68>
 8008bae:	f10d 0307 	add.w	r3, sp, #7
 8008bb2:	461d      	mov	r5, r3
 8008bb4:	270a      	movs	r7, #10
 8008bb6:	461a      	mov	r2, r3
 8008bb8:	fbb1 f6f7 	udiv	r6, r1, r7
 8008bbc:	fb07 1416 	mls	r4, r7, r6, r1
 8008bc0:	3430      	adds	r4, #48	@ 0x30
 8008bc2:	f802 4c01 	strb.w	r4, [r2, #-1]
 8008bc6:	460c      	mov	r4, r1
 8008bc8:	2c63      	cmp	r4, #99	@ 0x63
 8008bca:	f103 33ff 	add.w	r3, r3, #4294967295
 8008bce:	4631      	mov	r1, r6
 8008bd0:	dcf1      	bgt.n	8008bb6 <__exponent+0x1c>
 8008bd2:	3130      	adds	r1, #48	@ 0x30
 8008bd4:	1e94      	subs	r4, r2, #2
 8008bd6:	f803 1c01 	strb.w	r1, [r3, #-1]
 8008bda:	1c41      	adds	r1, r0, #1
 8008bdc:	4623      	mov	r3, r4
 8008bde:	42ab      	cmp	r3, r5
 8008be0:	d30a      	bcc.n	8008bf8 <__exponent+0x5e>
 8008be2:	f10d 0309 	add.w	r3, sp, #9
 8008be6:	1a9b      	subs	r3, r3, r2
 8008be8:	42ac      	cmp	r4, r5
 8008bea:	bf88      	it	hi
 8008bec:	2300      	movhi	r3, #0
 8008bee:	3302      	adds	r3, #2
 8008bf0:	4403      	add	r3, r0
 8008bf2:	1a18      	subs	r0, r3, r0
 8008bf4:	b003      	add	sp, #12
 8008bf6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8008bf8:	f813 6b01 	ldrb.w	r6, [r3], #1
 8008bfc:	f801 6f01 	strb.w	r6, [r1, #1]!
 8008c00:	e7ed      	b.n	8008bde <__exponent+0x44>
 8008c02:	2330      	movs	r3, #48	@ 0x30
 8008c04:	3130      	adds	r1, #48	@ 0x30
 8008c06:	7083      	strb	r3, [r0, #2]
 8008c08:	70c1      	strb	r1, [r0, #3]
 8008c0a:	1d03      	adds	r3, r0, #4
 8008c0c:	e7f1      	b.n	8008bf2 <__exponent+0x58>
	...

08008c10 <_printf_float>:
 8008c10:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8008c14:	b08d      	sub	sp, #52	@ 0x34
 8008c16:	460c      	mov	r4, r1
 8008c18:	f8dd 8058 	ldr.w	r8, [sp, #88]	@ 0x58
 8008c1c:	4616      	mov	r6, r2
 8008c1e:	461f      	mov	r7, r3
 8008c20:	4605      	mov	r5, r0
 8008c22:	f000 fff3 	bl	8009c0c <_localeconv_r>
 8008c26:	6803      	ldr	r3, [r0, #0]
 8008c28:	9304      	str	r3, [sp, #16]
 8008c2a:	4618      	mov	r0, r3
 8008c2c:	f7f7 fb40 	bl	80002b0 <strlen>
 8008c30:	2300      	movs	r3, #0
 8008c32:	930a      	str	r3, [sp, #40]	@ 0x28
 8008c34:	f8d8 3000 	ldr.w	r3, [r8]
 8008c38:	9005      	str	r0, [sp, #20]
 8008c3a:	3307      	adds	r3, #7
 8008c3c:	f023 0307 	bic.w	r3, r3, #7
 8008c40:	f103 0208 	add.w	r2, r3, #8
 8008c44:	f894 a018 	ldrb.w	sl, [r4, #24]
 8008c48:	f8d4 b000 	ldr.w	fp, [r4]
 8008c4c:	f8c8 2000 	str.w	r2, [r8]
 8008c50:	e9d3 8900 	ldrd	r8, r9, [r3]
 8008c54:	f029 4300 	bic.w	r3, r9, #2147483648	@ 0x80000000
 8008c58:	9307      	str	r3, [sp, #28]
 8008c5a:	f8cd 8018 	str.w	r8, [sp, #24]
 8008c5e:	e9c4 8912 	strd	r8, r9, [r4, #72]	@ 0x48
 8008c62:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8008c66:	4b9c      	ldr	r3, [pc, #624]	@ (8008ed8 <_printf_float+0x2c8>)
 8008c68:	f04f 32ff 	mov.w	r2, #4294967295
 8008c6c:	f7f7 ff7e 	bl	8000b6c <__aeabi_dcmpun>
 8008c70:	bb70      	cbnz	r0, 8008cd0 <_printf_float+0xc0>
 8008c72:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8008c76:	4b98      	ldr	r3, [pc, #608]	@ (8008ed8 <_printf_float+0x2c8>)
 8008c78:	f04f 32ff 	mov.w	r2, #4294967295
 8008c7c:	f7f7 ff58 	bl	8000b30 <__aeabi_dcmple>
 8008c80:	bb30      	cbnz	r0, 8008cd0 <_printf_float+0xc0>
 8008c82:	2200      	movs	r2, #0
 8008c84:	2300      	movs	r3, #0
 8008c86:	4640      	mov	r0, r8
 8008c88:	4649      	mov	r1, r9
 8008c8a:	f7f7 ff47 	bl	8000b1c <__aeabi_dcmplt>
 8008c8e:	b110      	cbz	r0, 8008c96 <_printf_float+0x86>
 8008c90:	232d      	movs	r3, #45	@ 0x2d
 8008c92:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8008c96:	4a91      	ldr	r2, [pc, #580]	@ (8008edc <_printf_float+0x2cc>)
 8008c98:	4b91      	ldr	r3, [pc, #580]	@ (8008ee0 <_printf_float+0x2d0>)
 8008c9a:	f1ba 0f47 	cmp.w	sl, #71	@ 0x47
 8008c9e:	bf94      	ite	ls
 8008ca0:	4690      	movls	r8, r2
 8008ca2:	4698      	movhi	r8, r3
 8008ca4:	2303      	movs	r3, #3
 8008ca6:	6123      	str	r3, [r4, #16]
 8008ca8:	f02b 0304 	bic.w	r3, fp, #4
 8008cac:	6023      	str	r3, [r4, #0]
 8008cae:	f04f 0900 	mov.w	r9, #0
 8008cb2:	9700      	str	r7, [sp, #0]
 8008cb4:	4633      	mov	r3, r6
 8008cb6:	aa0b      	add	r2, sp, #44	@ 0x2c
 8008cb8:	4621      	mov	r1, r4
 8008cba:	4628      	mov	r0, r5
 8008cbc:	f000 f9d2 	bl	8009064 <_printf_common>
 8008cc0:	3001      	adds	r0, #1
 8008cc2:	f040 808d 	bne.w	8008de0 <_printf_float+0x1d0>
 8008cc6:	f04f 30ff 	mov.w	r0, #4294967295
 8008cca:	b00d      	add	sp, #52	@ 0x34
 8008ccc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8008cd0:	4642      	mov	r2, r8
 8008cd2:	464b      	mov	r3, r9
 8008cd4:	4640      	mov	r0, r8
 8008cd6:	4649      	mov	r1, r9
 8008cd8:	f7f7 ff48 	bl	8000b6c <__aeabi_dcmpun>
 8008cdc:	b140      	cbz	r0, 8008cf0 <_printf_float+0xe0>
 8008cde:	464b      	mov	r3, r9
 8008ce0:	2b00      	cmp	r3, #0
 8008ce2:	bfbc      	itt	lt
 8008ce4:	232d      	movlt	r3, #45	@ 0x2d
 8008ce6:	f884 3043 	strblt.w	r3, [r4, #67]	@ 0x43
 8008cea:	4a7e      	ldr	r2, [pc, #504]	@ (8008ee4 <_printf_float+0x2d4>)
 8008cec:	4b7e      	ldr	r3, [pc, #504]	@ (8008ee8 <_printf_float+0x2d8>)
 8008cee:	e7d4      	b.n	8008c9a <_printf_float+0x8a>
 8008cf0:	6863      	ldr	r3, [r4, #4]
 8008cf2:	f00a 02df 	and.w	r2, sl, #223	@ 0xdf
 8008cf6:	9206      	str	r2, [sp, #24]
 8008cf8:	1c5a      	adds	r2, r3, #1
 8008cfa:	d13b      	bne.n	8008d74 <_printf_float+0x164>
 8008cfc:	2306      	movs	r3, #6
 8008cfe:	6063      	str	r3, [r4, #4]
 8008d00:	f44b 6280 	orr.w	r2, fp, #1024	@ 0x400
 8008d04:	2300      	movs	r3, #0
 8008d06:	6022      	str	r2, [r4, #0]
 8008d08:	9303      	str	r3, [sp, #12]
 8008d0a:	ab0a      	add	r3, sp, #40	@ 0x28
 8008d0c:	e9cd a301 	strd	sl, r3, [sp, #4]
 8008d10:	ab09      	add	r3, sp, #36	@ 0x24
 8008d12:	9300      	str	r3, [sp, #0]
 8008d14:	6861      	ldr	r1, [r4, #4]
 8008d16:	ec49 8b10 	vmov	d0, r8, r9
 8008d1a:	f10d 0323 	add.w	r3, sp, #35	@ 0x23
 8008d1e:	4628      	mov	r0, r5
 8008d20:	f7ff fed6 	bl	8008ad0 <__cvt>
 8008d24:	9b06      	ldr	r3, [sp, #24]
 8008d26:	9909      	ldr	r1, [sp, #36]	@ 0x24
 8008d28:	2b47      	cmp	r3, #71	@ 0x47
 8008d2a:	4680      	mov	r8, r0
 8008d2c:	d129      	bne.n	8008d82 <_printf_float+0x172>
 8008d2e:	1cc8      	adds	r0, r1, #3
 8008d30:	db02      	blt.n	8008d38 <_printf_float+0x128>
 8008d32:	6863      	ldr	r3, [r4, #4]
 8008d34:	4299      	cmp	r1, r3
 8008d36:	dd41      	ble.n	8008dbc <_printf_float+0x1ac>
 8008d38:	f1aa 0a02 	sub.w	sl, sl, #2
 8008d3c:	fa5f fa8a 	uxtb.w	sl, sl
 8008d40:	3901      	subs	r1, #1
 8008d42:	4652      	mov	r2, sl
 8008d44:	f104 0050 	add.w	r0, r4, #80	@ 0x50
 8008d48:	9109      	str	r1, [sp, #36]	@ 0x24
 8008d4a:	f7ff ff26 	bl	8008b9a <__exponent>
 8008d4e:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8008d50:	1813      	adds	r3, r2, r0
 8008d52:	2a01      	cmp	r2, #1
 8008d54:	4681      	mov	r9, r0
 8008d56:	6123      	str	r3, [r4, #16]
 8008d58:	dc02      	bgt.n	8008d60 <_printf_float+0x150>
 8008d5a:	6822      	ldr	r2, [r4, #0]
 8008d5c:	07d2      	lsls	r2, r2, #31
 8008d5e:	d501      	bpl.n	8008d64 <_printf_float+0x154>
 8008d60:	3301      	adds	r3, #1
 8008d62:	6123      	str	r3, [r4, #16]
 8008d64:	f89d 3023 	ldrb.w	r3, [sp, #35]	@ 0x23
 8008d68:	2b00      	cmp	r3, #0
 8008d6a:	d0a2      	beq.n	8008cb2 <_printf_float+0xa2>
 8008d6c:	232d      	movs	r3, #45	@ 0x2d
 8008d6e:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8008d72:	e79e      	b.n	8008cb2 <_printf_float+0xa2>
 8008d74:	9a06      	ldr	r2, [sp, #24]
 8008d76:	2a47      	cmp	r2, #71	@ 0x47
 8008d78:	d1c2      	bne.n	8008d00 <_printf_float+0xf0>
 8008d7a:	2b00      	cmp	r3, #0
 8008d7c:	d1c0      	bne.n	8008d00 <_printf_float+0xf0>
 8008d7e:	2301      	movs	r3, #1
 8008d80:	e7bd      	b.n	8008cfe <_printf_float+0xee>
 8008d82:	f1ba 0f65 	cmp.w	sl, #101	@ 0x65
 8008d86:	d9db      	bls.n	8008d40 <_printf_float+0x130>
 8008d88:	f1ba 0f66 	cmp.w	sl, #102	@ 0x66
 8008d8c:	d118      	bne.n	8008dc0 <_printf_float+0x1b0>
 8008d8e:	2900      	cmp	r1, #0
 8008d90:	6863      	ldr	r3, [r4, #4]
 8008d92:	dd0b      	ble.n	8008dac <_printf_float+0x19c>
 8008d94:	6121      	str	r1, [r4, #16]
 8008d96:	b913      	cbnz	r3, 8008d9e <_printf_float+0x18e>
 8008d98:	6822      	ldr	r2, [r4, #0]
 8008d9a:	07d0      	lsls	r0, r2, #31
 8008d9c:	d502      	bpl.n	8008da4 <_printf_float+0x194>
 8008d9e:	3301      	adds	r3, #1
 8008da0:	440b      	add	r3, r1
 8008da2:	6123      	str	r3, [r4, #16]
 8008da4:	65a1      	str	r1, [r4, #88]	@ 0x58
 8008da6:	f04f 0900 	mov.w	r9, #0
 8008daa:	e7db      	b.n	8008d64 <_printf_float+0x154>
 8008dac:	b913      	cbnz	r3, 8008db4 <_printf_float+0x1a4>
 8008dae:	6822      	ldr	r2, [r4, #0]
 8008db0:	07d2      	lsls	r2, r2, #31
 8008db2:	d501      	bpl.n	8008db8 <_printf_float+0x1a8>
 8008db4:	3302      	adds	r3, #2
 8008db6:	e7f4      	b.n	8008da2 <_printf_float+0x192>
 8008db8:	2301      	movs	r3, #1
 8008dba:	e7f2      	b.n	8008da2 <_printf_float+0x192>
 8008dbc:	f04f 0a67 	mov.w	sl, #103	@ 0x67
 8008dc0:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8008dc2:	4299      	cmp	r1, r3
 8008dc4:	db05      	blt.n	8008dd2 <_printf_float+0x1c2>
 8008dc6:	6823      	ldr	r3, [r4, #0]
 8008dc8:	6121      	str	r1, [r4, #16]
 8008dca:	07d8      	lsls	r0, r3, #31
 8008dcc:	d5ea      	bpl.n	8008da4 <_printf_float+0x194>
 8008dce:	1c4b      	adds	r3, r1, #1
 8008dd0:	e7e7      	b.n	8008da2 <_printf_float+0x192>
 8008dd2:	2900      	cmp	r1, #0
 8008dd4:	bfd4      	ite	le
 8008dd6:	f1c1 0202 	rsble	r2, r1, #2
 8008dda:	2201      	movgt	r2, #1
 8008ddc:	4413      	add	r3, r2
 8008dde:	e7e0      	b.n	8008da2 <_printf_float+0x192>
 8008de0:	6823      	ldr	r3, [r4, #0]
 8008de2:	055a      	lsls	r2, r3, #21
 8008de4:	d407      	bmi.n	8008df6 <_printf_float+0x1e6>
 8008de6:	6923      	ldr	r3, [r4, #16]
 8008de8:	4642      	mov	r2, r8
 8008dea:	4631      	mov	r1, r6
 8008dec:	4628      	mov	r0, r5
 8008dee:	47b8      	blx	r7
 8008df0:	3001      	adds	r0, #1
 8008df2:	d12b      	bne.n	8008e4c <_printf_float+0x23c>
 8008df4:	e767      	b.n	8008cc6 <_printf_float+0xb6>
 8008df6:	f1ba 0f65 	cmp.w	sl, #101	@ 0x65
 8008dfa:	f240 80dd 	bls.w	8008fb8 <_printf_float+0x3a8>
 8008dfe:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	@ 0x48
 8008e02:	2200      	movs	r2, #0
 8008e04:	2300      	movs	r3, #0
 8008e06:	f7f7 fe7f 	bl	8000b08 <__aeabi_dcmpeq>
 8008e0a:	2800      	cmp	r0, #0
 8008e0c:	d033      	beq.n	8008e76 <_printf_float+0x266>
 8008e0e:	4a37      	ldr	r2, [pc, #220]	@ (8008eec <_printf_float+0x2dc>)
 8008e10:	2301      	movs	r3, #1
 8008e12:	4631      	mov	r1, r6
 8008e14:	4628      	mov	r0, r5
 8008e16:	47b8      	blx	r7
 8008e18:	3001      	adds	r0, #1
 8008e1a:	f43f af54 	beq.w	8008cc6 <_printf_float+0xb6>
 8008e1e:	e9dd 3809 	ldrd	r3, r8, [sp, #36]	@ 0x24
 8008e22:	4543      	cmp	r3, r8
 8008e24:	db02      	blt.n	8008e2c <_printf_float+0x21c>
 8008e26:	6823      	ldr	r3, [r4, #0]
 8008e28:	07d8      	lsls	r0, r3, #31
 8008e2a:	d50f      	bpl.n	8008e4c <_printf_float+0x23c>
 8008e2c:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8008e30:	4631      	mov	r1, r6
 8008e32:	4628      	mov	r0, r5
 8008e34:	47b8      	blx	r7
 8008e36:	3001      	adds	r0, #1
 8008e38:	f43f af45 	beq.w	8008cc6 <_printf_float+0xb6>
 8008e3c:	f04f 0900 	mov.w	r9, #0
 8008e40:	f108 38ff 	add.w	r8, r8, #4294967295
 8008e44:	f104 0a1a 	add.w	sl, r4, #26
 8008e48:	45c8      	cmp	r8, r9
 8008e4a:	dc09      	bgt.n	8008e60 <_printf_float+0x250>
 8008e4c:	6823      	ldr	r3, [r4, #0]
 8008e4e:	079b      	lsls	r3, r3, #30
 8008e50:	f100 8103 	bmi.w	800905a <_printf_float+0x44a>
 8008e54:	68e0      	ldr	r0, [r4, #12]
 8008e56:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8008e58:	4298      	cmp	r0, r3
 8008e5a:	bfb8      	it	lt
 8008e5c:	4618      	movlt	r0, r3
 8008e5e:	e734      	b.n	8008cca <_printf_float+0xba>
 8008e60:	2301      	movs	r3, #1
 8008e62:	4652      	mov	r2, sl
 8008e64:	4631      	mov	r1, r6
 8008e66:	4628      	mov	r0, r5
 8008e68:	47b8      	blx	r7
 8008e6a:	3001      	adds	r0, #1
 8008e6c:	f43f af2b 	beq.w	8008cc6 <_printf_float+0xb6>
 8008e70:	f109 0901 	add.w	r9, r9, #1
 8008e74:	e7e8      	b.n	8008e48 <_printf_float+0x238>
 8008e76:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8008e78:	2b00      	cmp	r3, #0
 8008e7a:	dc39      	bgt.n	8008ef0 <_printf_float+0x2e0>
 8008e7c:	4a1b      	ldr	r2, [pc, #108]	@ (8008eec <_printf_float+0x2dc>)
 8008e7e:	2301      	movs	r3, #1
 8008e80:	4631      	mov	r1, r6
 8008e82:	4628      	mov	r0, r5
 8008e84:	47b8      	blx	r7
 8008e86:	3001      	adds	r0, #1
 8008e88:	f43f af1d 	beq.w	8008cc6 <_printf_float+0xb6>
 8008e8c:	e9dd 3909 	ldrd	r3, r9, [sp, #36]	@ 0x24
 8008e90:	ea59 0303 	orrs.w	r3, r9, r3
 8008e94:	d102      	bne.n	8008e9c <_printf_float+0x28c>
 8008e96:	6823      	ldr	r3, [r4, #0]
 8008e98:	07d9      	lsls	r1, r3, #31
 8008e9a:	d5d7      	bpl.n	8008e4c <_printf_float+0x23c>
 8008e9c:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8008ea0:	4631      	mov	r1, r6
 8008ea2:	4628      	mov	r0, r5
 8008ea4:	47b8      	blx	r7
 8008ea6:	3001      	adds	r0, #1
 8008ea8:	f43f af0d 	beq.w	8008cc6 <_printf_float+0xb6>
 8008eac:	f04f 0a00 	mov.w	sl, #0
 8008eb0:	f104 0b1a 	add.w	fp, r4, #26
 8008eb4:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8008eb6:	425b      	negs	r3, r3
 8008eb8:	4553      	cmp	r3, sl
 8008eba:	dc01      	bgt.n	8008ec0 <_printf_float+0x2b0>
 8008ebc:	464b      	mov	r3, r9
 8008ebe:	e793      	b.n	8008de8 <_printf_float+0x1d8>
 8008ec0:	2301      	movs	r3, #1
 8008ec2:	465a      	mov	r2, fp
 8008ec4:	4631      	mov	r1, r6
 8008ec6:	4628      	mov	r0, r5
 8008ec8:	47b8      	blx	r7
 8008eca:	3001      	adds	r0, #1
 8008ecc:	f43f aefb 	beq.w	8008cc6 <_printf_float+0xb6>
 8008ed0:	f10a 0a01 	add.w	sl, sl, #1
 8008ed4:	e7ee      	b.n	8008eb4 <_printf_float+0x2a4>
 8008ed6:	bf00      	nop
 8008ed8:	7fefffff 	.word	0x7fefffff
 8008edc:	0800d550 	.word	0x0800d550
 8008ee0:	0800d554 	.word	0x0800d554
 8008ee4:	0800d558 	.word	0x0800d558
 8008ee8:	0800d55c 	.word	0x0800d55c
 8008eec:	0800d560 	.word	0x0800d560
 8008ef0:	6da3      	ldr	r3, [r4, #88]	@ 0x58
 8008ef2:	f8dd a028 	ldr.w	sl, [sp, #40]	@ 0x28
 8008ef6:	4553      	cmp	r3, sl
 8008ef8:	bfa8      	it	ge
 8008efa:	4653      	movge	r3, sl
 8008efc:	2b00      	cmp	r3, #0
 8008efe:	4699      	mov	r9, r3
 8008f00:	dc36      	bgt.n	8008f70 <_printf_float+0x360>
 8008f02:	f04f 0b00 	mov.w	fp, #0
 8008f06:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 8008f0a:	f104 021a 	add.w	r2, r4, #26
 8008f0e:	6da3      	ldr	r3, [r4, #88]	@ 0x58
 8008f10:	9306      	str	r3, [sp, #24]
 8008f12:	eba3 0309 	sub.w	r3, r3, r9
 8008f16:	455b      	cmp	r3, fp
 8008f18:	dc31      	bgt.n	8008f7e <_printf_float+0x36e>
 8008f1a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8008f1c:	459a      	cmp	sl, r3
 8008f1e:	dc3a      	bgt.n	8008f96 <_printf_float+0x386>
 8008f20:	6823      	ldr	r3, [r4, #0]
 8008f22:	07da      	lsls	r2, r3, #31
 8008f24:	d437      	bmi.n	8008f96 <_printf_float+0x386>
 8008f26:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8008f28:	ebaa 0903 	sub.w	r9, sl, r3
 8008f2c:	9b06      	ldr	r3, [sp, #24]
 8008f2e:	ebaa 0303 	sub.w	r3, sl, r3
 8008f32:	4599      	cmp	r9, r3
 8008f34:	bfa8      	it	ge
 8008f36:	4699      	movge	r9, r3
 8008f38:	f1b9 0f00 	cmp.w	r9, #0
 8008f3c:	dc33      	bgt.n	8008fa6 <_printf_float+0x396>
 8008f3e:	f04f 0800 	mov.w	r8, #0
 8008f42:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 8008f46:	f104 0b1a 	add.w	fp, r4, #26
 8008f4a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8008f4c:	ebaa 0303 	sub.w	r3, sl, r3
 8008f50:	eba3 0309 	sub.w	r3, r3, r9
 8008f54:	4543      	cmp	r3, r8
 8008f56:	f77f af79 	ble.w	8008e4c <_printf_float+0x23c>
 8008f5a:	2301      	movs	r3, #1
 8008f5c:	465a      	mov	r2, fp
 8008f5e:	4631      	mov	r1, r6
 8008f60:	4628      	mov	r0, r5
 8008f62:	47b8      	blx	r7
 8008f64:	3001      	adds	r0, #1
 8008f66:	f43f aeae 	beq.w	8008cc6 <_printf_float+0xb6>
 8008f6a:	f108 0801 	add.w	r8, r8, #1
 8008f6e:	e7ec      	b.n	8008f4a <_printf_float+0x33a>
 8008f70:	4642      	mov	r2, r8
 8008f72:	4631      	mov	r1, r6
 8008f74:	4628      	mov	r0, r5
 8008f76:	47b8      	blx	r7
 8008f78:	3001      	adds	r0, #1
 8008f7a:	d1c2      	bne.n	8008f02 <_printf_float+0x2f2>
 8008f7c:	e6a3      	b.n	8008cc6 <_printf_float+0xb6>
 8008f7e:	2301      	movs	r3, #1
 8008f80:	4631      	mov	r1, r6
 8008f82:	4628      	mov	r0, r5
 8008f84:	9206      	str	r2, [sp, #24]
 8008f86:	47b8      	blx	r7
 8008f88:	3001      	adds	r0, #1
 8008f8a:	f43f ae9c 	beq.w	8008cc6 <_printf_float+0xb6>
 8008f8e:	9a06      	ldr	r2, [sp, #24]
 8008f90:	f10b 0b01 	add.w	fp, fp, #1
 8008f94:	e7bb      	b.n	8008f0e <_printf_float+0x2fe>
 8008f96:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8008f9a:	4631      	mov	r1, r6
 8008f9c:	4628      	mov	r0, r5
 8008f9e:	47b8      	blx	r7
 8008fa0:	3001      	adds	r0, #1
 8008fa2:	d1c0      	bne.n	8008f26 <_printf_float+0x316>
 8008fa4:	e68f      	b.n	8008cc6 <_printf_float+0xb6>
 8008fa6:	9a06      	ldr	r2, [sp, #24]
 8008fa8:	464b      	mov	r3, r9
 8008faa:	4442      	add	r2, r8
 8008fac:	4631      	mov	r1, r6
 8008fae:	4628      	mov	r0, r5
 8008fb0:	47b8      	blx	r7
 8008fb2:	3001      	adds	r0, #1
 8008fb4:	d1c3      	bne.n	8008f3e <_printf_float+0x32e>
 8008fb6:	e686      	b.n	8008cc6 <_printf_float+0xb6>
 8008fb8:	f8dd a028 	ldr.w	sl, [sp, #40]	@ 0x28
 8008fbc:	f1ba 0f01 	cmp.w	sl, #1
 8008fc0:	dc01      	bgt.n	8008fc6 <_printf_float+0x3b6>
 8008fc2:	07db      	lsls	r3, r3, #31
 8008fc4:	d536      	bpl.n	8009034 <_printf_float+0x424>
 8008fc6:	2301      	movs	r3, #1
 8008fc8:	4642      	mov	r2, r8
 8008fca:	4631      	mov	r1, r6
 8008fcc:	4628      	mov	r0, r5
 8008fce:	47b8      	blx	r7
 8008fd0:	3001      	adds	r0, #1
 8008fd2:	f43f ae78 	beq.w	8008cc6 <_printf_float+0xb6>
 8008fd6:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8008fda:	4631      	mov	r1, r6
 8008fdc:	4628      	mov	r0, r5
 8008fde:	47b8      	blx	r7
 8008fe0:	3001      	adds	r0, #1
 8008fe2:	f43f ae70 	beq.w	8008cc6 <_printf_float+0xb6>
 8008fe6:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	@ 0x48
 8008fea:	2200      	movs	r2, #0
 8008fec:	2300      	movs	r3, #0
 8008fee:	f10a 3aff 	add.w	sl, sl, #4294967295
 8008ff2:	f7f7 fd89 	bl	8000b08 <__aeabi_dcmpeq>
 8008ff6:	b9c0      	cbnz	r0, 800902a <_printf_float+0x41a>
 8008ff8:	4653      	mov	r3, sl
 8008ffa:	f108 0201 	add.w	r2, r8, #1
 8008ffe:	4631      	mov	r1, r6
 8009000:	4628      	mov	r0, r5
 8009002:	47b8      	blx	r7
 8009004:	3001      	adds	r0, #1
 8009006:	d10c      	bne.n	8009022 <_printf_float+0x412>
 8009008:	e65d      	b.n	8008cc6 <_printf_float+0xb6>
 800900a:	2301      	movs	r3, #1
 800900c:	465a      	mov	r2, fp
 800900e:	4631      	mov	r1, r6
 8009010:	4628      	mov	r0, r5
 8009012:	47b8      	blx	r7
 8009014:	3001      	adds	r0, #1
 8009016:	f43f ae56 	beq.w	8008cc6 <_printf_float+0xb6>
 800901a:	f108 0801 	add.w	r8, r8, #1
 800901e:	45d0      	cmp	r8, sl
 8009020:	dbf3      	blt.n	800900a <_printf_float+0x3fa>
 8009022:	464b      	mov	r3, r9
 8009024:	f104 0250 	add.w	r2, r4, #80	@ 0x50
 8009028:	e6df      	b.n	8008dea <_printf_float+0x1da>
 800902a:	f04f 0800 	mov.w	r8, #0
 800902e:	f104 0b1a 	add.w	fp, r4, #26
 8009032:	e7f4      	b.n	800901e <_printf_float+0x40e>
 8009034:	2301      	movs	r3, #1
 8009036:	4642      	mov	r2, r8
 8009038:	e7e1      	b.n	8008ffe <_printf_float+0x3ee>
 800903a:	2301      	movs	r3, #1
 800903c:	464a      	mov	r2, r9
 800903e:	4631      	mov	r1, r6
 8009040:	4628      	mov	r0, r5
 8009042:	47b8      	blx	r7
 8009044:	3001      	adds	r0, #1
 8009046:	f43f ae3e 	beq.w	8008cc6 <_printf_float+0xb6>
 800904a:	f108 0801 	add.w	r8, r8, #1
 800904e:	68e3      	ldr	r3, [r4, #12]
 8009050:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 8009052:	1a5b      	subs	r3, r3, r1
 8009054:	4543      	cmp	r3, r8
 8009056:	dcf0      	bgt.n	800903a <_printf_float+0x42a>
 8009058:	e6fc      	b.n	8008e54 <_printf_float+0x244>
 800905a:	f04f 0800 	mov.w	r8, #0
 800905e:	f104 0919 	add.w	r9, r4, #25
 8009062:	e7f4      	b.n	800904e <_printf_float+0x43e>

08009064 <_printf_common>:
 8009064:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8009068:	4616      	mov	r6, r2
 800906a:	4698      	mov	r8, r3
 800906c:	688a      	ldr	r2, [r1, #8]
 800906e:	690b      	ldr	r3, [r1, #16]
 8009070:	f8dd 9020 	ldr.w	r9, [sp, #32]
 8009074:	4293      	cmp	r3, r2
 8009076:	bfb8      	it	lt
 8009078:	4613      	movlt	r3, r2
 800907a:	6033      	str	r3, [r6, #0]
 800907c:	f891 2043 	ldrb.w	r2, [r1, #67]	@ 0x43
 8009080:	4607      	mov	r7, r0
 8009082:	460c      	mov	r4, r1
 8009084:	b10a      	cbz	r2, 800908a <_printf_common+0x26>
 8009086:	3301      	adds	r3, #1
 8009088:	6033      	str	r3, [r6, #0]
 800908a:	6823      	ldr	r3, [r4, #0]
 800908c:	0699      	lsls	r1, r3, #26
 800908e:	bf42      	ittt	mi
 8009090:	6833      	ldrmi	r3, [r6, #0]
 8009092:	3302      	addmi	r3, #2
 8009094:	6033      	strmi	r3, [r6, #0]
 8009096:	6825      	ldr	r5, [r4, #0]
 8009098:	f015 0506 	ands.w	r5, r5, #6
 800909c:	d106      	bne.n	80090ac <_printf_common+0x48>
 800909e:	f104 0a19 	add.w	sl, r4, #25
 80090a2:	68e3      	ldr	r3, [r4, #12]
 80090a4:	6832      	ldr	r2, [r6, #0]
 80090a6:	1a9b      	subs	r3, r3, r2
 80090a8:	42ab      	cmp	r3, r5
 80090aa:	dc26      	bgt.n	80090fa <_printf_common+0x96>
 80090ac:	f894 3043 	ldrb.w	r3, [r4, #67]	@ 0x43
 80090b0:	6822      	ldr	r2, [r4, #0]
 80090b2:	3b00      	subs	r3, #0
 80090b4:	bf18      	it	ne
 80090b6:	2301      	movne	r3, #1
 80090b8:	0692      	lsls	r2, r2, #26
 80090ba:	d42b      	bmi.n	8009114 <_printf_common+0xb0>
 80090bc:	f104 0243 	add.w	r2, r4, #67	@ 0x43
 80090c0:	4641      	mov	r1, r8
 80090c2:	4638      	mov	r0, r7
 80090c4:	47c8      	blx	r9
 80090c6:	3001      	adds	r0, #1
 80090c8:	d01e      	beq.n	8009108 <_printf_common+0xa4>
 80090ca:	6823      	ldr	r3, [r4, #0]
 80090cc:	6922      	ldr	r2, [r4, #16]
 80090ce:	f003 0306 	and.w	r3, r3, #6
 80090d2:	2b04      	cmp	r3, #4
 80090d4:	bf02      	ittt	eq
 80090d6:	68e5      	ldreq	r5, [r4, #12]
 80090d8:	6833      	ldreq	r3, [r6, #0]
 80090da:	1aed      	subeq	r5, r5, r3
 80090dc:	68a3      	ldr	r3, [r4, #8]
 80090de:	bf0c      	ite	eq
 80090e0:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 80090e4:	2500      	movne	r5, #0
 80090e6:	4293      	cmp	r3, r2
 80090e8:	bfc4      	itt	gt
 80090ea:	1a9b      	subgt	r3, r3, r2
 80090ec:	18ed      	addgt	r5, r5, r3
 80090ee:	2600      	movs	r6, #0
 80090f0:	341a      	adds	r4, #26
 80090f2:	42b5      	cmp	r5, r6
 80090f4:	d11a      	bne.n	800912c <_printf_common+0xc8>
 80090f6:	2000      	movs	r0, #0
 80090f8:	e008      	b.n	800910c <_printf_common+0xa8>
 80090fa:	2301      	movs	r3, #1
 80090fc:	4652      	mov	r2, sl
 80090fe:	4641      	mov	r1, r8
 8009100:	4638      	mov	r0, r7
 8009102:	47c8      	blx	r9
 8009104:	3001      	adds	r0, #1
 8009106:	d103      	bne.n	8009110 <_printf_common+0xac>
 8009108:	f04f 30ff 	mov.w	r0, #4294967295
 800910c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8009110:	3501      	adds	r5, #1
 8009112:	e7c6      	b.n	80090a2 <_printf_common+0x3e>
 8009114:	18e1      	adds	r1, r4, r3
 8009116:	1c5a      	adds	r2, r3, #1
 8009118:	2030      	movs	r0, #48	@ 0x30
 800911a:	f881 0043 	strb.w	r0, [r1, #67]	@ 0x43
 800911e:	4422      	add	r2, r4
 8009120:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
 8009124:	f882 1043 	strb.w	r1, [r2, #67]	@ 0x43
 8009128:	3302      	adds	r3, #2
 800912a:	e7c7      	b.n	80090bc <_printf_common+0x58>
 800912c:	2301      	movs	r3, #1
 800912e:	4622      	mov	r2, r4
 8009130:	4641      	mov	r1, r8
 8009132:	4638      	mov	r0, r7
 8009134:	47c8      	blx	r9
 8009136:	3001      	adds	r0, #1
 8009138:	d0e6      	beq.n	8009108 <_printf_common+0xa4>
 800913a:	3601      	adds	r6, #1
 800913c:	e7d9      	b.n	80090f2 <_printf_common+0x8e>
	...

08009140 <_printf_i>:
 8009140:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8009144:	7e0f      	ldrb	r7, [r1, #24]
 8009146:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 8009148:	2f78      	cmp	r7, #120	@ 0x78
 800914a:	4691      	mov	r9, r2
 800914c:	4680      	mov	r8, r0
 800914e:	460c      	mov	r4, r1
 8009150:	469a      	mov	sl, r3
 8009152:	f101 0243 	add.w	r2, r1, #67	@ 0x43
 8009156:	d807      	bhi.n	8009168 <_printf_i+0x28>
 8009158:	2f62      	cmp	r7, #98	@ 0x62
 800915a:	d80a      	bhi.n	8009172 <_printf_i+0x32>
 800915c:	2f00      	cmp	r7, #0
 800915e:	f000 80d2 	beq.w	8009306 <_printf_i+0x1c6>
 8009162:	2f58      	cmp	r7, #88	@ 0x58
 8009164:	f000 80b9 	beq.w	80092da <_printf_i+0x19a>
 8009168:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 800916c:	f884 7042 	strb.w	r7, [r4, #66]	@ 0x42
 8009170:	e03a      	b.n	80091e8 <_printf_i+0xa8>
 8009172:	f1a7 0363 	sub.w	r3, r7, #99	@ 0x63
 8009176:	2b15      	cmp	r3, #21
 8009178:	d8f6      	bhi.n	8009168 <_printf_i+0x28>
 800917a:	a101      	add	r1, pc, #4	@ (adr r1, 8009180 <_printf_i+0x40>)
 800917c:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8009180:	080091d9 	.word	0x080091d9
 8009184:	080091ed 	.word	0x080091ed
 8009188:	08009169 	.word	0x08009169
 800918c:	08009169 	.word	0x08009169
 8009190:	08009169 	.word	0x08009169
 8009194:	08009169 	.word	0x08009169
 8009198:	080091ed 	.word	0x080091ed
 800919c:	08009169 	.word	0x08009169
 80091a0:	08009169 	.word	0x08009169
 80091a4:	08009169 	.word	0x08009169
 80091a8:	08009169 	.word	0x08009169
 80091ac:	080092ed 	.word	0x080092ed
 80091b0:	08009217 	.word	0x08009217
 80091b4:	080092a7 	.word	0x080092a7
 80091b8:	08009169 	.word	0x08009169
 80091bc:	08009169 	.word	0x08009169
 80091c0:	0800930f 	.word	0x0800930f
 80091c4:	08009169 	.word	0x08009169
 80091c8:	08009217 	.word	0x08009217
 80091cc:	08009169 	.word	0x08009169
 80091d0:	08009169 	.word	0x08009169
 80091d4:	080092af 	.word	0x080092af
 80091d8:	6833      	ldr	r3, [r6, #0]
 80091da:	1d1a      	adds	r2, r3, #4
 80091dc:	681b      	ldr	r3, [r3, #0]
 80091de:	6032      	str	r2, [r6, #0]
 80091e0:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 80091e4:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 80091e8:	2301      	movs	r3, #1
 80091ea:	e09d      	b.n	8009328 <_printf_i+0x1e8>
 80091ec:	6833      	ldr	r3, [r6, #0]
 80091ee:	6820      	ldr	r0, [r4, #0]
 80091f0:	1d19      	adds	r1, r3, #4
 80091f2:	6031      	str	r1, [r6, #0]
 80091f4:	0606      	lsls	r6, r0, #24
 80091f6:	d501      	bpl.n	80091fc <_printf_i+0xbc>
 80091f8:	681d      	ldr	r5, [r3, #0]
 80091fa:	e003      	b.n	8009204 <_printf_i+0xc4>
 80091fc:	0645      	lsls	r5, r0, #25
 80091fe:	d5fb      	bpl.n	80091f8 <_printf_i+0xb8>
 8009200:	f9b3 5000 	ldrsh.w	r5, [r3]
 8009204:	2d00      	cmp	r5, #0
 8009206:	da03      	bge.n	8009210 <_printf_i+0xd0>
 8009208:	232d      	movs	r3, #45	@ 0x2d
 800920a:	426d      	negs	r5, r5
 800920c:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8009210:	4859      	ldr	r0, [pc, #356]	@ (8009378 <_printf_i+0x238>)
 8009212:	230a      	movs	r3, #10
 8009214:	e011      	b.n	800923a <_printf_i+0xfa>
 8009216:	6821      	ldr	r1, [r4, #0]
 8009218:	6833      	ldr	r3, [r6, #0]
 800921a:	0608      	lsls	r0, r1, #24
 800921c:	f853 5b04 	ldr.w	r5, [r3], #4
 8009220:	d402      	bmi.n	8009228 <_printf_i+0xe8>
 8009222:	0649      	lsls	r1, r1, #25
 8009224:	bf48      	it	mi
 8009226:	b2ad      	uxthmi	r5, r5
 8009228:	2f6f      	cmp	r7, #111	@ 0x6f
 800922a:	4853      	ldr	r0, [pc, #332]	@ (8009378 <_printf_i+0x238>)
 800922c:	6033      	str	r3, [r6, #0]
 800922e:	bf14      	ite	ne
 8009230:	230a      	movne	r3, #10
 8009232:	2308      	moveq	r3, #8
 8009234:	2100      	movs	r1, #0
 8009236:	f884 1043 	strb.w	r1, [r4, #67]	@ 0x43
 800923a:	6866      	ldr	r6, [r4, #4]
 800923c:	60a6      	str	r6, [r4, #8]
 800923e:	2e00      	cmp	r6, #0
 8009240:	bfa2      	ittt	ge
 8009242:	6821      	ldrge	r1, [r4, #0]
 8009244:	f021 0104 	bicge.w	r1, r1, #4
 8009248:	6021      	strge	r1, [r4, #0]
 800924a:	b90d      	cbnz	r5, 8009250 <_printf_i+0x110>
 800924c:	2e00      	cmp	r6, #0
 800924e:	d04b      	beq.n	80092e8 <_printf_i+0x1a8>
 8009250:	4616      	mov	r6, r2
 8009252:	fbb5 f1f3 	udiv	r1, r5, r3
 8009256:	fb03 5711 	mls	r7, r3, r1, r5
 800925a:	5dc7      	ldrb	r7, [r0, r7]
 800925c:	f806 7d01 	strb.w	r7, [r6, #-1]!
 8009260:	462f      	mov	r7, r5
 8009262:	42bb      	cmp	r3, r7
 8009264:	460d      	mov	r5, r1
 8009266:	d9f4      	bls.n	8009252 <_printf_i+0x112>
 8009268:	2b08      	cmp	r3, #8
 800926a:	d10b      	bne.n	8009284 <_printf_i+0x144>
 800926c:	6823      	ldr	r3, [r4, #0]
 800926e:	07df      	lsls	r7, r3, #31
 8009270:	d508      	bpl.n	8009284 <_printf_i+0x144>
 8009272:	6923      	ldr	r3, [r4, #16]
 8009274:	6861      	ldr	r1, [r4, #4]
 8009276:	4299      	cmp	r1, r3
 8009278:	bfde      	ittt	le
 800927a:	2330      	movle	r3, #48	@ 0x30
 800927c:	f806 3c01 	strble.w	r3, [r6, #-1]
 8009280:	f106 36ff 	addle.w	r6, r6, #4294967295
 8009284:	1b92      	subs	r2, r2, r6
 8009286:	6122      	str	r2, [r4, #16]
 8009288:	f8cd a000 	str.w	sl, [sp]
 800928c:	464b      	mov	r3, r9
 800928e:	aa03      	add	r2, sp, #12
 8009290:	4621      	mov	r1, r4
 8009292:	4640      	mov	r0, r8
 8009294:	f7ff fee6 	bl	8009064 <_printf_common>
 8009298:	3001      	adds	r0, #1
 800929a:	d14a      	bne.n	8009332 <_printf_i+0x1f2>
 800929c:	f04f 30ff 	mov.w	r0, #4294967295
 80092a0:	b004      	add	sp, #16
 80092a2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80092a6:	6823      	ldr	r3, [r4, #0]
 80092a8:	f043 0320 	orr.w	r3, r3, #32
 80092ac:	6023      	str	r3, [r4, #0]
 80092ae:	4833      	ldr	r0, [pc, #204]	@ (800937c <_printf_i+0x23c>)
 80092b0:	2778      	movs	r7, #120	@ 0x78
 80092b2:	f884 7045 	strb.w	r7, [r4, #69]	@ 0x45
 80092b6:	6823      	ldr	r3, [r4, #0]
 80092b8:	6831      	ldr	r1, [r6, #0]
 80092ba:	061f      	lsls	r7, r3, #24
 80092bc:	f851 5b04 	ldr.w	r5, [r1], #4
 80092c0:	d402      	bmi.n	80092c8 <_printf_i+0x188>
 80092c2:	065f      	lsls	r7, r3, #25
 80092c4:	bf48      	it	mi
 80092c6:	b2ad      	uxthmi	r5, r5
 80092c8:	6031      	str	r1, [r6, #0]
 80092ca:	07d9      	lsls	r1, r3, #31
 80092cc:	bf44      	itt	mi
 80092ce:	f043 0320 	orrmi.w	r3, r3, #32
 80092d2:	6023      	strmi	r3, [r4, #0]
 80092d4:	b11d      	cbz	r5, 80092de <_printf_i+0x19e>
 80092d6:	2310      	movs	r3, #16
 80092d8:	e7ac      	b.n	8009234 <_printf_i+0xf4>
 80092da:	4827      	ldr	r0, [pc, #156]	@ (8009378 <_printf_i+0x238>)
 80092dc:	e7e9      	b.n	80092b2 <_printf_i+0x172>
 80092de:	6823      	ldr	r3, [r4, #0]
 80092e0:	f023 0320 	bic.w	r3, r3, #32
 80092e4:	6023      	str	r3, [r4, #0]
 80092e6:	e7f6      	b.n	80092d6 <_printf_i+0x196>
 80092e8:	4616      	mov	r6, r2
 80092ea:	e7bd      	b.n	8009268 <_printf_i+0x128>
 80092ec:	6833      	ldr	r3, [r6, #0]
 80092ee:	6825      	ldr	r5, [r4, #0]
 80092f0:	6961      	ldr	r1, [r4, #20]
 80092f2:	1d18      	adds	r0, r3, #4
 80092f4:	6030      	str	r0, [r6, #0]
 80092f6:	062e      	lsls	r6, r5, #24
 80092f8:	681b      	ldr	r3, [r3, #0]
 80092fa:	d501      	bpl.n	8009300 <_printf_i+0x1c0>
 80092fc:	6019      	str	r1, [r3, #0]
 80092fe:	e002      	b.n	8009306 <_printf_i+0x1c6>
 8009300:	0668      	lsls	r0, r5, #25
 8009302:	d5fb      	bpl.n	80092fc <_printf_i+0x1bc>
 8009304:	8019      	strh	r1, [r3, #0]
 8009306:	2300      	movs	r3, #0
 8009308:	6123      	str	r3, [r4, #16]
 800930a:	4616      	mov	r6, r2
 800930c:	e7bc      	b.n	8009288 <_printf_i+0x148>
 800930e:	6833      	ldr	r3, [r6, #0]
 8009310:	1d1a      	adds	r2, r3, #4
 8009312:	6032      	str	r2, [r6, #0]
 8009314:	681e      	ldr	r6, [r3, #0]
 8009316:	6862      	ldr	r2, [r4, #4]
 8009318:	2100      	movs	r1, #0
 800931a:	4630      	mov	r0, r6
 800931c:	f7f6 ff78 	bl	8000210 <memchr>
 8009320:	b108      	cbz	r0, 8009326 <_printf_i+0x1e6>
 8009322:	1b80      	subs	r0, r0, r6
 8009324:	6060      	str	r0, [r4, #4]
 8009326:	6863      	ldr	r3, [r4, #4]
 8009328:	6123      	str	r3, [r4, #16]
 800932a:	2300      	movs	r3, #0
 800932c:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8009330:	e7aa      	b.n	8009288 <_printf_i+0x148>
 8009332:	6923      	ldr	r3, [r4, #16]
 8009334:	4632      	mov	r2, r6
 8009336:	4649      	mov	r1, r9
 8009338:	4640      	mov	r0, r8
 800933a:	47d0      	blx	sl
 800933c:	3001      	adds	r0, #1
 800933e:	d0ad      	beq.n	800929c <_printf_i+0x15c>
 8009340:	6823      	ldr	r3, [r4, #0]
 8009342:	079b      	lsls	r3, r3, #30
 8009344:	d413      	bmi.n	800936e <_printf_i+0x22e>
 8009346:	68e0      	ldr	r0, [r4, #12]
 8009348:	9b03      	ldr	r3, [sp, #12]
 800934a:	4298      	cmp	r0, r3
 800934c:	bfb8      	it	lt
 800934e:	4618      	movlt	r0, r3
 8009350:	e7a6      	b.n	80092a0 <_printf_i+0x160>
 8009352:	2301      	movs	r3, #1
 8009354:	4632      	mov	r2, r6
 8009356:	4649      	mov	r1, r9
 8009358:	4640      	mov	r0, r8
 800935a:	47d0      	blx	sl
 800935c:	3001      	adds	r0, #1
 800935e:	d09d      	beq.n	800929c <_printf_i+0x15c>
 8009360:	3501      	adds	r5, #1
 8009362:	68e3      	ldr	r3, [r4, #12]
 8009364:	9903      	ldr	r1, [sp, #12]
 8009366:	1a5b      	subs	r3, r3, r1
 8009368:	42ab      	cmp	r3, r5
 800936a:	dcf2      	bgt.n	8009352 <_printf_i+0x212>
 800936c:	e7eb      	b.n	8009346 <_printf_i+0x206>
 800936e:	2500      	movs	r5, #0
 8009370:	f104 0619 	add.w	r6, r4, #25
 8009374:	e7f5      	b.n	8009362 <_printf_i+0x222>
 8009376:	bf00      	nop
 8009378:	0800d562 	.word	0x0800d562
 800937c:	0800d573 	.word	0x0800d573

08009380 <_scanf_float>:
 8009380:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8009384:	b087      	sub	sp, #28
 8009386:	4617      	mov	r7, r2
 8009388:	9303      	str	r3, [sp, #12]
 800938a:	688b      	ldr	r3, [r1, #8]
 800938c:	1e5a      	subs	r2, r3, #1
 800938e:	f5b2 7fae 	cmp.w	r2, #348	@ 0x15c
 8009392:	bf81      	itttt	hi
 8009394:	f46f 75ae 	mvnhi.w	r5, #348	@ 0x15c
 8009398:	eb03 0b05 	addhi.w	fp, r3, r5
 800939c:	f240 135d 	movwhi	r3, #349	@ 0x15d
 80093a0:	608b      	strhi	r3, [r1, #8]
 80093a2:	680b      	ldr	r3, [r1, #0]
 80093a4:	460a      	mov	r2, r1
 80093a6:	f04f 0500 	mov.w	r5, #0
 80093aa:	f443 63f0 	orr.w	r3, r3, #1920	@ 0x780
 80093ae:	f842 3b1c 	str.w	r3, [r2], #28
 80093b2:	e9cd 5504 	strd	r5, r5, [sp, #16]
 80093b6:	4680      	mov	r8, r0
 80093b8:	460c      	mov	r4, r1
 80093ba:	bf98      	it	ls
 80093bc:	f04f 0b00 	movls.w	fp, #0
 80093c0:	9201      	str	r2, [sp, #4]
 80093c2:	4616      	mov	r6, r2
 80093c4:	46aa      	mov	sl, r5
 80093c6:	46a9      	mov	r9, r5
 80093c8:	9502      	str	r5, [sp, #8]
 80093ca:	68a2      	ldr	r2, [r4, #8]
 80093cc:	b152      	cbz	r2, 80093e4 <_scanf_float+0x64>
 80093ce:	683b      	ldr	r3, [r7, #0]
 80093d0:	781b      	ldrb	r3, [r3, #0]
 80093d2:	2b4e      	cmp	r3, #78	@ 0x4e
 80093d4:	d864      	bhi.n	80094a0 <_scanf_float+0x120>
 80093d6:	2b40      	cmp	r3, #64	@ 0x40
 80093d8:	d83c      	bhi.n	8009454 <_scanf_float+0xd4>
 80093da:	f1a3 012b 	sub.w	r1, r3, #43	@ 0x2b
 80093de:	b2c8      	uxtb	r0, r1
 80093e0:	280e      	cmp	r0, #14
 80093e2:	d93a      	bls.n	800945a <_scanf_float+0xda>
 80093e4:	f1b9 0f00 	cmp.w	r9, #0
 80093e8:	d003      	beq.n	80093f2 <_scanf_float+0x72>
 80093ea:	6823      	ldr	r3, [r4, #0]
 80093ec:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 80093f0:	6023      	str	r3, [r4, #0]
 80093f2:	f10a 3aff 	add.w	sl, sl, #4294967295
 80093f6:	f1ba 0f01 	cmp.w	sl, #1
 80093fa:	f200 8117 	bhi.w	800962c <_scanf_float+0x2ac>
 80093fe:	9b01      	ldr	r3, [sp, #4]
 8009400:	429e      	cmp	r6, r3
 8009402:	f200 8108 	bhi.w	8009616 <_scanf_float+0x296>
 8009406:	2001      	movs	r0, #1
 8009408:	b007      	add	sp, #28
 800940a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800940e:	f1a3 0261 	sub.w	r2, r3, #97	@ 0x61
 8009412:	2a0d      	cmp	r2, #13
 8009414:	d8e6      	bhi.n	80093e4 <_scanf_float+0x64>
 8009416:	a101      	add	r1, pc, #4	@ (adr r1, 800941c <_scanf_float+0x9c>)
 8009418:	f851 f022 	ldr.w	pc, [r1, r2, lsl #2]
 800941c:	08009563 	.word	0x08009563
 8009420:	080093e5 	.word	0x080093e5
 8009424:	080093e5 	.word	0x080093e5
 8009428:	080093e5 	.word	0x080093e5
 800942c:	080095c3 	.word	0x080095c3
 8009430:	0800959b 	.word	0x0800959b
 8009434:	080093e5 	.word	0x080093e5
 8009438:	080093e5 	.word	0x080093e5
 800943c:	08009571 	.word	0x08009571
 8009440:	080093e5 	.word	0x080093e5
 8009444:	080093e5 	.word	0x080093e5
 8009448:	080093e5 	.word	0x080093e5
 800944c:	080093e5 	.word	0x080093e5
 8009450:	08009529 	.word	0x08009529
 8009454:	f1a3 0241 	sub.w	r2, r3, #65	@ 0x41
 8009458:	e7db      	b.n	8009412 <_scanf_float+0x92>
 800945a:	290e      	cmp	r1, #14
 800945c:	d8c2      	bhi.n	80093e4 <_scanf_float+0x64>
 800945e:	a001      	add	r0, pc, #4	@ (adr r0, 8009464 <_scanf_float+0xe4>)
 8009460:	f850 f021 	ldr.w	pc, [r0, r1, lsl #2]
 8009464:	08009519 	.word	0x08009519
 8009468:	080093e5 	.word	0x080093e5
 800946c:	08009519 	.word	0x08009519
 8009470:	080095af 	.word	0x080095af
 8009474:	080093e5 	.word	0x080093e5
 8009478:	080094c1 	.word	0x080094c1
 800947c:	080094ff 	.word	0x080094ff
 8009480:	080094ff 	.word	0x080094ff
 8009484:	080094ff 	.word	0x080094ff
 8009488:	080094ff 	.word	0x080094ff
 800948c:	080094ff 	.word	0x080094ff
 8009490:	080094ff 	.word	0x080094ff
 8009494:	080094ff 	.word	0x080094ff
 8009498:	080094ff 	.word	0x080094ff
 800949c:	080094ff 	.word	0x080094ff
 80094a0:	2b6e      	cmp	r3, #110	@ 0x6e
 80094a2:	d809      	bhi.n	80094b8 <_scanf_float+0x138>
 80094a4:	2b60      	cmp	r3, #96	@ 0x60
 80094a6:	d8b2      	bhi.n	800940e <_scanf_float+0x8e>
 80094a8:	2b54      	cmp	r3, #84	@ 0x54
 80094aa:	d07b      	beq.n	80095a4 <_scanf_float+0x224>
 80094ac:	2b59      	cmp	r3, #89	@ 0x59
 80094ae:	d199      	bne.n	80093e4 <_scanf_float+0x64>
 80094b0:	2d07      	cmp	r5, #7
 80094b2:	d197      	bne.n	80093e4 <_scanf_float+0x64>
 80094b4:	2508      	movs	r5, #8
 80094b6:	e02c      	b.n	8009512 <_scanf_float+0x192>
 80094b8:	2b74      	cmp	r3, #116	@ 0x74
 80094ba:	d073      	beq.n	80095a4 <_scanf_float+0x224>
 80094bc:	2b79      	cmp	r3, #121	@ 0x79
 80094be:	e7f6      	b.n	80094ae <_scanf_float+0x12e>
 80094c0:	6821      	ldr	r1, [r4, #0]
 80094c2:	05c8      	lsls	r0, r1, #23
 80094c4:	d51b      	bpl.n	80094fe <_scanf_float+0x17e>
 80094c6:	f021 0180 	bic.w	r1, r1, #128	@ 0x80
 80094ca:	6021      	str	r1, [r4, #0]
 80094cc:	f109 0901 	add.w	r9, r9, #1
 80094d0:	f1bb 0f00 	cmp.w	fp, #0
 80094d4:	d003      	beq.n	80094de <_scanf_float+0x15e>
 80094d6:	3201      	adds	r2, #1
 80094d8:	f10b 3bff 	add.w	fp, fp, #4294967295
 80094dc:	60a2      	str	r2, [r4, #8]
 80094de:	68a3      	ldr	r3, [r4, #8]
 80094e0:	3b01      	subs	r3, #1
 80094e2:	60a3      	str	r3, [r4, #8]
 80094e4:	6923      	ldr	r3, [r4, #16]
 80094e6:	3301      	adds	r3, #1
 80094e8:	6123      	str	r3, [r4, #16]
 80094ea:	687b      	ldr	r3, [r7, #4]
 80094ec:	3b01      	subs	r3, #1
 80094ee:	2b00      	cmp	r3, #0
 80094f0:	607b      	str	r3, [r7, #4]
 80094f2:	f340 8087 	ble.w	8009604 <_scanf_float+0x284>
 80094f6:	683b      	ldr	r3, [r7, #0]
 80094f8:	3301      	adds	r3, #1
 80094fa:	603b      	str	r3, [r7, #0]
 80094fc:	e765      	b.n	80093ca <_scanf_float+0x4a>
 80094fe:	eb1a 0105 	adds.w	r1, sl, r5
 8009502:	f47f af6f 	bne.w	80093e4 <_scanf_float+0x64>
 8009506:	6822      	ldr	r2, [r4, #0]
 8009508:	f422 72c0 	bic.w	r2, r2, #384	@ 0x180
 800950c:	6022      	str	r2, [r4, #0]
 800950e:	460d      	mov	r5, r1
 8009510:	468a      	mov	sl, r1
 8009512:	f806 3b01 	strb.w	r3, [r6], #1
 8009516:	e7e2      	b.n	80094de <_scanf_float+0x15e>
 8009518:	6822      	ldr	r2, [r4, #0]
 800951a:	0610      	lsls	r0, r2, #24
 800951c:	f57f af62 	bpl.w	80093e4 <_scanf_float+0x64>
 8009520:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
 8009524:	6022      	str	r2, [r4, #0]
 8009526:	e7f4      	b.n	8009512 <_scanf_float+0x192>
 8009528:	f1ba 0f00 	cmp.w	sl, #0
 800952c:	d10e      	bne.n	800954c <_scanf_float+0x1cc>
 800952e:	f1b9 0f00 	cmp.w	r9, #0
 8009532:	d10e      	bne.n	8009552 <_scanf_float+0x1d2>
 8009534:	6822      	ldr	r2, [r4, #0]
 8009536:	f402 61e0 	and.w	r1, r2, #1792	@ 0x700
 800953a:	f5b1 6fe0 	cmp.w	r1, #1792	@ 0x700
 800953e:	d108      	bne.n	8009552 <_scanf_float+0x1d2>
 8009540:	f422 62f0 	bic.w	r2, r2, #1920	@ 0x780
 8009544:	6022      	str	r2, [r4, #0]
 8009546:	f04f 0a01 	mov.w	sl, #1
 800954a:	e7e2      	b.n	8009512 <_scanf_float+0x192>
 800954c:	f1ba 0f02 	cmp.w	sl, #2
 8009550:	d055      	beq.n	80095fe <_scanf_float+0x27e>
 8009552:	2d01      	cmp	r5, #1
 8009554:	d002      	beq.n	800955c <_scanf_float+0x1dc>
 8009556:	2d04      	cmp	r5, #4
 8009558:	f47f af44 	bne.w	80093e4 <_scanf_float+0x64>
 800955c:	3501      	adds	r5, #1
 800955e:	b2ed      	uxtb	r5, r5
 8009560:	e7d7      	b.n	8009512 <_scanf_float+0x192>
 8009562:	f1ba 0f01 	cmp.w	sl, #1
 8009566:	f47f af3d 	bne.w	80093e4 <_scanf_float+0x64>
 800956a:	f04f 0a02 	mov.w	sl, #2
 800956e:	e7d0      	b.n	8009512 <_scanf_float+0x192>
 8009570:	b97d      	cbnz	r5, 8009592 <_scanf_float+0x212>
 8009572:	f1b9 0f00 	cmp.w	r9, #0
 8009576:	f47f af38 	bne.w	80093ea <_scanf_float+0x6a>
 800957a:	6822      	ldr	r2, [r4, #0]
 800957c:	f402 61e0 	and.w	r1, r2, #1792	@ 0x700
 8009580:	f5b1 6fe0 	cmp.w	r1, #1792	@ 0x700
 8009584:	f040 8108 	bne.w	8009798 <_scanf_float+0x418>
 8009588:	f422 62f0 	bic.w	r2, r2, #1920	@ 0x780
 800958c:	6022      	str	r2, [r4, #0]
 800958e:	2501      	movs	r5, #1
 8009590:	e7bf      	b.n	8009512 <_scanf_float+0x192>
 8009592:	2d03      	cmp	r5, #3
 8009594:	d0e2      	beq.n	800955c <_scanf_float+0x1dc>
 8009596:	2d05      	cmp	r5, #5
 8009598:	e7de      	b.n	8009558 <_scanf_float+0x1d8>
 800959a:	2d02      	cmp	r5, #2
 800959c:	f47f af22 	bne.w	80093e4 <_scanf_float+0x64>
 80095a0:	2503      	movs	r5, #3
 80095a2:	e7b6      	b.n	8009512 <_scanf_float+0x192>
 80095a4:	2d06      	cmp	r5, #6
 80095a6:	f47f af1d 	bne.w	80093e4 <_scanf_float+0x64>
 80095aa:	2507      	movs	r5, #7
 80095ac:	e7b1      	b.n	8009512 <_scanf_float+0x192>
 80095ae:	6822      	ldr	r2, [r4, #0]
 80095b0:	0591      	lsls	r1, r2, #22
 80095b2:	f57f af17 	bpl.w	80093e4 <_scanf_float+0x64>
 80095b6:	f422 7220 	bic.w	r2, r2, #640	@ 0x280
 80095ba:	6022      	str	r2, [r4, #0]
 80095bc:	f8cd 9008 	str.w	r9, [sp, #8]
 80095c0:	e7a7      	b.n	8009512 <_scanf_float+0x192>
 80095c2:	6822      	ldr	r2, [r4, #0]
 80095c4:	f402 61a0 	and.w	r1, r2, #1280	@ 0x500
 80095c8:	f5b1 6f80 	cmp.w	r1, #1024	@ 0x400
 80095cc:	d006      	beq.n	80095dc <_scanf_float+0x25c>
 80095ce:	0550      	lsls	r0, r2, #21
 80095d0:	f57f af08 	bpl.w	80093e4 <_scanf_float+0x64>
 80095d4:	f1b9 0f00 	cmp.w	r9, #0
 80095d8:	f000 80de 	beq.w	8009798 <_scanf_float+0x418>
 80095dc:	0591      	lsls	r1, r2, #22
 80095de:	bf58      	it	pl
 80095e0:	9902      	ldrpl	r1, [sp, #8]
 80095e2:	f422 62f0 	bic.w	r2, r2, #1920	@ 0x780
 80095e6:	bf58      	it	pl
 80095e8:	eba9 0101 	subpl.w	r1, r9, r1
 80095ec:	f442 72c0 	orr.w	r2, r2, #384	@ 0x180
 80095f0:	bf58      	it	pl
 80095f2:	e9cd 1604 	strdpl	r1, r6, [sp, #16]
 80095f6:	6022      	str	r2, [r4, #0]
 80095f8:	f04f 0900 	mov.w	r9, #0
 80095fc:	e789      	b.n	8009512 <_scanf_float+0x192>
 80095fe:	f04f 0a03 	mov.w	sl, #3
 8009602:	e786      	b.n	8009512 <_scanf_float+0x192>
 8009604:	f8d4 3180 	ldr.w	r3, [r4, #384]	@ 0x180
 8009608:	4639      	mov	r1, r7
 800960a:	4640      	mov	r0, r8
 800960c:	4798      	blx	r3
 800960e:	2800      	cmp	r0, #0
 8009610:	f43f aedb 	beq.w	80093ca <_scanf_float+0x4a>
 8009614:	e6e6      	b.n	80093e4 <_scanf_float+0x64>
 8009616:	f8d4 317c 	ldr.w	r3, [r4, #380]	@ 0x17c
 800961a:	f816 1d01 	ldrb.w	r1, [r6, #-1]!
 800961e:	463a      	mov	r2, r7
 8009620:	4640      	mov	r0, r8
 8009622:	4798      	blx	r3
 8009624:	6923      	ldr	r3, [r4, #16]
 8009626:	3b01      	subs	r3, #1
 8009628:	6123      	str	r3, [r4, #16]
 800962a:	e6e8      	b.n	80093fe <_scanf_float+0x7e>
 800962c:	1e6b      	subs	r3, r5, #1
 800962e:	2b06      	cmp	r3, #6
 8009630:	d824      	bhi.n	800967c <_scanf_float+0x2fc>
 8009632:	2d02      	cmp	r5, #2
 8009634:	d836      	bhi.n	80096a4 <_scanf_float+0x324>
 8009636:	9b01      	ldr	r3, [sp, #4]
 8009638:	429e      	cmp	r6, r3
 800963a:	f67f aee4 	bls.w	8009406 <_scanf_float+0x86>
 800963e:	f8d4 317c 	ldr.w	r3, [r4, #380]	@ 0x17c
 8009642:	f816 1d01 	ldrb.w	r1, [r6, #-1]!
 8009646:	463a      	mov	r2, r7
 8009648:	4640      	mov	r0, r8
 800964a:	4798      	blx	r3
 800964c:	6923      	ldr	r3, [r4, #16]
 800964e:	3b01      	subs	r3, #1
 8009650:	6123      	str	r3, [r4, #16]
 8009652:	e7f0      	b.n	8009636 <_scanf_float+0x2b6>
 8009654:	f8d4 317c 	ldr.w	r3, [r4, #380]	@ 0x17c
 8009658:	f81b 1d01 	ldrb.w	r1, [fp, #-1]!
 800965c:	463a      	mov	r2, r7
 800965e:	4640      	mov	r0, r8
 8009660:	4798      	blx	r3
 8009662:	6923      	ldr	r3, [r4, #16]
 8009664:	3b01      	subs	r3, #1
 8009666:	6123      	str	r3, [r4, #16]
 8009668:	f10a 3aff 	add.w	sl, sl, #4294967295
 800966c:	fa5f fa8a 	uxtb.w	sl, sl
 8009670:	f1ba 0f02 	cmp.w	sl, #2
 8009674:	d1ee      	bne.n	8009654 <_scanf_float+0x2d4>
 8009676:	3d03      	subs	r5, #3
 8009678:	b2ed      	uxtb	r5, r5
 800967a:	1b76      	subs	r6, r6, r5
 800967c:	6823      	ldr	r3, [r4, #0]
 800967e:	05da      	lsls	r2, r3, #23
 8009680:	d530      	bpl.n	80096e4 <_scanf_float+0x364>
 8009682:	055b      	lsls	r3, r3, #21
 8009684:	d511      	bpl.n	80096aa <_scanf_float+0x32a>
 8009686:	9b01      	ldr	r3, [sp, #4]
 8009688:	429e      	cmp	r6, r3
 800968a:	f67f aebc 	bls.w	8009406 <_scanf_float+0x86>
 800968e:	f8d4 317c 	ldr.w	r3, [r4, #380]	@ 0x17c
 8009692:	f816 1d01 	ldrb.w	r1, [r6, #-1]!
 8009696:	463a      	mov	r2, r7
 8009698:	4640      	mov	r0, r8
 800969a:	4798      	blx	r3
 800969c:	6923      	ldr	r3, [r4, #16]
 800969e:	3b01      	subs	r3, #1
 80096a0:	6123      	str	r3, [r4, #16]
 80096a2:	e7f0      	b.n	8009686 <_scanf_float+0x306>
 80096a4:	46aa      	mov	sl, r5
 80096a6:	46b3      	mov	fp, r6
 80096a8:	e7de      	b.n	8009668 <_scanf_float+0x2e8>
 80096aa:	f816 1c01 	ldrb.w	r1, [r6, #-1]
 80096ae:	6923      	ldr	r3, [r4, #16]
 80096b0:	2965      	cmp	r1, #101	@ 0x65
 80096b2:	f103 33ff 	add.w	r3, r3, #4294967295
 80096b6:	f106 35ff 	add.w	r5, r6, #4294967295
 80096ba:	6123      	str	r3, [r4, #16]
 80096bc:	d00c      	beq.n	80096d8 <_scanf_float+0x358>
 80096be:	2945      	cmp	r1, #69	@ 0x45
 80096c0:	d00a      	beq.n	80096d8 <_scanf_float+0x358>
 80096c2:	f8d4 317c 	ldr.w	r3, [r4, #380]	@ 0x17c
 80096c6:	463a      	mov	r2, r7
 80096c8:	4640      	mov	r0, r8
 80096ca:	4798      	blx	r3
 80096cc:	6923      	ldr	r3, [r4, #16]
 80096ce:	f816 1c02 	ldrb.w	r1, [r6, #-2]
 80096d2:	3b01      	subs	r3, #1
 80096d4:	1eb5      	subs	r5, r6, #2
 80096d6:	6123      	str	r3, [r4, #16]
 80096d8:	f8d4 317c 	ldr.w	r3, [r4, #380]	@ 0x17c
 80096dc:	463a      	mov	r2, r7
 80096de:	4640      	mov	r0, r8
 80096e0:	4798      	blx	r3
 80096e2:	462e      	mov	r6, r5
 80096e4:	6822      	ldr	r2, [r4, #0]
 80096e6:	f012 0210 	ands.w	r2, r2, #16
 80096ea:	d001      	beq.n	80096f0 <_scanf_float+0x370>
 80096ec:	2000      	movs	r0, #0
 80096ee:	e68b      	b.n	8009408 <_scanf_float+0x88>
 80096f0:	7032      	strb	r2, [r6, #0]
 80096f2:	6823      	ldr	r3, [r4, #0]
 80096f4:	f403 63c0 	and.w	r3, r3, #1536	@ 0x600
 80096f8:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 80096fc:	d11c      	bne.n	8009738 <_scanf_float+0x3b8>
 80096fe:	9b02      	ldr	r3, [sp, #8]
 8009700:	454b      	cmp	r3, r9
 8009702:	eba3 0209 	sub.w	r2, r3, r9
 8009706:	d123      	bne.n	8009750 <_scanf_float+0x3d0>
 8009708:	9901      	ldr	r1, [sp, #4]
 800970a:	2200      	movs	r2, #0
 800970c:	4640      	mov	r0, r8
 800970e:	f002 fd0b 	bl	800c128 <_strtod_r>
 8009712:	9b03      	ldr	r3, [sp, #12]
 8009714:	6821      	ldr	r1, [r4, #0]
 8009716:	681b      	ldr	r3, [r3, #0]
 8009718:	f011 0f02 	tst.w	r1, #2
 800971c:	ec57 6b10 	vmov	r6, r7, d0
 8009720:	f103 0204 	add.w	r2, r3, #4
 8009724:	d01f      	beq.n	8009766 <_scanf_float+0x3e6>
 8009726:	9903      	ldr	r1, [sp, #12]
 8009728:	600a      	str	r2, [r1, #0]
 800972a:	681b      	ldr	r3, [r3, #0]
 800972c:	e9c3 6700 	strd	r6, r7, [r3]
 8009730:	68e3      	ldr	r3, [r4, #12]
 8009732:	3301      	adds	r3, #1
 8009734:	60e3      	str	r3, [r4, #12]
 8009736:	e7d9      	b.n	80096ec <_scanf_float+0x36c>
 8009738:	9b04      	ldr	r3, [sp, #16]
 800973a:	2b00      	cmp	r3, #0
 800973c:	d0e4      	beq.n	8009708 <_scanf_float+0x388>
 800973e:	9905      	ldr	r1, [sp, #20]
 8009740:	230a      	movs	r3, #10
 8009742:	3101      	adds	r1, #1
 8009744:	4640      	mov	r0, r8
 8009746:	f002 fd6f 	bl	800c228 <_strtol_r>
 800974a:	9b04      	ldr	r3, [sp, #16]
 800974c:	9e05      	ldr	r6, [sp, #20]
 800974e:	1ac2      	subs	r2, r0, r3
 8009750:	f204 136f 	addw	r3, r4, #367	@ 0x16f
 8009754:	429e      	cmp	r6, r3
 8009756:	bf28      	it	cs
 8009758:	f504 76b7 	addcs.w	r6, r4, #366	@ 0x16e
 800975c:	4910      	ldr	r1, [pc, #64]	@ (80097a0 <_scanf_float+0x420>)
 800975e:	4630      	mov	r0, r6
 8009760:	f000 f954 	bl	8009a0c <siprintf>
 8009764:	e7d0      	b.n	8009708 <_scanf_float+0x388>
 8009766:	f011 0f04 	tst.w	r1, #4
 800976a:	9903      	ldr	r1, [sp, #12]
 800976c:	600a      	str	r2, [r1, #0]
 800976e:	d1dc      	bne.n	800972a <_scanf_float+0x3aa>
 8009770:	681d      	ldr	r5, [r3, #0]
 8009772:	4632      	mov	r2, r6
 8009774:	463b      	mov	r3, r7
 8009776:	4630      	mov	r0, r6
 8009778:	4639      	mov	r1, r7
 800977a:	f7f7 f9f7 	bl	8000b6c <__aeabi_dcmpun>
 800977e:	b128      	cbz	r0, 800978c <_scanf_float+0x40c>
 8009780:	4808      	ldr	r0, [pc, #32]	@ (80097a4 <_scanf_float+0x424>)
 8009782:	f000 fac9 	bl	8009d18 <nanf>
 8009786:	ed85 0a00 	vstr	s0, [r5]
 800978a:	e7d1      	b.n	8009730 <_scanf_float+0x3b0>
 800978c:	4630      	mov	r0, r6
 800978e:	4639      	mov	r1, r7
 8009790:	f7f7 fa4a 	bl	8000c28 <__aeabi_d2f>
 8009794:	6028      	str	r0, [r5, #0]
 8009796:	e7cb      	b.n	8009730 <_scanf_float+0x3b0>
 8009798:	f04f 0900 	mov.w	r9, #0
 800979c:	e629      	b.n	80093f2 <_scanf_float+0x72>
 800979e:	bf00      	nop
 80097a0:	0800d584 	.word	0x0800d584
 80097a4:	0800d91d 	.word	0x0800d91d

080097a8 <std>:
 80097a8:	2300      	movs	r3, #0
 80097aa:	b510      	push	{r4, lr}
 80097ac:	4604      	mov	r4, r0
 80097ae:	e9c0 3300 	strd	r3, r3, [r0]
 80097b2:	e9c0 3304 	strd	r3, r3, [r0, #16]
 80097b6:	6083      	str	r3, [r0, #8]
 80097b8:	8181      	strh	r1, [r0, #12]
 80097ba:	6643      	str	r3, [r0, #100]	@ 0x64
 80097bc:	81c2      	strh	r2, [r0, #14]
 80097be:	6183      	str	r3, [r0, #24]
 80097c0:	4619      	mov	r1, r3
 80097c2:	2208      	movs	r2, #8
 80097c4:	305c      	adds	r0, #92	@ 0x5c
 80097c6:	f000 fa19 	bl	8009bfc <memset>
 80097ca:	4b0d      	ldr	r3, [pc, #52]	@ (8009800 <std+0x58>)
 80097cc:	6263      	str	r3, [r4, #36]	@ 0x24
 80097ce:	4b0d      	ldr	r3, [pc, #52]	@ (8009804 <std+0x5c>)
 80097d0:	62a3      	str	r3, [r4, #40]	@ 0x28
 80097d2:	4b0d      	ldr	r3, [pc, #52]	@ (8009808 <std+0x60>)
 80097d4:	62e3      	str	r3, [r4, #44]	@ 0x2c
 80097d6:	4b0d      	ldr	r3, [pc, #52]	@ (800980c <std+0x64>)
 80097d8:	6323      	str	r3, [r4, #48]	@ 0x30
 80097da:	4b0d      	ldr	r3, [pc, #52]	@ (8009810 <std+0x68>)
 80097dc:	6224      	str	r4, [r4, #32]
 80097de:	429c      	cmp	r4, r3
 80097e0:	d006      	beq.n	80097f0 <std+0x48>
 80097e2:	f103 0268 	add.w	r2, r3, #104	@ 0x68
 80097e6:	4294      	cmp	r4, r2
 80097e8:	d002      	beq.n	80097f0 <std+0x48>
 80097ea:	33d0      	adds	r3, #208	@ 0xd0
 80097ec:	429c      	cmp	r4, r3
 80097ee:	d105      	bne.n	80097fc <std+0x54>
 80097f0:	f104 0058 	add.w	r0, r4, #88	@ 0x58
 80097f4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80097f8:	f000 ba7c 	b.w	8009cf4 <__retarget_lock_init_recursive>
 80097fc:	bd10      	pop	{r4, pc}
 80097fe:	bf00      	nop
 8009800:	08009a4d 	.word	0x08009a4d
 8009804:	08009a6f 	.word	0x08009a6f
 8009808:	08009aa7 	.word	0x08009aa7
 800980c:	08009acb 	.word	0x08009acb
 8009810:	200006fc 	.word	0x200006fc

08009814 <stdio_exit_handler>:
 8009814:	4a02      	ldr	r2, [pc, #8]	@ (8009820 <stdio_exit_handler+0xc>)
 8009816:	4903      	ldr	r1, [pc, #12]	@ (8009824 <stdio_exit_handler+0x10>)
 8009818:	4803      	ldr	r0, [pc, #12]	@ (8009828 <stdio_exit_handler+0x14>)
 800981a:	f000 b869 	b.w	80098f0 <_fwalk_sglue>
 800981e:	bf00      	nop
 8009820:	20000034 	.word	0x20000034
 8009824:	0800c869 	.word	0x0800c869
 8009828:	20000044 	.word	0x20000044

0800982c <cleanup_stdio>:
 800982c:	6841      	ldr	r1, [r0, #4]
 800982e:	4b0c      	ldr	r3, [pc, #48]	@ (8009860 <cleanup_stdio+0x34>)
 8009830:	4299      	cmp	r1, r3
 8009832:	b510      	push	{r4, lr}
 8009834:	4604      	mov	r4, r0
 8009836:	d001      	beq.n	800983c <cleanup_stdio+0x10>
 8009838:	f003 f816 	bl	800c868 <_fflush_r>
 800983c:	68a1      	ldr	r1, [r4, #8]
 800983e:	4b09      	ldr	r3, [pc, #36]	@ (8009864 <cleanup_stdio+0x38>)
 8009840:	4299      	cmp	r1, r3
 8009842:	d002      	beq.n	800984a <cleanup_stdio+0x1e>
 8009844:	4620      	mov	r0, r4
 8009846:	f003 f80f 	bl	800c868 <_fflush_r>
 800984a:	68e1      	ldr	r1, [r4, #12]
 800984c:	4b06      	ldr	r3, [pc, #24]	@ (8009868 <cleanup_stdio+0x3c>)
 800984e:	4299      	cmp	r1, r3
 8009850:	d004      	beq.n	800985c <cleanup_stdio+0x30>
 8009852:	4620      	mov	r0, r4
 8009854:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8009858:	f003 b806 	b.w	800c868 <_fflush_r>
 800985c:	bd10      	pop	{r4, pc}
 800985e:	bf00      	nop
 8009860:	200006fc 	.word	0x200006fc
 8009864:	20000764 	.word	0x20000764
 8009868:	200007cc 	.word	0x200007cc

0800986c <global_stdio_init.part.0>:
 800986c:	b510      	push	{r4, lr}
 800986e:	4b0b      	ldr	r3, [pc, #44]	@ (800989c <global_stdio_init.part.0+0x30>)
 8009870:	4c0b      	ldr	r4, [pc, #44]	@ (80098a0 <global_stdio_init.part.0+0x34>)
 8009872:	4a0c      	ldr	r2, [pc, #48]	@ (80098a4 <global_stdio_init.part.0+0x38>)
 8009874:	601a      	str	r2, [r3, #0]
 8009876:	4620      	mov	r0, r4
 8009878:	2200      	movs	r2, #0
 800987a:	2104      	movs	r1, #4
 800987c:	f7ff ff94 	bl	80097a8 <std>
 8009880:	f104 0068 	add.w	r0, r4, #104	@ 0x68
 8009884:	2201      	movs	r2, #1
 8009886:	2109      	movs	r1, #9
 8009888:	f7ff ff8e 	bl	80097a8 <std>
 800988c:	f104 00d0 	add.w	r0, r4, #208	@ 0xd0
 8009890:	2202      	movs	r2, #2
 8009892:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8009896:	2112      	movs	r1, #18
 8009898:	f7ff bf86 	b.w	80097a8 <std>
 800989c:	20000834 	.word	0x20000834
 80098a0:	200006fc 	.word	0x200006fc
 80098a4:	08009815 	.word	0x08009815

080098a8 <__sfp_lock_acquire>:
 80098a8:	4801      	ldr	r0, [pc, #4]	@ (80098b0 <__sfp_lock_acquire+0x8>)
 80098aa:	f000 ba24 	b.w	8009cf6 <__retarget_lock_acquire_recursive>
 80098ae:	bf00      	nop
 80098b0:	2000083d 	.word	0x2000083d

080098b4 <__sfp_lock_release>:
 80098b4:	4801      	ldr	r0, [pc, #4]	@ (80098bc <__sfp_lock_release+0x8>)
 80098b6:	f000 ba1f 	b.w	8009cf8 <__retarget_lock_release_recursive>
 80098ba:	bf00      	nop
 80098bc:	2000083d 	.word	0x2000083d

080098c0 <__sinit>:
 80098c0:	b510      	push	{r4, lr}
 80098c2:	4604      	mov	r4, r0
 80098c4:	f7ff fff0 	bl	80098a8 <__sfp_lock_acquire>
 80098c8:	6a23      	ldr	r3, [r4, #32]
 80098ca:	b11b      	cbz	r3, 80098d4 <__sinit+0x14>
 80098cc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80098d0:	f7ff bff0 	b.w	80098b4 <__sfp_lock_release>
 80098d4:	4b04      	ldr	r3, [pc, #16]	@ (80098e8 <__sinit+0x28>)
 80098d6:	6223      	str	r3, [r4, #32]
 80098d8:	4b04      	ldr	r3, [pc, #16]	@ (80098ec <__sinit+0x2c>)
 80098da:	681b      	ldr	r3, [r3, #0]
 80098dc:	2b00      	cmp	r3, #0
 80098de:	d1f5      	bne.n	80098cc <__sinit+0xc>
 80098e0:	f7ff ffc4 	bl	800986c <global_stdio_init.part.0>
 80098e4:	e7f2      	b.n	80098cc <__sinit+0xc>
 80098e6:	bf00      	nop
 80098e8:	0800982d 	.word	0x0800982d
 80098ec:	20000834 	.word	0x20000834

080098f0 <_fwalk_sglue>:
 80098f0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80098f4:	4607      	mov	r7, r0
 80098f6:	4688      	mov	r8, r1
 80098f8:	4614      	mov	r4, r2
 80098fa:	2600      	movs	r6, #0
 80098fc:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8009900:	f1b9 0901 	subs.w	r9, r9, #1
 8009904:	d505      	bpl.n	8009912 <_fwalk_sglue+0x22>
 8009906:	6824      	ldr	r4, [r4, #0]
 8009908:	2c00      	cmp	r4, #0
 800990a:	d1f7      	bne.n	80098fc <_fwalk_sglue+0xc>
 800990c:	4630      	mov	r0, r6
 800990e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8009912:	89ab      	ldrh	r3, [r5, #12]
 8009914:	2b01      	cmp	r3, #1
 8009916:	d907      	bls.n	8009928 <_fwalk_sglue+0x38>
 8009918:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 800991c:	3301      	adds	r3, #1
 800991e:	d003      	beq.n	8009928 <_fwalk_sglue+0x38>
 8009920:	4629      	mov	r1, r5
 8009922:	4638      	mov	r0, r7
 8009924:	47c0      	blx	r8
 8009926:	4306      	orrs	r6, r0
 8009928:	3568      	adds	r5, #104	@ 0x68
 800992a:	e7e9      	b.n	8009900 <_fwalk_sglue+0x10>

0800992c <iprintf>:
 800992c:	b40f      	push	{r0, r1, r2, r3}
 800992e:	b507      	push	{r0, r1, r2, lr}
 8009930:	4906      	ldr	r1, [pc, #24]	@ (800994c <iprintf+0x20>)
 8009932:	ab04      	add	r3, sp, #16
 8009934:	6808      	ldr	r0, [r1, #0]
 8009936:	f853 2b04 	ldr.w	r2, [r3], #4
 800993a:	6881      	ldr	r1, [r0, #8]
 800993c:	9301      	str	r3, [sp, #4]
 800993e:	f002 fdf7 	bl	800c530 <_vfiprintf_r>
 8009942:	b003      	add	sp, #12
 8009944:	f85d eb04 	ldr.w	lr, [sp], #4
 8009948:	b004      	add	sp, #16
 800994a:	4770      	bx	lr
 800994c:	20000040 	.word	0x20000040

08009950 <_puts_r>:
 8009950:	6a03      	ldr	r3, [r0, #32]
 8009952:	b570      	push	{r4, r5, r6, lr}
 8009954:	6884      	ldr	r4, [r0, #8]
 8009956:	4605      	mov	r5, r0
 8009958:	460e      	mov	r6, r1
 800995a:	b90b      	cbnz	r3, 8009960 <_puts_r+0x10>
 800995c:	f7ff ffb0 	bl	80098c0 <__sinit>
 8009960:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 8009962:	07db      	lsls	r3, r3, #31
 8009964:	d405      	bmi.n	8009972 <_puts_r+0x22>
 8009966:	89a3      	ldrh	r3, [r4, #12]
 8009968:	0598      	lsls	r0, r3, #22
 800996a:	d402      	bmi.n	8009972 <_puts_r+0x22>
 800996c:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 800996e:	f000 f9c2 	bl	8009cf6 <__retarget_lock_acquire_recursive>
 8009972:	89a3      	ldrh	r3, [r4, #12]
 8009974:	0719      	lsls	r1, r3, #28
 8009976:	d502      	bpl.n	800997e <_puts_r+0x2e>
 8009978:	6923      	ldr	r3, [r4, #16]
 800997a:	2b00      	cmp	r3, #0
 800997c:	d135      	bne.n	80099ea <_puts_r+0x9a>
 800997e:	4621      	mov	r1, r4
 8009980:	4628      	mov	r0, r5
 8009982:	f000 f8e5 	bl	8009b50 <__swsetup_r>
 8009986:	b380      	cbz	r0, 80099ea <_puts_r+0x9a>
 8009988:	f04f 35ff 	mov.w	r5, #4294967295
 800998c:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 800998e:	07da      	lsls	r2, r3, #31
 8009990:	d405      	bmi.n	800999e <_puts_r+0x4e>
 8009992:	89a3      	ldrh	r3, [r4, #12]
 8009994:	059b      	lsls	r3, r3, #22
 8009996:	d402      	bmi.n	800999e <_puts_r+0x4e>
 8009998:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 800999a:	f000 f9ad 	bl	8009cf8 <__retarget_lock_release_recursive>
 800999e:	4628      	mov	r0, r5
 80099a0:	bd70      	pop	{r4, r5, r6, pc}
 80099a2:	2b00      	cmp	r3, #0
 80099a4:	da04      	bge.n	80099b0 <_puts_r+0x60>
 80099a6:	69a2      	ldr	r2, [r4, #24]
 80099a8:	429a      	cmp	r2, r3
 80099aa:	dc17      	bgt.n	80099dc <_puts_r+0x8c>
 80099ac:	290a      	cmp	r1, #10
 80099ae:	d015      	beq.n	80099dc <_puts_r+0x8c>
 80099b0:	6823      	ldr	r3, [r4, #0]
 80099b2:	1c5a      	adds	r2, r3, #1
 80099b4:	6022      	str	r2, [r4, #0]
 80099b6:	7019      	strb	r1, [r3, #0]
 80099b8:	68a3      	ldr	r3, [r4, #8]
 80099ba:	f816 1f01 	ldrb.w	r1, [r6, #1]!
 80099be:	3b01      	subs	r3, #1
 80099c0:	60a3      	str	r3, [r4, #8]
 80099c2:	2900      	cmp	r1, #0
 80099c4:	d1ed      	bne.n	80099a2 <_puts_r+0x52>
 80099c6:	2b00      	cmp	r3, #0
 80099c8:	da11      	bge.n	80099ee <_puts_r+0x9e>
 80099ca:	4622      	mov	r2, r4
 80099cc:	210a      	movs	r1, #10
 80099ce:	4628      	mov	r0, r5
 80099d0:	f000 f87f 	bl	8009ad2 <__swbuf_r>
 80099d4:	3001      	adds	r0, #1
 80099d6:	d0d7      	beq.n	8009988 <_puts_r+0x38>
 80099d8:	250a      	movs	r5, #10
 80099da:	e7d7      	b.n	800998c <_puts_r+0x3c>
 80099dc:	4622      	mov	r2, r4
 80099de:	4628      	mov	r0, r5
 80099e0:	f000 f877 	bl	8009ad2 <__swbuf_r>
 80099e4:	3001      	adds	r0, #1
 80099e6:	d1e7      	bne.n	80099b8 <_puts_r+0x68>
 80099e8:	e7ce      	b.n	8009988 <_puts_r+0x38>
 80099ea:	3e01      	subs	r6, #1
 80099ec:	e7e4      	b.n	80099b8 <_puts_r+0x68>
 80099ee:	6823      	ldr	r3, [r4, #0]
 80099f0:	1c5a      	adds	r2, r3, #1
 80099f2:	6022      	str	r2, [r4, #0]
 80099f4:	220a      	movs	r2, #10
 80099f6:	701a      	strb	r2, [r3, #0]
 80099f8:	e7ee      	b.n	80099d8 <_puts_r+0x88>
	...

080099fc <puts>:
 80099fc:	4b02      	ldr	r3, [pc, #8]	@ (8009a08 <puts+0xc>)
 80099fe:	4601      	mov	r1, r0
 8009a00:	6818      	ldr	r0, [r3, #0]
 8009a02:	f7ff bfa5 	b.w	8009950 <_puts_r>
 8009a06:	bf00      	nop
 8009a08:	20000040 	.word	0x20000040

08009a0c <siprintf>:
 8009a0c:	b40e      	push	{r1, r2, r3}
 8009a0e:	b500      	push	{lr}
 8009a10:	b09c      	sub	sp, #112	@ 0x70
 8009a12:	ab1d      	add	r3, sp, #116	@ 0x74
 8009a14:	9002      	str	r0, [sp, #8]
 8009a16:	9006      	str	r0, [sp, #24]
 8009a18:	f06f 4100 	mvn.w	r1, #2147483648	@ 0x80000000
 8009a1c:	4809      	ldr	r0, [pc, #36]	@ (8009a44 <siprintf+0x38>)
 8009a1e:	9107      	str	r1, [sp, #28]
 8009a20:	9104      	str	r1, [sp, #16]
 8009a22:	4909      	ldr	r1, [pc, #36]	@ (8009a48 <siprintf+0x3c>)
 8009a24:	f853 2b04 	ldr.w	r2, [r3], #4
 8009a28:	9105      	str	r1, [sp, #20]
 8009a2a:	6800      	ldr	r0, [r0, #0]
 8009a2c:	9301      	str	r3, [sp, #4]
 8009a2e:	a902      	add	r1, sp, #8
 8009a30:	f002 fc58 	bl	800c2e4 <_svfiprintf_r>
 8009a34:	9b02      	ldr	r3, [sp, #8]
 8009a36:	2200      	movs	r2, #0
 8009a38:	701a      	strb	r2, [r3, #0]
 8009a3a:	b01c      	add	sp, #112	@ 0x70
 8009a3c:	f85d eb04 	ldr.w	lr, [sp], #4
 8009a40:	b003      	add	sp, #12
 8009a42:	4770      	bx	lr
 8009a44:	20000040 	.word	0x20000040
 8009a48:	ffff0208 	.word	0xffff0208

08009a4c <__sread>:
 8009a4c:	b510      	push	{r4, lr}
 8009a4e:	460c      	mov	r4, r1
 8009a50:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8009a54:	f000 f900 	bl	8009c58 <_read_r>
 8009a58:	2800      	cmp	r0, #0
 8009a5a:	bfab      	itete	ge
 8009a5c:	6d63      	ldrge	r3, [r4, #84]	@ 0x54
 8009a5e:	89a3      	ldrhlt	r3, [r4, #12]
 8009a60:	181b      	addge	r3, r3, r0
 8009a62:	f423 5380 	biclt.w	r3, r3, #4096	@ 0x1000
 8009a66:	bfac      	ite	ge
 8009a68:	6563      	strge	r3, [r4, #84]	@ 0x54
 8009a6a:	81a3      	strhlt	r3, [r4, #12]
 8009a6c:	bd10      	pop	{r4, pc}

08009a6e <__swrite>:
 8009a6e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8009a72:	461f      	mov	r7, r3
 8009a74:	898b      	ldrh	r3, [r1, #12]
 8009a76:	05db      	lsls	r3, r3, #23
 8009a78:	4605      	mov	r5, r0
 8009a7a:	460c      	mov	r4, r1
 8009a7c:	4616      	mov	r6, r2
 8009a7e:	d505      	bpl.n	8009a8c <__swrite+0x1e>
 8009a80:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8009a84:	2302      	movs	r3, #2
 8009a86:	2200      	movs	r2, #0
 8009a88:	f000 f8d4 	bl	8009c34 <_lseek_r>
 8009a8c:	89a3      	ldrh	r3, [r4, #12]
 8009a8e:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8009a92:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 8009a96:	81a3      	strh	r3, [r4, #12]
 8009a98:	4632      	mov	r2, r6
 8009a9a:	463b      	mov	r3, r7
 8009a9c:	4628      	mov	r0, r5
 8009a9e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8009aa2:	f000 b8eb 	b.w	8009c7c <_write_r>

08009aa6 <__sseek>:
 8009aa6:	b510      	push	{r4, lr}
 8009aa8:	460c      	mov	r4, r1
 8009aaa:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8009aae:	f000 f8c1 	bl	8009c34 <_lseek_r>
 8009ab2:	1c43      	adds	r3, r0, #1
 8009ab4:	89a3      	ldrh	r3, [r4, #12]
 8009ab6:	bf15      	itete	ne
 8009ab8:	6560      	strne	r0, [r4, #84]	@ 0x54
 8009aba:	f423 5380 	biceq.w	r3, r3, #4096	@ 0x1000
 8009abe:	f443 5380 	orrne.w	r3, r3, #4096	@ 0x1000
 8009ac2:	81a3      	strheq	r3, [r4, #12]
 8009ac4:	bf18      	it	ne
 8009ac6:	81a3      	strhne	r3, [r4, #12]
 8009ac8:	bd10      	pop	{r4, pc}

08009aca <__sclose>:
 8009aca:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8009ace:	f000 b8a1 	b.w	8009c14 <_close_r>

08009ad2 <__swbuf_r>:
 8009ad2:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8009ad4:	460e      	mov	r6, r1
 8009ad6:	4614      	mov	r4, r2
 8009ad8:	4605      	mov	r5, r0
 8009ada:	b118      	cbz	r0, 8009ae4 <__swbuf_r+0x12>
 8009adc:	6a03      	ldr	r3, [r0, #32]
 8009ade:	b90b      	cbnz	r3, 8009ae4 <__swbuf_r+0x12>
 8009ae0:	f7ff feee 	bl	80098c0 <__sinit>
 8009ae4:	69a3      	ldr	r3, [r4, #24]
 8009ae6:	60a3      	str	r3, [r4, #8]
 8009ae8:	89a3      	ldrh	r3, [r4, #12]
 8009aea:	071a      	lsls	r2, r3, #28
 8009aec:	d501      	bpl.n	8009af2 <__swbuf_r+0x20>
 8009aee:	6923      	ldr	r3, [r4, #16]
 8009af0:	b943      	cbnz	r3, 8009b04 <__swbuf_r+0x32>
 8009af2:	4621      	mov	r1, r4
 8009af4:	4628      	mov	r0, r5
 8009af6:	f000 f82b 	bl	8009b50 <__swsetup_r>
 8009afa:	b118      	cbz	r0, 8009b04 <__swbuf_r+0x32>
 8009afc:	f04f 37ff 	mov.w	r7, #4294967295
 8009b00:	4638      	mov	r0, r7
 8009b02:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8009b04:	6823      	ldr	r3, [r4, #0]
 8009b06:	6922      	ldr	r2, [r4, #16]
 8009b08:	1a98      	subs	r0, r3, r2
 8009b0a:	6963      	ldr	r3, [r4, #20]
 8009b0c:	b2f6      	uxtb	r6, r6
 8009b0e:	4283      	cmp	r3, r0
 8009b10:	4637      	mov	r7, r6
 8009b12:	dc05      	bgt.n	8009b20 <__swbuf_r+0x4e>
 8009b14:	4621      	mov	r1, r4
 8009b16:	4628      	mov	r0, r5
 8009b18:	f002 fea6 	bl	800c868 <_fflush_r>
 8009b1c:	2800      	cmp	r0, #0
 8009b1e:	d1ed      	bne.n	8009afc <__swbuf_r+0x2a>
 8009b20:	68a3      	ldr	r3, [r4, #8]
 8009b22:	3b01      	subs	r3, #1
 8009b24:	60a3      	str	r3, [r4, #8]
 8009b26:	6823      	ldr	r3, [r4, #0]
 8009b28:	1c5a      	adds	r2, r3, #1
 8009b2a:	6022      	str	r2, [r4, #0]
 8009b2c:	701e      	strb	r6, [r3, #0]
 8009b2e:	6962      	ldr	r2, [r4, #20]
 8009b30:	1c43      	adds	r3, r0, #1
 8009b32:	429a      	cmp	r2, r3
 8009b34:	d004      	beq.n	8009b40 <__swbuf_r+0x6e>
 8009b36:	89a3      	ldrh	r3, [r4, #12]
 8009b38:	07db      	lsls	r3, r3, #31
 8009b3a:	d5e1      	bpl.n	8009b00 <__swbuf_r+0x2e>
 8009b3c:	2e0a      	cmp	r6, #10
 8009b3e:	d1df      	bne.n	8009b00 <__swbuf_r+0x2e>
 8009b40:	4621      	mov	r1, r4
 8009b42:	4628      	mov	r0, r5
 8009b44:	f002 fe90 	bl	800c868 <_fflush_r>
 8009b48:	2800      	cmp	r0, #0
 8009b4a:	d0d9      	beq.n	8009b00 <__swbuf_r+0x2e>
 8009b4c:	e7d6      	b.n	8009afc <__swbuf_r+0x2a>
	...

08009b50 <__swsetup_r>:
 8009b50:	b538      	push	{r3, r4, r5, lr}
 8009b52:	4b29      	ldr	r3, [pc, #164]	@ (8009bf8 <__swsetup_r+0xa8>)
 8009b54:	4605      	mov	r5, r0
 8009b56:	6818      	ldr	r0, [r3, #0]
 8009b58:	460c      	mov	r4, r1
 8009b5a:	b118      	cbz	r0, 8009b64 <__swsetup_r+0x14>
 8009b5c:	6a03      	ldr	r3, [r0, #32]
 8009b5e:	b90b      	cbnz	r3, 8009b64 <__swsetup_r+0x14>
 8009b60:	f7ff feae 	bl	80098c0 <__sinit>
 8009b64:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8009b68:	0719      	lsls	r1, r3, #28
 8009b6a:	d422      	bmi.n	8009bb2 <__swsetup_r+0x62>
 8009b6c:	06da      	lsls	r2, r3, #27
 8009b6e:	d407      	bmi.n	8009b80 <__swsetup_r+0x30>
 8009b70:	2209      	movs	r2, #9
 8009b72:	602a      	str	r2, [r5, #0]
 8009b74:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8009b78:	81a3      	strh	r3, [r4, #12]
 8009b7a:	f04f 30ff 	mov.w	r0, #4294967295
 8009b7e:	e033      	b.n	8009be8 <__swsetup_r+0x98>
 8009b80:	0758      	lsls	r0, r3, #29
 8009b82:	d512      	bpl.n	8009baa <__swsetup_r+0x5a>
 8009b84:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 8009b86:	b141      	cbz	r1, 8009b9a <__swsetup_r+0x4a>
 8009b88:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 8009b8c:	4299      	cmp	r1, r3
 8009b8e:	d002      	beq.n	8009b96 <__swsetup_r+0x46>
 8009b90:	4628      	mov	r0, r5
 8009b92:	f000 ff15 	bl	800a9c0 <_free_r>
 8009b96:	2300      	movs	r3, #0
 8009b98:	6363      	str	r3, [r4, #52]	@ 0x34
 8009b9a:	89a3      	ldrh	r3, [r4, #12]
 8009b9c:	f023 0324 	bic.w	r3, r3, #36	@ 0x24
 8009ba0:	81a3      	strh	r3, [r4, #12]
 8009ba2:	2300      	movs	r3, #0
 8009ba4:	6063      	str	r3, [r4, #4]
 8009ba6:	6923      	ldr	r3, [r4, #16]
 8009ba8:	6023      	str	r3, [r4, #0]
 8009baa:	89a3      	ldrh	r3, [r4, #12]
 8009bac:	f043 0308 	orr.w	r3, r3, #8
 8009bb0:	81a3      	strh	r3, [r4, #12]
 8009bb2:	6923      	ldr	r3, [r4, #16]
 8009bb4:	b94b      	cbnz	r3, 8009bca <__swsetup_r+0x7a>
 8009bb6:	89a3      	ldrh	r3, [r4, #12]
 8009bb8:	f403 7320 	and.w	r3, r3, #640	@ 0x280
 8009bbc:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 8009bc0:	d003      	beq.n	8009bca <__swsetup_r+0x7a>
 8009bc2:	4621      	mov	r1, r4
 8009bc4:	4628      	mov	r0, r5
 8009bc6:	f002 fe9d 	bl	800c904 <__smakebuf_r>
 8009bca:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8009bce:	f013 0201 	ands.w	r2, r3, #1
 8009bd2:	d00a      	beq.n	8009bea <__swsetup_r+0x9a>
 8009bd4:	2200      	movs	r2, #0
 8009bd6:	60a2      	str	r2, [r4, #8]
 8009bd8:	6962      	ldr	r2, [r4, #20]
 8009bda:	4252      	negs	r2, r2
 8009bdc:	61a2      	str	r2, [r4, #24]
 8009bde:	6922      	ldr	r2, [r4, #16]
 8009be0:	b942      	cbnz	r2, 8009bf4 <__swsetup_r+0xa4>
 8009be2:	f013 0080 	ands.w	r0, r3, #128	@ 0x80
 8009be6:	d1c5      	bne.n	8009b74 <__swsetup_r+0x24>
 8009be8:	bd38      	pop	{r3, r4, r5, pc}
 8009bea:	0799      	lsls	r1, r3, #30
 8009bec:	bf58      	it	pl
 8009bee:	6962      	ldrpl	r2, [r4, #20]
 8009bf0:	60a2      	str	r2, [r4, #8]
 8009bf2:	e7f4      	b.n	8009bde <__swsetup_r+0x8e>
 8009bf4:	2000      	movs	r0, #0
 8009bf6:	e7f7      	b.n	8009be8 <__swsetup_r+0x98>
 8009bf8:	20000040 	.word	0x20000040

08009bfc <memset>:
 8009bfc:	4402      	add	r2, r0
 8009bfe:	4603      	mov	r3, r0
 8009c00:	4293      	cmp	r3, r2
 8009c02:	d100      	bne.n	8009c06 <memset+0xa>
 8009c04:	4770      	bx	lr
 8009c06:	f803 1b01 	strb.w	r1, [r3], #1
 8009c0a:	e7f9      	b.n	8009c00 <memset+0x4>

08009c0c <_localeconv_r>:
 8009c0c:	4800      	ldr	r0, [pc, #0]	@ (8009c10 <_localeconv_r+0x4>)
 8009c0e:	4770      	bx	lr
 8009c10:	20000180 	.word	0x20000180

08009c14 <_close_r>:
 8009c14:	b538      	push	{r3, r4, r5, lr}
 8009c16:	4d06      	ldr	r5, [pc, #24]	@ (8009c30 <_close_r+0x1c>)
 8009c18:	2300      	movs	r3, #0
 8009c1a:	4604      	mov	r4, r0
 8009c1c:	4608      	mov	r0, r1
 8009c1e:	602b      	str	r3, [r5, #0]
 8009c20:	f7f9 fdc8 	bl	80037b4 <_close>
 8009c24:	1c43      	adds	r3, r0, #1
 8009c26:	d102      	bne.n	8009c2e <_close_r+0x1a>
 8009c28:	682b      	ldr	r3, [r5, #0]
 8009c2a:	b103      	cbz	r3, 8009c2e <_close_r+0x1a>
 8009c2c:	6023      	str	r3, [r4, #0]
 8009c2e:	bd38      	pop	{r3, r4, r5, pc}
 8009c30:	20000838 	.word	0x20000838

08009c34 <_lseek_r>:
 8009c34:	b538      	push	{r3, r4, r5, lr}
 8009c36:	4d07      	ldr	r5, [pc, #28]	@ (8009c54 <_lseek_r+0x20>)
 8009c38:	4604      	mov	r4, r0
 8009c3a:	4608      	mov	r0, r1
 8009c3c:	4611      	mov	r1, r2
 8009c3e:	2200      	movs	r2, #0
 8009c40:	602a      	str	r2, [r5, #0]
 8009c42:	461a      	mov	r2, r3
 8009c44:	f7f9 fddd 	bl	8003802 <_lseek>
 8009c48:	1c43      	adds	r3, r0, #1
 8009c4a:	d102      	bne.n	8009c52 <_lseek_r+0x1e>
 8009c4c:	682b      	ldr	r3, [r5, #0]
 8009c4e:	b103      	cbz	r3, 8009c52 <_lseek_r+0x1e>
 8009c50:	6023      	str	r3, [r4, #0]
 8009c52:	bd38      	pop	{r3, r4, r5, pc}
 8009c54:	20000838 	.word	0x20000838

08009c58 <_read_r>:
 8009c58:	b538      	push	{r3, r4, r5, lr}
 8009c5a:	4d07      	ldr	r5, [pc, #28]	@ (8009c78 <_read_r+0x20>)
 8009c5c:	4604      	mov	r4, r0
 8009c5e:	4608      	mov	r0, r1
 8009c60:	4611      	mov	r1, r2
 8009c62:	2200      	movs	r2, #0
 8009c64:	602a      	str	r2, [r5, #0]
 8009c66:	461a      	mov	r2, r3
 8009c68:	f7f9 fd87 	bl	800377a <_read>
 8009c6c:	1c43      	adds	r3, r0, #1
 8009c6e:	d102      	bne.n	8009c76 <_read_r+0x1e>
 8009c70:	682b      	ldr	r3, [r5, #0]
 8009c72:	b103      	cbz	r3, 8009c76 <_read_r+0x1e>
 8009c74:	6023      	str	r3, [r4, #0]
 8009c76:	bd38      	pop	{r3, r4, r5, pc}
 8009c78:	20000838 	.word	0x20000838

08009c7c <_write_r>:
 8009c7c:	b538      	push	{r3, r4, r5, lr}
 8009c7e:	4d07      	ldr	r5, [pc, #28]	@ (8009c9c <_write_r+0x20>)
 8009c80:	4604      	mov	r4, r0
 8009c82:	4608      	mov	r0, r1
 8009c84:	4611      	mov	r1, r2
 8009c86:	2200      	movs	r2, #0
 8009c88:	602a      	str	r2, [r5, #0]
 8009c8a:	461a      	mov	r2, r3
 8009c8c:	f7f9 f8d2 	bl	8002e34 <_write>
 8009c90:	1c43      	adds	r3, r0, #1
 8009c92:	d102      	bne.n	8009c9a <_write_r+0x1e>
 8009c94:	682b      	ldr	r3, [r5, #0]
 8009c96:	b103      	cbz	r3, 8009c9a <_write_r+0x1e>
 8009c98:	6023      	str	r3, [r4, #0]
 8009c9a:	bd38      	pop	{r3, r4, r5, pc}
 8009c9c:	20000838 	.word	0x20000838

08009ca0 <__errno>:
 8009ca0:	4b01      	ldr	r3, [pc, #4]	@ (8009ca8 <__errno+0x8>)
 8009ca2:	6818      	ldr	r0, [r3, #0]
 8009ca4:	4770      	bx	lr
 8009ca6:	bf00      	nop
 8009ca8:	20000040 	.word	0x20000040

08009cac <__libc_init_array>:
 8009cac:	b570      	push	{r4, r5, r6, lr}
 8009cae:	4d0d      	ldr	r5, [pc, #52]	@ (8009ce4 <__libc_init_array+0x38>)
 8009cb0:	4c0d      	ldr	r4, [pc, #52]	@ (8009ce8 <__libc_init_array+0x3c>)
 8009cb2:	1b64      	subs	r4, r4, r5
 8009cb4:	10a4      	asrs	r4, r4, #2
 8009cb6:	2600      	movs	r6, #0
 8009cb8:	42a6      	cmp	r6, r4
 8009cba:	d109      	bne.n	8009cd0 <__libc_init_array+0x24>
 8009cbc:	4d0b      	ldr	r5, [pc, #44]	@ (8009cec <__libc_init_array+0x40>)
 8009cbe:	4c0c      	ldr	r4, [pc, #48]	@ (8009cf0 <__libc_init_array+0x44>)
 8009cc0:	f003 fae0 	bl	800d284 <_init>
 8009cc4:	1b64      	subs	r4, r4, r5
 8009cc6:	10a4      	asrs	r4, r4, #2
 8009cc8:	2600      	movs	r6, #0
 8009cca:	42a6      	cmp	r6, r4
 8009ccc:	d105      	bne.n	8009cda <__libc_init_array+0x2e>
 8009cce:	bd70      	pop	{r4, r5, r6, pc}
 8009cd0:	f855 3b04 	ldr.w	r3, [r5], #4
 8009cd4:	4798      	blx	r3
 8009cd6:	3601      	adds	r6, #1
 8009cd8:	e7ee      	b.n	8009cb8 <__libc_init_array+0xc>
 8009cda:	f855 3b04 	ldr.w	r3, [r5], #4
 8009cde:	4798      	blx	r3
 8009ce0:	3601      	adds	r6, #1
 8009ce2:	e7f2      	b.n	8009cca <__libc_init_array+0x1e>
 8009ce4:	0800d988 	.word	0x0800d988
 8009ce8:	0800d988 	.word	0x0800d988
 8009cec:	0800d988 	.word	0x0800d988
 8009cf0:	0800d98c 	.word	0x0800d98c

08009cf4 <__retarget_lock_init_recursive>:
 8009cf4:	4770      	bx	lr

08009cf6 <__retarget_lock_acquire_recursive>:
 8009cf6:	4770      	bx	lr

08009cf8 <__retarget_lock_release_recursive>:
 8009cf8:	4770      	bx	lr

08009cfa <memcpy>:
 8009cfa:	440a      	add	r2, r1
 8009cfc:	4291      	cmp	r1, r2
 8009cfe:	f100 33ff 	add.w	r3, r0, #4294967295
 8009d02:	d100      	bne.n	8009d06 <memcpy+0xc>
 8009d04:	4770      	bx	lr
 8009d06:	b510      	push	{r4, lr}
 8009d08:	f811 4b01 	ldrb.w	r4, [r1], #1
 8009d0c:	f803 4f01 	strb.w	r4, [r3, #1]!
 8009d10:	4291      	cmp	r1, r2
 8009d12:	d1f9      	bne.n	8009d08 <memcpy+0xe>
 8009d14:	bd10      	pop	{r4, pc}
	...

08009d18 <nanf>:
 8009d18:	ed9f 0a01 	vldr	s0, [pc, #4]	@ 8009d20 <nanf+0x8>
 8009d1c:	4770      	bx	lr
 8009d1e:	bf00      	nop
 8009d20:	7fc00000 	.word	0x7fc00000

08009d24 <quorem>:
 8009d24:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8009d28:	6903      	ldr	r3, [r0, #16]
 8009d2a:	690c      	ldr	r4, [r1, #16]
 8009d2c:	42a3      	cmp	r3, r4
 8009d2e:	4607      	mov	r7, r0
 8009d30:	db7e      	blt.n	8009e30 <quorem+0x10c>
 8009d32:	3c01      	subs	r4, #1
 8009d34:	f101 0814 	add.w	r8, r1, #20
 8009d38:	00a3      	lsls	r3, r4, #2
 8009d3a:	f100 0514 	add.w	r5, r0, #20
 8009d3e:	9300      	str	r3, [sp, #0]
 8009d40:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 8009d44:	9301      	str	r3, [sp, #4]
 8009d46:	f858 3024 	ldr.w	r3, [r8, r4, lsl #2]
 8009d4a:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 8009d4e:	3301      	adds	r3, #1
 8009d50:	429a      	cmp	r2, r3
 8009d52:	eb08 0984 	add.w	r9, r8, r4, lsl #2
 8009d56:	fbb2 f6f3 	udiv	r6, r2, r3
 8009d5a:	d32e      	bcc.n	8009dba <quorem+0x96>
 8009d5c:	f04f 0a00 	mov.w	sl, #0
 8009d60:	46c4      	mov	ip, r8
 8009d62:	46ae      	mov	lr, r5
 8009d64:	46d3      	mov	fp, sl
 8009d66:	f85c 3b04 	ldr.w	r3, [ip], #4
 8009d6a:	b298      	uxth	r0, r3
 8009d6c:	fb06 a000 	mla	r0, r6, r0, sl
 8009d70:	0c02      	lsrs	r2, r0, #16
 8009d72:	0c1b      	lsrs	r3, r3, #16
 8009d74:	fb06 2303 	mla	r3, r6, r3, r2
 8009d78:	f8de 2000 	ldr.w	r2, [lr]
 8009d7c:	b280      	uxth	r0, r0
 8009d7e:	b292      	uxth	r2, r2
 8009d80:	1a12      	subs	r2, r2, r0
 8009d82:	445a      	add	r2, fp
 8009d84:	f8de 0000 	ldr.w	r0, [lr]
 8009d88:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 8009d8c:	b29b      	uxth	r3, r3
 8009d8e:	ebc3 4322 	rsb	r3, r3, r2, asr #16
 8009d92:	eb03 4310 	add.w	r3, r3, r0, lsr #16
 8009d96:	b292      	uxth	r2, r2
 8009d98:	ea42 4203 	orr.w	r2, r2, r3, lsl #16
 8009d9c:	45e1      	cmp	r9, ip
 8009d9e:	f84e 2b04 	str.w	r2, [lr], #4
 8009da2:	ea4f 4b23 	mov.w	fp, r3, asr #16
 8009da6:	d2de      	bcs.n	8009d66 <quorem+0x42>
 8009da8:	9b00      	ldr	r3, [sp, #0]
 8009daa:	58eb      	ldr	r3, [r5, r3]
 8009dac:	b92b      	cbnz	r3, 8009dba <quorem+0x96>
 8009dae:	9b01      	ldr	r3, [sp, #4]
 8009db0:	3b04      	subs	r3, #4
 8009db2:	429d      	cmp	r5, r3
 8009db4:	461a      	mov	r2, r3
 8009db6:	d32f      	bcc.n	8009e18 <quorem+0xf4>
 8009db8:	613c      	str	r4, [r7, #16]
 8009dba:	4638      	mov	r0, r7
 8009dbc:	f001 f9c4 	bl	800b148 <__mcmp>
 8009dc0:	2800      	cmp	r0, #0
 8009dc2:	db25      	blt.n	8009e10 <quorem+0xec>
 8009dc4:	4629      	mov	r1, r5
 8009dc6:	2000      	movs	r0, #0
 8009dc8:	f858 2b04 	ldr.w	r2, [r8], #4
 8009dcc:	f8d1 c000 	ldr.w	ip, [r1]
 8009dd0:	fa1f fe82 	uxth.w	lr, r2
 8009dd4:	fa1f f38c 	uxth.w	r3, ip
 8009dd8:	eba3 030e 	sub.w	r3, r3, lr
 8009ddc:	4403      	add	r3, r0
 8009dde:	0c12      	lsrs	r2, r2, #16
 8009de0:	ebc2 4223 	rsb	r2, r2, r3, asr #16
 8009de4:	eb02 421c 	add.w	r2, r2, ip, lsr #16
 8009de8:	b29b      	uxth	r3, r3
 8009dea:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8009dee:	45c1      	cmp	r9, r8
 8009df0:	f841 3b04 	str.w	r3, [r1], #4
 8009df4:	ea4f 4022 	mov.w	r0, r2, asr #16
 8009df8:	d2e6      	bcs.n	8009dc8 <quorem+0xa4>
 8009dfa:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 8009dfe:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 8009e02:	b922      	cbnz	r2, 8009e0e <quorem+0xea>
 8009e04:	3b04      	subs	r3, #4
 8009e06:	429d      	cmp	r5, r3
 8009e08:	461a      	mov	r2, r3
 8009e0a:	d30b      	bcc.n	8009e24 <quorem+0x100>
 8009e0c:	613c      	str	r4, [r7, #16]
 8009e0e:	3601      	adds	r6, #1
 8009e10:	4630      	mov	r0, r6
 8009e12:	b003      	add	sp, #12
 8009e14:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8009e18:	6812      	ldr	r2, [r2, #0]
 8009e1a:	3b04      	subs	r3, #4
 8009e1c:	2a00      	cmp	r2, #0
 8009e1e:	d1cb      	bne.n	8009db8 <quorem+0x94>
 8009e20:	3c01      	subs	r4, #1
 8009e22:	e7c6      	b.n	8009db2 <quorem+0x8e>
 8009e24:	6812      	ldr	r2, [r2, #0]
 8009e26:	3b04      	subs	r3, #4
 8009e28:	2a00      	cmp	r2, #0
 8009e2a:	d1ef      	bne.n	8009e0c <quorem+0xe8>
 8009e2c:	3c01      	subs	r4, #1
 8009e2e:	e7ea      	b.n	8009e06 <quorem+0xe2>
 8009e30:	2000      	movs	r0, #0
 8009e32:	e7ee      	b.n	8009e12 <quorem+0xee>
 8009e34:	0000      	movs	r0, r0
	...

08009e38 <_dtoa_r>:
 8009e38:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8009e3c:	69c7      	ldr	r7, [r0, #28]
 8009e3e:	b099      	sub	sp, #100	@ 0x64
 8009e40:	ed8d 0b02 	vstr	d0, [sp, #8]
 8009e44:	ec55 4b10 	vmov	r4, r5, d0
 8009e48:	9e22      	ldr	r6, [sp, #136]	@ 0x88
 8009e4a:	9109      	str	r1, [sp, #36]	@ 0x24
 8009e4c:	4683      	mov	fp, r0
 8009e4e:	920e      	str	r2, [sp, #56]	@ 0x38
 8009e50:	9313      	str	r3, [sp, #76]	@ 0x4c
 8009e52:	b97f      	cbnz	r7, 8009e74 <_dtoa_r+0x3c>
 8009e54:	2010      	movs	r0, #16
 8009e56:	f000 fdfd 	bl	800aa54 <malloc>
 8009e5a:	4602      	mov	r2, r0
 8009e5c:	f8cb 001c 	str.w	r0, [fp, #28]
 8009e60:	b920      	cbnz	r0, 8009e6c <_dtoa_r+0x34>
 8009e62:	4ba7      	ldr	r3, [pc, #668]	@ (800a100 <_dtoa_r+0x2c8>)
 8009e64:	21ef      	movs	r1, #239	@ 0xef
 8009e66:	48a7      	ldr	r0, [pc, #668]	@ (800a104 <_dtoa_r+0x2cc>)
 8009e68:	f002 fdee 	bl	800ca48 <__assert_func>
 8009e6c:	e9c0 7701 	strd	r7, r7, [r0, #4]
 8009e70:	6007      	str	r7, [r0, #0]
 8009e72:	60c7      	str	r7, [r0, #12]
 8009e74:	f8db 301c 	ldr.w	r3, [fp, #28]
 8009e78:	6819      	ldr	r1, [r3, #0]
 8009e7a:	b159      	cbz	r1, 8009e94 <_dtoa_r+0x5c>
 8009e7c:	685a      	ldr	r2, [r3, #4]
 8009e7e:	604a      	str	r2, [r1, #4]
 8009e80:	2301      	movs	r3, #1
 8009e82:	4093      	lsls	r3, r2
 8009e84:	608b      	str	r3, [r1, #8]
 8009e86:	4658      	mov	r0, fp
 8009e88:	f000 feda 	bl	800ac40 <_Bfree>
 8009e8c:	f8db 301c 	ldr.w	r3, [fp, #28]
 8009e90:	2200      	movs	r2, #0
 8009e92:	601a      	str	r2, [r3, #0]
 8009e94:	1e2b      	subs	r3, r5, #0
 8009e96:	bfb9      	ittee	lt
 8009e98:	f023 4300 	biclt.w	r3, r3, #2147483648	@ 0x80000000
 8009e9c:	9303      	strlt	r3, [sp, #12]
 8009e9e:	2300      	movge	r3, #0
 8009ea0:	6033      	strge	r3, [r6, #0]
 8009ea2:	9f03      	ldr	r7, [sp, #12]
 8009ea4:	4b98      	ldr	r3, [pc, #608]	@ (800a108 <_dtoa_r+0x2d0>)
 8009ea6:	bfbc      	itt	lt
 8009ea8:	2201      	movlt	r2, #1
 8009eaa:	6032      	strlt	r2, [r6, #0]
 8009eac:	43bb      	bics	r3, r7
 8009eae:	d112      	bne.n	8009ed6 <_dtoa_r+0x9e>
 8009eb0:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8009eb2:	f242 730f 	movw	r3, #9999	@ 0x270f
 8009eb6:	6013      	str	r3, [r2, #0]
 8009eb8:	f3c7 0313 	ubfx	r3, r7, #0, #20
 8009ebc:	4323      	orrs	r3, r4
 8009ebe:	f000 854d 	beq.w	800a95c <_dtoa_r+0xb24>
 8009ec2:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 8009ec4:	f8df a254 	ldr.w	sl, [pc, #596]	@ 800a11c <_dtoa_r+0x2e4>
 8009ec8:	2b00      	cmp	r3, #0
 8009eca:	f000 854f 	beq.w	800a96c <_dtoa_r+0xb34>
 8009ece:	f10a 0303 	add.w	r3, sl, #3
 8009ed2:	f000 bd49 	b.w	800a968 <_dtoa_r+0xb30>
 8009ed6:	ed9d 7b02 	vldr	d7, [sp, #8]
 8009eda:	2200      	movs	r2, #0
 8009edc:	ec51 0b17 	vmov	r0, r1, d7
 8009ee0:	2300      	movs	r3, #0
 8009ee2:	ed8d 7b0c 	vstr	d7, [sp, #48]	@ 0x30
 8009ee6:	f7f6 fe0f 	bl	8000b08 <__aeabi_dcmpeq>
 8009eea:	4680      	mov	r8, r0
 8009eec:	b158      	cbz	r0, 8009f06 <_dtoa_r+0xce>
 8009eee:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8009ef0:	2301      	movs	r3, #1
 8009ef2:	6013      	str	r3, [r2, #0]
 8009ef4:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 8009ef6:	b113      	cbz	r3, 8009efe <_dtoa_r+0xc6>
 8009ef8:	9a23      	ldr	r2, [sp, #140]	@ 0x8c
 8009efa:	4b84      	ldr	r3, [pc, #528]	@ (800a10c <_dtoa_r+0x2d4>)
 8009efc:	6013      	str	r3, [r2, #0]
 8009efe:	f8df a220 	ldr.w	sl, [pc, #544]	@ 800a120 <_dtoa_r+0x2e8>
 8009f02:	f000 bd33 	b.w	800a96c <_dtoa_r+0xb34>
 8009f06:	ed9d 0b0c 	vldr	d0, [sp, #48]	@ 0x30
 8009f0a:	aa16      	add	r2, sp, #88	@ 0x58
 8009f0c:	a917      	add	r1, sp, #92	@ 0x5c
 8009f0e:	4658      	mov	r0, fp
 8009f10:	f001 fa3a 	bl	800b388 <__d2b>
 8009f14:	f3c7 560a 	ubfx	r6, r7, #20, #11
 8009f18:	4681      	mov	r9, r0
 8009f1a:	2e00      	cmp	r6, #0
 8009f1c:	d077      	beq.n	800a00e <_dtoa_r+0x1d6>
 8009f1e:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8009f20:	f8cd 8050 	str.w	r8, [sp, #80]	@ 0x50
 8009f24:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8009f28:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 8009f2c:	f043 537f 	orr.w	r3, r3, #1069547520	@ 0x3fc00000
 8009f30:	f443 1340 	orr.w	r3, r3, #3145728	@ 0x300000
 8009f34:	f2a6 36ff 	subw	r6, r6, #1023	@ 0x3ff
 8009f38:	4619      	mov	r1, r3
 8009f3a:	2200      	movs	r2, #0
 8009f3c:	4b74      	ldr	r3, [pc, #464]	@ (800a110 <_dtoa_r+0x2d8>)
 8009f3e:	f7f6 f9c3 	bl	80002c8 <__aeabi_dsub>
 8009f42:	a369      	add	r3, pc, #420	@ (adr r3, 800a0e8 <_dtoa_r+0x2b0>)
 8009f44:	e9d3 2300 	ldrd	r2, r3, [r3]
 8009f48:	f7f6 fb76 	bl	8000638 <__aeabi_dmul>
 8009f4c:	a368      	add	r3, pc, #416	@ (adr r3, 800a0f0 <_dtoa_r+0x2b8>)
 8009f4e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8009f52:	f7f6 f9bb 	bl	80002cc <__adddf3>
 8009f56:	4604      	mov	r4, r0
 8009f58:	4630      	mov	r0, r6
 8009f5a:	460d      	mov	r5, r1
 8009f5c:	f7f6 fb02 	bl	8000564 <__aeabi_i2d>
 8009f60:	a365      	add	r3, pc, #404	@ (adr r3, 800a0f8 <_dtoa_r+0x2c0>)
 8009f62:	e9d3 2300 	ldrd	r2, r3, [r3]
 8009f66:	f7f6 fb67 	bl	8000638 <__aeabi_dmul>
 8009f6a:	4602      	mov	r2, r0
 8009f6c:	460b      	mov	r3, r1
 8009f6e:	4620      	mov	r0, r4
 8009f70:	4629      	mov	r1, r5
 8009f72:	f7f6 f9ab 	bl	80002cc <__adddf3>
 8009f76:	4604      	mov	r4, r0
 8009f78:	460d      	mov	r5, r1
 8009f7a:	f7f6 fe0d 	bl	8000b98 <__aeabi_d2iz>
 8009f7e:	2200      	movs	r2, #0
 8009f80:	4607      	mov	r7, r0
 8009f82:	2300      	movs	r3, #0
 8009f84:	4620      	mov	r0, r4
 8009f86:	4629      	mov	r1, r5
 8009f88:	f7f6 fdc8 	bl	8000b1c <__aeabi_dcmplt>
 8009f8c:	b140      	cbz	r0, 8009fa0 <_dtoa_r+0x168>
 8009f8e:	4638      	mov	r0, r7
 8009f90:	f7f6 fae8 	bl	8000564 <__aeabi_i2d>
 8009f94:	4622      	mov	r2, r4
 8009f96:	462b      	mov	r3, r5
 8009f98:	f7f6 fdb6 	bl	8000b08 <__aeabi_dcmpeq>
 8009f9c:	b900      	cbnz	r0, 8009fa0 <_dtoa_r+0x168>
 8009f9e:	3f01      	subs	r7, #1
 8009fa0:	2f16      	cmp	r7, #22
 8009fa2:	d851      	bhi.n	800a048 <_dtoa_r+0x210>
 8009fa4:	4b5b      	ldr	r3, [pc, #364]	@ (800a114 <_dtoa_r+0x2dc>)
 8009fa6:	eb03 03c7 	add.w	r3, r3, r7, lsl #3
 8009faa:	e9d3 2300 	ldrd	r2, r3, [r3]
 8009fae:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 8009fb2:	f7f6 fdb3 	bl	8000b1c <__aeabi_dcmplt>
 8009fb6:	2800      	cmp	r0, #0
 8009fb8:	d048      	beq.n	800a04c <_dtoa_r+0x214>
 8009fba:	3f01      	subs	r7, #1
 8009fbc:	2300      	movs	r3, #0
 8009fbe:	9312      	str	r3, [sp, #72]	@ 0x48
 8009fc0:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 8009fc2:	1b9b      	subs	r3, r3, r6
 8009fc4:	1e5a      	subs	r2, r3, #1
 8009fc6:	bf44      	itt	mi
 8009fc8:	f1c3 0801 	rsbmi	r8, r3, #1
 8009fcc:	2300      	movmi	r3, #0
 8009fce:	9208      	str	r2, [sp, #32]
 8009fd0:	bf54      	ite	pl
 8009fd2:	f04f 0800 	movpl.w	r8, #0
 8009fd6:	9308      	strmi	r3, [sp, #32]
 8009fd8:	2f00      	cmp	r7, #0
 8009fda:	db39      	blt.n	800a050 <_dtoa_r+0x218>
 8009fdc:	9b08      	ldr	r3, [sp, #32]
 8009fde:	970f      	str	r7, [sp, #60]	@ 0x3c
 8009fe0:	443b      	add	r3, r7
 8009fe2:	9308      	str	r3, [sp, #32]
 8009fe4:	2300      	movs	r3, #0
 8009fe6:	930a      	str	r3, [sp, #40]	@ 0x28
 8009fe8:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8009fea:	2b09      	cmp	r3, #9
 8009fec:	d864      	bhi.n	800a0b8 <_dtoa_r+0x280>
 8009fee:	2b05      	cmp	r3, #5
 8009ff0:	bfc4      	itt	gt
 8009ff2:	3b04      	subgt	r3, #4
 8009ff4:	9309      	strgt	r3, [sp, #36]	@ 0x24
 8009ff6:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8009ff8:	f1a3 0302 	sub.w	r3, r3, #2
 8009ffc:	bfcc      	ite	gt
 8009ffe:	2400      	movgt	r4, #0
 800a000:	2401      	movle	r4, #1
 800a002:	2b03      	cmp	r3, #3
 800a004:	d863      	bhi.n	800a0ce <_dtoa_r+0x296>
 800a006:	e8df f003 	tbb	[pc, r3]
 800a00a:	372a      	.short	0x372a
 800a00c:	5535      	.short	0x5535
 800a00e:	e9dd 6316 	ldrd	r6, r3, [sp, #88]	@ 0x58
 800a012:	441e      	add	r6, r3
 800a014:	f206 4332 	addw	r3, r6, #1074	@ 0x432
 800a018:	2b20      	cmp	r3, #32
 800a01a:	bfc1      	itttt	gt
 800a01c:	f1c3 0340 	rsbgt	r3, r3, #64	@ 0x40
 800a020:	409f      	lslgt	r7, r3
 800a022:	f206 4312 	addwgt	r3, r6, #1042	@ 0x412
 800a026:	fa24 f303 	lsrgt.w	r3, r4, r3
 800a02a:	bfd6      	itet	le
 800a02c:	f1c3 0320 	rsble	r3, r3, #32
 800a030:	ea47 0003 	orrgt.w	r0, r7, r3
 800a034:	fa04 f003 	lslle.w	r0, r4, r3
 800a038:	f7f6 fa84 	bl	8000544 <__aeabi_ui2d>
 800a03c:	2201      	movs	r2, #1
 800a03e:	f1a1 73f8 	sub.w	r3, r1, #32505856	@ 0x1f00000
 800a042:	3e01      	subs	r6, #1
 800a044:	9214      	str	r2, [sp, #80]	@ 0x50
 800a046:	e777      	b.n	8009f38 <_dtoa_r+0x100>
 800a048:	2301      	movs	r3, #1
 800a04a:	e7b8      	b.n	8009fbe <_dtoa_r+0x186>
 800a04c:	9012      	str	r0, [sp, #72]	@ 0x48
 800a04e:	e7b7      	b.n	8009fc0 <_dtoa_r+0x188>
 800a050:	427b      	negs	r3, r7
 800a052:	930a      	str	r3, [sp, #40]	@ 0x28
 800a054:	2300      	movs	r3, #0
 800a056:	eba8 0807 	sub.w	r8, r8, r7
 800a05a:	930f      	str	r3, [sp, #60]	@ 0x3c
 800a05c:	e7c4      	b.n	8009fe8 <_dtoa_r+0x1b0>
 800a05e:	2300      	movs	r3, #0
 800a060:	930b      	str	r3, [sp, #44]	@ 0x2c
 800a062:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 800a064:	2b00      	cmp	r3, #0
 800a066:	dc35      	bgt.n	800a0d4 <_dtoa_r+0x29c>
 800a068:	2301      	movs	r3, #1
 800a06a:	9300      	str	r3, [sp, #0]
 800a06c:	9307      	str	r3, [sp, #28]
 800a06e:	461a      	mov	r2, r3
 800a070:	920e      	str	r2, [sp, #56]	@ 0x38
 800a072:	e00b      	b.n	800a08c <_dtoa_r+0x254>
 800a074:	2301      	movs	r3, #1
 800a076:	e7f3      	b.n	800a060 <_dtoa_r+0x228>
 800a078:	2300      	movs	r3, #0
 800a07a:	930b      	str	r3, [sp, #44]	@ 0x2c
 800a07c:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 800a07e:	18fb      	adds	r3, r7, r3
 800a080:	9300      	str	r3, [sp, #0]
 800a082:	3301      	adds	r3, #1
 800a084:	2b01      	cmp	r3, #1
 800a086:	9307      	str	r3, [sp, #28]
 800a088:	bfb8      	it	lt
 800a08a:	2301      	movlt	r3, #1
 800a08c:	f8db 001c 	ldr.w	r0, [fp, #28]
 800a090:	2100      	movs	r1, #0
 800a092:	2204      	movs	r2, #4
 800a094:	f102 0514 	add.w	r5, r2, #20
 800a098:	429d      	cmp	r5, r3
 800a09a:	d91f      	bls.n	800a0dc <_dtoa_r+0x2a4>
 800a09c:	6041      	str	r1, [r0, #4]
 800a09e:	4658      	mov	r0, fp
 800a0a0:	f000 fd8e 	bl	800abc0 <_Balloc>
 800a0a4:	4682      	mov	sl, r0
 800a0a6:	2800      	cmp	r0, #0
 800a0a8:	d13c      	bne.n	800a124 <_dtoa_r+0x2ec>
 800a0aa:	4b1b      	ldr	r3, [pc, #108]	@ (800a118 <_dtoa_r+0x2e0>)
 800a0ac:	4602      	mov	r2, r0
 800a0ae:	f240 11af 	movw	r1, #431	@ 0x1af
 800a0b2:	e6d8      	b.n	8009e66 <_dtoa_r+0x2e>
 800a0b4:	2301      	movs	r3, #1
 800a0b6:	e7e0      	b.n	800a07a <_dtoa_r+0x242>
 800a0b8:	2401      	movs	r4, #1
 800a0ba:	2300      	movs	r3, #0
 800a0bc:	9309      	str	r3, [sp, #36]	@ 0x24
 800a0be:	940b      	str	r4, [sp, #44]	@ 0x2c
 800a0c0:	f04f 33ff 	mov.w	r3, #4294967295
 800a0c4:	9300      	str	r3, [sp, #0]
 800a0c6:	9307      	str	r3, [sp, #28]
 800a0c8:	2200      	movs	r2, #0
 800a0ca:	2312      	movs	r3, #18
 800a0cc:	e7d0      	b.n	800a070 <_dtoa_r+0x238>
 800a0ce:	2301      	movs	r3, #1
 800a0d0:	930b      	str	r3, [sp, #44]	@ 0x2c
 800a0d2:	e7f5      	b.n	800a0c0 <_dtoa_r+0x288>
 800a0d4:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 800a0d6:	9300      	str	r3, [sp, #0]
 800a0d8:	9307      	str	r3, [sp, #28]
 800a0da:	e7d7      	b.n	800a08c <_dtoa_r+0x254>
 800a0dc:	3101      	adds	r1, #1
 800a0de:	0052      	lsls	r2, r2, #1
 800a0e0:	e7d8      	b.n	800a094 <_dtoa_r+0x25c>
 800a0e2:	bf00      	nop
 800a0e4:	f3af 8000 	nop.w
 800a0e8:	636f4361 	.word	0x636f4361
 800a0ec:	3fd287a7 	.word	0x3fd287a7
 800a0f0:	8b60c8b3 	.word	0x8b60c8b3
 800a0f4:	3fc68a28 	.word	0x3fc68a28
 800a0f8:	509f79fb 	.word	0x509f79fb
 800a0fc:	3fd34413 	.word	0x3fd34413
 800a100:	0800d596 	.word	0x0800d596
 800a104:	0800d5ad 	.word	0x0800d5ad
 800a108:	7ff00000 	.word	0x7ff00000
 800a10c:	0800d561 	.word	0x0800d561
 800a110:	3ff80000 	.word	0x3ff80000
 800a114:	0800d6a8 	.word	0x0800d6a8
 800a118:	0800d605 	.word	0x0800d605
 800a11c:	0800d592 	.word	0x0800d592
 800a120:	0800d560 	.word	0x0800d560
 800a124:	f8db 301c 	ldr.w	r3, [fp, #28]
 800a128:	6018      	str	r0, [r3, #0]
 800a12a:	9b07      	ldr	r3, [sp, #28]
 800a12c:	2b0e      	cmp	r3, #14
 800a12e:	f200 80a4 	bhi.w	800a27a <_dtoa_r+0x442>
 800a132:	2c00      	cmp	r4, #0
 800a134:	f000 80a1 	beq.w	800a27a <_dtoa_r+0x442>
 800a138:	2f00      	cmp	r7, #0
 800a13a:	dd33      	ble.n	800a1a4 <_dtoa_r+0x36c>
 800a13c:	4bad      	ldr	r3, [pc, #692]	@ (800a3f4 <_dtoa_r+0x5bc>)
 800a13e:	f007 020f 	and.w	r2, r7, #15
 800a142:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 800a146:	ed93 7b00 	vldr	d7, [r3]
 800a14a:	05f8      	lsls	r0, r7, #23
 800a14c:	ed8d 7b04 	vstr	d7, [sp, #16]
 800a150:	ea4f 1427 	mov.w	r4, r7, asr #4
 800a154:	d516      	bpl.n	800a184 <_dtoa_r+0x34c>
 800a156:	4ba8      	ldr	r3, [pc, #672]	@ (800a3f8 <_dtoa_r+0x5c0>)
 800a158:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 800a15c:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
 800a160:	f7f6 fb94 	bl	800088c <__aeabi_ddiv>
 800a164:	e9cd 0102 	strd	r0, r1, [sp, #8]
 800a168:	f004 040f 	and.w	r4, r4, #15
 800a16c:	2603      	movs	r6, #3
 800a16e:	4da2      	ldr	r5, [pc, #648]	@ (800a3f8 <_dtoa_r+0x5c0>)
 800a170:	b954      	cbnz	r4, 800a188 <_dtoa_r+0x350>
 800a172:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 800a176:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 800a17a:	f7f6 fb87 	bl	800088c <__aeabi_ddiv>
 800a17e:	e9cd 0102 	strd	r0, r1, [sp, #8]
 800a182:	e028      	b.n	800a1d6 <_dtoa_r+0x39e>
 800a184:	2602      	movs	r6, #2
 800a186:	e7f2      	b.n	800a16e <_dtoa_r+0x336>
 800a188:	07e1      	lsls	r1, r4, #31
 800a18a:	d508      	bpl.n	800a19e <_dtoa_r+0x366>
 800a18c:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 800a190:	e9d5 2300 	ldrd	r2, r3, [r5]
 800a194:	f7f6 fa50 	bl	8000638 <__aeabi_dmul>
 800a198:	e9cd 0104 	strd	r0, r1, [sp, #16]
 800a19c:	3601      	adds	r6, #1
 800a19e:	1064      	asrs	r4, r4, #1
 800a1a0:	3508      	adds	r5, #8
 800a1a2:	e7e5      	b.n	800a170 <_dtoa_r+0x338>
 800a1a4:	f000 80d2 	beq.w	800a34c <_dtoa_r+0x514>
 800a1a8:	427c      	negs	r4, r7
 800a1aa:	4b92      	ldr	r3, [pc, #584]	@ (800a3f4 <_dtoa_r+0x5bc>)
 800a1ac:	4d92      	ldr	r5, [pc, #584]	@ (800a3f8 <_dtoa_r+0x5c0>)
 800a1ae:	f004 020f 	and.w	r2, r4, #15
 800a1b2:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 800a1b6:	e9d3 2300 	ldrd	r2, r3, [r3]
 800a1ba:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 800a1be:	f7f6 fa3b 	bl	8000638 <__aeabi_dmul>
 800a1c2:	e9cd 0102 	strd	r0, r1, [sp, #8]
 800a1c6:	1124      	asrs	r4, r4, #4
 800a1c8:	2300      	movs	r3, #0
 800a1ca:	2602      	movs	r6, #2
 800a1cc:	2c00      	cmp	r4, #0
 800a1ce:	f040 80b2 	bne.w	800a336 <_dtoa_r+0x4fe>
 800a1d2:	2b00      	cmp	r3, #0
 800a1d4:	d1d3      	bne.n	800a17e <_dtoa_r+0x346>
 800a1d6:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 800a1d8:	e9dd 4502 	ldrd	r4, r5, [sp, #8]
 800a1dc:	2b00      	cmp	r3, #0
 800a1de:	f000 80b7 	beq.w	800a350 <_dtoa_r+0x518>
 800a1e2:	4b86      	ldr	r3, [pc, #536]	@ (800a3fc <_dtoa_r+0x5c4>)
 800a1e4:	2200      	movs	r2, #0
 800a1e6:	4620      	mov	r0, r4
 800a1e8:	4629      	mov	r1, r5
 800a1ea:	f7f6 fc97 	bl	8000b1c <__aeabi_dcmplt>
 800a1ee:	2800      	cmp	r0, #0
 800a1f0:	f000 80ae 	beq.w	800a350 <_dtoa_r+0x518>
 800a1f4:	9b07      	ldr	r3, [sp, #28]
 800a1f6:	2b00      	cmp	r3, #0
 800a1f8:	f000 80aa 	beq.w	800a350 <_dtoa_r+0x518>
 800a1fc:	9b00      	ldr	r3, [sp, #0]
 800a1fe:	2b00      	cmp	r3, #0
 800a200:	dd37      	ble.n	800a272 <_dtoa_r+0x43a>
 800a202:	1e7b      	subs	r3, r7, #1
 800a204:	9304      	str	r3, [sp, #16]
 800a206:	4620      	mov	r0, r4
 800a208:	4b7d      	ldr	r3, [pc, #500]	@ (800a400 <_dtoa_r+0x5c8>)
 800a20a:	2200      	movs	r2, #0
 800a20c:	4629      	mov	r1, r5
 800a20e:	f7f6 fa13 	bl	8000638 <__aeabi_dmul>
 800a212:	e9cd 0102 	strd	r0, r1, [sp, #8]
 800a216:	9c00      	ldr	r4, [sp, #0]
 800a218:	3601      	adds	r6, #1
 800a21a:	4630      	mov	r0, r6
 800a21c:	f7f6 f9a2 	bl	8000564 <__aeabi_i2d>
 800a220:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 800a224:	f7f6 fa08 	bl	8000638 <__aeabi_dmul>
 800a228:	4b76      	ldr	r3, [pc, #472]	@ (800a404 <_dtoa_r+0x5cc>)
 800a22a:	2200      	movs	r2, #0
 800a22c:	f7f6 f84e 	bl	80002cc <__adddf3>
 800a230:	4605      	mov	r5, r0
 800a232:	f1a1 7650 	sub.w	r6, r1, #54525952	@ 0x3400000
 800a236:	2c00      	cmp	r4, #0
 800a238:	f040 808d 	bne.w	800a356 <_dtoa_r+0x51e>
 800a23c:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 800a240:	4b71      	ldr	r3, [pc, #452]	@ (800a408 <_dtoa_r+0x5d0>)
 800a242:	2200      	movs	r2, #0
 800a244:	f7f6 f840 	bl	80002c8 <__aeabi_dsub>
 800a248:	4602      	mov	r2, r0
 800a24a:	460b      	mov	r3, r1
 800a24c:	e9cd 2302 	strd	r2, r3, [sp, #8]
 800a250:	462a      	mov	r2, r5
 800a252:	4633      	mov	r3, r6
 800a254:	f7f6 fc80 	bl	8000b58 <__aeabi_dcmpgt>
 800a258:	2800      	cmp	r0, #0
 800a25a:	f040 828b 	bne.w	800a774 <_dtoa_r+0x93c>
 800a25e:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 800a262:	462a      	mov	r2, r5
 800a264:	f106 4300 	add.w	r3, r6, #2147483648	@ 0x80000000
 800a268:	f7f6 fc58 	bl	8000b1c <__aeabi_dcmplt>
 800a26c:	2800      	cmp	r0, #0
 800a26e:	f040 8128 	bne.w	800a4c2 <_dtoa_r+0x68a>
 800a272:	e9dd 340c 	ldrd	r3, r4, [sp, #48]	@ 0x30
 800a276:	e9cd 3402 	strd	r3, r4, [sp, #8]
 800a27a:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 800a27c:	2b00      	cmp	r3, #0
 800a27e:	f2c0 815a 	blt.w	800a536 <_dtoa_r+0x6fe>
 800a282:	2f0e      	cmp	r7, #14
 800a284:	f300 8157 	bgt.w	800a536 <_dtoa_r+0x6fe>
 800a288:	4b5a      	ldr	r3, [pc, #360]	@ (800a3f4 <_dtoa_r+0x5bc>)
 800a28a:	eb03 03c7 	add.w	r3, r3, r7, lsl #3
 800a28e:	ed93 7b00 	vldr	d7, [r3]
 800a292:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 800a294:	2b00      	cmp	r3, #0
 800a296:	ed8d 7b00 	vstr	d7, [sp]
 800a29a:	da03      	bge.n	800a2a4 <_dtoa_r+0x46c>
 800a29c:	9b07      	ldr	r3, [sp, #28]
 800a29e:	2b00      	cmp	r3, #0
 800a2a0:	f340 8101 	ble.w	800a4a6 <_dtoa_r+0x66e>
 800a2a4:	e9dd 4502 	ldrd	r4, r5, [sp, #8]
 800a2a8:	4656      	mov	r6, sl
 800a2aa:	e9dd 2300 	ldrd	r2, r3, [sp]
 800a2ae:	4620      	mov	r0, r4
 800a2b0:	4629      	mov	r1, r5
 800a2b2:	f7f6 faeb 	bl	800088c <__aeabi_ddiv>
 800a2b6:	f7f6 fc6f 	bl	8000b98 <__aeabi_d2iz>
 800a2ba:	4680      	mov	r8, r0
 800a2bc:	f7f6 f952 	bl	8000564 <__aeabi_i2d>
 800a2c0:	e9dd 2300 	ldrd	r2, r3, [sp]
 800a2c4:	f7f6 f9b8 	bl	8000638 <__aeabi_dmul>
 800a2c8:	4602      	mov	r2, r0
 800a2ca:	460b      	mov	r3, r1
 800a2cc:	4620      	mov	r0, r4
 800a2ce:	4629      	mov	r1, r5
 800a2d0:	f108 0430 	add.w	r4, r8, #48	@ 0x30
 800a2d4:	f7f5 fff8 	bl	80002c8 <__aeabi_dsub>
 800a2d8:	f806 4b01 	strb.w	r4, [r6], #1
 800a2dc:	9d07      	ldr	r5, [sp, #28]
 800a2de:	eba6 040a 	sub.w	r4, r6, sl
 800a2e2:	42a5      	cmp	r5, r4
 800a2e4:	4602      	mov	r2, r0
 800a2e6:	460b      	mov	r3, r1
 800a2e8:	f040 8117 	bne.w	800a51a <_dtoa_r+0x6e2>
 800a2ec:	f7f5 ffee 	bl	80002cc <__adddf3>
 800a2f0:	e9dd 2300 	ldrd	r2, r3, [sp]
 800a2f4:	4604      	mov	r4, r0
 800a2f6:	460d      	mov	r5, r1
 800a2f8:	f7f6 fc2e 	bl	8000b58 <__aeabi_dcmpgt>
 800a2fc:	2800      	cmp	r0, #0
 800a2fe:	f040 80f9 	bne.w	800a4f4 <_dtoa_r+0x6bc>
 800a302:	e9dd 2300 	ldrd	r2, r3, [sp]
 800a306:	4620      	mov	r0, r4
 800a308:	4629      	mov	r1, r5
 800a30a:	f7f6 fbfd 	bl	8000b08 <__aeabi_dcmpeq>
 800a30e:	b118      	cbz	r0, 800a318 <_dtoa_r+0x4e0>
 800a310:	f018 0f01 	tst.w	r8, #1
 800a314:	f040 80ee 	bne.w	800a4f4 <_dtoa_r+0x6bc>
 800a318:	4649      	mov	r1, r9
 800a31a:	4658      	mov	r0, fp
 800a31c:	f000 fc90 	bl	800ac40 <_Bfree>
 800a320:	2300      	movs	r3, #0
 800a322:	7033      	strb	r3, [r6, #0]
 800a324:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 800a326:	3701      	adds	r7, #1
 800a328:	601f      	str	r7, [r3, #0]
 800a32a:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 800a32c:	2b00      	cmp	r3, #0
 800a32e:	f000 831d 	beq.w	800a96c <_dtoa_r+0xb34>
 800a332:	601e      	str	r6, [r3, #0]
 800a334:	e31a      	b.n	800a96c <_dtoa_r+0xb34>
 800a336:	07e2      	lsls	r2, r4, #31
 800a338:	d505      	bpl.n	800a346 <_dtoa_r+0x50e>
 800a33a:	e9d5 2300 	ldrd	r2, r3, [r5]
 800a33e:	f7f6 f97b 	bl	8000638 <__aeabi_dmul>
 800a342:	3601      	adds	r6, #1
 800a344:	2301      	movs	r3, #1
 800a346:	1064      	asrs	r4, r4, #1
 800a348:	3508      	adds	r5, #8
 800a34a:	e73f      	b.n	800a1cc <_dtoa_r+0x394>
 800a34c:	2602      	movs	r6, #2
 800a34e:	e742      	b.n	800a1d6 <_dtoa_r+0x39e>
 800a350:	9c07      	ldr	r4, [sp, #28]
 800a352:	9704      	str	r7, [sp, #16]
 800a354:	e761      	b.n	800a21a <_dtoa_r+0x3e2>
 800a356:	4b27      	ldr	r3, [pc, #156]	@ (800a3f4 <_dtoa_r+0x5bc>)
 800a358:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 800a35a:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
 800a35e:	e953 2302 	ldrd	r2, r3, [r3, #-8]
 800a362:	4454      	add	r4, sl
 800a364:	2900      	cmp	r1, #0
 800a366:	d053      	beq.n	800a410 <_dtoa_r+0x5d8>
 800a368:	4928      	ldr	r1, [pc, #160]	@ (800a40c <_dtoa_r+0x5d4>)
 800a36a:	2000      	movs	r0, #0
 800a36c:	f7f6 fa8e 	bl	800088c <__aeabi_ddiv>
 800a370:	4633      	mov	r3, r6
 800a372:	462a      	mov	r2, r5
 800a374:	f7f5 ffa8 	bl	80002c8 <__aeabi_dsub>
 800a378:	e9cd 0110 	strd	r0, r1, [sp, #64]	@ 0x40
 800a37c:	4656      	mov	r6, sl
 800a37e:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 800a382:	f7f6 fc09 	bl	8000b98 <__aeabi_d2iz>
 800a386:	4605      	mov	r5, r0
 800a388:	f7f6 f8ec 	bl	8000564 <__aeabi_i2d>
 800a38c:	4602      	mov	r2, r0
 800a38e:	460b      	mov	r3, r1
 800a390:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 800a394:	f7f5 ff98 	bl	80002c8 <__aeabi_dsub>
 800a398:	3530      	adds	r5, #48	@ 0x30
 800a39a:	4602      	mov	r2, r0
 800a39c:	460b      	mov	r3, r1
 800a39e:	e9cd 2302 	strd	r2, r3, [sp, #8]
 800a3a2:	f806 5b01 	strb.w	r5, [r6], #1
 800a3a6:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	@ 0x40
 800a3aa:	f7f6 fbb7 	bl	8000b1c <__aeabi_dcmplt>
 800a3ae:	2800      	cmp	r0, #0
 800a3b0:	d171      	bne.n	800a496 <_dtoa_r+0x65e>
 800a3b2:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 800a3b6:	4911      	ldr	r1, [pc, #68]	@ (800a3fc <_dtoa_r+0x5c4>)
 800a3b8:	2000      	movs	r0, #0
 800a3ba:	f7f5 ff85 	bl	80002c8 <__aeabi_dsub>
 800a3be:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	@ 0x40
 800a3c2:	f7f6 fbab 	bl	8000b1c <__aeabi_dcmplt>
 800a3c6:	2800      	cmp	r0, #0
 800a3c8:	f040 8095 	bne.w	800a4f6 <_dtoa_r+0x6be>
 800a3cc:	42a6      	cmp	r6, r4
 800a3ce:	f43f af50 	beq.w	800a272 <_dtoa_r+0x43a>
 800a3d2:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	@ 0x40
 800a3d6:	4b0a      	ldr	r3, [pc, #40]	@ (800a400 <_dtoa_r+0x5c8>)
 800a3d8:	2200      	movs	r2, #0
 800a3da:	f7f6 f92d 	bl	8000638 <__aeabi_dmul>
 800a3de:	4b08      	ldr	r3, [pc, #32]	@ (800a400 <_dtoa_r+0x5c8>)
 800a3e0:	e9cd 0110 	strd	r0, r1, [sp, #64]	@ 0x40
 800a3e4:	2200      	movs	r2, #0
 800a3e6:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 800a3ea:	f7f6 f925 	bl	8000638 <__aeabi_dmul>
 800a3ee:	e9cd 0102 	strd	r0, r1, [sp, #8]
 800a3f2:	e7c4      	b.n	800a37e <_dtoa_r+0x546>
 800a3f4:	0800d6a8 	.word	0x0800d6a8
 800a3f8:	0800d680 	.word	0x0800d680
 800a3fc:	3ff00000 	.word	0x3ff00000
 800a400:	40240000 	.word	0x40240000
 800a404:	401c0000 	.word	0x401c0000
 800a408:	40140000 	.word	0x40140000
 800a40c:	3fe00000 	.word	0x3fe00000
 800a410:	4631      	mov	r1, r6
 800a412:	4628      	mov	r0, r5
 800a414:	f7f6 f910 	bl	8000638 <__aeabi_dmul>
 800a418:	e9cd 0110 	strd	r0, r1, [sp, #64]	@ 0x40
 800a41c:	9415      	str	r4, [sp, #84]	@ 0x54
 800a41e:	4656      	mov	r6, sl
 800a420:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 800a424:	f7f6 fbb8 	bl	8000b98 <__aeabi_d2iz>
 800a428:	4605      	mov	r5, r0
 800a42a:	f7f6 f89b 	bl	8000564 <__aeabi_i2d>
 800a42e:	4602      	mov	r2, r0
 800a430:	460b      	mov	r3, r1
 800a432:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 800a436:	f7f5 ff47 	bl	80002c8 <__aeabi_dsub>
 800a43a:	3530      	adds	r5, #48	@ 0x30
 800a43c:	f806 5b01 	strb.w	r5, [r6], #1
 800a440:	4602      	mov	r2, r0
 800a442:	460b      	mov	r3, r1
 800a444:	42a6      	cmp	r6, r4
 800a446:	e9cd 2302 	strd	r2, r3, [sp, #8]
 800a44a:	f04f 0200 	mov.w	r2, #0
 800a44e:	d124      	bne.n	800a49a <_dtoa_r+0x662>
 800a450:	4bac      	ldr	r3, [pc, #688]	@ (800a704 <_dtoa_r+0x8cc>)
 800a452:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	@ 0x40
 800a456:	f7f5 ff39 	bl	80002cc <__adddf3>
 800a45a:	4602      	mov	r2, r0
 800a45c:	460b      	mov	r3, r1
 800a45e:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 800a462:	f7f6 fb79 	bl	8000b58 <__aeabi_dcmpgt>
 800a466:	2800      	cmp	r0, #0
 800a468:	d145      	bne.n	800a4f6 <_dtoa_r+0x6be>
 800a46a:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	@ 0x40
 800a46e:	49a5      	ldr	r1, [pc, #660]	@ (800a704 <_dtoa_r+0x8cc>)
 800a470:	2000      	movs	r0, #0
 800a472:	f7f5 ff29 	bl	80002c8 <__aeabi_dsub>
 800a476:	4602      	mov	r2, r0
 800a478:	460b      	mov	r3, r1
 800a47a:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 800a47e:	f7f6 fb4d 	bl	8000b1c <__aeabi_dcmplt>
 800a482:	2800      	cmp	r0, #0
 800a484:	f43f aef5 	beq.w	800a272 <_dtoa_r+0x43a>
 800a488:	9e15      	ldr	r6, [sp, #84]	@ 0x54
 800a48a:	1e73      	subs	r3, r6, #1
 800a48c:	9315      	str	r3, [sp, #84]	@ 0x54
 800a48e:	f816 3c01 	ldrb.w	r3, [r6, #-1]
 800a492:	2b30      	cmp	r3, #48	@ 0x30
 800a494:	d0f8      	beq.n	800a488 <_dtoa_r+0x650>
 800a496:	9f04      	ldr	r7, [sp, #16]
 800a498:	e73e      	b.n	800a318 <_dtoa_r+0x4e0>
 800a49a:	4b9b      	ldr	r3, [pc, #620]	@ (800a708 <_dtoa_r+0x8d0>)
 800a49c:	f7f6 f8cc 	bl	8000638 <__aeabi_dmul>
 800a4a0:	e9cd 0102 	strd	r0, r1, [sp, #8]
 800a4a4:	e7bc      	b.n	800a420 <_dtoa_r+0x5e8>
 800a4a6:	d10c      	bne.n	800a4c2 <_dtoa_r+0x68a>
 800a4a8:	4b98      	ldr	r3, [pc, #608]	@ (800a70c <_dtoa_r+0x8d4>)
 800a4aa:	2200      	movs	r2, #0
 800a4ac:	e9dd 0100 	ldrd	r0, r1, [sp]
 800a4b0:	f7f6 f8c2 	bl	8000638 <__aeabi_dmul>
 800a4b4:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 800a4b8:	f7f6 fb44 	bl	8000b44 <__aeabi_dcmpge>
 800a4bc:	2800      	cmp	r0, #0
 800a4be:	f000 8157 	beq.w	800a770 <_dtoa_r+0x938>
 800a4c2:	2400      	movs	r4, #0
 800a4c4:	4625      	mov	r5, r4
 800a4c6:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 800a4c8:	43db      	mvns	r3, r3
 800a4ca:	9304      	str	r3, [sp, #16]
 800a4cc:	4656      	mov	r6, sl
 800a4ce:	2700      	movs	r7, #0
 800a4d0:	4621      	mov	r1, r4
 800a4d2:	4658      	mov	r0, fp
 800a4d4:	f000 fbb4 	bl	800ac40 <_Bfree>
 800a4d8:	2d00      	cmp	r5, #0
 800a4da:	d0dc      	beq.n	800a496 <_dtoa_r+0x65e>
 800a4dc:	b12f      	cbz	r7, 800a4ea <_dtoa_r+0x6b2>
 800a4de:	42af      	cmp	r7, r5
 800a4e0:	d003      	beq.n	800a4ea <_dtoa_r+0x6b2>
 800a4e2:	4639      	mov	r1, r7
 800a4e4:	4658      	mov	r0, fp
 800a4e6:	f000 fbab 	bl	800ac40 <_Bfree>
 800a4ea:	4629      	mov	r1, r5
 800a4ec:	4658      	mov	r0, fp
 800a4ee:	f000 fba7 	bl	800ac40 <_Bfree>
 800a4f2:	e7d0      	b.n	800a496 <_dtoa_r+0x65e>
 800a4f4:	9704      	str	r7, [sp, #16]
 800a4f6:	4633      	mov	r3, r6
 800a4f8:	461e      	mov	r6, r3
 800a4fa:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 800a4fe:	2a39      	cmp	r2, #57	@ 0x39
 800a500:	d107      	bne.n	800a512 <_dtoa_r+0x6da>
 800a502:	459a      	cmp	sl, r3
 800a504:	d1f8      	bne.n	800a4f8 <_dtoa_r+0x6c0>
 800a506:	9a04      	ldr	r2, [sp, #16]
 800a508:	3201      	adds	r2, #1
 800a50a:	9204      	str	r2, [sp, #16]
 800a50c:	2230      	movs	r2, #48	@ 0x30
 800a50e:	f88a 2000 	strb.w	r2, [sl]
 800a512:	781a      	ldrb	r2, [r3, #0]
 800a514:	3201      	adds	r2, #1
 800a516:	701a      	strb	r2, [r3, #0]
 800a518:	e7bd      	b.n	800a496 <_dtoa_r+0x65e>
 800a51a:	4b7b      	ldr	r3, [pc, #492]	@ (800a708 <_dtoa_r+0x8d0>)
 800a51c:	2200      	movs	r2, #0
 800a51e:	f7f6 f88b 	bl	8000638 <__aeabi_dmul>
 800a522:	2200      	movs	r2, #0
 800a524:	2300      	movs	r3, #0
 800a526:	4604      	mov	r4, r0
 800a528:	460d      	mov	r5, r1
 800a52a:	f7f6 faed 	bl	8000b08 <__aeabi_dcmpeq>
 800a52e:	2800      	cmp	r0, #0
 800a530:	f43f aebb 	beq.w	800a2aa <_dtoa_r+0x472>
 800a534:	e6f0      	b.n	800a318 <_dtoa_r+0x4e0>
 800a536:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 800a538:	2a00      	cmp	r2, #0
 800a53a:	f000 80db 	beq.w	800a6f4 <_dtoa_r+0x8bc>
 800a53e:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 800a540:	2a01      	cmp	r2, #1
 800a542:	f300 80bf 	bgt.w	800a6c4 <_dtoa_r+0x88c>
 800a546:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 800a548:	2a00      	cmp	r2, #0
 800a54a:	f000 80b7 	beq.w	800a6bc <_dtoa_r+0x884>
 800a54e:	f203 4333 	addw	r3, r3, #1075	@ 0x433
 800a552:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 800a554:	4646      	mov	r6, r8
 800a556:	9a08      	ldr	r2, [sp, #32]
 800a558:	2101      	movs	r1, #1
 800a55a:	441a      	add	r2, r3
 800a55c:	4658      	mov	r0, fp
 800a55e:	4498      	add	r8, r3
 800a560:	9208      	str	r2, [sp, #32]
 800a562:	f000 fc6b 	bl	800ae3c <__i2b>
 800a566:	4605      	mov	r5, r0
 800a568:	b15e      	cbz	r6, 800a582 <_dtoa_r+0x74a>
 800a56a:	9b08      	ldr	r3, [sp, #32]
 800a56c:	2b00      	cmp	r3, #0
 800a56e:	dd08      	ble.n	800a582 <_dtoa_r+0x74a>
 800a570:	42b3      	cmp	r3, r6
 800a572:	9a08      	ldr	r2, [sp, #32]
 800a574:	bfa8      	it	ge
 800a576:	4633      	movge	r3, r6
 800a578:	eba8 0803 	sub.w	r8, r8, r3
 800a57c:	1af6      	subs	r6, r6, r3
 800a57e:	1ad3      	subs	r3, r2, r3
 800a580:	9308      	str	r3, [sp, #32]
 800a582:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 800a584:	b1f3      	cbz	r3, 800a5c4 <_dtoa_r+0x78c>
 800a586:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 800a588:	2b00      	cmp	r3, #0
 800a58a:	f000 80b7 	beq.w	800a6fc <_dtoa_r+0x8c4>
 800a58e:	b18c      	cbz	r4, 800a5b4 <_dtoa_r+0x77c>
 800a590:	4629      	mov	r1, r5
 800a592:	4622      	mov	r2, r4
 800a594:	4658      	mov	r0, fp
 800a596:	f000 fd11 	bl	800afbc <__pow5mult>
 800a59a:	464a      	mov	r2, r9
 800a59c:	4601      	mov	r1, r0
 800a59e:	4605      	mov	r5, r0
 800a5a0:	4658      	mov	r0, fp
 800a5a2:	f000 fc61 	bl	800ae68 <__multiply>
 800a5a6:	4649      	mov	r1, r9
 800a5a8:	9004      	str	r0, [sp, #16]
 800a5aa:	4658      	mov	r0, fp
 800a5ac:	f000 fb48 	bl	800ac40 <_Bfree>
 800a5b0:	9b04      	ldr	r3, [sp, #16]
 800a5b2:	4699      	mov	r9, r3
 800a5b4:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 800a5b6:	1b1a      	subs	r2, r3, r4
 800a5b8:	d004      	beq.n	800a5c4 <_dtoa_r+0x78c>
 800a5ba:	4649      	mov	r1, r9
 800a5bc:	4658      	mov	r0, fp
 800a5be:	f000 fcfd 	bl	800afbc <__pow5mult>
 800a5c2:	4681      	mov	r9, r0
 800a5c4:	2101      	movs	r1, #1
 800a5c6:	4658      	mov	r0, fp
 800a5c8:	f000 fc38 	bl	800ae3c <__i2b>
 800a5cc:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 800a5ce:	4604      	mov	r4, r0
 800a5d0:	2b00      	cmp	r3, #0
 800a5d2:	f000 81cf 	beq.w	800a974 <_dtoa_r+0xb3c>
 800a5d6:	461a      	mov	r2, r3
 800a5d8:	4601      	mov	r1, r0
 800a5da:	4658      	mov	r0, fp
 800a5dc:	f000 fcee 	bl	800afbc <__pow5mult>
 800a5e0:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800a5e2:	2b01      	cmp	r3, #1
 800a5e4:	4604      	mov	r4, r0
 800a5e6:	f300 8095 	bgt.w	800a714 <_dtoa_r+0x8dc>
 800a5ea:	9b02      	ldr	r3, [sp, #8]
 800a5ec:	2b00      	cmp	r3, #0
 800a5ee:	f040 8087 	bne.w	800a700 <_dtoa_r+0x8c8>
 800a5f2:	9b03      	ldr	r3, [sp, #12]
 800a5f4:	f3c3 0313 	ubfx	r3, r3, #0, #20
 800a5f8:	2b00      	cmp	r3, #0
 800a5fa:	f040 8089 	bne.w	800a710 <_dtoa_r+0x8d8>
 800a5fe:	9b03      	ldr	r3, [sp, #12]
 800a600:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 800a604:	0d1b      	lsrs	r3, r3, #20
 800a606:	051b      	lsls	r3, r3, #20
 800a608:	b12b      	cbz	r3, 800a616 <_dtoa_r+0x7de>
 800a60a:	9b08      	ldr	r3, [sp, #32]
 800a60c:	3301      	adds	r3, #1
 800a60e:	9308      	str	r3, [sp, #32]
 800a610:	f108 0801 	add.w	r8, r8, #1
 800a614:	2301      	movs	r3, #1
 800a616:	930a      	str	r3, [sp, #40]	@ 0x28
 800a618:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 800a61a:	2b00      	cmp	r3, #0
 800a61c:	f000 81b0 	beq.w	800a980 <_dtoa_r+0xb48>
 800a620:	6923      	ldr	r3, [r4, #16]
 800a622:	eb04 0383 	add.w	r3, r4, r3, lsl #2
 800a626:	6918      	ldr	r0, [r3, #16]
 800a628:	f000 fbbc 	bl	800ada4 <__hi0bits>
 800a62c:	f1c0 0020 	rsb	r0, r0, #32
 800a630:	9b08      	ldr	r3, [sp, #32]
 800a632:	4418      	add	r0, r3
 800a634:	f010 001f 	ands.w	r0, r0, #31
 800a638:	d077      	beq.n	800a72a <_dtoa_r+0x8f2>
 800a63a:	f1c0 0320 	rsb	r3, r0, #32
 800a63e:	2b04      	cmp	r3, #4
 800a640:	dd6b      	ble.n	800a71a <_dtoa_r+0x8e2>
 800a642:	9b08      	ldr	r3, [sp, #32]
 800a644:	f1c0 001c 	rsb	r0, r0, #28
 800a648:	4403      	add	r3, r0
 800a64a:	4480      	add	r8, r0
 800a64c:	4406      	add	r6, r0
 800a64e:	9308      	str	r3, [sp, #32]
 800a650:	f1b8 0f00 	cmp.w	r8, #0
 800a654:	dd05      	ble.n	800a662 <_dtoa_r+0x82a>
 800a656:	4649      	mov	r1, r9
 800a658:	4642      	mov	r2, r8
 800a65a:	4658      	mov	r0, fp
 800a65c:	f000 fd08 	bl	800b070 <__lshift>
 800a660:	4681      	mov	r9, r0
 800a662:	9b08      	ldr	r3, [sp, #32]
 800a664:	2b00      	cmp	r3, #0
 800a666:	dd05      	ble.n	800a674 <_dtoa_r+0x83c>
 800a668:	4621      	mov	r1, r4
 800a66a:	461a      	mov	r2, r3
 800a66c:	4658      	mov	r0, fp
 800a66e:	f000 fcff 	bl	800b070 <__lshift>
 800a672:	4604      	mov	r4, r0
 800a674:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 800a676:	2b00      	cmp	r3, #0
 800a678:	d059      	beq.n	800a72e <_dtoa_r+0x8f6>
 800a67a:	4621      	mov	r1, r4
 800a67c:	4648      	mov	r0, r9
 800a67e:	f000 fd63 	bl	800b148 <__mcmp>
 800a682:	2800      	cmp	r0, #0
 800a684:	da53      	bge.n	800a72e <_dtoa_r+0x8f6>
 800a686:	1e7b      	subs	r3, r7, #1
 800a688:	9304      	str	r3, [sp, #16]
 800a68a:	4649      	mov	r1, r9
 800a68c:	2300      	movs	r3, #0
 800a68e:	220a      	movs	r2, #10
 800a690:	4658      	mov	r0, fp
 800a692:	f000 faf7 	bl	800ac84 <__multadd>
 800a696:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 800a698:	4681      	mov	r9, r0
 800a69a:	2b00      	cmp	r3, #0
 800a69c:	f000 8172 	beq.w	800a984 <_dtoa_r+0xb4c>
 800a6a0:	2300      	movs	r3, #0
 800a6a2:	4629      	mov	r1, r5
 800a6a4:	220a      	movs	r2, #10
 800a6a6:	4658      	mov	r0, fp
 800a6a8:	f000 faec 	bl	800ac84 <__multadd>
 800a6ac:	9b00      	ldr	r3, [sp, #0]
 800a6ae:	2b00      	cmp	r3, #0
 800a6b0:	4605      	mov	r5, r0
 800a6b2:	dc67      	bgt.n	800a784 <_dtoa_r+0x94c>
 800a6b4:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800a6b6:	2b02      	cmp	r3, #2
 800a6b8:	dc41      	bgt.n	800a73e <_dtoa_r+0x906>
 800a6ba:	e063      	b.n	800a784 <_dtoa_r+0x94c>
 800a6bc:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 800a6be:	f1c3 0336 	rsb	r3, r3, #54	@ 0x36
 800a6c2:	e746      	b.n	800a552 <_dtoa_r+0x71a>
 800a6c4:	9b07      	ldr	r3, [sp, #28]
 800a6c6:	1e5c      	subs	r4, r3, #1
 800a6c8:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 800a6ca:	42a3      	cmp	r3, r4
 800a6cc:	bfbf      	itttt	lt
 800a6ce:	9b0a      	ldrlt	r3, [sp, #40]	@ 0x28
 800a6d0:	9a0f      	ldrlt	r2, [sp, #60]	@ 0x3c
 800a6d2:	940a      	strlt	r4, [sp, #40]	@ 0x28
 800a6d4:	1ae3      	sublt	r3, r4, r3
 800a6d6:	bfb4      	ite	lt
 800a6d8:	18d2      	addlt	r2, r2, r3
 800a6da:	1b1c      	subge	r4, r3, r4
 800a6dc:	9b07      	ldr	r3, [sp, #28]
 800a6de:	bfbc      	itt	lt
 800a6e0:	920f      	strlt	r2, [sp, #60]	@ 0x3c
 800a6e2:	2400      	movlt	r4, #0
 800a6e4:	2b00      	cmp	r3, #0
 800a6e6:	bfb5      	itete	lt
 800a6e8:	eba8 0603 	sublt.w	r6, r8, r3
 800a6ec:	9b07      	ldrge	r3, [sp, #28]
 800a6ee:	2300      	movlt	r3, #0
 800a6f0:	4646      	movge	r6, r8
 800a6f2:	e730      	b.n	800a556 <_dtoa_r+0x71e>
 800a6f4:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 800a6f6:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 800a6f8:	4646      	mov	r6, r8
 800a6fa:	e735      	b.n	800a568 <_dtoa_r+0x730>
 800a6fc:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 800a6fe:	e75c      	b.n	800a5ba <_dtoa_r+0x782>
 800a700:	2300      	movs	r3, #0
 800a702:	e788      	b.n	800a616 <_dtoa_r+0x7de>
 800a704:	3fe00000 	.word	0x3fe00000
 800a708:	40240000 	.word	0x40240000
 800a70c:	40140000 	.word	0x40140000
 800a710:	9b02      	ldr	r3, [sp, #8]
 800a712:	e780      	b.n	800a616 <_dtoa_r+0x7de>
 800a714:	2300      	movs	r3, #0
 800a716:	930a      	str	r3, [sp, #40]	@ 0x28
 800a718:	e782      	b.n	800a620 <_dtoa_r+0x7e8>
 800a71a:	d099      	beq.n	800a650 <_dtoa_r+0x818>
 800a71c:	9a08      	ldr	r2, [sp, #32]
 800a71e:	331c      	adds	r3, #28
 800a720:	441a      	add	r2, r3
 800a722:	4498      	add	r8, r3
 800a724:	441e      	add	r6, r3
 800a726:	9208      	str	r2, [sp, #32]
 800a728:	e792      	b.n	800a650 <_dtoa_r+0x818>
 800a72a:	4603      	mov	r3, r0
 800a72c:	e7f6      	b.n	800a71c <_dtoa_r+0x8e4>
 800a72e:	9b07      	ldr	r3, [sp, #28]
 800a730:	9704      	str	r7, [sp, #16]
 800a732:	2b00      	cmp	r3, #0
 800a734:	dc20      	bgt.n	800a778 <_dtoa_r+0x940>
 800a736:	9300      	str	r3, [sp, #0]
 800a738:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800a73a:	2b02      	cmp	r3, #2
 800a73c:	dd1e      	ble.n	800a77c <_dtoa_r+0x944>
 800a73e:	9b00      	ldr	r3, [sp, #0]
 800a740:	2b00      	cmp	r3, #0
 800a742:	f47f aec0 	bne.w	800a4c6 <_dtoa_r+0x68e>
 800a746:	4621      	mov	r1, r4
 800a748:	2205      	movs	r2, #5
 800a74a:	4658      	mov	r0, fp
 800a74c:	f000 fa9a 	bl	800ac84 <__multadd>
 800a750:	4601      	mov	r1, r0
 800a752:	4604      	mov	r4, r0
 800a754:	4648      	mov	r0, r9
 800a756:	f000 fcf7 	bl	800b148 <__mcmp>
 800a75a:	2800      	cmp	r0, #0
 800a75c:	f77f aeb3 	ble.w	800a4c6 <_dtoa_r+0x68e>
 800a760:	4656      	mov	r6, sl
 800a762:	2331      	movs	r3, #49	@ 0x31
 800a764:	f806 3b01 	strb.w	r3, [r6], #1
 800a768:	9b04      	ldr	r3, [sp, #16]
 800a76a:	3301      	adds	r3, #1
 800a76c:	9304      	str	r3, [sp, #16]
 800a76e:	e6ae      	b.n	800a4ce <_dtoa_r+0x696>
 800a770:	9c07      	ldr	r4, [sp, #28]
 800a772:	9704      	str	r7, [sp, #16]
 800a774:	4625      	mov	r5, r4
 800a776:	e7f3      	b.n	800a760 <_dtoa_r+0x928>
 800a778:	9b07      	ldr	r3, [sp, #28]
 800a77a:	9300      	str	r3, [sp, #0]
 800a77c:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 800a77e:	2b00      	cmp	r3, #0
 800a780:	f000 8104 	beq.w	800a98c <_dtoa_r+0xb54>
 800a784:	2e00      	cmp	r6, #0
 800a786:	dd05      	ble.n	800a794 <_dtoa_r+0x95c>
 800a788:	4629      	mov	r1, r5
 800a78a:	4632      	mov	r2, r6
 800a78c:	4658      	mov	r0, fp
 800a78e:	f000 fc6f 	bl	800b070 <__lshift>
 800a792:	4605      	mov	r5, r0
 800a794:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 800a796:	2b00      	cmp	r3, #0
 800a798:	d05a      	beq.n	800a850 <_dtoa_r+0xa18>
 800a79a:	6869      	ldr	r1, [r5, #4]
 800a79c:	4658      	mov	r0, fp
 800a79e:	f000 fa0f 	bl	800abc0 <_Balloc>
 800a7a2:	4606      	mov	r6, r0
 800a7a4:	b928      	cbnz	r0, 800a7b2 <_dtoa_r+0x97a>
 800a7a6:	4b84      	ldr	r3, [pc, #528]	@ (800a9b8 <_dtoa_r+0xb80>)
 800a7a8:	4602      	mov	r2, r0
 800a7aa:	f240 21ef 	movw	r1, #751	@ 0x2ef
 800a7ae:	f7ff bb5a 	b.w	8009e66 <_dtoa_r+0x2e>
 800a7b2:	692a      	ldr	r2, [r5, #16]
 800a7b4:	3202      	adds	r2, #2
 800a7b6:	0092      	lsls	r2, r2, #2
 800a7b8:	f105 010c 	add.w	r1, r5, #12
 800a7bc:	300c      	adds	r0, #12
 800a7be:	f7ff fa9c 	bl	8009cfa <memcpy>
 800a7c2:	2201      	movs	r2, #1
 800a7c4:	4631      	mov	r1, r6
 800a7c6:	4658      	mov	r0, fp
 800a7c8:	f000 fc52 	bl	800b070 <__lshift>
 800a7cc:	f10a 0301 	add.w	r3, sl, #1
 800a7d0:	9307      	str	r3, [sp, #28]
 800a7d2:	9b00      	ldr	r3, [sp, #0]
 800a7d4:	4453      	add	r3, sl
 800a7d6:	930b      	str	r3, [sp, #44]	@ 0x2c
 800a7d8:	9b02      	ldr	r3, [sp, #8]
 800a7da:	f003 0301 	and.w	r3, r3, #1
 800a7de:	462f      	mov	r7, r5
 800a7e0:	930a      	str	r3, [sp, #40]	@ 0x28
 800a7e2:	4605      	mov	r5, r0
 800a7e4:	9b07      	ldr	r3, [sp, #28]
 800a7e6:	4621      	mov	r1, r4
 800a7e8:	3b01      	subs	r3, #1
 800a7ea:	4648      	mov	r0, r9
 800a7ec:	9300      	str	r3, [sp, #0]
 800a7ee:	f7ff fa99 	bl	8009d24 <quorem>
 800a7f2:	4639      	mov	r1, r7
 800a7f4:	9002      	str	r0, [sp, #8]
 800a7f6:	f100 0830 	add.w	r8, r0, #48	@ 0x30
 800a7fa:	4648      	mov	r0, r9
 800a7fc:	f000 fca4 	bl	800b148 <__mcmp>
 800a800:	462a      	mov	r2, r5
 800a802:	9008      	str	r0, [sp, #32]
 800a804:	4621      	mov	r1, r4
 800a806:	4658      	mov	r0, fp
 800a808:	f000 fcba 	bl	800b180 <__mdiff>
 800a80c:	68c2      	ldr	r2, [r0, #12]
 800a80e:	4606      	mov	r6, r0
 800a810:	bb02      	cbnz	r2, 800a854 <_dtoa_r+0xa1c>
 800a812:	4601      	mov	r1, r0
 800a814:	4648      	mov	r0, r9
 800a816:	f000 fc97 	bl	800b148 <__mcmp>
 800a81a:	4602      	mov	r2, r0
 800a81c:	4631      	mov	r1, r6
 800a81e:	4658      	mov	r0, fp
 800a820:	920e      	str	r2, [sp, #56]	@ 0x38
 800a822:	f000 fa0d 	bl	800ac40 <_Bfree>
 800a826:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800a828:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 800a82a:	9e07      	ldr	r6, [sp, #28]
 800a82c:	ea43 0102 	orr.w	r1, r3, r2
 800a830:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 800a832:	4319      	orrs	r1, r3
 800a834:	d110      	bne.n	800a858 <_dtoa_r+0xa20>
 800a836:	f1b8 0f39 	cmp.w	r8, #57	@ 0x39
 800a83a:	d029      	beq.n	800a890 <_dtoa_r+0xa58>
 800a83c:	9b08      	ldr	r3, [sp, #32]
 800a83e:	2b00      	cmp	r3, #0
 800a840:	dd02      	ble.n	800a848 <_dtoa_r+0xa10>
 800a842:	9b02      	ldr	r3, [sp, #8]
 800a844:	f103 0831 	add.w	r8, r3, #49	@ 0x31
 800a848:	9b00      	ldr	r3, [sp, #0]
 800a84a:	f883 8000 	strb.w	r8, [r3]
 800a84e:	e63f      	b.n	800a4d0 <_dtoa_r+0x698>
 800a850:	4628      	mov	r0, r5
 800a852:	e7bb      	b.n	800a7cc <_dtoa_r+0x994>
 800a854:	2201      	movs	r2, #1
 800a856:	e7e1      	b.n	800a81c <_dtoa_r+0x9e4>
 800a858:	9b08      	ldr	r3, [sp, #32]
 800a85a:	2b00      	cmp	r3, #0
 800a85c:	db04      	blt.n	800a868 <_dtoa_r+0xa30>
 800a85e:	9909      	ldr	r1, [sp, #36]	@ 0x24
 800a860:	430b      	orrs	r3, r1
 800a862:	990a      	ldr	r1, [sp, #40]	@ 0x28
 800a864:	430b      	orrs	r3, r1
 800a866:	d120      	bne.n	800a8aa <_dtoa_r+0xa72>
 800a868:	2a00      	cmp	r2, #0
 800a86a:	dded      	ble.n	800a848 <_dtoa_r+0xa10>
 800a86c:	4649      	mov	r1, r9
 800a86e:	2201      	movs	r2, #1
 800a870:	4658      	mov	r0, fp
 800a872:	f000 fbfd 	bl	800b070 <__lshift>
 800a876:	4621      	mov	r1, r4
 800a878:	4681      	mov	r9, r0
 800a87a:	f000 fc65 	bl	800b148 <__mcmp>
 800a87e:	2800      	cmp	r0, #0
 800a880:	dc03      	bgt.n	800a88a <_dtoa_r+0xa52>
 800a882:	d1e1      	bne.n	800a848 <_dtoa_r+0xa10>
 800a884:	f018 0f01 	tst.w	r8, #1
 800a888:	d0de      	beq.n	800a848 <_dtoa_r+0xa10>
 800a88a:	f1b8 0f39 	cmp.w	r8, #57	@ 0x39
 800a88e:	d1d8      	bne.n	800a842 <_dtoa_r+0xa0a>
 800a890:	9a00      	ldr	r2, [sp, #0]
 800a892:	2339      	movs	r3, #57	@ 0x39
 800a894:	7013      	strb	r3, [r2, #0]
 800a896:	4633      	mov	r3, r6
 800a898:	461e      	mov	r6, r3
 800a89a:	3b01      	subs	r3, #1
 800a89c:	f816 2c01 	ldrb.w	r2, [r6, #-1]
 800a8a0:	2a39      	cmp	r2, #57	@ 0x39
 800a8a2:	d052      	beq.n	800a94a <_dtoa_r+0xb12>
 800a8a4:	3201      	adds	r2, #1
 800a8a6:	701a      	strb	r2, [r3, #0]
 800a8a8:	e612      	b.n	800a4d0 <_dtoa_r+0x698>
 800a8aa:	2a00      	cmp	r2, #0
 800a8ac:	dd07      	ble.n	800a8be <_dtoa_r+0xa86>
 800a8ae:	f1b8 0f39 	cmp.w	r8, #57	@ 0x39
 800a8b2:	d0ed      	beq.n	800a890 <_dtoa_r+0xa58>
 800a8b4:	9a00      	ldr	r2, [sp, #0]
 800a8b6:	f108 0301 	add.w	r3, r8, #1
 800a8ba:	7013      	strb	r3, [r2, #0]
 800a8bc:	e608      	b.n	800a4d0 <_dtoa_r+0x698>
 800a8be:	9b07      	ldr	r3, [sp, #28]
 800a8c0:	9a07      	ldr	r2, [sp, #28]
 800a8c2:	f803 8c01 	strb.w	r8, [r3, #-1]
 800a8c6:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 800a8c8:	4293      	cmp	r3, r2
 800a8ca:	d028      	beq.n	800a91e <_dtoa_r+0xae6>
 800a8cc:	4649      	mov	r1, r9
 800a8ce:	2300      	movs	r3, #0
 800a8d0:	220a      	movs	r2, #10
 800a8d2:	4658      	mov	r0, fp
 800a8d4:	f000 f9d6 	bl	800ac84 <__multadd>
 800a8d8:	42af      	cmp	r7, r5
 800a8da:	4681      	mov	r9, r0
 800a8dc:	f04f 0300 	mov.w	r3, #0
 800a8e0:	f04f 020a 	mov.w	r2, #10
 800a8e4:	4639      	mov	r1, r7
 800a8e6:	4658      	mov	r0, fp
 800a8e8:	d107      	bne.n	800a8fa <_dtoa_r+0xac2>
 800a8ea:	f000 f9cb 	bl	800ac84 <__multadd>
 800a8ee:	4607      	mov	r7, r0
 800a8f0:	4605      	mov	r5, r0
 800a8f2:	9b07      	ldr	r3, [sp, #28]
 800a8f4:	3301      	adds	r3, #1
 800a8f6:	9307      	str	r3, [sp, #28]
 800a8f8:	e774      	b.n	800a7e4 <_dtoa_r+0x9ac>
 800a8fa:	f000 f9c3 	bl	800ac84 <__multadd>
 800a8fe:	4629      	mov	r1, r5
 800a900:	4607      	mov	r7, r0
 800a902:	2300      	movs	r3, #0
 800a904:	220a      	movs	r2, #10
 800a906:	4658      	mov	r0, fp
 800a908:	f000 f9bc 	bl	800ac84 <__multadd>
 800a90c:	4605      	mov	r5, r0
 800a90e:	e7f0      	b.n	800a8f2 <_dtoa_r+0xaba>
 800a910:	9b00      	ldr	r3, [sp, #0]
 800a912:	2b00      	cmp	r3, #0
 800a914:	bfcc      	ite	gt
 800a916:	461e      	movgt	r6, r3
 800a918:	2601      	movle	r6, #1
 800a91a:	4456      	add	r6, sl
 800a91c:	2700      	movs	r7, #0
 800a91e:	4649      	mov	r1, r9
 800a920:	2201      	movs	r2, #1
 800a922:	4658      	mov	r0, fp
 800a924:	f000 fba4 	bl	800b070 <__lshift>
 800a928:	4621      	mov	r1, r4
 800a92a:	4681      	mov	r9, r0
 800a92c:	f000 fc0c 	bl	800b148 <__mcmp>
 800a930:	2800      	cmp	r0, #0
 800a932:	dcb0      	bgt.n	800a896 <_dtoa_r+0xa5e>
 800a934:	d102      	bne.n	800a93c <_dtoa_r+0xb04>
 800a936:	f018 0f01 	tst.w	r8, #1
 800a93a:	d1ac      	bne.n	800a896 <_dtoa_r+0xa5e>
 800a93c:	4633      	mov	r3, r6
 800a93e:	461e      	mov	r6, r3
 800a940:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 800a944:	2a30      	cmp	r2, #48	@ 0x30
 800a946:	d0fa      	beq.n	800a93e <_dtoa_r+0xb06>
 800a948:	e5c2      	b.n	800a4d0 <_dtoa_r+0x698>
 800a94a:	459a      	cmp	sl, r3
 800a94c:	d1a4      	bne.n	800a898 <_dtoa_r+0xa60>
 800a94e:	9b04      	ldr	r3, [sp, #16]
 800a950:	3301      	adds	r3, #1
 800a952:	9304      	str	r3, [sp, #16]
 800a954:	2331      	movs	r3, #49	@ 0x31
 800a956:	f88a 3000 	strb.w	r3, [sl]
 800a95a:	e5b9      	b.n	800a4d0 <_dtoa_r+0x698>
 800a95c:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 800a95e:	f8df a05c 	ldr.w	sl, [pc, #92]	@ 800a9bc <_dtoa_r+0xb84>
 800a962:	b11b      	cbz	r3, 800a96c <_dtoa_r+0xb34>
 800a964:	f10a 0308 	add.w	r3, sl, #8
 800a968:	9a23      	ldr	r2, [sp, #140]	@ 0x8c
 800a96a:	6013      	str	r3, [r2, #0]
 800a96c:	4650      	mov	r0, sl
 800a96e:	b019      	add	sp, #100	@ 0x64
 800a970:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800a974:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800a976:	2b01      	cmp	r3, #1
 800a978:	f77f ae37 	ble.w	800a5ea <_dtoa_r+0x7b2>
 800a97c:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 800a97e:	930a      	str	r3, [sp, #40]	@ 0x28
 800a980:	2001      	movs	r0, #1
 800a982:	e655      	b.n	800a630 <_dtoa_r+0x7f8>
 800a984:	9b00      	ldr	r3, [sp, #0]
 800a986:	2b00      	cmp	r3, #0
 800a988:	f77f aed6 	ble.w	800a738 <_dtoa_r+0x900>
 800a98c:	4656      	mov	r6, sl
 800a98e:	4621      	mov	r1, r4
 800a990:	4648      	mov	r0, r9
 800a992:	f7ff f9c7 	bl	8009d24 <quorem>
 800a996:	f100 0830 	add.w	r8, r0, #48	@ 0x30
 800a99a:	f806 8b01 	strb.w	r8, [r6], #1
 800a99e:	9b00      	ldr	r3, [sp, #0]
 800a9a0:	eba6 020a 	sub.w	r2, r6, sl
 800a9a4:	4293      	cmp	r3, r2
 800a9a6:	ddb3      	ble.n	800a910 <_dtoa_r+0xad8>
 800a9a8:	4649      	mov	r1, r9
 800a9aa:	2300      	movs	r3, #0
 800a9ac:	220a      	movs	r2, #10
 800a9ae:	4658      	mov	r0, fp
 800a9b0:	f000 f968 	bl	800ac84 <__multadd>
 800a9b4:	4681      	mov	r9, r0
 800a9b6:	e7ea      	b.n	800a98e <_dtoa_r+0xb56>
 800a9b8:	0800d605 	.word	0x0800d605
 800a9bc:	0800d589 	.word	0x0800d589

0800a9c0 <_free_r>:
 800a9c0:	b538      	push	{r3, r4, r5, lr}
 800a9c2:	4605      	mov	r5, r0
 800a9c4:	2900      	cmp	r1, #0
 800a9c6:	d041      	beq.n	800aa4c <_free_r+0x8c>
 800a9c8:	f851 3c04 	ldr.w	r3, [r1, #-4]
 800a9cc:	1f0c      	subs	r4, r1, #4
 800a9ce:	2b00      	cmp	r3, #0
 800a9d0:	bfb8      	it	lt
 800a9d2:	18e4      	addlt	r4, r4, r3
 800a9d4:	f000 f8e8 	bl	800aba8 <__malloc_lock>
 800a9d8:	4a1d      	ldr	r2, [pc, #116]	@ (800aa50 <_free_r+0x90>)
 800a9da:	6813      	ldr	r3, [r2, #0]
 800a9dc:	b933      	cbnz	r3, 800a9ec <_free_r+0x2c>
 800a9de:	6063      	str	r3, [r4, #4]
 800a9e0:	6014      	str	r4, [r2, #0]
 800a9e2:	4628      	mov	r0, r5
 800a9e4:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800a9e8:	f000 b8e4 	b.w	800abb4 <__malloc_unlock>
 800a9ec:	42a3      	cmp	r3, r4
 800a9ee:	d908      	bls.n	800aa02 <_free_r+0x42>
 800a9f0:	6820      	ldr	r0, [r4, #0]
 800a9f2:	1821      	adds	r1, r4, r0
 800a9f4:	428b      	cmp	r3, r1
 800a9f6:	bf01      	itttt	eq
 800a9f8:	6819      	ldreq	r1, [r3, #0]
 800a9fa:	685b      	ldreq	r3, [r3, #4]
 800a9fc:	1809      	addeq	r1, r1, r0
 800a9fe:	6021      	streq	r1, [r4, #0]
 800aa00:	e7ed      	b.n	800a9de <_free_r+0x1e>
 800aa02:	461a      	mov	r2, r3
 800aa04:	685b      	ldr	r3, [r3, #4]
 800aa06:	b10b      	cbz	r3, 800aa0c <_free_r+0x4c>
 800aa08:	42a3      	cmp	r3, r4
 800aa0a:	d9fa      	bls.n	800aa02 <_free_r+0x42>
 800aa0c:	6811      	ldr	r1, [r2, #0]
 800aa0e:	1850      	adds	r0, r2, r1
 800aa10:	42a0      	cmp	r0, r4
 800aa12:	d10b      	bne.n	800aa2c <_free_r+0x6c>
 800aa14:	6820      	ldr	r0, [r4, #0]
 800aa16:	4401      	add	r1, r0
 800aa18:	1850      	adds	r0, r2, r1
 800aa1a:	4283      	cmp	r3, r0
 800aa1c:	6011      	str	r1, [r2, #0]
 800aa1e:	d1e0      	bne.n	800a9e2 <_free_r+0x22>
 800aa20:	6818      	ldr	r0, [r3, #0]
 800aa22:	685b      	ldr	r3, [r3, #4]
 800aa24:	6053      	str	r3, [r2, #4]
 800aa26:	4408      	add	r0, r1
 800aa28:	6010      	str	r0, [r2, #0]
 800aa2a:	e7da      	b.n	800a9e2 <_free_r+0x22>
 800aa2c:	d902      	bls.n	800aa34 <_free_r+0x74>
 800aa2e:	230c      	movs	r3, #12
 800aa30:	602b      	str	r3, [r5, #0]
 800aa32:	e7d6      	b.n	800a9e2 <_free_r+0x22>
 800aa34:	6820      	ldr	r0, [r4, #0]
 800aa36:	1821      	adds	r1, r4, r0
 800aa38:	428b      	cmp	r3, r1
 800aa3a:	bf04      	itt	eq
 800aa3c:	6819      	ldreq	r1, [r3, #0]
 800aa3e:	685b      	ldreq	r3, [r3, #4]
 800aa40:	6063      	str	r3, [r4, #4]
 800aa42:	bf04      	itt	eq
 800aa44:	1809      	addeq	r1, r1, r0
 800aa46:	6021      	streq	r1, [r4, #0]
 800aa48:	6054      	str	r4, [r2, #4]
 800aa4a:	e7ca      	b.n	800a9e2 <_free_r+0x22>
 800aa4c:	bd38      	pop	{r3, r4, r5, pc}
 800aa4e:	bf00      	nop
 800aa50:	20000844 	.word	0x20000844

0800aa54 <malloc>:
 800aa54:	4b02      	ldr	r3, [pc, #8]	@ (800aa60 <malloc+0xc>)
 800aa56:	4601      	mov	r1, r0
 800aa58:	6818      	ldr	r0, [r3, #0]
 800aa5a:	f000 b825 	b.w	800aaa8 <_malloc_r>
 800aa5e:	bf00      	nop
 800aa60:	20000040 	.word	0x20000040

0800aa64 <sbrk_aligned>:
 800aa64:	b570      	push	{r4, r5, r6, lr}
 800aa66:	4e0f      	ldr	r6, [pc, #60]	@ (800aaa4 <sbrk_aligned+0x40>)
 800aa68:	460c      	mov	r4, r1
 800aa6a:	6831      	ldr	r1, [r6, #0]
 800aa6c:	4605      	mov	r5, r0
 800aa6e:	b911      	cbnz	r1, 800aa76 <sbrk_aligned+0x12>
 800aa70:	f001 ffd2 	bl	800ca18 <_sbrk_r>
 800aa74:	6030      	str	r0, [r6, #0]
 800aa76:	4621      	mov	r1, r4
 800aa78:	4628      	mov	r0, r5
 800aa7a:	f001 ffcd 	bl	800ca18 <_sbrk_r>
 800aa7e:	1c43      	adds	r3, r0, #1
 800aa80:	d103      	bne.n	800aa8a <sbrk_aligned+0x26>
 800aa82:	f04f 34ff 	mov.w	r4, #4294967295
 800aa86:	4620      	mov	r0, r4
 800aa88:	bd70      	pop	{r4, r5, r6, pc}
 800aa8a:	1cc4      	adds	r4, r0, #3
 800aa8c:	f024 0403 	bic.w	r4, r4, #3
 800aa90:	42a0      	cmp	r0, r4
 800aa92:	d0f8      	beq.n	800aa86 <sbrk_aligned+0x22>
 800aa94:	1a21      	subs	r1, r4, r0
 800aa96:	4628      	mov	r0, r5
 800aa98:	f001 ffbe 	bl	800ca18 <_sbrk_r>
 800aa9c:	3001      	adds	r0, #1
 800aa9e:	d1f2      	bne.n	800aa86 <sbrk_aligned+0x22>
 800aaa0:	e7ef      	b.n	800aa82 <sbrk_aligned+0x1e>
 800aaa2:	bf00      	nop
 800aaa4:	20000840 	.word	0x20000840

0800aaa8 <_malloc_r>:
 800aaa8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800aaac:	1ccd      	adds	r5, r1, #3
 800aaae:	f025 0503 	bic.w	r5, r5, #3
 800aab2:	3508      	adds	r5, #8
 800aab4:	2d0c      	cmp	r5, #12
 800aab6:	bf38      	it	cc
 800aab8:	250c      	movcc	r5, #12
 800aaba:	2d00      	cmp	r5, #0
 800aabc:	4606      	mov	r6, r0
 800aabe:	db01      	blt.n	800aac4 <_malloc_r+0x1c>
 800aac0:	42a9      	cmp	r1, r5
 800aac2:	d904      	bls.n	800aace <_malloc_r+0x26>
 800aac4:	230c      	movs	r3, #12
 800aac6:	6033      	str	r3, [r6, #0]
 800aac8:	2000      	movs	r0, #0
 800aaca:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800aace:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 800aba4 <_malloc_r+0xfc>
 800aad2:	f000 f869 	bl	800aba8 <__malloc_lock>
 800aad6:	f8d8 3000 	ldr.w	r3, [r8]
 800aada:	461c      	mov	r4, r3
 800aadc:	bb44      	cbnz	r4, 800ab30 <_malloc_r+0x88>
 800aade:	4629      	mov	r1, r5
 800aae0:	4630      	mov	r0, r6
 800aae2:	f7ff ffbf 	bl	800aa64 <sbrk_aligned>
 800aae6:	1c43      	adds	r3, r0, #1
 800aae8:	4604      	mov	r4, r0
 800aaea:	d158      	bne.n	800ab9e <_malloc_r+0xf6>
 800aaec:	f8d8 4000 	ldr.w	r4, [r8]
 800aaf0:	4627      	mov	r7, r4
 800aaf2:	2f00      	cmp	r7, #0
 800aaf4:	d143      	bne.n	800ab7e <_malloc_r+0xd6>
 800aaf6:	2c00      	cmp	r4, #0
 800aaf8:	d04b      	beq.n	800ab92 <_malloc_r+0xea>
 800aafa:	6823      	ldr	r3, [r4, #0]
 800aafc:	4639      	mov	r1, r7
 800aafe:	4630      	mov	r0, r6
 800ab00:	eb04 0903 	add.w	r9, r4, r3
 800ab04:	f001 ff88 	bl	800ca18 <_sbrk_r>
 800ab08:	4581      	cmp	r9, r0
 800ab0a:	d142      	bne.n	800ab92 <_malloc_r+0xea>
 800ab0c:	6821      	ldr	r1, [r4, #0]
 800ab0e:	1a6d      	subs	r5, r5, r1
 800ab10:	4629      	mov	r1, r5
 800ab12:	4630      	mov	r0, r6
 800ab14:	f7ff ffa6 	bl	800aa64 <sbrk_aligned>
 800ab18:	3001      	adds	r0, #1
 800ab1a:	d03a      	beq.n	800ab92 <_malloc_r+0xea>
 800ab1c:	6823      	ldr	r3, [r4, #0]
 800ab1e:	442b      	add	r3, r5
 800ab20:	6023      	str	r3, [r4, #0]
 800ab22:	f8d8 3000 	ldr.w	r3, [r8]
 800ab26:	685a      	ldr	r2, [r3, #4]
 800ab28:	bb62      	cbnz	r2, 800ab84 <_malloc_r+0xdc>
 800ab2a:	f8c8 7000 	str.w	r7, [r8]
 800ab2e:	e00f      	b.n	800ab50 <_malloc_r+0xa8>
 800ab30:	6822      	ldr	r2, [r4, #0]
 800ab32:	1b52      	subs	r2, r2, r5
 800ab34:	d420      	bmi.n	800ab78 <_malloc_r+0xd0>
 800ab36:	2a0b      	cmp	r2, #11
 800ab38:	d917      	bls.n	800ab6a <_malloc_r+0xc2>
 800ab3a:	1961      	adds	r1, r4, r5
 800ab3c:	42a3      	cmp	r3, r4
 800ab3e:	6025      	str	r5, [r4, #0]
 800ab40:	bf18      	it	ne
 800ab42:	6059      	strne	r1, [r3, #4]
 800ab44:	6863      	ldr	r3, [r4, #4]
 800ab46:	bf08      	it	eq
 800ab48:	f8c8 1000 	streq.w	r1, [r8]
 800ab4c:	5162      	str	r2, [r4, r5]
 800ab4e:	604b      	str	r3, [r1, #4]
 800ab50:	4630      	mov	r0, r6
 800ab52:	f000 f82f 	bl	800abb4 <__malloc_unlock>
 800ab56:	f104 000b 	add.w	r0, r4, #11
 800ab5a:	1d23      	adds	r3, r4, #4
 800ab5c:	f020 0007 	bic.w	r0, r0, #7
 800ab60:	1ac2      	subs	r2, r0, r3
 800ab62:	bf1c      	itt	ne
 800ab64:	1a1b      	subne	r3, r3, r0
 800ab66:	50a3      	strne	r3, [r4, r2]
 800ab68:	e7af      	b.n	800aaca <_malloc_r+0x22>
 800ab6a:	6862      	ldr	r2, [r4, #4]
 800ab6c:	42a3      	cmp	r3, r4
 800ab6e:	bf0c      	ite	eq
 800ab70:	f8c8 2000 	streq.w	r2, [r8]
 800ab74:	605a      	strne	r2, [r3, #4]
 800ab76:	e7eb      	b.n	800ab50 <_malloc_r+0xa8>
 800ab78:	4623      	mov	r3, r4
 800ab7a:	6864      	ldr	r4, [r4, #4]
 800ab7c:	e7ae      	b.n	800aadc <_malloc_r+0x34>
 800ab7e:	463c      	mov	r4, r7
 800ab80:	687f      	ldr	r7, [r7, #4]
 800ab82:	e7b6      	b.n	800aaf2 <_malloc_r+0x4a>
 800ab84:	461a      	mov	r2, r3
 800ab86:	685b      	ldr	r3, [r3, #4]
 800ab88:	42a3      	cmp	r3, r4
 800ab8a:	d1fb      	bne.n	800ab84 <_malloc_r+0xdc>
 800ab8c:	2300      	movs	r3, #0
 800ab8e:	6053      	str	r3, [r2, #4]
 800ab90:	e7de      	b.n	800ab50 <_malloc_r+0xa8>
 800ab92:	230c      	movs	r3, #12
 800ab94:	6033      	str	r3, [r6, #0]
 800ab96:	4630      	mov	r0, r6
 800ab98:	f000 f80c 	bl	800abb4 <__malloc_unlock>
 800ab9c:	e794      	b.n	800aac8 <_malloc_r+0x20>
 800ab9e:	6005      	str	r5, [r0, #0]
 800aba0:	e7d6      	b.n	800ab50 <_malloc_r+0xa8>
 800aba2:	bf00      	nop
 800aba4:	20000844 	.word	0x20000844

0800aba8 <__malloc_lock>:
 800aba8:	4801      	ldr	r0, [pc, #4]	@ (800abb0 <__malloc_lock+0x8>)
 800abaa:	f7ff b8a4 	b.w	8009cf6 <__retarget_lock_acquire_recursive>
 800abae:	bf00      	nop
 800abb0:	2000083c 	.word	0x2000083c

0800abb4 <__malloc_unlock>:
 800abb4:	4801      	ldr	r0, [pc, #4]	@ (800abbc <__malloc_unlock+0x8>)
 800abb6:	f7ff b89f 	b.w	8009cf8 <__retarget_lock_release_recursive>
 800abba:	bf00      	nop
 800abbc:	2000083c 	.word	0x2000083c

0800abc0 <_Balloc>:
 800abc0:	b570      	push	{r4, r5, r6, lr}
 800abc2:	69c6      	ldr	r6, [r0, #28]
 800abc4:	4604      	mov	r4, r0
 800abc6:	460d      	mov	r5, r1
 800abc8:	b976      	cbnz	r6, 800abe8 <_Balloc+0x28>
 800abca:	2010      	movs	r0, #16
 800abcc:	f7ff ff42 	bl	800aa54 <malloc>
 800abd0:	4602      	mov	r2, r0
 800abd2:	61e0      	str	r0, [r4, #28]
 800abd4:	b920      	cbnz	r0, 800abe0 <_Balloc+0x20>
 800abd6:	4b18      	ldr	r3, [pc, #96]	@ (800ac38 <_Balloc+0x78>)
 800abd8:	4818      	ldr	r0, [pc, #96]	@ (800ac3c <_Balloc+0x7c>)
 800abda:	216b      	movs	r1, #107	@ 0x6b
 800abdc:	f001 ff34 	bl	800ca48 <__assert_func>
 800abe0:	e9c0 6601 	strd	r6, r6, [r0, #4]
 800abe4:	6006      	str	r6, [r0, #0]
 800abe6:	60c6      	str	r6, [r0, #12]
 800abe8:	69e6      	ldr	r6, [r4, #28]
 800abea:	68f3      	ldr	r3, [r6, #12]
 800abec:	b183      	cbz	r3, 800ac10 <_Balloc+0x50>
 800abee:	69e3      	ldr	r3, [r4, #28]
 800abf0:	68db      	ldr	r3, [r3, #12]
 800abf2:	f853 0025 	ldr.w	r0, [r3, r5, lsl #2]
 800abf6:	b9b8      	cbnz	r0, 800ac28 <_Balloc+0x68>
 800abf8:	2101      	movs	r1, #1
 800abfa:	fa01 f605 	lsl.w	r6, r1, r5
 800abfe:	1d72      	adds	r2, r6, #5
 800ac00:	0092      	lsls	r2, r2, #2
 800ac02:	4620      	mov	r0, r4
 800ac04:	f001 ff3e 	bl	800ca84 <_calloc_r>
 800ac08:	b160      	cbz	r0, 800ac24 <_Balloc+0x64>
 800ac0a:	e9c0 5601 	strd	r5, r6, [r0, #4]
 800ac0e:	e00e      	b.n	800ac2e <_Balloc+0x6e>
 800ac10:	2221      	movs	r2, #33	@ 0x21
 800ac12:	2104      	movs	r1, #4
 800ac14:	4620      	mov	r0, r4
 800ac16:	f001 ff35 	bl	800ca84 <_calloc_r>
 800ac1a:	69e3      	ldr	r3, [r4, #28]
 800ac1c:	60f0      	str	r0, [r6, #12]
 800ac1e:	68db      	ldr	r3, [r3, #12]
 800ac20:	2b00      	cmp	r3, #0
 800ac22:	d1e4      	bne.n	800abee <_Balloc+0x2e>
 800ac24:	2000      	movs	r0, #0
 800ac26:	bd70      	pop	{r4, r5, r6, pc}
 800ac28:	6802      	ldr	r2, [r0, #0]
 800ac2a:	f843 2025 	str.w	r2, [r3, r5, lsl #2]
 800ac2e:	2300      	movs	r3, #0
 800ac30:	e9c0 3303 	strd	r3, r3, [r0, #12]
 800ac34:	e7f7      	b.n	800ac26 <_Balloc+0x66>
 800ac36:	bf00      	nop
 800ac38:	0800d596 	.word	0x0800d596
 800ac3c:	0800d616 	.word	0x0800d616

0800ac40 <_Bfree>:
 800ac40:	b570      	push	{r4, r5, r6, lr}
 800ac42:	69c6      	ldr	r6, [r0, #28]
 800ac44:	4605      	mov	r5, r0
 800ac46:	460c      	mov	r4, r1
 800ac48:	b976      	cbnz	r6, 800ac68 <_Bfree+0x28>
 800ac4a:	2010      	movs	r0, #16
 800ac4c:	f7ff ff02 	bl	800aa54 <malloc>
 800ac50:	4602      	mov	r2, r0
 800ac52:	61e8      	str	r0, [r5, #28]
 800ac54:	b920      	cbnz	r0, 800ac60 <_Bfree+0x20>
 800ac56:	4b09      	ldr	r3, [pc, #36]	@ (800ac7c <_Bfree+0x3c>)
 800ac58:	4809      	ldr	r0, [pc, #36]	@ (800ac80 <_Bfree+0x40>)
 800ac5a:	218f      	movs	r1, #143	@ 0x8f
 800ac5c:	f001 fef4 	bl	800ca48 <__assert_func>
 800ac60:	e9c0 6601 	strd	r6, r6, [r0, #4]
 800ac64:	6006      	str	r6, [r0, #0]
 800ac66:	60c6      	str	r6, [r0, #12]
 800ac68:	b13c      	cbz	r4, 800ac7a <_Bfree+0x3a>
 800ac6a:	69eb      	ldr	r3, [r5, #28]
 800ac6c:	6862      	ldr	r2, [r4, #4]
 800ac6e:	68db      	ldr	r3, [r3, #12]
 800ac70:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 800ac74:	6021      	str	r1, [r4, #0]
 800ac76:	f843 4022 	str.w	r4, [r3, r2, lsl #2]
 800ac7a:	bd70      	pop	{r4, r5, r6, pc}
 800ac7c:	0800d596 	.word	0x0800d596
 800ac80:	0800d616 	.word	0x0800d616

0800ac84 <__multadd>:
 800ac84:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800ac88:	690d      	ldr	r5, [r1, #16]
 800ac8a:	4607      	mov	r7, r0
 800ac8c:	460c      	mov	r4, r1
 800ac8e:	461e      	mov	r6, r3
 800ac90:	f101 0c14 	add.w	ip, r1, #20
 800ac94:	2000      	movs	r0, #0
 800ac96:	f8dc 3000 	ldr.w	r3, [ip]
 800ac9a:	b299      	uxth	r1, r3
 800ac9c:	fb02 6101 	mla	r1, r2, r1, r6
 800aca0:	0c1e      	lsrs	r6, r3, #16
 800aca2:	0c0b      	lsrs	r3, r1, #16
 800aca4:	fb02 3306 	mla	r3, r2, r6, r3
 800aca8:	b289      	uxth	r1, r1
 800acaa:	3001      	adds	r0, #1
 800acac:	eb01 4103 	add.w	r1, r1, r3, lsl #16
 800acb0:	4285      	cmp	r5, r0
 800acb2:	f84c 1b04 	str.w	r1, [ip], #4
 800acb6:	ea4f 4613 	mov.w	r6, r3, lsr #16
 800acba:	dcec      	bgt.n	800ac96 <__multadd+0x12>
 800acbc:	b30e      	cbz	r6, 800ad02 <__multadd+0x7e>
 800acbe:	68a3      	ldr	r3, [r4, #8]
 800acc0:	42ab      	cmp	r3, r5
 800acc2:	dc19      	bgt.n	800acf8 <__multadd+0x74>
 800acc4:	6861      	ldr	r1, [r4, #4]
 800acc6:	4638      	mov	r0, r7
 800acc8:	3101      	adds	r1, #1
 800acca:	f7ff ff79 	bl	800abc0 <_Balloc>
 800acce:	4680      	mov	r8, r0
 800acd0:	b928      	cbnz	r0, 800acde <__multadd+0x5a>
 800acd2:	4602      	mov	r2, r0
 800acd4:	4b0c      	ldr	r3, [pc, #48]	@ (800ad08 <__multadd+0x84>)
 800acd6:	480d      	ldr	r0, [pc, #52]	@ (800ad0c <__multadd+0x88>)
 800acd8:	21ba      	movs	r1, #186	@ 0xba
 800acda:	f001 feb5 	bl	800ca48 <__assert_func>
 800acde:	6922      	ldr	r2, [r4, #16]
 800ace0:	3202      	adds	r2, #2
 800ace2:	f104 010c 	add.w	r1, r4, #12
 800ace6:	0092      	lsls	r2, r2, #2
 800ace8:	300c      	adds	r0, #12
 800acea:	f7ff f806 	bl	8009cfa <memcpy>
 800acee:	4621      	mov	r1, r4
 800acf0:	4638      	mov	r0, r7
 800acf2:	f7ff ffa5 	bl	800ac40 <_Bfree>
 800acf6:	4644      	mov	r4, r8
 800acf8:	eb04 0385 	add.w	r3, r4, r5, lsl #2
 800acfc:	3501      	adds	r5, #1
 800acfe:	615e      	str	r6, [r3, #20]
 800ad00:	6125      	str	r5, [r4, #16]
 800ad02:	4620      	mov	r0, r4
 800ad04:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800ad08:	0800d605 	.word	0x0800d605
 800ad0c:	0800d616 	.word	0x0800d616

0800ad10 <__s2b>:
 800ad10:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800ad14:	460c      	mov	r4, r1
 800ad16:	4615      	mov	r5, r2
 800ad18:	461f      	mov	r7, r3
 800ad1a:	2209      	movs	r2, #9
 800ad1c:	3308      	adds	r3, #8
 800ad1e:	4606      	mov	r6, r0
 800ad20:	fb93 f3f2 	sdiv	r3, r3, r2
 800ad24:	2100      	movs	r1, #0
 800ad26:	2201      	movs	r2, #1
 800ad28:	429a      	cmp	r2, r3
 800ad2a:	db09      	blt.n	800ad40 <__s2b+0x30>
 800ad2c:	4630      	mov	r0, r6
 800ad2e:	f7ff ff47 	bl	800abc0 <_Balloc>
 800ad32:	b940      	cbnz	r0, 800ad46 <__s2b+0x36>
 800ad34:	4602      	mov	r2, r0
 800ad36:	4b19      	ldr	r3, [pc, #100]	@ (800ad9c <__s2b+0x8c>)
 800ad38:	4819      	ldr	r0, [pc, #100]	@ (800ada0 <__s2b+0x90>)
 800ad3a:	21d3      	movs	r1, #211	@ 0xd3
 800ad3c:	f001 fe84 	bl	800ca48 <__assert_func>
 800ad40:	0052      	lsls	r2, r2, #1
 800ad42:	3101      	adds	r1, #1
 800ad44:	e7f0      	b.n	800ad28 <__s2b+0x18>
 800ad46:	9b08      	ldr	r3, [sp, #32]
 800ad48:	6143      	str	r3, [r0, #20]
 800ad4a:	2d09      	cmp	r5, #9
 800ad4c:	f04f 0301 	mov.w	r3, #1
 800ad50:	6103      	str	r3, [r0, #16]
 800ad52:	dd16      	ble.n	800ad82 <__s2b+0x72>
 800ad54:	f104 0909 	add.w	r9, r4, #9
 800ad58:	46c8      	mov	r8, r9
 800ad5a:	442c      	add	r4, r5
 800ad5c:	f818 3b01 	ldrb.w	r3, [r8], #1
 800ad60:	4601      	mov	r1, r0
 800ad62:	3b30      	subs	r3, #48	@ 0x30
 800ad64:	220a      	movs	r2, #10
 800ad66:	4630      	mov	r0, r6
 800ad68:	f7ff ff8c 	bl	800ac84 <__multadd>
 800ad6c:	45a0      	cmp	r8, r4
 800ad6e:	d1f5      	bne.n	800ad5c <__s2b+0x4c>
 800ad70:	f1a5 0408 	sub.w	r4, r5, #8
 800ad74:	444c      	add	r4, r9
 800ad76:	1b2d      	subs	r5, r5, r4
 800ad78:	1963      	adds	r3, r4, r5
 800ad7a:	42bb      	cmp	r3, r7
 800ad7c:	db04      	blt.n	800ad88 <__s2b+0x78>
 800ad7e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800ad82:	340a      	adds	r4, #10
 800ad84:	2509      	movs	r5, #9
 800ad86:	e7f6      	b.n	800ad76 <__s2b+0x66>
 800ad88:	f814 3b01 	ldrb.w	r3, [r4], #1
 800ad8c:	4601      	mov	r1, r0
 800ad8e:	3b30      	subs	r3, #48	@ 0x30
 800ad90:	220a      	movs	r2, #10
 800ad92:	4630      	mov	r0, r6
 800ad94:	f7ff ff76 	bl	800ac84 <__multadd>
 800ad98:	e7ee      	b.n	800ad78 <__s2b+0x68>
 800ad9a:	bf00      	nop
 800ad9c:	0800d605 	.word	0x0800d605
 800ada0:	0800d616 	.word	0x0800d616

0800ada4 <__hi0bits>:
 800ada4:	f5b0 3f80 	cmp.w	r0, #65536	@ 0x10000
 800ada8:	4603      	mov	r3, r0
 800adaa:	bf36      	itet	cc
 800adac:	0403      	lslcc	r3, r0, #16
 800adae:	2000      	movcs	r0, #0
 800adb0:	2010      	movcc	r0, #16
 800adb2:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 800adb6:	bf3c      	itt	cc
 800adb8:	021b      	lslcc	r3, r3, #8
 800adba:	3008      	addcc	r0, #8
 800adbc:	f1b3 5f80 	cmp.w	r3, #268435456	@ 0x10000000
 800adc0:	bf3c      	itt	cc
 800adc2:	011b      	lslcc	r3, r3, #4
 800adc4:	3004      	addcc	r0, #4
 800adc6:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 800adca:	bf3c      	itt	cc
 800adcc:	009b      	lslcc	r3, r3, #2
 800adce:	3002      	addcc	r0, #2
 800add0:	2b00      	cmp	r3, #0
 800add2:	db05      	blt.n	800ade0 <__hi0bits+0x3c>
 800add4:	f013 4f80 	tst.w	r3, #1073741824	@ 0x40000000
 800add8:	f100 0001 	add.w	r0, r0, #1
 800addc:	bf08      	it	eq
 800adde:	2020      	moveq	r0, #32
 800ade0:	4770      	bx	lr

0800ade2 <__lo0bits>:
 800ade2:	6803      	ldr	r3, [r0, #0]
 800ade4:	4602      	mov	r2, r0
 800ade6:	f013 0007 	ands.w	r0, r3, #7
 800adea:	d00b      	beq.n	800ae04 <__lo0bits+0x22>
 800adec:	07d9      	lsls	r1, r3, #31
 800adee:	d421      	bmi.n	800ae34 <__lo0bits+0x52>
 800adf0:	0798      	lsls	r0, r3, #30
 800adf2:	bf49      	itett	mi
 800adf4:	085b      	lsrmi	r3, r3, #1
 800adf6:	089b      	lsrpl	r3, r3, #2
 800adf8:	2001      	movmi	r0, #1
 800adfa:	6013      	strmi	r3, [r2, #0]
 800adfc:	bf5c      	itt	pl
 800adfe:	6013      	strpl	r3, [r2, #0]
 800ae00:	2002      	movpl	r0, #2
 800ae02:	4770      	bx	lr
 800ae04:	b299      	uxth	r1, r3
 800ae06:	b909      	cbnz	r1, 800ae0c <__lo0bits+0x2a>
 800ae08:	0c1b      	lsrs	r3, r3, #16
 800ae0a:	2010      	movs	r0, #16
 800ae0c:	b2d9      	uxtb	r1, r3
 800ae0e:	b909      	cbnz	r1, 800ae14 <__lo0bits+0x32>
 800ae10:	3008      	adds	r0, #8
 800ae12:	0a1b      	lsrs	r3, r3, #8
 800ae14:	0719      	lsls	r1, r3, #28
 800ae16:	bf04      	itt	eq
 800ae18:	091b      	lsreq	r3, r3, #4
 800ae1a:	3004      	addeq	r0, #4
 800ae1c:	0799      	lsls	r1, r3, #30
 800ae1e:	bf04      	itt	eq
 800ae20:	089b      	lsreq	r3, r3, #2
 800ae22:	3002      	addeq	r0, #2
 800ae24:	07d9      	lsls	r1, r3, #31
 800ae26:	d403      	bmi.n	800ae30 <__lo0bits+0x4e>
 800ae28:	085b      	lsrs	r3, r3, #1
 800ae2a:	f100 0001 	add.w	r0, r0, #1
 800ae2e:	d003      	beq.n	800ae38 <__lo0bits+0x56>
 800ae30:	6013      	str	r3, [r2, #0]
 800ae32:	4770      	bx	lr
 800ae34:	2000      	movs	r0, #0
 800ae36:	4770      	bx	lr
 800ae38:	2020      	movs	r0, #32
 800ae3a:	4770      	bx	lr

0800ae3c <__i2b>:
 800ae3c:	b510      	push	{r4, lr}
 800ae3e:	460c      	mov	r4, r1
 800ae40:	2101      	movs	r1, #1
 800ae42:	f7ff febd 	bl	800abc0 <_Balloc>
 800ae46:	4602      	mov	r2, r0
 800ae48:	b928      	cbnz	r0, 800ae56 <__i2b+0x1a>
 800ae4a:	4b05      	ldr	r3, [pc, #20]	@ (800ae60 <__i2b+0x24>)
 800ae4c:	4805      	ldr	r0, [pc, #20]	@ (800ae64 <__i2b+0x28>)
 800ae4e:	f240 1145 	movw	r1, #325	@ 0x145
 800ae52:	f001 fdf9 	bl	800ca48 <__assert_func>
 800ae56:	2301      	movs	r3, #1
 800ae58:	6144      	str	r4, [r0, #20]
 800ae5a:	6103      	str	r3, [r0, #16]
 800ae5c:	bd10      	pop	{r4, pc}
 800ae5e:	bf00      	nop
 800ae60:	0800d605 	.word	0x0800d605
 800ae64:	0800d616 	.word	0x0800d616

0800ae68 <__multiply>:
 800ae68:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ae6c:	4614      	mov	r4, r2
 800ae6e:	690a      	ldr	r2, [r1, #16]
 800ae70:	6923      	ldr	r3, [r4, #16]
 800ae72:	429a      	cmp	r2, r3
 800ae74:	bfa8      	it	ge
 800ae76:	4623      	movge	r3, r4
 800ae78:	460f      	mov	r7, r1
 800ae7a:	bfa4      	itt	ge
 800ae7c:	460c      	movge	r4, r1
 800ae7e:	461f      	movge	r7, r3
 800ae80:	f8d4 a010 	ldr.w	sl, [r4, #16]
 800ae84:	f8d7 9010 	ldr.w	r9, [r7, #16]
 800ae88:	68a3      	ldr	r3, [r4, #8]
 800ae8a:	6861      	ldr	r1, [r4, #4]
 800ae8c:	eb0a 0609 	add.w	r6, sl, r9
 800ae90:	42b3      	cmp	r3, r6
 800ae92:	b085      	sub	sp, #20
 800ae94:	bfb8      	it	lt
 800ae96:	3101      	addlt	r1, #1
 800ae98:	f7ff fe92 	bl	800abc0 <_Balloc>
 800ae9c:	b930      	cbnz	r0, 800aeac <__multiply+0x44>
 800ae9e:	4602      	mov	r2, r0
 800aea0:	4b44      	ldr	r3, [pc, #272]	@ (800afb4 <__multiply+0x14c>)
 800aea2:	4845      	ldr	r0, [pc, #276]	@ (800afb8 <__multiply+0x150>)
 800aea4:	f44f 71b1 	mov.w	r1, #354	@ 0x162
 800aea8:	f001 fdce 	bl	800ca48 <__assert_func>
 800aeac:	f100 0514 	add.w	r5, r0, #20
 800aeb0:	eb05 0886 	add.w	r8, r5, r6, lsl #2
 800aeb4:	462b      	mov	r3, r5
 800aeb6:	2200      	movs	r2, #0
 800aeb8:	4543      	cmp	r3, r8
 800aeba:	d321      	bcc.n	800af00 <__multiply+0x98>
 800aebc:	f107 0114 	add.w	r1, r7, #20
 800aec0:	f104 0214 	add.w	r2, r4, #20
 800aec4:	eb02 028a 	add.w	r2, r2, sl, lsl #2
 800aec8:	eb01 0389 	add.w	r3, r1, r9, lsl #2
 800aecc:	9302      	str	r3, [sp, #8]
 800aece:	1b13      	subs	r3, r2, r4
 800aed0:	3b15      	subs	r3, #21
 800aed2:	f023 0303 	bic.w	r3, r3, #3
 800aed6:	3304      	adds	r3, #4
 800aed8:	f104 0715 	add.w	r7, r4, #21
 800aedc:	42ba      	cmp	r2, r7
 800aede:	bf38      	it	cc
 800aee0:	2304      	movcc	r3, #4
 800aee2:	9301      	str	r3, [sp, #4]
 800aee4:	9b02      	ldr	r3, [sp, #8]
 800aee6:	9103      	str	r1, [sp, #12]
 800aee8:	428b      	cmp	r3, r1
 800aeea:	d80c      	bhi.n	800af06 <__multiply+0x9e>
 800aeec:	2e00      	cmp	r6, #0
 800aeee:	dd03      	ble.n	800aef8 <__multiply+0x90>
 800aef0:	f858 3d04 	ldr.w	r3, [r8, #-4]!
 800aef4:	2b00      	cmp	r3, #0
 800aef6:	d05b      	beq.n	800afb0 <__multiply+0x148>
 800aef8:	6106      	str	r6, [r0, #16]
 800aefa:	b005      	add	sp, #20
 800aefc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800af00:	f843 2b04 	str.w	r2, [r3], #4
 800af04:	e7d8      	b.n	800aeb8 <__multiply+0x50>
 800af06:	f8b1 a000 	ldrh.w	sl, [r1]
 800af0a:	f1ba 0f00 	cmp.w	sl, #0
 800af0e:	d024      	beq.n	800af5a <__multiply+0xf2>
 800af10:	f104 0e14 	add.w	lr, r4, #20
 800af14:	46a9      	mov	r9, r5
 800af16:	f04f 0c00 	mov.w	ip, #0
 800af1a:	f85e 7b04 	ldr.w	r7, [lr], #4
 800af1e:	f8d9 3000 	ldr.w	r3, [r9]
 800af22:	fa1f fb87 	uxth.w	fp, r7
 800af26:	b29b      	uxth	r3, r3
 800af28:	fb0a 330b 	mla	r3, sl, fp, r3
 800af2c:	ea4f 4b17 	mov.w	fp, r7, lsr #16
 800af30:	f8d9 7000 	ldr.w	r7, [r9]
 800af34:	4463      	add	r3, ip
 800af36:	ea4f 4c17 	mov.w	ip, r7, lsr #16
 800af3a:	fb0a c70b 	mla	r7, sl, fp, ip
 800af3e:	eb07 4713 	add.w	r7, r7, r3, lsr #16
 800af42:	b29b      	uxth	r3, r3
 800af44:	ea43 4307 	orr.w	r3, r3, r7, lsl #16
 800af48:	4572      	cmp	r2, lr
 800af4a:	f849 3b04 	str.w	r3, [r9], #4
 800af4e:	ea4f 4c17 	mov.w	ip, r7, lsr #16
 800af52:	d8e2      	bhi.n	800af1a <__multiply+0xb2>
 800af54:	9b01      	ldr	r3, [sp, #4]
 800af56:	f845 c003 	str.w	ip, [r5, r3]
 800af5a:	9b03      	ldr	r3, [sp, #12]
 800af5c:	f8b3 9002 	ldrh.w	r9, [r3, #2]
 800af60:	3104      	adds	r1, #4
 800af62:	f1b9 0f00 	cmp.w	r9, #0
 800af66:	d021      	beq.n	800afac <__multiply+0x144>
 800af68:	682b      	ldr	r3, [r5, #0]
 800af6a:	f104 0c14 	add.w	ip, r4, #20
 800af6e:	46ae      	mov	lr, r5
 800af70:	f04f 0a00 	mov.w	sl, #0
 800af74:	f8bc b000 	ldrh.w	fp, [ip]
 800af78:	f8be 7002 	ldrh.w	r7, [lr, #2]
 800af7c:	fb09 770b 	mla	r7, r9, fp, r7
 800af80:	4457      	add	r7, sl
 800af82:	b29b      	uxth	r3, r3
 800af84:	ea43 4307 	orr.w	r3, r3, r7, lsl #16
 800af88:	f84e 3b04 	str.w	r3, [lr], #4
 800af8c:	f85c 3b04 	ldr.w	r3, [ip], #4
 800af90:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 800af94:	f8be 3000 	ldrh.w	r3, [lr]
 800af98:	fb09 330a 	mla	r3, r9, sl, r3
 800af9c:	eb03 4317 	add.w	r3, r3, r7, lsr #16
 800afa0:	4562      	cmp	r2, ip
 800afa2:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 800afa6:	d8e5      	bhi.n	800af74 <__multiply+0x10c>
 800afa8:	9f01      	ldr	r7, [sp, #4]
 800afaa:	51eb      	str	r3, [r5, r7]
 800afac:	3504      	adds	r5, #4
 800afae:	e799      	b.n	800aee4 <__multiply+0x7c>
 800afb0:	3e01      	subs	r6, #1
 800afb2:	e79b      	b.n	800aeec <__multiply+0x84>
 800afb4:	0800d605 	.word	0x0800d605
 800afb8:	0800d616 	.word	0x0800d616

0800afbc <__pow5mult>:
 800afbc:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800afc0:	4615      	mov	r5, r2
 800afc2:	f012 0203 	ands.w	r2, r2, #3
 800afc6:	4607      	mov	r7, r0
 800afc8:	460e      	mov	r6, r1
 800afca:	d007      	beq.n	800afdc <__pow5mult+0x20>
 800afcc:	4c25      	ldr	r4, [pc, #148]	@ (800b064 <__pow5mult+0xa8>)
 800afce:	3a01      	subs	r2, #1
 800afd0:	2300      	movs	r3, #0
 800afd2:	f854 2022 	ldr.w	r2, [r4, r2, lsl #2]
 800afd6:	f7ff fe55 	bl	800ac84 <__multadd>
 800afda:	4606      	mov	r6, r0
 800afdc:	10ad      	asrs	r5, r5, #2
 800afde:	d03d      	beq.n	800b05c <__pow5mult+0xa0>
 800afe0:	69fc      	ldr	r4, [r7, #28]
 800afe2:	b97c      	cbnz	r4, 800b004 <__pow5mult+0x48>
 800afe4:	2010      	movs	r0, #16
 800afe6:	f7ff fd35 	bl	800aa54 <malloc>
 800afea:	4602      	mov	r2, r0
 800afec:	61f8      	str	r0, [r7, #28]
 800afee:	b928      	cbnz	r0, 800affc <__pow5mult+0x40>
 800aff0:	4b1d      	ldr	r3, [pc, #116]	@ (800b068 <__pow5mult+0xac>)
 800aff2:	481e      	ldr	r0, [pc, #120]	@ (800b06c <__pow5mult+0xb0>)
 800aff4:	f240 11b3 	movw	r1, #435	@ 0x1b3
 800aff8:	f001 fd26 	bl	800ca48 <__assert_func>
 800affc:	e9c0 4401 	strd	r4, r4, [r0, #4]
 800b000:	6004      	str	r4, [r0, #0]
 800b002:	60c4      	str	r4, [r0, #12]
 800b004:	f8d7 801c 	ldr.w	r8, [r7, #28]
 800b008:	f8d8 4008 	ldr.w	r4, [r8, #8]
 800b00c:	b94c      	cbnz	r4, 800b022 <__pow5mult+0x66>
 800b00e:	f240 2171 	movw	r1, #625	@ 0x271
 800b012:	4638      	mov	r0, r7
 800b014:	f7ff ff12 	bl	800ae3c <__i2b>
 800b018:	2300      	movs	r3, #0
 800b01a:	f8c8 0008 	str.w	r0, [r8, #8]
 800b01e:	4604      	mov	r4, r0
 800b020:	6003      	str	r3, [r0, #0]
 800b022:	f04f 0900 	mov.w	r9, #0
 800b026:	07eb      	lsls	r3, r5, #31
 800b028:	d50a      	bpl.n	800b040 <__pow5mult+0x84>
 800b02a:	4631      	mov	r1, r6
 800b02c:	4622      	mov	r2, r4
 800b02e:	4638      	mov	r0, r7
 800b030:	f7ff ff1a 	bl	800ae68 <__multiply>
 800b034:	4631      	mov	r1, r6
 800b036:	4680      	mov	r8, r0
 800b038:	4638      	mov	r0, r7
 800b03a:	f7ff fe01 	bl	800ac40 <_Bfree>
 800b03e:	4646      	mov	r6, r8
 800b040:	106d      	asrs	r5, r5, #1
 800b042:	d00b      	beq.n	800b05c <__pow5mult+0xa0>
 800b044:	6820      	ldr	r0, [r4, #0]
 800b046:	b938      	cbnz	r0, 800b058 <__pow5mult+0x9c>
 800b048:	4622      	mov	r2, r4
 800b04a:	4621      	mov	r1, r4
 800b04c:	4638      	mov	r0, r7
 800b04e:	f7ff ff0b 	bl	800ae68 <__multiply>
 800b052:	6020      	str	r0, [r4, #0]
 800b054:	f8c0 9000 	str.w	r9, [r0]
 800b058:	4604      	mov	r4, r0
 800b05a:	e7e4      	b.n	800b026 <__pow5mult+0x6a>
 800b05c:	4630      	mov	r0, r6
 800b05e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800b062:	bf00      	nop
 800b064:	0800d670 	.word	0x0800d670
 800b068:	0800d596 	.word	0x0800d596
 800b06c:	0800d616 	.word	0x0800d616

0800b070 <__lshift>:
 800b070:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800b074:	460c      	mov	r4, r1
 800b076:	6849      	ldr	r1, [r1, #4]
 800b078:	6923      	ldr	r3, [r4, #16]
 800b07a:	eb03 1862 	add.w	r8, r3, r2, asr #5
 800b07e:	68a3      	ldr	r3, [r4, #8]
 800b080:	4607      	mov	r7, r0
 800b082:	4691      	mov	r9, r2
 800b084:	ea4f 1a62 	mov.w	sl, r2, asr #5
 800b088:	f108 0601 	add.w	r6, r8, #1
 800b08c:	42b3      	cmp	r3, r6
 800b08e:	db0b      	blt.n	800b0a8 <__lshift+0x38>
 800b090:	4638      	mov	r0, r7
 800b092:	f7ff fd95 	bl	800abc0 <_Balloc>
 800b096:	4605      	mov	r5, r0
 800b098:	b948      	cbnz	r0, 800b0ae <__lshift+0x3e>
 800b09a:	4602      	mov	r2, r0
 800b09c:	4b28      	ldr	r3, [pc, #160]	@ (800b140 <__lshift+0xd0>)
 800b09e:	4829      	ldr	r0, [pc, #164]	@ (800b144 <__lshift+0xd4>)
 800b0a0:	f44f 71ef 	mov.w	r1, #478	@ 0x1de
 800b0a4:	f001 fcd0 	bl	800ca48 <__assert_func>
 800b0a8:	3101      	adds	r1, #1
 800b0aa:	005b      	lsls	r3, r3, #1
 800b0ac:	e7ee      	b.n	800b08c <__lshift+0x1c>
 800b0ae:	2300      	movs	r3, #0
 800b0b0:	f100 0114 	add.w	r1, r0, #20
 800b0b4:	f100 0210 	add.w	r2, r0, #16
 800b0b8:	4618      	mov	r0, r3
 800b0ba:	4553      	cmp	r3, sl
 800b0bc:	db33      	blt.n	800b126 <__lshift+0xb6>
 800b0be:	6920      	ldr	r0, [r4, #16]
 800b0c0:	ea2a 7aea 	bic.w	sl, sl, sl, asr #31
 800b0c4:	f104 0314 	add.w	r3, r4, #20
 800b0c8:	f019 091f 	ands.w	r9, r9, #31
 800b0cc:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 800b0d0:	eb03 0c80 	add.w	ip, r3, r0, lsl #2
 800b0d4:	d02b      	beq.n	800b12e <__lshift+0xbe>
 800b0d6:	f1c9 0e20 	rsb	lr, r9, #32
 800b0da:	468a      	mov	sl, r1
 800b0dc:	2200      	movs	r2, #0
 800b0de:	6818      	ldr	r0, [r3, #0]
 800b0e0:	fa00 f009 	lsl.w	r0, r0, r9
 800b0e4:	4310      	orrs	r0, r2
 800b0e6:	f84a 0b04 	str.w	r0, [sl], #4
 800b0ea:	f853 2b04 	ldr.w	r2, [r3], #4
 800b0ee:	459c      	cmp	ip, r3
 800b0f0:	fa22 f20e 	lsr.w	r2, r2, lr
 800b0f4:	d8f3      	bhi.n	800b0de <__lshift+0x6e>
 800b0f6:	ebac 0304 	sub.w	r3, ip, r4
 800b0fa:	3b15      	subs	r3, #21
 800b0fc:	f023 0303 	bic.w	r3, r3, #3
 800b100:	3304      	adds	r3, #4
 800b102:	f104 0015 	add.w	r0, r4, #21
 800b106:	4584      	cmp	ip, r0
 800b108:	bf38      	it	cc
 800b10a:	2304      	movcc	r3, #4
 800b10c:	50ca      	str	r2, [r1, r3]
 800b10e:	b10a      	cbz	r2, 800b114 <__lshift+0xa4>
 800b110:	f108 0602 	add.w	r6, r8, #2
 800b114:	3e01      	subs	r6, #1
 800b116:	4638      	mov	r0, r7
 800b118:	612e      	str	r6, [r5, #16]
 800b11a:	4621      	mov	r1, r4
 800b11c:	f7ff fd90 	bl	800ac40 <_Bfree>
 800b120:	4628      	mov	r0, r5
 800b122:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800b126:	f842 0f04 	str.w	r0, [r2, #4]!
 800b12a:	3301      	adds	r3, #1
 800b12c:	e7c5      	b.n	800b0ba <__lshift+0x4a>
 800b12e:	3904      	subs	r1, #4
 800b130:	f853 2b04 	ldr.w	r2, [r3], #4
 800b134:	f841 2f04 	str.w	r2, [r1, #4]!
 800b138:	459c      	cmp	ip, r3
 800b13a:	d8f9      	bhi.n	800b130 <__lshift+0xc0>
 800b13c:	e7ea      	b.n	800b114 <__lshift+0xa4>
 800b13e:	bf00      	nop
 800b140:	0800d605 	.word	0x0800d605
 800b144:	0800d616 	.word	0x0800d616

0800b148 <__mcmp>:
 800b148:	690a      	ldr	r2, [r1, #16]
 800b14a:	4603      	mov	r3, r0
 800b14c:	6900      	ldr	r0, [r0, #16]
 800b14e:	1a80      	subs	r0, r0, r2
 800b150:	b530      	push	{r4, r5, lr}
 800b152:	d10e      	bne.n	800b172 <__mcmp+0x2a>
 800b154:	3314      	adds	r3, #20
 800b156:	3114      	adds	r1, #20
 800b158:	eb03 0482 	add.w	r4, r3, r2, lsl #2
 800b15c:	eb01 0182 	add.w	r1, r1, r2, lsl #2
 800b160:	f854 5d04 	ldr.w	r5, [r4, #-4]!
 800b164:	f851 2d04 	ldr.w	r2, [r1, #-4]!
 800b168:	4295      	cmp	r5, r2
 800b16a:	d003      	beq.n	800b174 <__mcmp+0x2c>
 800b16c:	d205      	bcs.n	800b17a <__mcmp+0x32>
 800b16e:	f04f 30ff 	mov.w	r0, #4294967295
 800b172:	bd30      	pop	{r4, r5, pc}
 800b174:	42a3      	cmp	r3, r4
 800b176:	d3f3      	bcc.n	800b160 <__mcmp+0x18>
 800b178:	e7fb      	b.n	800b172 <__mcmp+0x2a>
 800b17a:	2001      	movs	r0, #1
 800b17c:	e7f9      	b.n	800b172 <__mcmp+0x2a>
	...

0800b180 <__mdiff>:
 800b180:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b184:	4689      	mov	r9, r1
 800b186:	4606      	mov	r6, r0
 800b188:	4611      	mov	r1, r2
 800b18a:	4648      	mov	r0, r9
 800b18c:	4614      	mov	r4, r2
 800b18e:	f7ff ffdb 	bl	800b148 <__mcmp>
 800b192:	1e05      	subs	r5, r0, #0
 800b194:	d112      	bne.n	800b1bc <__mdiff+0x3c>
 800b196:	4629      	mov	r1, r5
 800b198:	4630      	mov	r0, r6
 800b19a:	f7ff fd11 	bl	800abc0 <_Balloc>
 800b19e:	4602      	mov	r2, r0
 800b1a0:	b928      	cbnz	r0, 800b1ae <__mdiff+0x2e>
 800b1a2:	4b3f      	ldr	r3, [pc, #252]	@ (800b2a0 <__mdiff+0x120>)
 800b1a4:	f240 2137 	movw	r1, #567	@ 0x237
 800b1a8:	483e      	ldr	r0, [pc, #248]	@ (800b2a4 <__mdiff+0x124>)
 800b1aa:	f001 fc4d 	bl	800ca48 <__assert_func>
 800b1ae:	2301      	movs	r3, #1
 800b1b0:	e9c0 3504 	strd	r3, r5, [r0, #16]
 800b1b4:	4610      	mov	r0, r2
 800b1b6:	b003      	add	sp, #12
 800b1b8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800b1bc:	bfbc      	itt	lt
 800b1be:	464b      	movlt	r3, r9
 800b1c0:	46a1      	movlt	r9, r4
 800b1c2:	4630      	mov	r0, r6
 800b1c4:	f8d9 1004 	ldr.w	r1, [r9, #4]
 800b1c8:	bfba      	itte	lt
 800b1ca:	461c      	movlt	r4, r3
 800b1cc:	2501      	movlt	r5, #1
 800b1ce:	2500      	movge	r5, #0
 800b1d0:	f7ff fcf6 	bl	800abc0 <_Balloc>
 800b1d4:	4602      	mov	r2, r0
 800b1d6:	b918      	cbnz	r0, 800b1e0 <__mdiff+0x60>
 800b1d8:	4b31      	ldr	r3, [pc, #196]	@ (800b2a0 <__mdiff+0x120>)
 800b1da:	f240 2145 	movw	r1, #581	@ 0x245
 800b1de:	e7e3      	b.n	800b1a8 <__mdiff+0x28>
 800b1e0:	f8d9 7010 	ldr.w	r7, [r9, #16]
 800b1e4:	6926      	ldr	r6, [r4, #16]
 800b1e6:	60c5      	str	r5, [r0, #12]
 800b1e8:	f109 0310 	add.w	r3, r9, #16
 800b1ec:	f109 0514 	add.w	r5, r9, #20
 800b1f0:	f104 0e14 	add.w	lr, r4, #20
 800b1f4:	f100 0b14 	add.w	fp, r0, #20
 800b1f8:	eb05 0887 	add.w	r8, r5, r7, lsl #2
 800b1fc:	eb0e 0686 	add.w	r6, lr, r6, lsl #2
 800b200:	9301      	str	r3, [sp, #4]
 800b202:	46d9      	mov	r9, fp
 800b204:	f04f 0c00 	mov.w	ip, #0
 800b208:	9b01      	ldr	r3, [sp, #4]
 800b20a:	f85e 0b04 	ldr.w	r0, [lr], #4
 800b20e:	f853 af04 	ldr.w	sl, [r3, #4]!
 800b212:	9301      	str	r3, [sp, #4]
 800b214:	fa1f f38a 	uxth.w	r3, sl
 800b218:	4619      	mov	r1, r3
 800b21a:	b283      	uxth	r3, r0
 800b21c:	1acb      	subs	r3, r1, r3
 800b21e:	0c00      	lsrs	r0, r0, #16
 800b220:	4463      	add	r3, ip
 800b222:	ebc0 401a 	rsb	r0, r0, sl, lsr #16
 800b226:	eb00 4023 	add.w	r0, r0, r3, asr #16
 800b22a:	b29b      	uxth	r3, r3
 800b22c:	ea43 4300 	orr.w	r3, r3, r0, lsl #16
 800b230:	4576      	cmp	r6, lr
 800b232:	f849 3b04 	str.w	r3, [r9], #4
 800b236:	ea4f 4c20 	mov.w	ip, r0, asr #16
 800b23a:	d8e5      	bhi.n	800b208 <__mdiff+0x88>
 800b23c:	1b33      	subs	r3, r6, r4
 800b23e:	3b15      	subs	r3, #21
 800b240:	f023 0303 	bic.w	r3, r3, #3
 800b244:	3415      	adds	r4, #21
 800b246:	3304      	adds	r3, #4
 800b248:	42a6      	cmp	r6, r4
 800b24a:	bf38      	it	cc
 800b24c:	2304      	movcc	r3, #4
 800b24e:	441d      	add	r5, r3
 800b250:	445b      	add	r3, fp
 800b252:	461e      	mov	r6, r3
 800b254:	462c      	mov	r4, r5
 800b256:	4544      	cmp	r4, r8
 800b258:	d30e      	bcc.n	800b278 <__mdiff+0xf8>
 800b25a:	f108 0103 	add.w	r1, r8, #3
 800b25e:	1b49      	subs	r1, r1, r5
 800b260:	f021 0103 	bic.w	r1, r1, #3
 800b264:	3d03      	subs	r5, #3
 800b266:	45a8      	cmp	r8, r5
 800b268:	bf38      	it	cc
 800b26a:	2100      	movcc	r1, #0
 800b26c:	440b      	add	r3, r1
 800b26e:	f853 1d04 	ldr.w	r1, [r3, #-4]!
 800b272:	b191      	cbz	r1, 800b29a <__mdiff+0x11a>
 800b274:	6117      	str	r7, [r2, #16]
 800b276:	e79d      	b.n	800b1b4 <__mdiff+0x34>
 800b278:	f854 1b04 	ldr.w	r1, [r4], #4
 800b27c:	46e6      	mov	lr, ip
 800b27e:	0c08      	lsrs	r0, r1, #16
 800b280:	fa1c fc81 	uxtah	ip, ip, r1
 800b284:	4471      	add	r1, lr
 800b286:	eb00 402c 	add.w	r0, r0, ip, asr #16
 800b28a:	b289      	uxth	r1, r1
 800b28c:	ea41 4100 	orr.w	r1, r1, r0, lsl #16
 800b290:	f846 1b04 	str.w	r1, [r6], #4
 800b294:	ea4f 4c20 	mov.w	ip, r0, asr #16
 800b298:	e7dd      	b.n	800b256 <__mdiff+0xd6>
 800b29a:	3f01      	subs	r7, #1
 800b29c:	e7e7      	b.n	800b26e <__mdiff+0xee>
 800b29e:	bf00      	nop
 800b2a0:	0800d605 	.word	0x0800d605
 800b2a4:	0800d616 	.word	0x0800d616

0800b2a8 <__ulp>:
 800b2a8:	b082      	sub	sp, #8
 800b2aa:	ed8d 0b00 	vstr	d0, [sp]
 800b2ae:	9a01      	ldr	r2, [sp, #4]
 800b2b0:	4b0f      	ldr	r3, [pc, #60]	@ (800b2f0 <__ulp+0x48>)
 800b2b2:	4013      	ands	r3, r2
 800b2b4:	f1a3 7350 	sub.w	r3, r3, #54525952	@ 0x3400000
 800b2b8:	2b00      	cmp	r3, #0
 800b2ba:	dc08      	bgt.n	800b2ce <__ulp+0x26>
 800b2bc:	425b      	negs	r3, r3
 800b2be:	f1b3 7fa0 	cmp.w	r3, #20971520	@ 0x1400000
 800b2c2:	ea4f 5223 	mov.w	r2, r3, asr #20
 800b2c6:	da04      	bge.n	800b2d2 <__ulp+0x2a>
 800b2c8:	f44f 2300 	mov.w	r3, #524288	@ 0x80000
 800b2cc:	4113      	asrs	r3, r2
 800b2ce:	2200      	movs	r2, #0
 800b2d0:	e008      	b.n	800b2e4 <__ulp+0x3c>
 800b2d2:	f1a2 0314 	sub.w	r3, r2, #20
 800b2d6:	2b1e      	cmp	r3, #30
 800b2d8:	bfda      	itte	le
 800b2da:	f04f 4200 	movle.w	r2, #2147483648	@ 0x80000000
 800b2de:	40da      	lsrle	r2, r3
 800b2e0:	2201      	movgt	r2, #1
 800b2e2:	2300      	movs	r3, #0
 800b2e4:	4619      	mov	r1, r3
 800b2e6:	4610      	mov	r0, r2
 800b2e8:	ec41 0b10 	vmov	d0, r0, r1
 800b2ec:	b002      	add	sp, #8
 800b2ee:	4770      	bx	lr
 800b2f0:	7ff00000 	.word	0x7ff00000

0800b2f4 <__b2d>:
 800b2f4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b2f8:	6906      	ldr	r6, [r0, #16]
 800b2fa:	f100 0814 	add.w	r8, r0, #20
 800b2fe:	eb08 0686 	add.w	r6, r8, r6, lsl #2
 800b302:	1f37      	subs	r7, r6, #4
 800b304:	f856 2c04 	ldr.w	r2, [r6, #-4]
 800b308:	4610      	mov	r0, r2
 800b30a:	f7ff fd4b 	bl	800ada4 <__hi0bits>
 800b30e:	f1c0 0320 	rsb	r3, r0, #32
 800b312:	280a      	cmp	r0, #10
 800b314:	600b      	str	r3, [r1, #0]
 800b316:	491b      	ldr	r1, [pc, #108]	@ (800b384 <__b2d+0x90>)
 800b318:	dc15      	bgt.n	800b346 <__b2d+0x52>
 800b31a:	f1c0 0c0b 	rsb	ip, r0, #11
 800b31e:	fa22 f30c 	lsr.w	r3, r2, ip
 800b322:	45b8      	cmp	r8, r7
 800b324:	ea43 0501 	orr.w	r5, r3, r1
 800b328:	bf34      	ite	cc
 800b32a:	f856 3c08 	ldrcc.w	r3, [r6, #-8]
 800b32e:	2300      	movcs	r3, #0
 800b330:	3015      	adds	r0, #21
 800b332:	fa02 f000 	lsl.w	r0, r2, r0
 800b336:	fa23 f30c 	lsr.w	r3, r3, ip
 800b33a:	4303      	orrs	r3, r0
 800b33c:	461c      	mov	r4, r3
 800b33e:	ec45 4b10 	vmov	d0, r4, r5
 800b342:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800b346:	45b8      	cmp	r8, r7
 800b348:	bf3a      	itte	cc
 800b34a:	f856 3c08 	ldrcc.w	r3, [r6, #-8]
 800b34e:	f1a6 0708 	subcc.w	r7, r6, #8
 800b352:	2300      	movcs	r3, #0
 800b354:	380b      	subs	r0, #11
 800b356:	d012      	beq.n	800b37e <__b2d+0x8a>
 800b358:	f1c0 0120 	rsb	r1, r0, #32
 800b35c:	fa23 f401 	lsr.w	r4, r3, r1
 800b360:	4082      	lsls	r2, r0
 800b362:	4322      	orrs	r2, r4
 800b364:	4547      	cmp	r7, r8
 800b366:	f042 557f 	orr.w	r5, r2, #1069547520	@ 0x3fc00000
 800b36a:	bf8c      	ite	hi
 800b36c:	f857 2c04 	ldrhi.w	r2, [r7, #-4]
 800b370:	2200      	movls	r2, #0
 800b372:	4083      	lsls	r3, r0
 800b374:	40ca      	lsrs	r2, r1
 800b376:	f445 1540 	orr.w	r5, r5, #3145728	@ 0x300000
 800b37a:	4313      	orrs	r3, r2
 800b37c:	e7de      	b.n	800b33c <__b2d+0x48>
 800b37e:	ea42 0501 	orr.w	r5, r2, r1
 800b382:	e7db      	b.n	800b33c <__b2d+0x48>
 800b384:	3ff00000 	.word	0x3ff00000

0800b388 <__d2b>:
 800b388:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800b38c:	460f      	mov	r7, r1
 800b38e:	2101      	movs	r1, #1
 800b390:	ec59 8b10 	vmov	r8, r9, d0
 800b394:	4616      	mov	r6, r2
 800b396:	f7ff fc13 	bl	800abc0 <_Balloc>
 800b39a:	4604      	mov	r4, r0
 800b39c:	b930      	cbnz	r0, 800b3ac <__d2b+0x24>
 800b39e:	4602      	mov	r2, r0
 800b3a0:	4b23      	ldr	r3, [pc, #140]	@ (800b430 <__d2b+0xa8>)
 800b3a2:	4824      	ldr	r0, [pc, #144]	@ (800b434 <__d2b+0xac>)
 800b3a4:	f240 310f 	movw	r1, #783	@ 0x30f
 800b3a8:	f001 fb4e 	bl	800ca48 <__assert_func>
 800b3ac:	f3c9 550a 	ubfx	r5, r9, #20, #11
 800b3b0:	f3c9 0313 	ubfx	r3, r9, #0, #20
 800b3b4:	b10d      	cbz	r5, 800b3ba <__d2b+0x32>
 800b3b6:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 800b3ba:	9301      	str	r3, [sp, #4]
 800b3bc:	f1b8 0300 	subs.w	r3, r8, #0
 800b3c0:	d023      	beq.n	800b40a <__d2b+0x82>
 800b3c2:	4668      	mov	r0, sp
 800b3c4:	9300      	str	r3, [sp, #0]
 800b3c6:	f7ff fd0c 	bl	800ade2 <__lo0bits>
 800b3ca:	e9dd 1200 	ldrd	r1, r2, [sp]
 800b3ce:	b1d0      	cbz	r0, 800b406 <__d2b+0x7e>
 800b3d0:	f1c0 0320 	rsb	r3, r0, #32
 800b3d4:	fa02 f303 	lsl.w	r3, r2, r3
 800b3d8:	430b      	orrs	r3, r1
 800b3da:	40c2      	lsrs	r2, r0
 800b3dc:	6163      	str	r3, [r4, #20]
 800b3de:	9201      	str	r2, [sp, #4]
 800b3e0:	9b01      	ldr	r3, [sp, #4]
 800b3e2:	61a3      	str	r3, [r4, #24]
 800b3e4:	2b00      	cmp	r3, #0
 800b3e6:	bf0c      	ite	eq
 800b3e8:	2201      	moveq	r2, #1
 800b3ea:	2202      	movne	r2, #2
 800b3ec:	6122      	str	r2, [r4, #16]
 800b3ee:	b1a5      	cbz	r5, 800b41a <__d2b+0x92>
 800b3f0:	f2a5 4533 	subw	r5, r5, #1075	@ 0x433
 800b3f4:	4405      	add	r5, r0
 800b3f6:	603d      	str	r5, [r7, #0]
 800b3f8:	f1c0 0035 	rsb	r0, r0, #53	@ 0x35
 800b3fc:	6030      	str	r0, [r6, #0]
 800b3fe:	4620      	mov	r0, r4
 800b400:	b003      	add	sp, #12
 800b402:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800b406:	6161      	str	r1, [r4, #20]
 800b408:	e7ea      	b.n	800b3e0 <__d2b+0x58>
 800b40a:	a801      	add	r0, sp, #4
 800b40c:	f7ff fce9 	bl	800ade2 <__lo0bits>
 800b410:	9b01      	ldr	r3, [sp, #4]
 800b412:	6163      	str	r3, [r4, #20]
 800b414:	3020      	adds	r0, #32
 800b416:	2201      	movs	r2, #1
 800b418:	e7e8      	b.n	800b3ec <__d2b+0x64>
 800b41a:	eb04 0382 	add.w	r3, r4, r2, lsl #2
 800b41e:	f2a0 4032 	subw	r0, r0, #1074	@ 0x432
 800b422:	6038      	str	r0, [r7, #0]
 800b424:	6918      	ldr	r0, [r3, #16]
 800b426:	f7ff fcbd 	bl	800ada4 <__hi0bits>
 800b42a:	ebc0 1042 	rsb	r0, r0, r2, lsl #5
 800b42e:	e7e5      	b.n	800b3fc <__d2b+0x74>
 800b430:	0800d605 	.word	0x0800d605
 800b434:	0800d616 	.word	0x0800d616

0800b438 <__ratio>:
 800b438:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b43c:	b085      	sub	sp, #20
 800b43e:	e9cd 1000 	strd	r1, r0, [sp]
 800b442:	a902      	add	r1, sp, #8
 800b444:	f7ff ff56 	bl	800b2f4 <__b2d>
 800b448:	9800      	ldr	r0, [sp, #0]
 800b44a:	a903      	add	r1, sp, #12
 800b44c:	ec55 4b10 	vmov	r4, r5, d0
 800b450:	f7ff ff50 	bl	800b2f4 <__b2d>
 800b454:	9b01      	ldr	r3, [sp, #4]
 800b456:	6919      	ldr	r1, [r3, #16]
 800b458:	9b00      	ldr	r3, [sp, #0]
 800b45a:	691b      	ldr	r3, [r3, #16]
 800b45c:	1ac9      	subs	r1, r1, r3
 800b45e:	e9dd 3202 	ldrd	r3, r2, [sp, #8]
 800b462:	1a9b      	subs	r3, r3, r2
 800b464:	ec5b ab10 	vmov	sl, fp, d0
 800b468:	eb03 1341 	add.w	r3, r3, r1, lsl #5
 800b46c:	2b00      	cmp	r3, #0
 800b46e:	bfce      	itee	gt
 800b470:	462a      	movgt	r2, r5
 800b472:	ebc3 3303 	rsble	r3, r3, r3, lsl #12
 800b476:	465a      	movle	r2, fp
 800b478:	462f      	mov	r7, r5
 800b47a:	46d9      	mov	r9, fp
 800b47c:	bfcc      	ite	gt
 800b47e:	eb02 5703 	addgt.w	r7, r2, r3, lsl #20
 800b482:	eb02 5903 	addle.w	r9, r2, r3, lsl #20
 800b486:	464b      	mov	r3, r9
 800b488:	4652      	mov	r2, sl
 800b48a:	4620      	mov	r0, r4
 800b48c:	4639      	mov	r1, r7
 800b48e:	f7f5 f9fd 	bl	800088c <__aeabi_ddiv>
 800b492:	ec41 0b10 	vmov	d0, r0, r1
 800b496:	b005      	add	sp, #20
 800b498:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800b49c <__copybits>:
 800b49c:	3901      	subs	r1, #1
 800b49e:	b570      	push	{r4, r5, r6, lr}
 800b4a0:	1149      	asrs	r1, r1, #5
 800b4a2:	6914      	ldr	r4, [r2, #16]
 800b4a4:	3101      	adds	r1, #1
 800b4a6:	f102 0314 	add.w	r3, r2, #20
 800b4aa:	eb00 0181 	add.w	r1, r0, r1, lsl #2
 800b4ae:	eb03 0484 	add.w	r4, r3, r4, lsl #2
 800b4b2:	1f05      	subs	r5, r0, #4
 800b4b4:	42a3      	cmp	r3, r4
 800b4b6:	d30c      	bcc.n	800b4d2 <__copybits+0x36>
 800b4b8:	1aa3      	subs	r3, r4, r2
 800b4ba:	3b11      	subs	r3, #17
 800b4bc:	f023 0303 	bic.w	r3, r3, #3
 800b4c0:	3211      	adds	r2, #17
 800b4c2:	42a2      	cmp	r2, r4
 800b4c4:	bf88      	it	hi
 800b4c6:	2300      	movhi	r3, #0
 800b4c8:	4418      	add	r0, r3
 800b4ca:	2300      	movs	r3, #0
 800b4cc:	4288      	cmp	r0, r1
 800b4ce:	d305      	bcc.n	800b4dc <__copybits+0x40>
 800b4d0:	bd70      	pop	{r4, r5, r6, pc}
 800b4d2:	f853 6b04 	ldr.w	r6, [r3], #4
 800b4d6:	f845 6f04 	str.w	r6, [r5, #4]!
 800b4da:	e7eb      	b.n	800b4b4 <__copybits+0x18>
 800b4dc:	f840 3b04 	str.w	r3, [r0], #4
 800b4e0:	e7f4      	b.n	800b4cc <__copybits+0x30>

0800b4e2 <__any_on>:
 800b4e2:	f100 0214 	add.w	r2, r0, #20
 800b4e6:	6900      	ldr	r0, [r0, #16]
 800b4e8:	114b      	asrs	r3, r1, #5
 800b4ea:	4298      	cmp	r0, r3
 800b4ec:	b510      	push	{r4, lr}
 800b4ee:	db11      	blt.n	800b514 <__any_on+0x32>
 800b4f0:	dd0a      	ble.n	800b508 <__any_on+0x26>
 800b4f2:	f011 011f 	ands.w	r1, r1, #31
 800b4f6:	d007      	beq.n	800b508 <__any_on+0x26>
 800b4f8:	f852 4023 	ldr.w	r4, [r2, r3, lsl #2]
 800b4fc:	fa24 f001 	lsr.w	r0, r4, r1
 800b500:	fa00 f101 	lsl.w	r1, r0, r1
 800b504:	428c      	cmp	r4, r1
 800b506:	d10b      	bne.n	800b520 <__any_on+0x3e>
 800b508:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 800b50c:	4293      	cmp	r3, r2
 800b50e:	d803      	bhi.n	800b518 <__any_on+0x36>
 800b510:	2000      	movs	r0, #0
 800b512:	bd10      	pop	{r4, pc}
 800b514:	4603      	mov	r3, r0
 800b516:	e7f7      	b.n	800b508 <__any_on+0x26>
 800b518:	f853 1d04 	ldr.w	r1, [r3, #-4]!
 800b51c:	2900      	cmp	r1, #0
 800b51e:	d0f5      	beq.n	800b50c <__any_on+0x2a>
 800b520:	2001      	movs	r0, #1
 800b522:	e7f6      	b.n	800b512 <__any_on+0x30>

0800b524 <sulp>:
 800b524:	b570      	push	{r4, r5, r6, lr}
 800b526:	4604      	mov	r4, r0
 800b528:	460d      	mov	r5, r1
 800b52a:	ec45 4b10 	vmov	d0, r4, r5
 800b52e:	4616      	mov	r6, r2
 800b530:	f7ff feba 	bl	800b2a8 <__ulp>
 800b534:	ec51 0b10 	vmov	r0, r1, d0
 800b538:	b17e      	cbz	r6, 800b55a <sulp+0x36>
 800b53a:	f3c5 530a 	ubfx	r3, r5, #20, #11
 800b53e:	f1c3 036b 	rsb	r3, r3, #107	@ 0x6b
 800b542:	2b00      	cmp	r3, #0
 800b544:	dd09      	ble.n	800b55a <sulp+0x36>
 800b546:	051b      	lsls	r3, r3, #20
 800b548:	f103 557f 	add.w	r5, r3, #1069547520	@ 0x3fc00000
 800b54c:	2400      	movs	r4, #0
 800b54e:	f505 1540 	add.w	r5, r5, #3145728	@ 0x300000
 800b552:	4622      	mov	r2, r4
 800b554:	462b      	mov	r3, r5
 800b556:	f7f5 f86f 	bl	8000638 <__aeabi_dmul>
 800b55a:	ec41 0b10 	vmov	d0, r0, r1
 800b55e:	bd70      	pop	{r4, r5, r6, pc}

0800b560 <_strtod_l>:
 800b560:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b564:	b09f      	sub	sp, #124	@ 0x7c
 800b566:	460c      	mov	r4, r1
 800b568:	9217      	str	r2, [sp, #92]	@ 0x5c
 800b56a:	2200      	movs	r2, #0
 800b56c:	921a      	str	r2, [sp, #104]	@ 0x68
 800b56e:	9005      	str	r0, [sp, #20]
 800b570:	f04f 0a00 	mov.w	sl, #0
 800b574:	f04f 0b00 	mov.w	fp, #0
 800b578:	460a      	mov	r2, r1
 800b57a:	9219      	str	r2, [sp, #100]	@ 0x64
 800b57c:	7811      	ldrb	r1, [r2, #0]
 800b57e:	292b      	cmp	r1, #43	@ 0x2b
 800b580:	d04a      	beq.n	800b618 <_strtod_l+0xb8>
 800b582:	d838      	bhi.n	800b5f6 <_strtod_l+0x96>
 800b584:	290d      	cmp	r1, #13
 800b586:	d832      	bhi.n	800b5ee <_strtod_l+0x8e>
 800b588:	2908      	cmp	r1, #8
 800b58a:	d832      	bhi.n	800b5f2 <_strtod_l+0x92>
 800b58c:	2900      	cmp	r1, #0
 800b58e:	d03b      	beq.n	800b608 <_strtod_l+0xa8>
 800b590:	2200      	movs	r2, #0
 800b592:	920b      	str	r2, [sp, #44]	@ 0x2c
 800b594:	9d19      	ldr	r5, [sp, #100]	@ 0x64
 800b596:	782a      	ldrb	r2, [r5, #0]
 800b598:	2a30      	cmp	r2, #48	@ 0x30
 800b59a:	f040 80b3 	bne.w	800b704 <_strtod_l+0x1a4>
 800b59e:	786a      	ldrb	r2, [r5, #1]
 800b5a0:	f002 02df 	and.w	r2, r2, #223	@ 0xdf
 800b5a4:	2a58      	cmp	r2, #88	@ 0x58
 800b5a6:	d16e      	bne.n	800b686 <_strtod_l+0x126>
 800b5a8:	9302      	str	r3, [sp, #8]
 800b5aa:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 800b5ac:	9301      	str	r3, [sp, #4]
 800b5ae:	ab1a      	add	r3, sp, #104	@ 0x68
 800b5b0:	9300      	str	r3, [sp, #0]
 800b5b2:	4a8e      	ldr	r2, [pc, #568]	@ (800b7ec <_strtod_l+0x28c>)
 800b5b4:	9805      	ldr	r0, [sp, #20]
 800b5b6:	ab1b      	add	r3, sp, #108	@ 0x6c
 800b5b8:	a919      	add	r1, sp, #100	@ 0x64
 800b5ba:	f001 fadf 	bl	800cb7c <__gethex>
 800b5be:	f010 060f 	ands.w	r6, r0, #15
 800b5c2:	4604      	mov	r4, r0
 800b5c4:	d005      	beq.n	800b5d2 <_strtod_l+0x72>
 800b5c6:	2e06      	cmp	r6, #6
 800b5c8:	d128      	bne.n	800b61c <_strtod_l+0xbc>
 800b5ca:	3501      	adds	r5, #1
 800b5cc:	2300      	movs	r3, #0
 800b5ce:	9519      	str	r5, [sp, #100]	@ 0x64
 800b5d0:	930b      	str	r3, [sp, #44]	@ 0x2c
 800b5d2:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 800b5d4:	2b00      	cmp	r3, #0
 800b5d6:	f040 858e 	bne.w	800c0f6 <_strtod_l+0xb96>
 800b5da:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 800b5dc:	b1cb      	cbz	r3, 800b612 <_strtod_l+0xb2>
 800b5de:	4652      	mov	r2, sl
 800b5e0:	f10b 4300 	add.w	r3, fp, #2147483648	@ 0x80000000
 800b5e4:	ec43 2b10 	vmov	d0, r2, r3
 800b5e8:	b01f      	add	sp, #124	@ 0x7c
 800b5ea:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800b5ee:	2920      	cmp	r1, #32
 800b5f0:	d1ce      	bne.n	800b590 <_strtod_l+0x30>
 800b5f2:	3201      	adds	r2, #1
 800b5f4:	e7c1      	b.n	800b57a <_strtod_l+0x1a>
 800b5f6:	292d      	cmp	r1, #45	@ 0x2d
 800b5f8:	d1ca      	bne.n	800b590 <_strtod_l+0x30>
 800b5fa:	2101      	movs	r1, #1
 800b5fc:	910b      	str	r1, [sp, #44]	@ 0x2c
 800b5fe:	1c51      	adds	r1, r2, #1
 800b600:	9119      	str	r1, [sp, #100]	@ 0x64
 800b602:	7852      	ldrb	r2, [r2, #1]
 800b604:	2a00      	cmp	r2, #0
 800b606:	d1c5      	bne.n	800b594 <_strtod_l+0x34>
 800b608:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 800b60a:	9419      	str	r4, [sp, #100]	@ 0x64
 800b60c:	2b00      	cmp	r3, #0
 800b60e:	f040 8570 	bne.w	800c0f2 <_strtod_l+0xb92>
 800b612:	4652      	mov	r2, sl
 800b614:	465b      	mov	r3, fp
 800b616:	e7e5      	b.n	800b5e4 <_strtod_l+0x84>
 800b618:	2100      	movs	r1, #0
 800b61a:	e7ef      	b.n	800b5fc <_strtod_l+0x9c>
 800b61c:	9a1a      	ldr	r2, [sp, #104]	@ 0x68
 800b61e:	b13a      	cbz	r2, 800b630 <_strtod_l+0xd0>
 800b620:	2135      	movs	r1, #53	@ 0x35
 800b622:	a81c      	add	r0, sp, #112	@ 0x70
 800b624:	f7ff ff3a 	bl	800b49c <__copybits>
 800b628:	991a      	ldr	r1, [sp, #104]	@ 0x68
 800b62a:	9805      	ldr	r0, [sp, #20]
 800b62c:	f7ff fb08 	bl	800ac40 <_Bfree>
 800b630:	3e01      	subs	r6, #1
 800b632:	9a1b      	ldr	r2, [sp, #108]	@ 0x6c
 800b634:	2e04      	cmp	r6, #4
 800b636:	d806      	bhi.n	800b646 <_strtod_l+0xe6>
 800b638:	e8df f006 	tbb	[pc, r6]
 800b63c:	201d0314 	.word	0x201d0314
 800b640:	14          	.byte	0x14
 800b641:	00          	.byte	0x00
 800b642:	e9dd ab1c 	ldrd	sl, fp, [sp, #112]	@ 0x70
 800b646:	05e1      	lsls	r1, r4, #23
 800b648:	bf48      	it	mi
 800b64a:	f04b 4b00 	orrmi.w	fp, fp, #2147483648	@ 0x80000000
 800b64e:	f02b 4300 	bic.w	r3, fp, #2147483648	@ 0x80000000
 800b652:	0d1b      	lsrs	r3, r3, #20
 800b654:	051b      	lsls	r3, r3, #20
 800b656:	2b00      	cmp	r3, #0
 800b658:	d1bb      	bne.n	800b5d2 <_strtod_l+0x72>
 800b65a:	f7fe fb21 	bl	8009ca0 <__errno>
 800b65e:	2322      	movs	r3, #34	@ 0x22
 800b660:	6003      	str	r3, [r0, #0]
 800b662:	e7b6      	b.n	800b5d2 <_strtod_l+0x72>
 800b664:	e9dd a31c 	ldrd	sl, r3, [sp, #112]	@ 0x70
 800b668:	f202 4233 	addw	r2, r2, #1075	@ 0x433
 800b66c:	f423 1380 	bic.w	r3, r3, #1048576	@ 0x100000
 800b670:	ea43 5b02 	orr.w	fp, r3, r2, lsl #20
 800b674:	e7e7      	b.n	800b646 <_strtod_l+0xe6>
 800b676:	f8df b17c 	ldr.w	fp, [pc, #380]	@ 800b7f4 <_strtod_l+0x294>
 800b67a:	e7e4      	b.n	800b646 <_strtod_l+0xe6>
 800b67c:	f06f 4b00 	mvn.w	fp, #2147483648	@ 0x80000000
 800b680:	f04f 3aff 	mov.w	sl, #4294967295
 800b684:	e7df      	b.n	800b646 <_strtod_l+0xe6>
 800b686:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 800b688:	1c5a      	adds	r2, r3, #1
 800b68a:	9219      	str	r2, [sp, #100]	@ 0x64
 800b68c:	785b      	ldrb	r3, [r3, #1]
 800b68e:	2b30      	cmp	r3, #48	@ 0x30
 800b690:	d0f9      	beq.n	800b686 <_strtod_l+0x126>
 800b692:	2b00      	cmp	r3, #0
 800b694:	d09d      	beq.n	800b5d2 <_strtod_l+0x72>
 800b696:	2301      	movs	r3, #1
 800b698:	9309      	str	r3, [sp, #36]	@ 0x24
 800b69a:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 800b69c:	930c      	str	r3, [sp, #48]	@ 0x30
 800b69e:	2300      	movs	r3, #0
 800b6a0:	9308      	str	r3, [sp, #32]
 800b6a2:	930a      	str	r3, [sp, #40]	@ 0x28
 800b6a4:	461f      	mov	r7, r3
 800b6a6:	220a      	movs	r2, #10
 800b6a8:	9819      	ldr	r0, [sp, #100]	@ 0x64
 800b6aa:	7805      	ldrb	r5, [r0, #0]
 800b6ac:	f1a5 0330 	sub.w	r3, r5, #48	@ 0x30
 800b6b0:	b2d9      	uxtb	r1, r3
 800b6b2:	2909      	cmp	r1, #9
 800b6b4:	d928      	bls.n	800b708 <_strtod_l+0x1a8>
 800b6b6:	494e      	ldr	r1, [pc, #312]	@ (800b7f0 <_strtod_l+0x290>)
 800b6b8:	2201      	movs	r2, #1
 800b6ba:	f001 f979 	bl	800c9b0 <strncmp>
 800b6be:	2800      	cmp	r0, #0
 800b6c0:	d032      	beq.n	800b728 <_strtod_l+0x1c8>
 800b6c2:	2000      	movs	r0, #0
 800b6c4:	462a      	mov	r2, r5
 800b6c6:	4681      	mov	r9, r0
 800b6c8:	463d      	mov	r5, r7
 800b6ca:	4603      	mov	r3, r0
 800b6cc:	2a65      	cmp	r2, #101	@ 0x65
 800b6ce:	d001      	beq.n	800b6d4 <_strtod_l+0x174>
 800b6d0:	2a45      	cmp	r2, #69	@ 0x45
 800b6d2:	d114      	bne.n	800b6fe <_strtod_l+0x19e>
 800b6d4:	b91d      	cbnz	r5, 800b6de <_strtod_l+0x17e>
 800b6d6:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 800b6d8:	4302      	orrs	r2, r0
 800b6da:	d095      	beq.n	800b608 <_strtod_l+0xa8>
 800b6dc:	2500      	movs	r5, #0
 800b6de:	9c19      	ldr	r4, [sp, #100]	@ 0x64
 800b6e0:	1c62      	adds	r2, r4, #1
 800b6e2:	9219      	str	r2, [sp, #100]	@ 0x64
 800b6e4:	7862      	ldrb	r2, [r4, #1]
 800b6e6:	2a2b      	cmp	r2, #43	@ 0x2b
 800b6e8:	d077      	beq.n	800b7da <_strtod_l+0x27a>
 800b6ea:	2a2d      	cmp	r2, #45	@ 0x2d
 800b6ec:	d07b      	beq.n	800b7e6 <_strtod_l+0x286>
 800b6ee:	f04f 0c00 	mov.w	ip, #0
 800b6f2:	f1a2 0130 	sub.w	r1, r2, #48	@ 0x30
 800b6f6:	2909      	cmp	r1, #9
 800b6f8:	f240 8082 	bls.w	800b800 <_strtod_l+0x2a0>
 800b6fc:	9419      	str	r4, [sp, #100]	@ 0x64
 800b6fe:	f04f 0800 	mov.w	r8, #0
 800b702:	e0a2      	b.n	800b84a <_strtod_l+0x2ea>
 800b704:	2300      	movs	r3, #0
 800b706:	e7c7      	b.n	800b698 <_strtod_l+0x138>
 800b708:	2f08      	cmp	r7, #8
 800b70a:	bfd5      	itete	le
 800b70c:	990a      	ldrle	r1, [sp, #40]	@ 0x28
 800b70e:	9908      	ldrgt	r1, [sp, #32]
 800b710:	fb02 3301 	mlale	r3, r2, r1, r3
 800b714:	fb02 3301 	mlagt	r3, r2, r1, r3
 800b718:	f100 0001 	add.w	r0, r0, #1
 800b71c:	bfd4      	ite	le
 800b71e:	930a      	strle	r3, [sp, #40]	@ 0x28
 800b720:	9308      	strgt	r3, [sp, #32]
 800b722:	3701      	adds	r7, #1
 800b724:	9019      	str	r0, [sp, #100]	@ 0x64
 800b726:	e7bf      	b.n	800b6a8 <_strtod_l+0x148>
 800b728:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 800b72a:	1c5a      	adds	r2, r3, #1
 800b72c:	9219      	str	r2, [sp, #100]	@ 0x64
 800b72e:	785a      	ldrb	r2, [r3, #1]
 800b730:	b37f      	cbz	r7, 800b792 <_strtod_l+0x232>
 800b732:	4681      	mov	r9, r0
 800b734:	463d      	mov	r5, r7
 800b736:	f1a2 0330 	sub.w	r3, r2, #48	@ 0x30
 800b73a:	2b09      	cmp	r3, #9
 800b73c:	d912      	bls.n	800b764 <_strtod_l+0x204>
 800b73e:	2301      	movs	r3, #1
 800b740:	e7c4      	b.n	800b6cc <_strtod_l+0x16c>
 800b742:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 800b744:	1c5a      	adds	r2, r3, #1
 800b746:	9219      	str	r2, [sp, #100]	@ 0x64
 800b748:	785a      	ldrb	r2, [r3, #1]
 800b74a:	3001      	adds	r0, #1
 800b74c:	2a30      	cmp	r2, #48	@ 0x30
 800b74e:	d0f8      	beq.n	800b742 <_strtod_l+0x1e2>
 800b750:	f1a2 0331 	sub.w	r3, r2, #49	@ 0x31
 800b754:	2b08      	cmp	r3, #8
 800b756:	f200 84d3 	bhi.w	800c100 <_strtod_l+0xba0>
 800b75a:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 800b75c:	930c      	str	r3, [sp, #48]	@ 0x30
 800b75e:	4681      	mov	r9, r0
 800b760:	2000      	movs	r0, #0
 800b762:	4605      	mov	r5, r0
 800b764:	3a30      	subs	r2, #48	@ 0x30
 800b766:	f100 0301 	add.w	r3, r0, #1
 800b76a:	d02a      	beq.n	800b7c2 <_strtod_l+0x262>
 800b76c:	4499      	add	r9, r3
 800b76e:	eb00 0c05 	add.w	ip, r0, r5
 800b772:	462b      	mov	r3, r5
 800b774:	210a      	movs	r1, #10
 800b776:	4563      	cmp	r3, ip
 800b778:	d10d      	bne.n	800b796 <_strtod_l+0x236>
 800b77a:	1c69      	adds	r1, r5, #1
 800b77c:	4401      	add	r1, r0
 800b77e:	4428      	add	r0, r5
 800b780:	2808      	cmp	r0, #8
 800b782:	dc16      	bgt.n	800b7b2 <_strtod_l+0x252>
 800b784:	980a      	ldr	r0, [sp, #40]	@ 0x28
 800b786:	230a      	movs	r3, #10
 800b788:	fb03 2300 	mla	r3, r3, r0, r2
 800b78c:	930a      	str	r3, [sp, #40]	@ 0x28
 800b78e:	2300      	movs	r3, #0
 800b790:	e018      	b.n	800b7c4 <_strtod_l+0x264>
 800b792:	4638      	mov	r0, r7
 800b794:	e7da      	b.n	800b74c <_strtod_l+0x1ec>
 800b796:	2b08      	cmp	r3, #8
 800b798:	f103 0301 	add.w	r3, r3, #1
 800b79c:	dc03      	bgt.n	800b7a6 <_strtod_l+0x246>
 800b79e:	9e0a      	ldr	r6, [sp, #40]	@ 0x28
 800b7a0:	434e      	muls	r6, r1
 800b7a2:	960a      	str	r6, [sp, #40]	@ 0x28
 800b7a4:	e7e7      	b.n	800b776 <_strtod_l+0x216>
 800b7a6:	2b10      	cmp	r3, #16
 800b7a8:	bfde      	ittt	le
 800b7aa:	9e08      	ldrle	r6, [sp, #32]
 800b7ac:	434e      	mulle	r6, r1
 800b7ae:	9608      	strle	r6, [sp, #32]
 800b7b0:	e7e1      	b.n	800b776 <_strtod_l+0x216>
 800b7b2:	280f      	cmp	r0, #15
 800b7b4:	dceb      	bgt.n	800b78e <_strtod_l+0x22e>
 800b7b6:	9808      	ldr	r0, [sp, #32]
 800b7b8:	230a      	movs	r3, #10
 800b7ba:	fb03 2300 	mla	r3, r3, r0, r2
 800b7be:	9308      	str	r3, [sp, #32]
 800b7c0:	e7e5      	b.n	800b78e <_strtod_l+0x22e>
 800b7c2:	4629      	mov	r1, r5
 800b7c4:	9a19      	ldr	r2, [sp, #100]	@ 0x64
 800b7c6:	1c50      	adds	r0, r2, #1
 800b7c8:	9019      	str	r0, [sp, #100]	@ 0x64
 800b7ca:	7852      	ldrb	r2, [r2, #1]
 800b7cc:	4618      	mov	r0, r3
 800b7ce:	460d      	mov	r5, r1
 800b7d0:	e7b1      	b.n	800b736 <_strtod_l+0x1d6>
 800b7d2:	f04f 0900 	mov.w	r9, #0
 800b7d6:	2301      	movs	r3, #1
 800b7d8:	e77d      	b.n	800b6d6 <_strtod_l+0x176>
 800b7da:	f04f 0c00 	mov.w	ip, #0
 800b7de:	1ca2      	adds	r2, r4, #2
 800b7e0:	9219      	str	r2, [sp, #100]	@ 0x64
 800b7e2:	78a2      	ldrb	r2, [r4, #2]
 800b7e4:	e785      	b.n	800b6f2 <_strtod_l+0x192>
 800b7e6:	f04f 0c01 	mov.w	ip, #1
 800b7ea:	e7f8      	b.n	800b7de <_strtod_l+0x27e>
 800b7ec:	0800d788 	.word	0x0800d788
 800b7f0:	0800d770 	.word	0x0800d770
 800b7f4:	7ff00000 	.word	0x7ff00000
 800b7f8:	9a19      	ldr	r2, [sp, #100]	@ 0x64
 800b7fa:	1c51      	adds	r1, r2, #1
 800b7fc:	9119      	str	r1, [sp, #100]	@ 0x64
 800b7fe:	7852      	ldrb	r2, [r2, #1]
 800b800:	2a30      	cmp	r2, #48	@ 0x30
 800b802:	d0f9      	beq.n	800b7f8 <_strtod_l+0x298>
 800b804:	f1a2 0131 	sub.w	r1, r2, #49	@ 0x31
 800b808:	2908      	cmp	r1, #8
 800b80a:	f63f af78 	bhi.w	800b6fe <_strtod_l+0x19e>
 800b80e:	3a30      	subs	r2, #48	@ 0x30
 800b810:	920e      	str	r2, [sp, #56]	@ 0x38
 800b812:	9a19      	ldr	r2, [sp, #100]	@ 0x64
 800b814:	920f      	str	r2, [sp, #60]	@ 0x3c
 800b816:	f04f 080a 	mov.w	r8, #10
 800b81a:	9a19      	ldr	r2, [sp, #100]	@ 0x64
 800b81c:	1c56      	adds	r6, r2, #1
 800b81e:	9619      	str	r6, [sp, #100]	@ 0x64
 800b820:	7852      	ldrb	r2, [r2, #1]
 800b822:	f1a2 0e30 	sub.w	lr, r2, #48	@ 0x30
 800b826:	f1be 0f09 	cmp.w	lr, #9
 800b82a:	d939      	bls.n	800b8a0 <_strtod_l+0x340>
 800b82c:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 800b82e:	1a76      	subs	r6, r6, r1
 800b830:	2e08      	cmp	r6, #8
 800b832:	f644 681f 	movw	r8, #19999	@ 0x4e1f
 800b836:	dc03      	bgt.n	800b840 <_strtod_l+0x2e0>
 800b838:	990e      	ldr	r1, [sp, #56]	@ 0x38
 800b83a:	4588      	cmp	r8, r1
 800b83c:	bfa8      	it	ge
 800b83e:	4688      	movge	r8, r1
 800b840:	f1bc 0f00 	cmp.w	ip, #0
 800b844:	d001      	beq.n	800b84a <_strtod_l+0x2ea>
 800b846:	f1c8 0800 	rsb	r8, r8, #0
 800b84a:	2d00      	cmp	r5, #0
 800b84c:	d14e      	bne.n	800b8ec <_strtod_l+0x38c>
 800b84e:	9909      	ldr	r1, [sp, #36]	@ 0x24
 800b850:	4308      	orrs	r0, r1
 800b852:	f47f aebe 	bne.w	800b5d2 <_strtod_l+0x72>
 800b856:	2b00      	cmp	r3, #0
 800b858:	f47f aed6 	bne.w	800b608 <_strtod_l+0xa8>
 800b85c:	2a69      	cmp	r2, #105	@ 0x69
 800b85e:	d028      	beq.n	800b8b2 <_strtod_l+0x352>
 800b860:	dc25      	bgt.n	800b8ae <_strtod_l+0x34e>
 800b862:	2a49      	cmp	r2, #73	@ 0x49
 800b864:	d025      	beq.n	800b8b2 <_strtod_l+0x352>
 800b866:	2a4e      	cmp	r2, #78	@ 0x4e
 800b868:	f47f aece 	bne.w	800b608 <_strtod_l+0xa8>
 800b86c:	499b      	ldr	r1, [pc, #620]	@ (800badc <_strtod_l+0x57c>)
 800b86e:	a819      	add	r0, sp, #100	@ 0x64
 800b870:	f001 fba6 	bl	800cfc0 <__match>
 800b874:	2800      	cmp	r0, #0
 800b876:	f43f aec7 	beq.w	800b608 <_strtod_l+0xa8>
 800b87a:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 800b87c:	781b      	ldrb	r3, [r3, #0]
 800b87e:	2b28      	cmp	r3, #40	@ 0x28
 800b880:	d12e      	bne.n	800b8e0 <_strtod_l+0x380>
 800b882:	4997      	ldr	r1, [pc, #604]	@ (800bae0 <_strtod_l+0x580>)
 800b884:	aa1c      	add	r2, sp, #112	@ 0x70
 800b886:	a819      	add	r0, sp, #100	@ 0x64
 800b888:	f001 fbae 	bl	800cfe8 <__hexnan>
 800b88c:	2805      	cmp	r0, #5
 800b88e:	d127      	bne.n	800b8e0 <_strtod_l+0x380>
 800b890:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 800b892:	f8dd a070 	ldr.w	sl, [sp, #112]	@ 0x70
 800b896:	f043 4bff 	orr.w	fp, r3, #2139095040	@ 0x7f800000
 800b89a:	f44b 0be0 	orr.w	fp, fp, #7340032	@ 0x700000
 800b89e:	e698      	b.n	800b5d2 <_strtod_l+0x72>
 800b8a0:	990e      	ldr	r1, [sp, #56]	@ 0x38
 800b8a2:	fb08 2101 	mla	r1, r8, r1, r2
 800b8a6:	f1a1 0230 	sub.w	r2, r1, #48	@ 0x30
 800b8aa:	920e      	str	r2, [sp, #56]	@ 0x38
 800b8ac:	e7b5      	b.n	800b81a <_strtod_l+0x2ba>
 800b8ae:	2a6e      	cmp	r2, #110	@ 0x6e
 800b8b0:	e7da      	b.n	800b868 <_strtod_l+0x308>
 800b8b2:	498c      	ldr	r1, [pc, #560]	@ (800bae4 <_strtod_l+0x584>)
 800b8b4:	a819      	add	r0, sp, #100	@ 0x64
 800b8b6:	f001 fb83 	bl	800cfc0 <__match>
 800b8ba:	2800      	cmp	r0, #0
 800b8bc:	f43f aea4 	beq.w	800b608 <_strtod_l+0xa8>
 800b8c0:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 800b8c2:	4989      	ldr	r1, [pc, #548]	@ (800bae8 <_strtod_l+0x588>)
 800b8c4:	3b01      	subs	r3, #1
 800b8c6:	a819      	add	r0, sp, #100	@ 0x64
 800b8c8:	9319      	str	r3, [sp, #100]	@ 0x64
 800b8ca:	f001 fb79 	bl	800cfc0 <__match>
 800b8ce:	b910      	cbnz	r0, 800b8d6 <_strtod_l+0x376>
 800b8d0:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 800b8d2:	3301      	adds	r3, #1
 800b8d4:	9319      	str	r3, [sp, #100]	@ 0x64
 800b8d6:	f8df b220 	ldr.w	fp, [pc, #544]	@ 800baf8 <_strtod_l+0x598>
 800b8da:	f04f 0a00 	mov.w	sl, #0
 800b8de:	e678      	b.n	800b5d2 <_strtod_l+0x72>
 800b8e0:	4882      	ldr	r0, [pc, #520]	@ (800baec <_strtod_l+0x58c>)
 800b8e2:	f001 f8a9 	bl	800ca38 <nan>
 800b8e6:	ec5b ab10 	vmov	sl, fp, d0
 800b8ea:	e672      	b.n	800b5d2 <_strtod_l+0x72>
 800b8ec:	eba8 0309 	sub.w	r3, r8, r9
 800b8f0:	980a      	ldr	r0, [sp, #40]	@ 0x28
 800b8f2:	9309      	str	r3, [sp, #36]	@ 0x24
 800b8f4:	2f00      	cmp	r7, #0
 800b8f6:	bf08      	it	eq
 800b8f8:	462f      	moveq	r7, r5
 800b8fa:	2d10      	cmp	r5, #16
 800b8fc:	462c      	mov	r4, r5
 800b8fe:	bfa8      	it	ge
 800b900:	2410      	movge	r4, #16
 800b902:	f7f4 fe1f 	bl	8000544 <__aeabi_ui2d>
 800b906:	2d09      	cmp	r5, #9
 800b908:	4682      	mov	sl, r0
 800b90a:	468b      	mov	fp, r1
 800b90c:	dc13      	bgt.n	800b936 <_strtod_l+0x3d6>
 800b90e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800b910:	2b00      	cmp	r3, #0
 800b912:	f43f ae5e 	beq.w	800b5d2 <_strtod_l+0x72>
 800b916:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800b918:	dd78      	ble.n	800ba0c <_strtod_l+0x4ac>
 800b91a:	2b16      	cmp	r3, #22
 800b91c:	dc5f      	bgt.n	800b9de <_strtod_l+0x47e>
 800b91e:	4974      	ldr	r1, [pc, #464]	@ (800baf0 <_strtod_l+0x590>)
 800b920:	eb01 01c3 	add.w	r1, r1, r3, lsl #3
 800b924:	e9d1 0100 	ldrd	r0, r1, [r1]
 800b928:	4652      	mov	r2, sl
 800b92a:	465b      	mov	r3, fp
 800b92c:	f7f4 fe84 	bl	8000638 <__aeabi_dmul>
 800b930:	4682      	mov	sl, r0
 800b932:	468b      	mov	fp, r1
 800b934:	e64d      	b.n	800b5d2 <_strtod_l+0x72>
 800b936:	4b6e      	ldr	r3, [pc, #440]	@ (800baf0 <_strtod_l+0x590>)
 800b938:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
 800b93c:	e953 2312 	ldrd	r2, r3, [r3, #-72]	@ 0x48
 800b940:	f7f4 fe7a 	bl	8000638 <__aeabi_dmul>
 800b944:	4682      	mov	sl, r0
 800b946:	9808      	ldr	r0, [sp, #32]
 800b948:	468b      	mov	fp, r1
 800b94a:	f7f4 fdfb 	bl	8000544 <__aeabi_ui2d>
 800b94e:	4602      	mov	r2, r0
 800b950:	460b      	mov	r3, r1
 800b952:	4650      	mov	r0, sl
 800b954:	4659      	mov	r1, fp
 800b956:	f7f4 fcb9 	bl	80002cc <__adddf3>
 800b95a:	2d0f      	cmp	r5, #15
 800b95c:	4682      	mov	sl, r0
 800b95e:	468b      	mov	fp, r1
 800b960:	ddd5      	ble.n	800b90e <_strtod_l+0x3ae>
 800b962:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800b964:	1b2c      	subs	r4, r5, r4
 800b966:	441c      	add	r4, r3
 800b968:	2c00      	cmp	r4, #0
 800b96a:	f340 8096 	ble.w	800ba9a <_strtod_l+0x53a>
 800b96e:	f014 030f 	ands.w	r3, r4, #15
 800b972:	d00a      	beq.n	800b98a <_strtod_l+0x42a>
 800b974:	495e      	ldr	r1, [pc, #376]	@ (800baf0 <_strtod_l+0x590>)
 800b976:	eb01 01c3 	add.w	r1, r1, r3, lsl #3
 800b97a:	4652      	mov	r2, sl
 800b97c:	465b      	mov	r3, fp
 800b97e:	e9d1 0100 	ldrd	r0, r1, [r1]
 800b982:	f7f4 fe59 	bl	8000638 <__aeabi_dmul>
 800b986:	4682      	mov	sl, r0
 800b988:	468b      	mov	fp, r1
 800b98a:	f034 040f 	bics.w	r4, r4, #15
 800b98e:	d073      	beq.n	800ba78 <_strtod_l+0x518>
 800b990:	f5b4 7f9a 	cmp.w	r4, #308	@ 0x134
 800b994:	dd48      	ble.n	800ba28 <_strtod_l+0x4c8>
 800b996:	2400      	movs	r4, #0
 800b998:	46a0      	mov	r8, r4
 800b99a:	940a      	str	r4, [sp, #40]	@ 0x28
 800b99c:	46a1      	mov	r9, r4
 800b99e:	9a05      	ldr	r2, [sp, #20]
 800b9a0:	f8df b154 	ldr.w	fp, [pc, #340]	@ 800baf8 <_strtod_l+0x598>
 800b9a4:	2322      	movs	r3, #34	@ 0x22
 800b9a6:	6013      	str	r3, [r2, #0]
 800b9a8:	f04f 0a00 	mov.w	sl, #0
 800b9ac:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 800b9ae:	2b00      	cmp	r3, #0
 800b9b0:	f43f ae0f 	beq.w	800b5d2 <_strtod_l+0x72>
 800b9b4:	991a      	ldr	r1, [sp, #104]	@ 0x68
 800b9b6:	9805      	ldr	r0, [sp, #20]
 800b9b8:	f7ff f942 	bl	800ac40 <_Bfree>
 800b9bc:	9805      	ldr	r0, [sp, #20]
 800b9be:	4649      	mov	r1, r9
 800b9c0:	f7ff f93e 	bl	800ac40 <_Bfree>
 800b9c4:	9805      	ldr	r0, [sp, #20]
 800b9c6:	4641      	mov	r1, r8
 800b9c8:	f7ff f93a 	bl	800ac40 <_Bfree>
 800b9cc:	990a      	ldr	r1, [sp, #40]	@ 0x28
 800b9ce:	9805      	ldr	r0, [sp, #20]
 800b9d0:	f7ff f936 	bl	800ac40 <_Bfree>
 800b9d4:	9805      	ldr	r0, [sp, #20]
 800b9d6:	4621      	mov	r1, r4
 800b9d8:	f7ff f932 	bl	800ac40 <_Bfree>
 800b9dc:	e5f9      	b.n	800b5d2 <_strtod_l+0x72>
 800b9de:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 800b9e0:	f1c5 0325 	rsb	r3, r5, #37	@ 0x25
 800b9e4:	4293      	cmp	r3, r2
 800b9e6:	dbbc      	blt.n	800b962 <_strtod_l+0x402>
 800b9e8:	4c41      	ldr	r4, [pc, #260]	@ (800baf0 <_strtod_l+0x590>)
 800b9ea:	f1c5 050f 	rsb	r5, r5, #15
 800b9ee:	eb04 01c5 	add.w	r1, r4, r5, lsl #3
 800b9f2:	4652      	mov	r2, sl
 800b9f4:	465b      	mov	r3, fp
 800b9f6:	e9d1 0100 	ldrd	r0, r1, [r1]
 800b9fa:	f7f4 fe1d 	bl	8000638 <__aeabi_dmul>
 800b9fe:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800ba00:	1b5d      	subs	r5, r3, r5
 800ba02:	eb04 04c5 	add.w	r4, r4, r5, lsl #3
 800ba06:	e9d4 2300 	ldrd	r2, r3, [r4]
 800ba0a:	e78f      	b.n	800b92c <_strtod_l+0x3cc>
 800ba0c:	3316      	adds	r3, #22
 800ba0e:	dba8      	blt.n	800b962 <_strtod_l+0x402>
 800ba10:	4b37      	ldr	r3, [pc, #220]	@ (800baf0 <_strtod_l+0x590>)
 800ba12:	eba9 0808 	sub.w	r8, r9, r8
 800ba16:	eb03 08c8 	add.w	r8, r3, r8, lsl #3
 800ba1a:	e9d8 2300 	ldrd	r2, r3, [r8]
 800ba1e:	4650      	mov	r0, sl
 800ba20:	4659      	mov	r1, fp
 800ba22:	f7f4 ff33 	bl	800088c <__aeabi_ddiv>
 800ba26:	e783      	b.n	800b930 <_strtod_l+0x3d0>
 800ba28:	4b32      	ldr	r3, [pc, #200]	@ (800baf4 <_strtod_l+0x594>)
 800ba2a:	9308      	str	r3, [sp, #32]
 800ba2c:	2300      	movs	r3, #0
 800ba2e:	1124      	asrs	r4, r4, #4
 800ba30:	4650      	mov	r0, sl
 800ba32:	4659      	mov	r1, fp
 800ba34:	461e      	mov	r6, r3
 800ba36:	2c01      	cmp	r4, #1
 800ba38:	dc21      	bgt.n	800ba7e <_strtod_l+0x51e>
 800ba3a:	b10b      	cbz	r3, 800ba40 <_strtod_l+0x4e0>
 800ba3c:	4682      	mov	sl, r0
 800ba3e:	468b      	mov	fp, r1
 800ba40:	492c      	ldr	r1, [pc, #176]	@ (800baf4 <_strtod_l+0x594>)
 800ba42:	f1ab 7b54 	sub.w	fp, fp, #55574528	@ 0x3500000
 800ba46:	eb01 01c6 	add.w	r1, r1, r6, lsl #3
 800ba4a:	4652      	mov	r2, sl
 800ba4c:	465b      	mov	r3, fp
 800ba4e:	e9d1 0100 	ldrd	r0, r1, [r1]
 800ba52:	f7f4 fdf1 	bl	8000638 <__aeabi_dmul>
 800ba56:	4b28      	ldr	r3, [pc, #160]	@ (800baf8 <_strtod_l+0x598>)
 800ba58:	460a      	mov	r2, r1
 800ba5a:	400b      	ands	r3, r1
 800ba5c:	4927      	ldr	r1, [pc, #156]	@ (800bafc <_strtod_l+0x59c>)
 800ba5e:	428b      	cmp	r3, r1
 800ba60:	4682      	mov	sl, r0
 800ba62:	d898      	bhi.n	800b996 <_strtod_l+0x436>
 800ba64:	f5a1 1180 	sub.w	r1, r1, #1048576	@ 0x100000
 800ba68:	428b      	cmp	r3, r1
 800ba6a:	bf86      	itte	hi
 800ba6c:	f8df b090 	ldrhi.w	fp, [pc, #144]	@ 800bb00 <_strtod_l+0x5a0>
 800ba70:	f04f 3aff 	movhi.w	sl, #4294967295
 800ba74:	f102 7b54 	addls.w	fp, r2, #55574528	@ 0x3500000
 800ba78:	2300      	movs	r3, #0
 800ba7a:	9308      	str	r3, [sp, #32]
 800ba7c:	e07a      	b.n	800bb74 <_strtod_l+0x614>
 800ba7e:	07e2      	lsls	r2, r4, #31
 800ba80:	d505      	bpl.n	800ba8e <_strtod_l+0x52e>
 800ba82:	9b08      	ldr	r3, [sp, #32]
 800ba84:	e9d3 2300 	ldrd	r2, r3, [r3]
 800ba88:	f7f4 fdd6 	bl	8000638 <__aeabi_dmul>
 800ba8c:	2301      	movs	r3, #1
 800ba8e:	9a08      	ldr	r2, [sp, #32]
 800ba90:	3208      	adds	r2, #8
 800ba92:	3601      	adds	r6, #1
 800ba94:	1064      	asrs	r4, r4, #1
 800ba96:	9208      	str	r2, [sp, #32]
 800ba98:	e7cd      	b.n	800ba36 <_strtod_l+0x4d6>
 800ba9a:	d0ed      	beq.n	800ba78 <_strtod_l+0x518>
 800ba9c:	4264      	negs	r4, r4
 800ba9e:	f014 020f 	ands.w	r2, r4, #15
 800baa2:	d00a      	beq.n	800baba <_strtod_l+0x55a>
 800baa4:	4b12      	ldr	r3, [pc, #72]	@ (800baf0 <_strtod_l+0x590>)
 800baa6:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 800baaa:	4650      	mov	r0, sl
 800baac:	4659      	mov	r1, fp
 800baae:	e9d3 2300 	ldrd	r2, r3, [r3]
 800bab2:	f7f4 feeb 	bl	800088c <__aeabi_ddiv>
 800bab6:	4682      	mov	sl, r0
 800bab8:	468b      	mov	fp, r1
 800baba:	1124      	asrs	r4, r4, #4
 800babc:	d0dc      	beq.n	800ba78 <_strtod_l+0x518>
 800babe:	2c1f      	cmp	r4, #31
 800bac0:	dd20      	ble.n	800bb04 <_strtod_l+0x5a4>
 800bac2:	2400      	movs	r4, #0
 800bac4:	46a0      	mov	r8, r4
 800bac6:	940a      	str	r4, [sp, #40]	@ 0x28
 800bac8:	46a1      	mov	r9, r4
 800baca:	9a05      	ldr	r2, [sp, #20]
 800bacc:	2322      	movs	r3, #34	@ 0x22
 800bace:	f04f 0a00 	mov.w	sl, #0
 800bad2:	f04f 0b00 	mov.w	fp, #0
 800bad6:	6013      	str	r3, [r2, #0]
 800bad8:	e768      	b.n	800b9ac <_strtod_l+0x44c>
 800bada:	bf00      	nop
 800badc:	0800d55d 	.word	0x0800d55d
 800bae0:	0800d774 	.word	0x0800d774
 800bae4:	0800d555 	.word	0x0800d555
 800bae8:	0800d58c 	.word	0x0800d58c
 800baec:	0800d91d 	.word	0x0800d91d
 800baf0:	0800d6a8 	.word	0x0800d6a8
 800baf4:	0800d680 	.word	0x0800d680
 800baf8:	7ff00000 	.word	0x7ff00000
 800bafc:	7ca00000 	.word	0x7ca00000
 800bb00:	7fefffff 	.word	0x7fefffff
 800bb04:	f014 0310 	ands.w	r3, r4, #16
 800bb08:	bf18      	it	ne
 800bb0a:	236a      	movne	r3, #106	@ 0x6a
 800bb0c:	4ea9      	ldr	r6, [pc, #676]	@ (800bdb4 <_strtod_l+0x854>)
 800bb0e:	9308      	str	r3, [sp, #32]
 800bb10:	4650      	mov	r0, sl
 800bb12:	4659      	mov	r1, fp
 800bb14:	2300      	movs	r3, #0
 800bb16:	07e2      	lsls	r2, r4, #31
 800bb18:	d504      	bpl.n	800bb24 <_strtod_l+0x5c4>
 800bb1a:	e9d6 2300 	ldrd	r2, r3, [r6]
 800bb1e:	f7f4 fd8b 	bl	8000638 <__aeabi_dmul>
 800bb22:	2301      	movs	r3, #1
 800bb24:	1064      	asrs	r4, r4, #1
 800bb26:	f106 0608 	add.w	r6, r6, #8
 800bb2a:	d1f4      	bne.n	800bb16 <_strtod_l+0x5b6>
 800bb2c:	b10b      	cbz	r3, 800bb32 <_strtod_l+0x5d2>
 800bb2e:	4682      	mov	sl, r0
 800bb30:	468b      	mov	fp, r1
 800bb32:	9b08      	ldr	r3, [sp, #32]
 800bb34:	b1b3      	cbz	r3, 800bb64 <_strtod_l+0x604>
 800bb36:	f3cb 520a 	ubfx	r2, fp, #20, #11
 800bb3a:	f1c2 036b 	rsb	r3, r2, #107	@ 0x6b
 800bb3e:	2b00      	cmp	r3, #0
 800bb40:	4659      	mov	r1, fp
 800bb42:	dd0f      	ble.n	800bb64 <_strtod_l+0x604>
 800bb44:	2b1f      	cmp	r3, #31
 800bb46:	dd55      	ble.n	800bbf4 <_strtod_l+0x694>
 800bb48:	2b34      	cmp	r3, #52	@ 0x34
 800bb4a:	bfde      	ittt	le
 800bb4c:	f04f 33ff 	movle.w	r3, #4294967295
 800bb50:	f1c2 024b 	rsble	r2, r2, #75	@ 0x4b
 800bb54:	4093      	lslle	r3, r2
 800bb56:	f04f 0a00 	mov.w	sl, #0
 800bb5a:	bfcc      	ite	gt
 800bb5c:	f04f 7b5c 	movgt.w	fp, #57671680	@ 0x3700000
 800bb60:	ea03 0b01 	andle.w	fp, r3, r1
 800bb64:	2200      	movs	r2, #0
 800bb66:	2300      	movs	r3, #0
 800bb68:	4650      	mov	r0, sl
 800bb6a:	4659      	mov	r1, fp
 800bb6c:	f7f4 ffcc 	bl	8000b08 <__aeabi_dcmpeq>
 800bb70:	2800      	cmp	r0, #0
 800bb72:	d1a6      	bne.n	800bac2 <_strtod_l+0x562>
 800bb74:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 800bb76:	9300      	str	r3, [sp, #0]
 800bb78:	990c      	ldr	r1, [sp, #48]	@ 0x30
 800bb7a:	9805      	ldr	r0, [sp, #20]
 800bb7c:	462b      	mov	r3, r5
 800bb7e:	463a      	mov	r2, r7
 800bb80:	f7ff f8c6 	bl	800ad10 <__s2b>
 800bb84:	900a      	str	r0, [sp, #40]	@ 0x28
 800bb86:	2800      	cmp	r0, #0
 800bb88:	f43f af05 	beq.w	800b996 <_strtod_l+0x436>
 800bb8c:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 800bb8e:	2a00      	cmp	r2, #0
 800bb90:	eba9 0308 	sub.w	r3, r9, r8
 800bb94:	bfa8      	it	ge
 800bb96:	2300      	movge	r3, #0
 800bb98:	9312      	str	r3, [sp, #72]	@ 0x48
 800bb9a:	2400      	movs	r4, #0
 800bb9c:	ea22 73e2 	bic.w	r3, r2, r2, asr #31
 800bba0:	9316      	str	r3, [sp, #88]	@ 0x58
 800bba2:	46a0      	mov	r8, r4
 800bba4:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 800bba6:	9805      	ldr	r0, [sp, #20]
 800bba8:	6859      	ldr	r1, [r3, #4]
 800bbaa:	f7ff f809 	bl	800abc0 <_Balloc>
 800bbae:	4681      	mov	r9, r0
 800bbb0:	2800      	cmp	r0, #0
 800bbb2:	f43f aef4 	beq.w	800b99e <_strtod_l+0x43e>
 800bbb6:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 800bbb8:	691a      	ldr	r2, [r3, #16]
 800bbba:	3202      	adds	r2, #2
 800bbbc:	f103 010c 	add.w	r1, r3, #12
 800bbc0:	0092      	lsls	r2, r2, #2
 800bbc2:	300c      	adds	r0, #12
 800bbc4:	f7fe f899 	bl	8009cfa <memcpy>
 800bbc8:	ec4b ab10 	vmov	d0, sl, fp
 800bbcc:	9805      	ldr	r0, [sp, #20]
 800bbce:	aa1c      	add	r2, sp, #112	@ 0x70
 800bbd0:	a91b      	add	r1, sp, #108	@ 0x6c
 800bbd2:	e9cd ab0c 	strd	sl, fp, [sp, #48]	@ 0x30
 800bbd6:	f7ff fbd7 	bl	800b388 <__d2b>
 800bbda:	901a      	str	r0, [sp, #104]	@ 0x68
 800bbdc:	2800      	cmp	r0, #0
 800bbde:	f43f aede 	beq.w	800b99e <_strtod_l+0x43e>
 800bbe2:	9805      	ldr	r0, [sp, #20]
 800bbe4:	2101      	movs	r1, #1
 800bbe6:	f7ff f929 	bl	800ae3c <__i2b>
 800bbea:	4680      	mov	r8, r0
 800bbec:	b948      	cbnz	r0, 800bc02 <_strtod_l+0x6a2>
 800bbee:	f04f 0800 	mov.w	r8, #0
 800bbf2:	e6d4      	b.n	800b99e <_strtod_l+0x43e>
 800bbf4:	f04f 32ff 	mov.w	r2, #4294967295
 800bbf8:	fa02 f303 	lsl.w	r3, r2, r3
 800bbfc:	ea03 0a0a 	and.w	sl, r3, sl
 800bc00:	e7b0      	b.n	800bb64 <_strtod_l+0x604>
 800bc02:	9d1b      	ldr	r5, [sp, #108]	@ 0x6c
 800bc04:	9a1c      	ldr	r2, [sp, #112]	@ 0x70
 800bc06:	2d00      	cmp	r5, #0
 800bc08:	bfab      	itete	ge
 800bc0a:	9b12      	ldrge	r3, [sp, #72]	@ 0x48
 800bc0c:	9b16      	ldrlt	r3, [sp, #88]	@ 0x58
 800bc0e:	9e16      	ldrge	r6, [sp, #88]	@ 0x58
 800bc10:	9f12      	ldrlt	r7, [sp, #72]	@ 0x48
 800bc12:	bfac      	ite	ge
 800bc14:	18ef      	addge	r7, r5, r3
 800bc16:	1b5e      	sublt	r6, r3, r5
 800bc18:	9b08      	ldr	r3, [sp, #32]
 800bc1a:	1aed      	subs	r5, r5, r3
 800bc1c:	4415      	add	r5, r2
 800bc1e:	4b66      	ldr	r3, [pc, #408]	@ (800bdb8 <_strtod_l+0x858>)
 800bc20:	3d01      	subs	r5, #1
 800bc22:	429d      	cmp	r5, r3
 800bc24:	f1c2 0236 	rsb	r2, r2, #54	@ 0x36
 800bc28:	da50      	bge.n	800bccc <_strtod_l+0x76c>
 800bc2a:	1b5b      	subs	r3, r3, r5
 800bc2c:	2b1f      	cmp	r3, #31
 800bc2e:	eba2 0203 	sub.w	r2, r2, r3
 800bc32:	f04f 0101 	mov.w	r1, #1
 800bc36:	dc3d      	bgt.n	800bcb4 <_strtod_l+0x754>
 800bc38:	fa01 f303 	lsl.w	r3, r1, r3
 800bc3c:	9313      	str	r3, [sp, #76]	@ 0x4c
 800bc3e:	2300      	movs	r3, #0
 800bc40:	9310      	str	r3, [sp, #64]	@ 0x40
 800bc42:	18bd      	adds	r5, r7, r2
 800bc44:	9b08      	ldr	r3, [sp, #32]
 800bc46:	42af      	cmp	r7, r5
 800bc48:	4416      	add	r6, r2
 800bc4a:	441e      	add	r6, r3
 800bc4c:	463b      	mov	r3, r7
 800bc4e:	bfa8      	it	ge
 800bc50:	462b      	movge	r3, r5
 800bc52:	42b3      	cmp	r3, r6
 800bc54:	bfa8      	it	ge
 800bc56:	4633      	movge	r3, r6
 800bc58:	2b00      	cmp	r3, #0
 800bc5a:	bfc2      	ittt	gt
 800bc5c:	1aed      	subgt	r5, r5, r3
 800bc5e:	1af6      	subgt	r6, r6, r3
 800bc60:	1aff      	subgt	r7, r7, r3
 800bc62:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 800bc64:	2b00      	cmp	r3, #0
 800bc66:	dd16      	ble.n	800bc96 <_strtod_l+0x736>
 800bc68:	4641      	mov	r1, r8
 800bc6a:	9805      	ldr	r0, [sp, #20]
 800bc6c:	461a      	mov	r2, r3
 800bc6e:	f7ff f9a5 	bl	800afbc <__pow5mult>
 800bc72:	4680      	mov	r8, r0
 800bc74:	2800      	cmp	r0, #0
 800bc76:	d0ba      	beq.n	800bbee <_strtod_l+0x68e>
 800bc78:	4601      	mov	r1, r0
 800bc7a:	9a1a      	ldr	r2, [sp, #104]	@ 0x68
 800bc7c:	9805      	ldr	r0, [sp, #20]
 800bc7e:	f7ff f8f3 	bl	800ae68 <__multiply>
 800bc82:	900e      	str	r0, [sp, #56]	@ 0x38
 800bc84:	2800      	cmp	r0, #0
 800bc86:	f43f ae8a 	beq.w	800b99e <_strtod_l+0x43e>
 800bc8a:	991a      	ldr	r1, [sp, #104]	@ 0x68
 800bc8c:	9805      	ldr	r0, [sp, #20]
 800bc8e:	f7fe ffd7 	bl	800ac40 <_Bfree>
 800bc92:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 800bc94:	931a      	str	r3, [sp, #104]	@ 0x68
 800bc96:	2d00      	cmp	r5, #0
 800bc98:	dc1d      	bgt.n	800bcd6 <_strtod_l+0x776>
 800bc9a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800bc9c:	2b00      	cmp	r3, #0
 800bc9e:	dd23      	ble.n	800bce8 <_strtod_l+0x788>
 800bca0:	4649      	mov	r1, r9
 800bca2:	9a16      	ldr	r2, [sp, #88]	@ 0x58
 800bca4:	9805      	ldr	r0, [sp, #20]
 800bca6:	f7ff f989 	bl	800afbc <__pow5mult>
 800bcaa:	4681      	mov	r9, r0
 800bcac:	b9e0      	cbnz	r0, 800bce8 <_strtod_l+0x788>
 800bcae:	f04f 0900 	mov.w	r9, #0
 800bcb2:	e674      	b.n	800b99e <_strtod_l+0x43e>
 800bcb4:	f1c5 457f 	rsb	r5, r5, #4278190080	@ 0xff000000
 800bcb8:	f505 057f 	add.w	r5, r5, #16711680	@ 0xff0000
 800bcbc:	f505 457b 	add.w	r5, r5, #64256	@ 0xfb00
 800bcc0:	35e2      	adds	r5, #226	@ 0xe2
 800bcc2:	fa01 f305 	lsl.w	r3, r1, r5
 800bcc6:	9310      	str	r3, [sp, #64]	@ 0x40
 800bcc8:	9113      	str	r1, [sp, #76]	@ 0x4c
 800bcca:	e7ba      	b.n	800bc42 <_strtod_l+0x6e2>
 800bccc:	2300      	movs	r3, #0
 800bcce:	9310      	str	r3, [sp, #64]	@ 0x40
 800bcd0:	2301      	movs	r3, #1
 800bcd2:	9313      	str	r3, [sp, #76]	@ 0x4c
 800bcd4:	e7b5      	b.n	800bc42 <_strtod_l+0x6e2>
 800bcd6:	991a      	ldr	r1, [sp, #104]	@ 0x68
 800bcd8:	9805      	ldr	r0, [sp, #20]
 800bcda:	462a      	mov	r2, r5
 800bcdc:	f7ff f9c8 	bl	800b070 <__lshift>
 800bce0:	901a      	str	r0, [sp, #104]	@ 0x68
 800bce2:	2800      	cmp	r0, #0
 800bce4:	d1d9      	bne.n	800bc9a <_strtod_l+0x73a>
 800bce6:	e65a      	b.n	800b99e <_strtod_l+0x43e>
 800bce8:	2e00      	cmp	r6, #0
 800bcea:	dd07      	ble.n	800bcfc <_strtod_l+0x79c>
 800bcec:	4649      	mov	r1, r9
 800bcee:	9805      	ldr	r0, [sp, #20]
 800bcf0:	4632      	mov	r2, r6
 800bcf2:	f7ff f9bd 	bl	800b070 <__lshift>
 800bcf6:	4681      	mov	r9, r0
 800bcf8:	2800      	cmp	r0, #0
 800bcfa:	d0d8      	beq.n	800bcae <_strtod_l+0x74e>
 800bcfc:	2f00      	cmp	r7, #0
 800bcfe:	dd08      	ble.n	800bd12 <_strtod_l+0x7b2>
 800bd00:	4641      	mov	r1, r8
 800bd02:	9805      	ldr	r0, [sp, #20]
 800bd04:	463a      	mov	r2, r7
 800bd06:	f7ff f9b3 	bl	800b070 <__lshift>
 800bd0a:	4680      	mov	r8, r0
 800bd0c:	2800      	cmp	r0, #0
 800bd0e:	f43f ae46 	beq.w	800b99e <_strtod_l+0x43e>
 800bd12:	991a      	ldr	r1, [sp, #104]	@ 0x68
 800bd14:	9805      	ldr	r0, [sp, #20]
 800bd16:	464a      	mov	r2, r9
 800bd18:	f7ff fa32 	bl	800b180 <__mdiff>
 800bd1c:	4604      	mov	r4, r0
 800bd1e:	2800      	cmp	r0, #0
 800bd20:	f43f ae3d 	beq.w	800b99e <_strtod_l+0x43e>
 800bd24:	68c3      	ldr	r3, [r0, #12]
 800bd26:	930f      	str	r3, [sp, #60]	@ 0x3c
 800bd28:	2300      	movs	r3, #0
 800bd2a:	60c3      	str	r3, [r0, #12]
 800bd2c:	4641      	mov	r1, r8
 800bd2e:	f7ff fa0b 	bl	800b148 <__mcmp>
 800bd32:	2800      	cmp	r0, #0
 800bd34:	da46      	bge.n	800bdc4 <_strtod_l+0x864>
 800bd36:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 800bd38:	ea53 030a 	orrs.w	r3, r3, sl
 800bd3c:	d16c      	bne.n	800be18 <_strtod_l+0x8b8>
 800bd3e:	f3cb 0313 	ubfx	r3, fp, #0, #20
 800bd42:	2b00      	cmp	r3, #0
 800bd44:	d168      	bne.n	800be18 <_strtod_l+0x8b8>
 800bd46:	f02b 4300 	bic.w	r3, fp, #2147483648	@ 0x80000000
 800bd4a:	0d1b      	lsrs	r3, r3, #20
 800bd4c:	051b      	lsls	r3, r3, #20
 800bd4e:	f1b3 6fd6 	cmp.w	r3, #112197632	@ 0x6b00000
 800bd52:	d961      	bls.n	800be18 <_strtod_l+0x8b8>
 800bd54:	6963      	ldr	r3, [r4, #20]
 800bd56:	b913      	cbnz	r3, 800bd5e <_strtod_l+0x7fe>
 800bd58:	6923      	ldr	r3, [r4, #16]
 800bd5a:	2b01      	cmp	r3, #1
 800bd5c:	dd5c      	ble.n	800be18 <_strtod_l+0x8b8>
 800bd5e:	4621      	mov	r1, r4
 800bd60:	2201      	movs	r2, #1
 800bd62:	9805      	ldr	r0, [sp, #20]
 800bd64:	f7ff f984 	bl	800b070 <__lshift>
 800bd68:	4641      	mov	r1, r8
 800bd6a:	4604      	mov	r4, r0
 800bd6c:	f7ff f9ec 	bl	800b148 <__mcmp>
 800bd70:	2800      	cmp	r0, #0
 800bd72:	dd51      	ble.n	800be18 <_strtod_l+0x8b8>
 800bd74:	f02b 4300 	bic.w	r3, fp, #2147483648	@ 0x80000000
 800bd78:	9a08      	ldr	r2, [sp, #32]
 800bd7a:	0d1b      	lsrs	r3, r3, #20
 800bd7c:	051b      	lsls	r3, r3, #20
 800bd7e:	2a00      	cmp	r2, #0
 800bd80:	d06b      	beq.n	800be5a <_strtod_l+0x8fa>
 800bd82:	f1b3 6fd6 	cmp.w	r3, #112197632	@ 0x6b00000
 800bd86:	d868      	bhi.n	800be5a <_strtod_l+0x8fa>
 800bd88:	f1b3 7f5c 	cmp.w	r3, #57671680	@ 0x3700000
 800bd8c:	f67f ae9d 	bls.w	800baca <_strtod_l+0x56a>
 800bd90:	4b0a      	ldr	r3, [pc, #40]	@ (800bdbc <_strtod_l+0x85c>)
 800bd92:	4650      	mov	r0, sl
 800bd94:	4659      	mov	r1, fp
 800bd96:	2200      	movs	r2, #0
 800bd98:	f7f4 fc4e 	bl	8000638 <__aeabi_dmul>
 800bd9c:	4b08      	ldr	r3, [pc, #32]	@ (800bdc0 <_strtod_l+0x860>)
 800bd9e:	400b      	ands	r3, r1
 800bda0:	4682      	mov	sl, r0
 800bda2:	468b      	mov	fp, r1
 800bda4:	2b00      	cmp	r3, #0
 800bda6:	f47f ae05 	bne.w	800b9b4 <_strtod_l+0x454>
 800bdaa:	9a05      	ldr	r2, [sp, #20]
 800bdac:	2322      	movs	r3, #34	@ 0x22
 800bdae:	6013      	str	r3, [r2, #0]
 800bdb0:	e600      	b.n	800b9b4 <_strtod_l+0x454>
 800bdb2:	bf00      	nop
 800bdb4:	0800d7a0 	.word	0x0800d7a0
 800bdb8:	fffffc02 	.word	0xfffffc02
 800bdbc:	39500000 	.word	0x39500000
 800bdc0:	7ff00000 	.word	0x7ff00000
 800bdc4:	f8cd b038 	str.w	fp, [sp, #56]	@ 0x38
 800bdc8:	d165      	bne.n	800be96 <_strtod_l+0x936>
 800bdca:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 800bdcc:	f3cb 0313 	ubfx	r3, fp, #0, #20
 800bdd0:	b35a      	cbz	r2, 800be2a <_strtod_l+0x8ca>
 800bdd2:	4a9f      	ldr	r2, [pc, #636]	@ (800c050 <_strtod_l+0xaf0>)
 800bdd4:	4293      	cmp	r3, r2
 800bdd6:	d12b      	bne.n	800be30 <_strtod_l+0x8d0>
 800bdd8:	9b08      	ldr	r3, [sp, #32]
 800bdda:	4651      	mov	r1, sl
 800bddc:	b303      	cbz	r3, 800be20 <_strtod_l+0x8c0>
 800bdde:	4b9d      	ldr	r3, [pc, #628]	@ (800c054 <_strtod_l+0xaf4>)
 800bde0:	465a      	mov	r2, fp
 800bde2:	4013      	ands	r3, r2
 800bde4:	f1b3 6fd4 	cmp.w	r3, #111149056	@ 0x6a00000
 800bde8:	f04f 32ff 	mov.w	r2, #4294967295
 800bdec:	d81b      	bhi.n	800be26 <_strtod_l+0x8c6>
 800bdee:	0d1b      	lsrs	r3, r3, #20
 800bdf0:	f1c3 036b 	rsb	r3, r3, #107	@ 0x6b
 800bdf4:	fa02 f303 	lsl.w	r3, r2, r3
 800bdf8:	4299      	cmp	r1, r3
 800bdfa:	d119      	bne.n	800be30 <_strtod_l+0x8d0>
 800bdfc:	4b96      	ldr	r3, [pc, #600]	@ (800c058 <_strtod_l+0xaf8>)
 800bdfe:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 800be00:	429a      	cmp	r2, r3
 800be02:	d102      	bne.n	800be0a <_strtod_l+0x8aa>
 800be04:	3101      	adds	r1, #1
 800be06:	f43f adca 	beq.w	800b99e <_strtod_l+0x43e>
 800be0a:	4b92      	ldr	r3, [pc, #584]	@ (800c054 <_strtod_l+0xaf4>)
 800be0c:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 800be0e:	401a      	ands	r2, r3
 800be10:	f502 1b80 	add.w	fp, r2, #1048576	@ 0x100000
 800be14:	f04f 0a00 	mov.w	sl, #0
 800be18:	9b08      	ldr	r3, [sp, #32]
 800be1a:	2b00      	cmp	r3, #0
 800be1c:	d1b8      	bne.n	800bd90 <_strtod_l+0x830>
 800be1e:	e5c9      	b.n	800b9b4 <_strtod_l+0x454>
 800be20:	f04f 33ff 	mov.w	r3, #4294967295
 800be24:	e7e8      	b.n	800bdf8 <_strtod_l+0x898>
 800be26:	4613      	mov	r3, r2
 800be28:	e7e6      	b.n	800bdf8 <_strtod_l+0x898>
 800be2a:	ea53 030a 	orrs.w	r3, r3, sl
 800be2e:	d0a1      	beq.n	800bd74 <_strtod_l+0x814>
 800be30:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 800be32:	b1db      	cbz	r3, 800be6c <_strtod_l+0x90c>
 800be34:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 800be36:	4213      	tst	r3, r2
 800be38:	d0ee      	beq.n	800be18 <_strtod_l+0x8b8>
 800be3a:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 800be3c:	9a08      	ldr	r2, [sp, #32]
 800be3e:	4650      	mov	r0, sl
 800be40:	4659      	mov	r1, fp
 800be42:	b1bb      	cbz	r3, 800be74 <_strtod_l+0x914>
 800be44:	f7ff fb6e 	bl	800b524 <sulp>
 800be48:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 800be4c:	ec53 2b10 	vmov	r2, r3, d0
 800be50:	f7f4 fa3c 	bl	80002cc <__adddf3>
 800be54:	4682      	mov	sl, r0
 800be56:	468b      	mov	fp, r1
 800be58:	e7de      	b.n	800be18 <_strtod_l+0x8b8>
 800be5a:	f5a3 1380 	sub.w	r3, r3, #1048576	@ 0x100000
 800be5e:	ea6f 5b13 	mvn.w	fp, r3, lsr #20
 800be62:	ea6f 5b0b 	mvn.w	fp, fp, lsl #20
 800be66:	f04f 3aff 	mov.w	sl, #4294967295
 800be6a:	e7d5      	b.n	800be18 <_strtod_l+0x8b8>
 800be6c:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 800be6e:	ea13 0f0a 	tst.w	r3, sl
 800be72:	e7e1      	b.n	800be38 <_strtod_l+0x8d8>
 800be74:	f7ff fb56 	bl	800b524 <sulp>
 800be78:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 800be7c:	ec53 2b10 	vmov	r2, r3, d0
 800be80:	f7f4 fa22 	bl	80002c8 <__aeabi_dsub>
 800be84:	2200      	movs	r2, #0
 800be86:	2300      	movs	r3, #0
 800be88:	4682      	mov	sl, r0
 800be8a:	468b      	mov	fp, r1
 800be8c:	f7f4 fe3c 	bl	8000b08 <__aeabi_dcmpeq>
 800be90:	2800      	cmp	r0, #0
 800be92:	d0c1      	beq.n	800be18 <_strtod_l+0x8b8>
 800be94:	e619      	b.n	800baca <_strtod_l+0x56a>
 800be96:	4641      	mov	r1, r8
 800be98:	4620      	mov	r0, r4
 800be9a:	f7ff facd 	bl	800b438 <__ratio>
 800be9e:	ec57 6b10 	vmov	r6, r7, d0
 800bea2:	2200      	movs	r2, #0
 800bea4:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 800bea8:	4630      	mov	r0, r6
 800beaa:	4639      	mov	r1, r7
 800beac:	f7f4 fe40 	bl	8000b30 <__aeabi_dcmple>
 800beb0:	2800      	cmp	r0, #0
 800beb2:	d06f      	beq.n	800bf94 <_strtod_l+0xa34>
 800beb4:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 800beb6:	2b00      	cmp	r3, #0
 800beb8:	d17a      	bne.n	800bfb0 <_strtod_l+0xa50>
 800beba:	f1ba 0f00 	cmp.w	sl, #0
 800bebe:	d158      	bne.n	800bf72 <_strtod_l+0xa12>
 800bec0:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 800bec2:	f3c3 0313 	ubfx	r3, r3, #0, #20
 800bec6:	2b00      	cmp	r3, #0
 800bec8:	d15a      	bne.n	800bf80 <_strtod_l+0xa20>
 800beca:	4b64      	ldr	r3, [pc, #400]	@ (800c05c <_strtod_l+0xafc>)
 800becc:	2200      	movs	r2, #0
 800bece:	4630      	mov	r0, r6
 800bed0:	4639      	mov	r1, r7
 800bed2:	f7f4 fe23 	bl	8000b1c <__aeabi_dcmplt>
 800bed6:	2800      	cmp	r0, #0
 800bed8:	d159      	bne.n	800bf8e <_strtod_l+0xa2e>
 800beda:	4630      	mov	r0, r6
 800bedc:	4639      	mov	r1, r7
 800bede:	4b60      	ldr	r3, [pc, #384]	@ (800c060 <_strtod_l+0xb00>)
 800bee0:	2200      	movs	r2, #0
 800bee2:	f7f4 fba9 	bl	8000638 <__aeabi_dmul>
 800bee6:	4606      	mov	r6, r0
 800bee8:	460f      	mov	r7, r1
 800beea:	f107 4300 	add.w	r3, r7, #2147483648	@ 0x80000000
 800beee:	9606      	str	r6, [sp, #24]
 800bef0:	9307      	str	r3, [sp, #28]
 800bef2:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 800bef6:	4d57      	ldr	r5, [pc, #348]	@ (800c054 <_strtod_l+0xaf4>)
 800bef8:	e9cd 2310 	strd	r2, r3, [sp, #64]	@ 0x40
 800befc:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 800befe:	401d      	ands	r5, r3
 800bf00:	4b58      	ldr	r3, [pc, #352]	@ (800c064 <_strtod_l+0xb04>)
 800bf02:	429d      	cmp	r5, r3
 800bf04:	f040 80b2 	bne.w	800c06c <_strtod_l+0xb0c>
 800bf08:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 800bf0a:	f1a3 7b54 	sub.w	fp, r3, #55574528	@ 0x3500000
 800bf0e:	ec4b ab10 	vmov	d0, sl, fp
 800bf12:	f7ff f9c9 	bl	800b2a8 <__ulp>
 800bf16:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 800bf1a:	ec51 0b10 	vmov	r0, r1, d0
 800bf1e:	f7f4 fb8b 	bl	8000638 <__aeabi_dmul>
 800bf22:	4652      	mov	r2, sl
 800bf24:	465b      	mov	r3, fp
 800bf26:	f7f4 f9d1 	bl	80002cc <__adddf3>
 800bf2a:	460b      	mov	r3, r1
 800bf2c:	4949      	ldr	r1, [pc, #292]	@ (800c054 <_strtod_l+0xaf4>)
 800bf2e:	4a4e      	ldr	r2, [pc, #312]	@ (800c068 <_strtod_l+0xb08>)
 800bf30:	4019      	ands	r1, r3
 800bf32:	4291      	cmp	r1, r2
 800bf34:	4682      	mov	sl, r0
 800bf36:	d942      	bls.n	800bfbe <_strtod_l+0xa5e>
 800bf38:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 800bf3a:	4b47      	ldr	r3, [pc, #284]	@ (800c058 <_strtod_l+0xaf8>)
 800bf3c:	429a      	cmp	r2, r3
 800bf3e:	d103      	bne.n	800bf48 <_strtod_l+0x9e8>
 800bf40:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 800bf42:	3301      	adds	r3, #1
 800bf44:	f43f ad2b 	beq.w	800b99e <_strtod_l+0x43e>
 800bf48:	f8df b10c 	ldr.w	fp, [pc, #268]	@ 800c058 <_strtod_l+0xaf8>
 800bf4c:	f04f 3aff 	mov.w	sl, #4294967295
 800bf50:	991a      	ldr	r1, [sp, #104]	@ 0x68
 800bf52:	9805      	ldr	r0, [sp, #20]
 800bf54:	f7fe fe74 	bl	800ac40 <_Bfree>
 800bf58:	9805      	ldr	r0, [sp, #20]
 800bf5a:	4649      	mov	r1, r9
 800bf5c:	f7fe fe70 	bl	800ac40 <_Bfree>
 800bf60:	9805      	ldr	r0, [sp, #20]
 800bf62:	4641      	mov	r1, r8
 800bf64:	f7fe fe6c 	bl	800ac40 <_Bfree>
 800bf68:	9805      	ldr	r0, [sp, #20]
 800bf6a:	4621      	mov	r1, r4
 800bf6c:	f7fe fe68 	bl	800ac40 <_Bfree>
 800bf70:	e618      	b.n	800bba4 <_strtod_l+0x644>
 800bf72:	f1ba 0f01 	cmp.w	sl, #1
 800bf76:	d103      	bne.n	800bf80 <_strtod_l+0xa20>
 800bf78:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 800bf7a:	2b00      	cmp	r3, #0
 800bf7c:	f43f ada5 	beq.w	800baca <_strtod_l+0x56a>
 800bf80:	ed9f 7b2b 	vldr	d7, [pc, #172]	@ 800c030 <_strtod_l+0xad0>
 800bf84:	4f35      	ldr	r7, [pc, #212]	@ (800c05c <_strtod_l+0xafc>)
 800bf86:	ed8d 7b06 	vstr	d7, [sp, #24]
 800bf8a:	2600      	movs	r6, #0
 800bf8c:	e7b1      	b.n	800bef2 <_strtod_l+0x992>
 800bf8e:	4f34      	ldr	r7, [pc, #208]	@ (800c060 <_strtod_l+0xb00>)
 800bf90:	2600      	movs	r6, #0
 800bf92:	e7aa      	b.n	800beea <_strtod_l+0x98a>
 800bf94:	4b32      	ldr	r3, [pc, #200]	@ (800c060 <_strtod_l+0xb00>)
 800bf96:	4630      	mov	r0, r6
 800bf98:	4639      	mov	r1, r7
 800bf9a:	2200      	movs	r2, #0
 800bf9c:	f7f4 fb4c 	bl	8000638 <__aeabi_dmul>
 800bfa0:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 800bfa2:	4606      	mov	r6, r0
 800bfa4:	460f      	mov	r7, r1
 800bfa6:	2b00      	cmp	r3, #0
 800bfa8:	d09f      	beq.n	800beea <_strtod_l+0x98a>
 800bfaa:	e9cd 6706 	strd	r6, r7, [sp, #24]
 800bfae:	e7a0      	b.n	800bef2 <_strtod_l+0x992>
 800bfb0:	ed9f 7b21 	vldr	d7, [pc, #132]	@ 800c038 <_strtod_l+0xad8>
 800bfb4:	ed8d 7b06 	vstr	d7, [sp, #24]
 800bfb8:	ec57 6b17 	vmov	r6, r7, d7
 800bfbc:	e799      	b.n	800bef2 <_strtod_l+0x992>
 800bfbe:	f103 7b54 	add.w	fp, r3, #55574528	@ 0x3500000
 800bfc2:	9b08      	ldr	r3, [sp, #32]
 800bfc4:	f8cd b038 	str.w	fp, [sp, #56]	@ 0x38
 800bfc8:	2b00      	cmp	r3, #0
 800bfca:	d1c1      	bne.n	800bf50 <_strtod_l+0x9f0>
 800bfcc:	f02b 4300 	bic.w	r3, fp, #2147483648	@ 0x80000000
 800bfd0:	0d1b      	lsrs	r3, r3, #20
 800bfd2:	051b      	lsls	r3, r3, #20
 800bfd4:	429d      	cmp	r5, r3
 800bfd6:	d1bb      	bne.n	800bf50 <_strtod_l+0x9f0>
 800bfd8:	4630      	mov	r0, r6
 800bfda:	4639      	mov	r1, r7
 800bfdc:	f7f4 fe8c 	bl	8000cf8 <__aeabi_d2lz>
 800bfe0:	f7f4 fafc 	bl	80005dc <__aeabi_l2d>
 800bfe4:	4602      	mov	r2, r0
 800bfe6:	460b      	mov	r3, r1
 800bfe8:	4630      	mov	r0, r6
 800bfea:	4639      	mov	r1, r7
 800bfec:	f7f4 f96c 	bl	80002c8 <__aeabi_dsub>
 800bff0:	460b      	mov	r3, r1
 800bff2:	4602      	mov	r2, r0
 800bff4:	e9cd 230c 	strd	r2, r3, [sp, #48]	@ 0x30
 800bff8:	f3cb 0613 	ubfx	r6, fp, #0, #20
 800bffc:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 800bffe:	ea46 060a 	orr.w	r6, r6, sl
 800c002:	431e      	orrs	r6, r3
 800c004:	d06f      	beq.n	800c0e6 <_strtod_l+0xb86>
 800c006:	a30e      	add	r3, pc, #56	@ (adr r3, 800c040 <_strtod_l+0xae0>)
 800c008:	e9d3 2300 	ldrd	r2, r3, [r3]
 800c00c:	f7f4 fd86 	bl	8000b1c <__aeabi_dcmplt>
 800c010:	2800      	cmp	r0, #0
 800c012:	f47f accf 	bne.w	800b9b4 <_strtod_l+0x454>
 800c016:	a30c      	add	r3, pc, #48	@ (adr r3, 800c048 <_strtod_l+0xae8>)
 800c018:	e9d3 2300 	ldrd	r2, r3, [r3]
 800c01c:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 800c020:	f7f4 fd9a 	bl	8000b58 <__aeabi_dcmpgt>
 800c024:	2800      	cmp	r0, #0
 800c026:	d093      	beq.n	800bf50 <_strtod_l+0x9f0>
 800c028:	e4c4      	b.n	800b9b4 <_strtod_l+0x454>
 800c02a:	bf00      	nop
 800c02c:	f3af 8000 	nop.w
 800c030:	00000000 	.word	0x00000000
 800c034:	bff00000 	.word	0xbff00000
 800c038:	00000000 	.word	0x00000000
 800c03c:	3ff00000 	.word	0x3ff00000
 800c040:	94a03595 	.word	0x94a03595
 800c044:	3fdfffff 	.word	0x3fdfffff
 800c048:	35afe535 	.word	0x35afe535
 800c04c:	3fe00000 	.word	0x3fe00000
 800c050:	000fffff 	.word	0x000fffff
 800c054:	7ff00000 	.word	0x7ff00000
 800c058:	7fefffff 	.word	0x7fefffff
 800c05c:	3ff00000 	.word	0x3ff00000
 800c060:	3fe00000 	.word	0x3fe00000
 800c064:	7fe00000 	.word	0x7fe00000
 800c068:	7c9fffff 	.word	0x7c9fffff
 800c06c:	9b08      	ldr	r3, [sp, #32]
 800c06e:	b323      	cbz	r3, 800c0ba <_strtod_l+0xb5a>
 800c070:	f1b5 6fd4 	cmp.w	r5, #111149056	@ 0x6a00000
 800c074:	d821      	bhi.n	800c0ba <_strtod_l+0xb5a>
 800c076:	a328      	add	r3, pc, #160	@ (adr r3, 800c118 <_strtod_l+0xbb8>)
 800c078:	e9d3 2300 	ldrd	r2, r3, [r3]
 800c07c:	4630      	mov	r0, r6
 800c07e:	4639      	mov	r1, r7
 800c080:	f7f4 fd56 	bl	8000b30 <__aeabi_dcmple>
 800c084:	b1a0      	cbz	r0, 800c0b0 <_strtod_l+0xb50>
 800c086:	4639      	mov	r1, r7
 800c088:	4630      	mov	r0, r6
 800c08a:	f7f4 fdad 	bl	8000be8 <__aeabi_d2uiz>
 800c08e:	2801      	cmp	r0, #1
 800c090:	bf38      	it	cc
 800c092:	2001      	movcc	r0, #1
 800c094:	f7f4 fa56 	bl	8000544 <__aeabi_ui2d>
 800c098:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 800c09a:	4606      	mov	r6, r0
 800c09c:	460f      	mov	r7, r1
 800c09e:	b9fb      	cbnz	r3, 800c0e0 <_strtod_l+0xb80>
 800c0a0:	f101 4300 	add.w	r3, r1, #2147483648	@ 0x80000000
 800c0a4:	9014      	str	r0, [sp, #80]	@ 0x50
 800c0a6:	9315      	str	r3, [sp, #84]	@ 0x54
 800c0a8:	e9dd 2314 	ldrd	r2, r3, [sp, #80]	@ 0x50
 800c0ac:	e9cd 2310 	strd	r2, r3, [sp, #64]	@ 0x40
 800c0b0:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 800c0b2:	f103 63d6 	add.w	r3, r3, #112197632	@ 0x6b00000
 800c0b6:	1b5b      	subs	r3, r3, r5
 800c0b8:	9311      	str	r3, [sp, #68]	@ 0x44
 800c0ba:	ed9d 0b0c 	vldr	d0, [sp, #48]	@ 0x30
 800c0be:	e9dd ab10 	ldrd	sl, fp, [sp, #64]	@ 0x40
 800c0c2:	f7ff f8f1 	bl	800b2a8 <__ulp>
 800c0c6:	4650      	mov	r0, sl
 800c0c8:	ec53 2b10 	vmov	r2, r3, d0
 800c0cc:	4659      	mov	r1, fp
 800c0ce:	f7f4 fab3 	bl	8000638 <__aeabi_dmul>
 800c0d2:	e9dd 230c 	ldrd	r2, r3, [sp, #48]	@ 0x30
 800c0d6:	f7f4 f8f9 	bl	80002cc <__adddf3>
 800c0da:	4682      	mov	sl, r0
 800c0dc:	468b      	mov	fp, r1
 800c0de:	e770      	b.n	800bfc2 <_strtod_l+0xa62>
 800c0e0:	e9cd 6714 	strd	r6, r7, [sp, #80]	@ 0x50
 800c0e4:	e7e0      	b.n	800c0a8 <_strtod_l+0xb48>
 800c0e6:	a30e      	add	r3, pc, #56	@ (adr r3, 800c120 <_strtod_l+0xbc0>)
 800c0e8:	e9d3 2300 	ldrd	r2, r3, [r3]
 800c0ec:	f7f4 fd16 	bl	8000b1c <__aeabi_dcmplt>
 800c0f0:	e798      	b.n	800c024 <_strtod_l+0xac4>
 800c0f2:	2300      	movs	r3, #0
 800c0f4:	930b      	str	r3, [sp, #44]	@ 0x2c
 800c0f6:	9a17      	ldr	r2, [sp, #92]	@ 0x5c
 800c0f8:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 800c0fa:	6013      	str	r3, [r2, #0]
 800c0fc:	f7ff ba6d 	b.w	800b5da <_strtod_l+0x7a>
 800c100:	2a65      	cmp	r2, #101	@ 0x65
 800c102:	f43f ab66 	beq.w	800b7d2 <_strtod_l+0x272>
 800c106:	2a45      	cmp	r2, #69	@ 0x45
 800c108:	f43f ab63 	beq.w	800b7d2 <_strtod_l+0x272>
 800c10c:	2301      	movs	r3, #1
 800c10e:	f7ff bb9e 	b.w	800b84e <_strtod_l+0x2ee>
 800c112:	bf00      	nop
 800c114:	f3af 8000 	nop.w
 800c118:	ffc00000 	.word	0xffc00000
 800c11c:	41dfffff 	.word	0x41dfffff
 800c120:	94a03595 	.word	0x94a03595
 800c124:	3fcfffff 	.word	0x3fcfffff

0800c128 <_strtod_r>:
 800c128:	4b01      	ldr	r3, [pc, #4]	@ (800c130 <_strtod_r+0x8>)
 800c12a:	f7ff ba19 	b.w	800b560 <_strtod_l>
 800c12e:	bf00      	nop
 800c130:	20000090 	.word	0x20000090

0800c134 <_strtol_l.constprop.0>:
 800c134:	2b24      	cmp	r3, #36	@ 0x24
 800c136:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800c13a:	4686      	mov	lr, r0
 800c13c:	4690      	mov	r8, r2
 800c13e:	d801      	bhi.n	800c144 <_strtol_l.constprop.0+0x10>
 800c140:	2b01      	cmp	r3, #1
 800c142:	d106      	bne.n	800c152 <_strtol_l.constprop.0+0x1e>
 800c144:	f7fd fdac 	bl	8009ca0 <__errno>
 800c148:	2316      	movs	r3, #22
 800c14a:	6003      	str	r3, [r0, #0]
 800c14c:	2000      	movs	r0, #0
 800c14e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800c152:	4834      	ldr	r0, [pc, #208]	@ (800c224 <_strtol_l.constprop.0+0xf0>)
 800c154:	460d      	mov	r5, r1
 800c156:	462a      	mov	r2, r5
 800c158:	f815 4b01 	ldrb.w	r4, [r5], #1
 800c15c:	5d06      	ldrb	r6, [r0, r4]
 800c15e:	f016 0608 	ands.w	r6, r6, #8
 800c162:	d1f8      	bne.n	800c156 <_strtol_l.constprop.0+0x22>
 800c164:	2c2d      	cmp	r4, #45	@ 0x2d
 800c166:	d12d      	bne.n	800c1c4 <_strtol_l.constprop.0+0x90>
 800c168:	782c      	ldrb	r4, [r5, #0]
 800c16a:	2601      	movs	r6, #1
 800c16c:	1c95      	adds	r5, r2, #2
 800c16e:	f033 0210 	bics.w	r2, r3, #16
 800c172:	d109      	bne.n	800c188 <_strtol_l.constprop.0+0x54>
 800c174:	2c30      	cmp	r4, #48	@ 0x30
 800c176:	d12a      	bne.n	800c1ce <_strtol_l.constprop.0+0x9a>
 800c178:	782a      	ldrb	r2, [r5, #0]
 800c17a:	f002 02df 	and.w	r2, r2, #223	@ 0xdf
 800c17e:	2a58      	cmp	r2, #88	@ 0x58
 800c180:	d125      	bne.n	800c1ce <_strtol_l.constprop.0+0x9a>
 800c182:	786c      	ldrb	r4, [r5, #1]
 800c184:	2310      	movs	r3, #16
 800c186:	3502      	adds	r5, #2
 800c188:	f106 4c00 	add.w	ip, r6, #2147483648	@ 0x80000000
 800c18c:	f10c 3cff 	add.w	ip, ip, #4294967295
 800c190:	2200      	movs	r2, #0
 800c192:	fbbc f9f3 	udiv	r9, ip, r3
 800c196:	4610      	mov	r0, r2
 800c198:	fb03 ca19 	mls	sl, r3, r9, ip
 800c19c:	f1a4 0730 	sub.w	r7, r4, #48	@ 0x30
 800c1a0:	2f09      	cmp	r7, #9
 800c1a2:	d81b      	bhi.n	800c1dc <_strtol_l.constprop.0+0xa8>
 800c1a4:	463c      	mov	r4, r7
 800c1a6:	42a3      	cmp	r3, r4
 800c1a8:	dd27      	ble.n	800c1fa <_strtol_l.constprop.0+0xc6>
 800c1aa:	1c57      	adds	r7, r2, #1
 800c1ac:	d007      	beq.n	800c1be <_strtol_l.constprop.0+0x8a>
 800c1ae:	4581      	cmp	r9, r0
 800c1b0:	d320      	bcc.n	800c1f4 <_strtol_l.constprop.0+0xc0>
 800c1b2:	d101      	bne.n	800c1b8 <_strtol_l.constprop.0+0x84>
 800c1b4:	45a2      	cmp	sl, r4
 800c1b6:	db1d      	blt.n	800c1f4 <_strtol_l.constprop.0+0xc0>
 800c1b8:	fb00 4003 	mla	r0, r0, r3, r4
 800c1bc:	2201      	movs	r2, #1
 800c1be:	f815 4b01 	ldrb.w	r4, [r5], #1
 800c1c2:	e7eb      	b.n	800c19c <_strtol_l.constprop.0+0x68>
 800c1c4:	2c2b      	cmp	r4, #43	@ 0x2b
 800c1c6:	bf04      	itt	eq
 800c1c8:	782c      	ldrbeq	r4, [r5, #0]
 800c1ca:	1c95      	addeq	r5, r2, #2
 800c1cc:	e7cf      	b.n	800c16e <_strtol_l.constprop.0+0x3a>
 800c1ce:	2b00      	cmp	r3, #0
 800c1d0:	d1da      	bne.n	800c188 <_strtol_l.constprop.0+0x54>
 800c1d2:	2c30      	cmp	r4, #48	@ 0x30
 800c1d4:	bf0c      	ite	eq
 800c1d6:	2308      	moveq	r3, #8
 800c1d8:	230a      	movne	r3, #10
 800c1da:	e7d5      	b.n	800c188 <_strtol_l.constprop.0+0x54>
 800c1dc:	f1a4 0741 	sub.w	r7, r4, #65	@ 0x41
 800c1e0:	2f19      	cmp	r7, #25
 800c1e2:	d801      	bhi.n	800c1e8 <_strtol_l.constprop.0+0xb4>
 800c1e4:	3c37      	subs	r4, #55	@ 0x37
 800c1e6:	e7de      	b.n	800c1a6 <_strtol_l.constprop.0+0x72>
 800c1e8:	f1a4 0761 	sub.w	r7, r4, #97	@ 0x61
 800c1ec:	2f19      	cmp	r7, #25
 800c1ee:	d804      	bhi.n	800c1fa <_strtol_l.constprop.0+0xc6>
 800c1f0:	3c57      	subs	r4, #87	@ 0x57
 800c1f2:	e7d8      	b.n	800c1a6 <_strtol_l.constprop.0+0x72>
 800c1f4:	f04f 32ff 	mov.w	r2, #4294967295
 800c1f8:	e7e1      	b.n	800c1be <_strtol_l.constprop.0+0x8a>
 800c1fa:	1c53      	adds	r3, r2, #1
 800c1fc:	d108      	bne.n	800c210 <_strtol_l.constprop.0+0xdc>
 800c1fe:	2322      	movs	r3, #34	@ 0x22
 800c200:	f8ce 3000 	str.w	r3, [lr]
 800c204:	4660      	mov	r0, ip
 800c206:	f1b8 0f00 	cmp.w	r8, #0
 800c20a:	d0a0      	beq.n	800c14e <_strtol_l.constprop.0+0x1a>
 800c20c:	1e69      	subs	r1, r5, #1
 800c20e:	e006      	b.n	800c21e <_strtol_l.constprop.0+0xea>
 800c210:	b106      	cbz	r6, 800c214 <_strtol_l.constprop.0+0xe0>
 800c212:	4240      	negs	r0, r0
 800c214:	f1b8 0f00 	cmp.w	r8, #0
 800c218:	d099      	beq.n	800c14e <_strtol_l.constprop.0+0x1a>
 800c21a:	2a00      	cmp	r2, #0
 800c21c:	d1f6      	bne.n	800c20c <_strtol_l.constprop.0+0xd8>
 800c21e:	f8c8 1000 	str.w	r1, [r8]
 800c222:	e794      	b.n	800c14e <_strtol_l.constprop.0+0x1a>
 800c224:	0800d7c9 	.word	0x0800d7c9

0800c228 <_strtol_r>:
 800c228:	f7ff bf84 	b.w	800c134 <_strtol_l.constprop.0>

0800c22c <__ssputs_r>:
 800c22c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800c230:	688e      	ldr	r6, [r1, #8]
 800c232:	461f      	mov	r7, r3
 800c234:	42be      	cmp	r6, r7
 800c236:	680b      	ldr	r3, [r1, #0]
 800c238:	4682      	mov	sl, r0
 800c23a:	460c      	mov	r4, r1
 800c23c:	4690      	mov	r8, r2
 800c23e:	d82d      	bhi.n	800c29c <__ssputs_r+0x70>
 800c240:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 800c244:	f412 6f90 	tst.w	r2, #1152	@ 0x480
 800c248:	d026      	beq.n	800c298 <__ssputs_r+0x6c>
 800c24a:	6965      	ldr	r5, [r4, #20]
 800c24c:	6909      	ldr	r1, [r1, #16]
 800c24e:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 800c252:	eba3 0901 	sub.w	r9, r3, r1
 800c256:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
 800c25a:	1c7b      	adds	r3, r7, #1
 800c25c:	444b      	add	r3, r9
 800c25e:	106d      	asrs	r5, r5, #1
 800c260:	429d      	cmp	r5, r3
 800c262:	bf38      	it	cc
 800c264:	461d      	movcc	r5, r3
 800c266:	0553      	lsls	r3, r2, #21
 800c268:	d527      	bpl.n	800c2ba <__ssputs_r+0x8e>
 800c26a:	4629      	mov	r1, r5
 800c26c:	f7fe fc1c 	bl	800aaa8 <_malloc_r>
 800c270:	4606      	mov	r6, r0
 800c272:	b360      	cbz	r0, 800c2ce <__ssputs_r+0xa2>
 800c274:	6921      	ldr	r1, [r4, #16]
 800c276:	464a      	mov	r2, r9
 800c278:	f7fd fd3f 	bl	8009cfa <memcpy>
 800c27c:	89a3      	ldrh	r3, [r4, #12]
 800c27e:	f423 6390 	bic.w	r3, r3, #1152	@ 0x480
 800c282:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 800c286:	81a3      	strh	r3, [r4, #12]
 800c288:	6126      	str	r6, [r4, #16]
 800c28a:	6165      	str	r5, [r4, #20]
 800c28c:	444e      	add	r6, r9
 800c28e:	eba5 0509 	sub.w	r5, r5, r9
 800c292:	6026      	str	r6, [r4, #0]
 800c294:	60a5      	str	r5, [r4, #8]
 800c296:	463e      	mov	r6, r7
 800c298:	42be      	cmp	r6, r7
 800c29a:	d900      	bls.n	800c29e <__ssputs_r+0x72>
 800c29c:	463e      	mov	r6, r7
 800c29e:	6820      	ldr	r0, [r4, #0]
 800c2a0:	4632      	mov	r2, r6
 800c2a2:	4641      	mov	r1, r8
 800c2a4:	f000 fb6a 	bl	800c97c <memmove>
 800c2a8:	68a3      	ldr	r3, [r4, #8]
 800c2aa:	1b9b      	subs	r3, r3, r6
 800c2ac:	60a3      	str	r3, [r4, #8]
 800c2ae:	6823      	ldr	r3, [r4, #0]
 800c2b0:	4433      	add	r3, r6
 800c2b2:	6023      	str	r3, [r4, #0]
 800c2b4:	2000      	movs	r0, #0
 800c2b6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800c2ba:	462a      	mov	r2, r5
 800c2bc:	f000 ff41 	bl	800d142 <_realloc_r>
 800c2c0:	4606      	mov	r6, r0
 800c2c2:	2800      	cmp	r0, #0
 800c2c4:	d1e0      	bne.n	800c288 <__ssputs_r+0x5c>
 800c2c6:	6921      	ldr	r1, [r4, #16]
 800c2c8:	4650      	mov	r0, sl
 800c2ca:	f7fe fb79 	bl	800a9c0 <_free_r>
 800c2ce:	230c      	movs	r3, #12
 800c2d0:	f8ca 3000 	str.w	r3, [sl]
 800c2d4:	89a3      	ldrh	r3, [r4, #12]
 800c2d6:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 800c2da:	81a3      	strh	r3, [r4, #12]
 800c2dc:	f04f 30ff 	mov.w	r0, #4294967295
 800c2e0:	e7e9      	b.n	800c2b6 <__ssputs_r+0x8a>
	...

0800c2e4 <_svfiprintf_r>:
 800c2e4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c2e8:	4698      	mov	r8, r3
 800c2ea:	898b      	ldrh	r3, [r1, #12]
 800c2ec:	061b      	lsls	r3, r3, #24
 800c2ee:	b09d      	sub	sp, #116	@ 0x74
 800c2f0:	4607      	mov	r7, r0
 800c2f2:	460d      	mov	r5, r1
 800c2f4:	4614      	mov	r4, r2
 800c2f6:	d510      	bpl.n	800c31a <_svfiprintf_r+0x36>
 800c2f8:	690b      	ldr	r3, [r1, #16]
 800c2fa:	b973      	cbnz	r3, 800c31a <_svfiprintf_r+0x36>
 800c2fc:	2140      	movs	r1, #64	@ 0x40
 800c2fe:	f7fe fbd3 	bl	800aaa8 <_malloc_r>
 800c302:	6028      	str	r0, [r5, #0]
 800c304:	6128      	str	r0, [r5, #16]
 800c306:	b930      	cbnz	r0, 800c316 <_svfiprintf_r+0x32>
 800c308:	230c      	movs	r3, #12
 800c30a:	603b      	str	r3, [r7, #0]
 800c30c:	f04f 30ff 	mov.w	r0, #4294967295
 800c310:	b01d      	add	sp, #116	@ 0x74
 800c312:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c316:	2340      	movs	r3, #64	@ 0x40
 800c318:	616b      	str	r3, [r5, #20]
 800c31a:	2300      	movs	r3, #0
 800c31c:	9309      	str	r3, [sp, #36]	@ 0x24
 800c31e:	2320      	movs	r3, #32
 800c320:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 800c324:	f8cd 800c 	str.w	r8, [sp, #12]
 800c328:	2330      	movs	r3, #48	@ 0x30
 800c32a:	f8df 819c 	ldr.w	r8, [pc, #412]	@ 800c4c8 <_svfiprintf_r+0x1e4>
 800c32e:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 800c332:	f04f 0901 	mov.w	r9, #1
 800c336:	4623      	mov	r3, r4
 800c338:	469a      	mov	sl, r3
 800c33a:	f813 2b01 	ldrb.w	r2, [r3], #1
 800c33e:	b10a      	cbz	r2, 800c344 <_svfiprintf_r+0x60>
 800c340:	2a25      	cmp	r2, #37	@ 0x25
 800c342:	d1f9      	bne.n	800c338 <_svfiprintf_r+0x54>
 800c344:	ebba 0b04 	subs.w	fp, sl, r4
 800c348:	d00b      	beq.n	800c362 <_svfiprintf_r+0x7e>
 800c34a:	465b      	mov	r3, fp
 800c34c:	4622      	mov	r2, r4
 800c34e:	4629      	mov	r1, r5
 800c350:	4638      	mov	r0, r7
 800c352:	f7ff ff6b 	bl	800c22c <__ssputs_r>
 800c356:	3001      	adds	r0, #1
 800c358:	f000 80a7 	beq.w	800c4aa <_svfiprintf_r+0x1c6>
 800c35c:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 800c35e:	445a      	add	r2, fp
 800c360:	9209      	str	r2, [sp, #36]	@ 0x24
 800c362:	f89a 3000 	ldrb.w	r3, [sl]
 800c366:	2b00      	cmp	r3, #0
 800c368:	f000 809f 	beq.w	800c4aa <_svfiprintf_r+0x1c6>
 800c36c:	2300      	movs	r3, #0
 800c36e:	f04f 32ff 	mov.w	r2, #4294967295
 800c372:	e9cd 2305 	strd	r2, r3, [sp, #20]
 800c376:	f10a 0a01 	add.w	sl, sl, #1
 800c37a:	9304      	str	r3, [sp, #16]
 800c37c:	9307      	str	r3, [sp, #28]
 800c37e:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 800c382:	931a      	str	r3, [sp, #104]	@ 0x68
 800c384:	4654      	mov	r4, sl
 800c386:	2205      	movs	r2, #5
 800c388:	f814 1b01 	ldrb.w	r1, [r4], #1
 800c38c:	484e      	ldr	r0, [pc, #312]	@ (800c4c8 <_svfiprintf_r+0x1e4>)
 800c38e:	f7f3 ff3f 	bl	8000210 <memchr>
 800c392:	9a04      	ldr	r2, [sp, #16]
 800c394:	b9d8      	cbnz	r0, 800c3ce <_svfiprintf_r+0xea>
 800c396:	06d0      	lsls	r0, r2, #27
 800c398:	bf44      	itt	mi
 800c39a:	2320      	movmi	r3, #32
 800c39c:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 800c3a0:	0711      	lsls	r1, r2, #28
 800c3a2:	bf44      	itt	mi
 800c3a4:	232b      	movmi	r3, #43	@ 0x2b
 800c3a6:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 800c3aa:	f89a 3000 	ldrb.w	r3, [sl]
 800c3ae:	2b2a      	cmp	r3, #42	@ 0x2a
 800c3b0:	d015      	beq.n	800c3de <_svfiprintf_r+0xfa>
 800c3b2:	9a07      	ldr	r2, [sp, #28]
 800c3b4:	4654      	mov	r4, sl
 800c3b6:	2000      	movs	r0, #0
 800c3b8:	f04f 0c0a 	mov.w	ip, #10
 800c3bc:	4621      	mov	r1, r4
 800c3be:	f811 3b01 	ldrb.w	r3, [r1], #1
 800c3c2:	3b30      	subs	r3, #48	@ 0x30
 800c3c4:	2b09      	cmp	r3, #9
 800c3c6:	d94b      	bls.n	800c460 <_svfiprintf_r+0x17c>
 800c3c8:	b1b0      	cbz	r0, 800c3f8 <_svfiprintf_r+0x114>
 800c3ca:	9207      	str	r2, [sp, #28]
 800c3cc:	e014      	b.n	800c3f8 <_svfiprintf_r+0x114>
 800c3ce:	eba0 0308 	sub.w	r3, r0, r8
 800c3d2:	fa09 f303 	lsl.w	r3, r9, r3
 800c3d6:	4313      	orrs	r3, r2
 800c3d8:	9304      	str	r3, [sp, #16]
 800c3da:	46a2      	mov	sl, r4
 800c3dc:	e7d2      	b.n	800c384 <_svfiprintf_r+0xa0>
 800c3de:	9b03      	ldr	r3, [sp, #12]
 800c3e0:	1d19      	adds	r1, r3, #4
 800c3e2:	681b      	ldr	r3, [r3, #0]
 800c3e4:	9103      	str	r1, [sp, #12]
 800c3e6:	2b00      	cmp	r3, #0
 800c3e8:	bfbb      	ittet	lt
 800c3ea:	425b      	neglt	r3, r3
 800c3ec:	f042 0202 	orrlt.w	r2, r2, #2
 800c3f0:	9307      	strge	r3, [sp, #28]
 800c3f2:	9307      	strlt	r3, [sp, #28]
 800c3f4:	bfb8      	it	lt
 800c3f6:	9204      	strlt	r2, [sp, #16]
 800c3f8:	7823      	ldrb	r3, [r4, #0]
 800c3fa:	2b2e      	cmp	r3, #46	@ 0x2e
 800c3fc:	d10a      	bne.n	800c414 <_svfiprintf_r+0x130>
 800c3fe:	7863      	ldrb	r3, [r4, #1]
 800c400:	2b2a      	cmp	r3, #42	@ 0x2a
 800c402:	d132      	bne.n	800c46a <_svfiprintf_r+0x186>
 800c404:	9b03      	ldr	r3, [sp, #12]
 800c406:	1d1a      	adds	r2, r3, #4
 800c408:	681b      	ldr	r3, [r3, #0]
 800c40a:	9203      	str	r2, [sp, #12]
 800c40c:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 800c410:	3402      	adds	r4, #2
 800c412:	9305      	str	r3, [sp, #20]
 800c414:	f8df a0c0 	ldr.w	sl, [pc, #192]	@ 800c4d8 <_svfiprintf_r+0x1f4>
 800c418:	7821      	ldrb	r1, [r4, #0]
 800c41a:	2203      	movs	r2, #3
 800c41c:	4650      	mov	r0, sl
 800c41e:	f7f3 fef7 	bl	8000210 <memchr>
 800c422:	b138      	cbz	r0, 800c434 <_svfiprintf_r+0x150>
 800c424:	9b04      	ldr	r3, [sp, #16]
 800c426:	eba0 000a 	sub.w	r0, r0, sl
 800c42a:	2240      	movs	r2, #64	@ 0x40
 800c42c:	4082      	lsls	r2, r0
 800c42e:	4313      	orrs	r3, r2
 800c430:	3401      	adds	r4, #1
 800c432:	9304      	str	r3, [sp, #16]
 800c434:	f814 1b01 	ldrb.w	r1, [r4], #1
 800c438:	4824      	ldr	r0, [pc, #144]	@ (800c4cc <_svfiprintf_r+0x1e8>)
 800c43a:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 800c43e:	2206      	movs	r2, #6
 800c440:	f7f3 fee6 	bl	8000210 <memchr>
 800c444:	2800      	cmp	r0, #0
 800c446:	d036      	beq.n	800c4b6 <_svfiprintf_r+0x1d2>
 800c448:	4b21      	ldr	r3, [pc, #132]	@ (800c4d0 <_svfiprintf_r+0x1ec>)
 800c44a:	bb1b      	cbnz	r3, 800c494 <_svfiprintf_r+0x1b0>
 800c44c:	9b03      	ldr	r3, [sp, #12]
 800c44e:	3307      	adds	r3, #7
 800c450:	f023 0307 	bic.w	r3, r3, #7
 800c454:	3308      	adds	r3, #8
 800c456:	9303      	str	r3, [sp, #12]
 800c458:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800c45a:	4433      	add	r3, r6
 800c45c:	9309      	str	r3, [sp, #36]	@ 0x24
 800c45e:	e76a      	b.n	800c336 <_svfiprintf_r+0x52>
 800c460:	fb0c 3202 	mla	r2, ip, r2, r3
 800c464:	460c      	mov	r4, r1
 800c466:	2001      	movs	r0, #1
 800c468:	e7a8      	b.n	800c3bc <_svfiprintf_r+0xd8>
 800c46a:	2300      	movs	r3, #0
 800c46c:	3401      	adds	r4, #1
 800c46e:	9305      	str	r3, [sp, #20]
 800c470:	4619      	mov	r1, r3
 800c472:	f04f 0c0a 	mov.w	ip, #10
 800c476:	4620      	mov	r0, r4
 800c478:	f810 2b01 	ldrb.w	r2, [r0], #1
 800c47c:	3a30      	subs	r2, #48	@ 0x30
 800c47e:	2a09      	cmp	r2, #9
 800c480:	d903      	bls.n	800c48a <_svfiprintf_r+0x1a6>
 800c482:	2b00      	cmp	r3, #0
 800c484:	d0c6      	beq.n	800c414 <_svfiprintf_r+0x130>
 800c486:	9105      	str	r1, [sp, #20]
 800c488:	e7c4      	b.n	800c414 <_svfiprintf_r+0x130>
 800c48a:	fb0c 2101 	mla	r1, ip, r1, r2
 800c48e:	4604      	mov	r4, r0
 800c490:	2301      	movs	r3, #1
 800c492:	e7f0      	b.n	800c476 <_svfiprintf_r+0x192>
 800c494:	ab03      	add	r3, sp, #12
 800c496:	9300      	str	r3, [sp, #0]
 800c498:	462a      	mov	r2, r5
 800c49a:	4b0e      	ldr	r3, [pc, #56]	@ (800c4d4 <_svfiprintf_r+0x1f0>)
 800c49c:	a904      	add	r1, sp, #16
 800c49e:	4638      	mov	r0, r7
 800c4a0:	f7fc fbb6 	bl	8008c10 <_printf_float>
 800c4a4:	1c42      	adds	r2, r0, #1
 800c4a6:	4606      	mov	r6, r0
 800c4a8:	d1d6      	bne.n	800c458 <_svfiprintf_r+0x174>
 800c4aa:	89ab      	ldrh	r3, [r5, #12]
 800c4ac:	065b      	lsls	r3, r3, #25
 800c4ae:	f53f af2d 	bmi.w	800c30c <_svfiprintf_r+0x28>
 800c4b2:	9809      	ldr	r0, [sp, #36]	@ 0x24
 800c4b4:	e72c      	b.n	800c310 <_svfiprintf_r+0x2c>
 800c4b6:	ab03      	add	r3, sp, #12
 800c4b8:	9300      	str	r3, [sp, #0]
 800c4ba:	462a      	mov	r2, r5
 800c4bc:	4b05      	ldr	r3, [pc, #20]	@ (800c4d4 <_svfiprintf_r+0x1f0>)
 800c4be:	a904      	add	r1, sp, #16
 800c4c0:	4638      	mov	r0, r7
 800c4c2:	f7fc fe3d 	bl	8009140 <_printf_i>
 800c4c6:	e7ed      	b.n	800c4a4 <_svfiprintf_r+0x1c0>
 800c4c8:	0800d8c9 	.word	0x0800d8c9
 800c4cc:	0800d8d3 	.word	0x0800d8d3
 800c4d0:	08008c11 	.word	0x08008c11
 800c4d4:	0800c22d 	.word	0x0800c22d
 800c4d8:	0800d8cf 	.word	0x0800d8cf

0800c4dc <__sfputc_r>:
 800c4dc:	6893      	ldr	r3, [r2, #8]
 800c4de:	3b01      	subs	r3, #1
 800c4e0:	2b00      	cmp	r3, #0
 800c4e2:	b410      	push	{r4}
 800c4e4:	6093      	str	r3, [r2, #8]
 800c4e6:	da08      	bge.n	800c4fa <__sfputc_r+0x1e>
 800c4e8:	6994      	ldr	r4, [r2, #24]
 800c4ea:	42a3      	cmp	r3, r4
 800c4ec:	db01      	blt.n	800c4f2 <__sfputc_r+0x16>
 800c4ee:	290a      	cmp	r1, #10
 800c4f0:	d103      	bne.n	800c4fa <__sfputc_r+0x1e>
 800c4f2:	f85d 4b04 	ldr.w	r4, [sp], #4
 800c4f6:	f7fd baec 	b.w	8009ad2 <__swbuf_r>
 800c4fa:	6813      	ldr	r3, [r2, #0]
 800c4fc:	1c58      	adds	r0, r3, #1
 800c4fe:	6010      	str	r0, [r2, #0]
 800c500:	7019      	strb	r1, [r3, #0]
 800c502:	4608      	mov	r0, r1
 800c504:	f85d 4b04 	ldr.w	r4, [sp], #4
 800c508:	4770      	bx	lr

0800c50a <__sfputs_r>:
 800c50a:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800c50c:	4606      	mov	r6, r0
 800c50e:	460f      	mov	r7, r1
 800c510:	4614      	mov	r4, r2
 800c512:	18d5      	adds	r5, r2, r3
 800c514:	42ac      	cmp	r4, r5
 800c516:	d101      	bne.n	800c51c <__sfputs_r+0x12>
 800c518:	2000      	movs	r0, #0
 800c51a:	e007      	b.n	800c52c <__sfputs_r+0x22>
 800c51c:	f814 1b01 	ldrb.w	r1, [r4], #1
 800c520:	463a      	mov	r2, r7
 800c522:	4630      	mov	r0, r6
 800c524:	f7ff ffda 	bl	800c4dc <__sfputc_r>
 800c528:	1c43      	adds	r3, r0, #1
 800c52a:	d1f3      	bne.n	800c514 <__sfputs_r+0xa>
 800c52c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

0800c530 <_vfiprintf_r>:
 800c530:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c534:	460d      	mov	r5, r1
 800c536:	b09d      	sub	sp, #116	@ 0x74
 800c538:	4614      	mov	r4, r2
 800c53a:	4698      	mov	r8, r3
 800c53c:	4606      	mov	r6, r0
 800c53e:	b118      	cbz	r0, 800c548 <_vfiprintf_r+0x18>
 800c540:	6a03      	ldr	r3, [r0, #32]
 800c542:	b90b      	cbnz	r3, 800c548 <_vfiprintf_r+0x18>
 800c544:	f7fd f9bc 	bl	80098c0 <__sinit>
 800c548:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 800c54a:	07d9      	lsls	r1, r3, #31
 800c54c:	d405      	bmi.n	800c55a <_vfiprintf_r+0x2a>
 800c54e:	89ab      	ldrh	r3, [r5, #12]
 800c550:	059a      	lsls	r2, r3, #22
 800c552:	d402      	bmi.n	800c55a <_vfiprintf_r+0x2a>
 800c554:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 800c556:	f7fd fbce 	bl	8009cf6 <__retarget_lock_acquire_recursive>
 800c55a:	89ab      	ldrh	r3, [r5, #12]
 800c55c:	071b      	lsls	r3, r3, #28
 800c55e:	d501      	bpl.n	800c564 <_vfiprintf_r+0x34>
 800c560:	692b      	ldr	r3, [r5, #16]
 800c562:	b99b      	cbnz	r3, 800c58c <_vfiprintf_r+0x5c>
 800c564:	4629      	mov	r1, r5
 800c566:	4630      	mov	r0, r6
 800c568:	f7fd faf2 	bl	8009b50 <__swsetup_r>
 800c56c:	b170      	cbz	r0, 800c58c <_vfiprintf_r+0x5c>
 800c56e:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 800c570:	07dc      	lsls	r4, r3, #31
 800c572:	d504      	bpl.n	800c57e <_vfiprintf_r+0x4e>
 800c574:	f04f 30ff 	mov.w	r0, #4294967295
 800c578:	b01d      	add	sp, #116	@ 0x74
 800c57a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c57e:	89ab      	ldrh	r3, [r5, #12]
 800c580:	0598      	lsls	r0, r3, #22
 800c582:	d4f7      	bmi.n	800c574 <_vfiprintf_r+0x44>
 800c584:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 800c586:	f7fd fbb7 	bl	8009cf8 <__retarget_lock_release_recursive>
 800c58a:	e7f3      	b.n	800c574 <_vfiprintf_r+0x44>
 800c58c:	2300      	movs	r3, #0
 800c58e:	9309      	str	r3, [sp, #36]	@ 0x24
 800c590:	2320      	movs	r3, #32
 800c592:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 800c596:	f8cd 800c 	str.w	r8, [sp, #12]
 800c59a:	2330      	movs	r3, #48	@ 0x30
 800c59c:	f8df 81ac 	ldr.w	r8, [pc, #428]	@ 800c74c <_vfiprintf_r+0x21c>
 800c5a0:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 800c5a4:	f04f 0901 	mov.w	r9, #1
 800c5a8:	4623      	mov	r3, r4
 800c5aa:	469a      	mov	sl, r3
 800c5ac:	f813 2b01 	ldrb.w	r2, [r3], #1
 800c5b0:	b10a      	cbz	r2, 800c5b6 <_vfiprintf_r+0x86>
 800c5b2:	2a25      	cmp	r2, #37	@ 0x25
 800c5b4:	d1f9      	bne.n	800c5aa <_vfiprintf_r+0x7a>
 800c5b6:	ebba 0b04 	subs.w	fp, sl, r4
 800c5ba:	d00b      	beq.n	800c5d4 <_vfiprintf_r+0xa4>
 800c5bc:	465b      	mov	r3, fp
 800c5be:	4622      	mov	r2, r4
 800c5c0:	4629      	mov	r1, r5
 800c5c2:	4630      	mov	r0, r6
 800c5c4:	f7ff ffa1 	bl	800c50a <__sfputs_r>
 800c5c8:	3001      	adds	r0, #1
 800c5ca:	f000 80a7 	beq.w	800c71c <_vfiprintf_r+0x1ec>
 800c5ce:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 800c5d0:	445a      	add	r2, fp
 800c5d2:	9209      	str	r2, [sp, #36]	@ 0x24
 800c5d4:	f89a 3000 	ldrb.w	r3, [sl]
 800c5d8:	2b00      	cmp	r3, #0
 800c5da:	f000 809f 	beq.w	800c71c <_vfiprintf_r+0x1ec>
 800c5de:	2300      	movs	r3, #0
 800c5e0:	f04f 32ff 	mov.w	r2, #4294967295
 800c5e4:	e9cd 2305 	strd	r2, r3, [sp, #20]
 800c5e8:	f10a 0a01 	add.w	sl, sl, #1
 800c5ec:	9304      	str	r3, [sp, #16]
 800c5ee:	9307      	str	r3, [sp, #28]
 800c5f0:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 800c5f4:	931a      	str	r3, [sp, #104]	@ 0x68
 800c5f6:	4654      	mov	r4, sl
 800c5f8:	2205      	movs	r2, #5
 800c5fa:	f814 1b01 	ldrb.w	r1, [r4], #1
 800c5fe:	4853      	ldr	r0, [pc, #332]	@ (800c74c <_vfiprintf_r+0x21c>)
 800c600:	f7f3 fe06 	bl	8000210 <memchr>
 800c604:	9a04      	ldr	r2, [sp, #16]
 800c606:	b9d8      	cbnz	r0, 800c640 <_vfiprintf_r+0x110>
 800c608:	06d1      	lsls	r1, r2, #27
 800c60a:	bf44      	itt	mi
 800c60c:	2320      	movmi	r3, #32
 800c60e:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 800c612:	0713      	lsls	r3, r2, #28
 800c614:	bf44      	itt	mi
 800c616:	232b      	movmi	r3, #43	@ 0x2b
 800c618:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 800c61c:	f89a 3000 	ldrb.w	r3, [sl]
 800c620:	2b2a      	cmp	r3, #42	@ 0x2a
 800c622:	d015      	beq.n	800c650 <_vfiprintf_r+0x120>
 800c624:	9a07      	ldr	r2, [sp, #28]
 800c626:	4654      	mov	r4, sl
 800c628:	2000      	movs	r0, #0
 800c62a:	f04f 0c0a 	mov.w	ip, #10
 800c62e:	4621      	mov	r1, r4
 800c630:	f811 3b01 	ldrb.w	r3, [r1], #1
 800c634:	3b30      	subs	r3, #48	@ 0x30
 800c636:	2b09      	cmp	r3, #9
 800c638:	d94b      	bls.n	800c6d2 <_vfiprintf_r+0x1a2>
 800c63a:	b1b0      	cbz	r0, 800c66a <_vfiprintf_r+0x13a>
 800c63c:	9207      	str	r2, [sp, #28]
 800c63e:	e014      	b.n	800c66a <_vfiprintf_r+0x13a>
 800c640:	eba0 0308 	sub.w	r3, r0, r8
 800c644:	fa09 f303 	lsl.w	r3, r9, r3
 800c648:	4313      	orrs	r3, r2
 800c64a:	9304      	str	r3, [sp, #16]
 800c64c:	46a2      	mov	sl, r4
 800c64e:	e7d2      	b.n	800c5f6 <_vfiprintf_r+0xc6>
 800c650:	9b03      	ldr	r3, [sp, #12]
 800c652:	1d19      	adds	r1, r3, #4
 800c654:	681b      	ldr	r3, [r3, #0]
 800c656:	9103      	str	r1, [sp, #12]
 800c658:	2b00      	cmp	r3, #0
 800c65a:	bfbb      	ittet	lt
 800c65c:	425b      	neglt	r3, r3
 800c65e:	f042 0202 	orrlt.w	r2, r2, #2
 800c662:	9307      	strge	r3, [sp, #28]
 800c664:	9307      	strlt	r3, [sp, #28]
 800c666:	bfb8      	it	lt
 800c668:	9204      	strlt	r2, [sp, #16]
 800c66a:	7823      	ldrb	r3, [r4, #0]
 800c66c:	2b2e      	cmp	r3, #46	@ 0x2e
 800c66e:	d10a      	bne.n	800c686 <_vfiprintf_r+0x156>
 800c670:	7863      	ldrb	r3, [r4, #1]
 800c672:	2b2a      	cmp	r3, #42	@ 0x2a
 800c674:	d132      	bne.n	800c6dc <_vfiprintf_r+0x1ac>
 800c676:	9b03      	ldr	r3, [sp, #12]
 800c678:	1d1a      	adds	r2, r3, #4
 800c67a:	681b      	ldr	r3, [r3, #0]
 800c67c:	9203      	str	r2, [sp, #12]
 800c67e:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 800c682:	3402      	adds	r4, #2
 800c684:	9305      	str	r3, [sp, #20]
 800c686:	f8df a0d4 	ldr.w	sl, [pc, #212]	@ 800c75c <_vfiprintf_r+0x22c>
 800c68a:	7821      	ldrb	r1, [r4, #0]
 800c68c:	2203      	movs	r2, #3
 800c68e:	4650      	mov	r0, sl
 800c690:	f7f3 fdbe 	bl	8000210 <memchr>
 800c694:	b138      	cbz	r0, 800c6a6 <_vfiprintf_r+0x176>
 800c696:	9b04      	ldr	r3, [sp, #16]
 800c698:	eba0 000a 	sub.w	r0, r0, sl
 800c69c:	2240      	movs	r2, #64	@ 0x40
 800c69e:	4082      	lsls	r2, r0
 800c6a0:	4313      	orrs	r3, r2
 800c6a2:	3401      	adds	r4, #1
 800c6a4:	9304      	str	r3, [sp, #16]
 800c6a6:	f814 1b01 	ldrb.w	r1, [r4], #1
 800c6aa:	4829      	ldr	r0, [pc, #164]	@ (800c750 <_vfiprintf_r+0x220>)
 800c6ac:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 800c6b0:	2206      	movs	r2, #6
 800c6b2:	f7f3 fdad 	bl	8000210 <memchr>
 800c6b6:	2800      	cmp	r0, #0
 800c6b8:	d03f      	beq.n	800c73a <_vfiprintf_r+0x20a>
 800c6ba:	4b26      	ldr	r3, [pc, #152]	@ (800c754 <_vfiprintf_r+0x224>)
 800c6bc:	bb1b      	cbnz	r3, 800c706 <_vfiprintf_r+0x1d6>
 800c6be:	9b03      	ldr	r3, [sp, #12]
 800c6c0:	3307      	adds	r3, #7
 800c6c2:	f023 0307 	bic.w	r3, r3, #7
 800c6c6:	3308      	adds	r3, #8
 800c6c8:	9303      	str	r3, [sp, #12]
 800c6ca:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800c6cc:	443b      	add	r3, r7
 800c6ce:	9309      	str	r3, [sp, #36]	@ 0x24
 800c6d0:	e76a      	b.n	800c5a8 <_vfiprintf_r+0x78>
 800c6d2:	fb0c 3202 	mla	r2, ip, r2, r3
 800c6d6:	460c      	mov	r4, r1
 800c6d8:	2001      	movs	r0, #1
 800c6da:	e7a8      	b.n	800c62e <_vfiprintf_r+0xfe>
 800c6dc:	2300      	movs	r3, #0
 800c6de:	3401      	adds	r4, #1
 800c6e0:	9305      	str	r3, [sp, #20]
 800c6e2:	4619      	mov	r1, r3
 800c6e4:	f04f 0c0a 	mov.w	ip, #10
 800c6e8:	4620      	mov	r0, r4
 800c6ea:	f810 2b01 	ldrb.w	r2, [r0], #1
 800c6ee:	3a30      	subs	r2, #48	@ 0x30
 800c6f0:	2a09      	cmp	r2, #9
 800c6f2:	d903      	bls.n	800c6fc <_vfiprintf_r+0x1cc>
 800c6f4:	2b00      	cmp	r3, #0
 800c6f6:	d0c6      	beq.n	800c686 <_vfiprintf_r+0x156>
 800c6f8:	9105      	str	r1, [sp, #20]
 800c6fa:	e7c4      	b.n	800c686 <_vfiprintf_r+0x156>
 800c6fc:	fb0c 2101 	mla	r1, ip, r1, r2
 800c700:	4604      	mov	r4, r0
 800c702:	2301      	movs	r3, #1
 800c704:	e7f0      	b.n	800c6e8 <_vfiprintf_r+0x1b8>
 800c706:	ab03      	add	r3, sp, #12
 800c708:	9300      	str	r3, [sp, #0]
 800c70a:	462a      	mov	r2, r5
 800c70c:	4b12      	ldr	r3, [pc, #72]	@ (800c758 <_vfiprintf_r+0x228>)
 800c70e:	a904      	add	r1, sp, #16
 800c710:	4630      	mov	r0, r6
 800c712:	f7fc fa7d 	bl	8008c10 <_printf_float>
 800c716:	4607      	mov	r7, r0
 800c718:	1c78      	adds	r0, r7, #1
 800c71a:	d1d6      	bne.n	800c6ca <_vfiprintf_r+0x19a>
 800c71c:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 800c71e:	07d9      	lsls	r1, r3, #31
 800c720:	d405      	bmi.n	800c72e <_vfiprintf_r+0x1fe>
 800c722:	89ab      	ldrh	r3, [r5, #12]
 800c724:	059a      	lsls	r2, r3, #22
 800c726:	d402      	bmi.n	800c72e <_vfiprintf_r+0x1fe>
 800c728:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 800c72a:	f7fd fae5 	bl	8009cf8 <__retarget_lock_release_recursive>
 800c72e:	89ab      	ldrh	r3, [r5, #12]
 800c730:	065b      	lsls	r3, r3, #25
 800c732:	f53f af1f 	bmi.w	800c574 <_vfiprintf_r+0x44>
 800c736:	9809      	ldr	r0, [sp, #36]	@ 0x24
 800c738:	e71e      	b.n	800c578 <_vfiprintf_r+0x48>
 800c73a:	ab03      	add	r3, sp, #12
 800c73c:	9300      	str	r3, [sp, #0]
 800c73e:	462a      	mov	r2, r5
 800c740:	4b05      	ldr	r3, [pc, #20]	@ (800c758 <_vfiprintf_r+0x228>)
 800c742:	a904      	add	r1, sp, #16
 800c744:	4630      	mov	r0, r6
 800c746:	f7fc fcfb 	bl	8009140 <_printf_i>
 800c74a:	e7e4      	b.n	800c716 <_vfiprintf_r+0x1e6>
 800c74c:	0800d8c9 	.word	0x0800d8c9
 800c750:	0800d8d3 	.word	0x0800d8d3
 800c754:	08008c11 	.word	0x08008c11
 800c758:	0800c50b 	.word	0x0800c50b
 800c75c:	0800d8cf 	.word	0x0800d8cf

0800c760 <__sflush_r>:
 800c760:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 800c764:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800c768:	0716      	lsls	r6, r2, #28
 800c76a:	4605      	mov	r5, r0
 800c76c:	460c      	mov	r4, r1
 800c76e:	d454      	bmi.n	800c81a <__sflush_r+0xba>
 800c770:	684b      	ldr	r3, [r1, #4]
 800c772:	2b00      	cmp	r3, #0
 800c774:	dc02      	bgt.n	800c77c <__sflush_r+0x1c>
 800c776:	6c0b      	ldr	r3, [r1, #64]	@ 0x40
 800c778:	2b00      	cmp	r3, #0
 800c77a:	dd48      	ble.n	800c80e <__sflush_r+0xae>
 800c77c:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 800c77e:	2e00      	cmp	r6, #0
 800c780:	d045      	beq.n	800c80e <__sflush_r+0xae>
 800c782:	2300      	movs	r3, #0
 800c784:	f412 5280 	ands.w	r2, r2, #4096	@ 0x1000
 800c788:	682f      	ldr	r7, [r5, #0]
 800c78a:	6a21      	ldr	r1, [r4, #32]
 800c78c:	602b      	str	r3, [r5, #0]
 800c78e:	d030      	beq.n	800c7f2 <__sflush_r+0x92>
 800c790:	6d62      	ldr	r2, [r4, #84]	@ 0x54
 800c792:	89a3      	ldrh	r3, [r4, #12]
 800c794:	0759      	lsls	r1, r3, #29
 800c796:	d505      	bpl.n	800c7a4 <__sflush_r+0x44>
 800c798:	6863      	ldr	r3, [r4, #4]
 800c79a:	1ad2      	subs	r2, r2, r3
 800c79c:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 800c79e:	b10b      	cbz	r3, 800c7a4 <__sflush_r+0x44>
 800c7a0:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 800c7a2:	1ad2      	subs	r2, r2, r3
 800c7a4:	2300      	movs	r3, #0
 800c7a6:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 800c7a8:	6a21      	ldr	r1, [r4, #32]
 800c7aa:	4628      	mov	r0, r5
 800c7ac:	47b0      	blx	r6
 800c7ae:	1c43      	adds	r3, r0, #1
 800c7b0:	89a3      	ldrh	r3, [r4, #12]
 800c7b2:	d106      	bne.n	800c7c2 <__sflush_r+0x62>
 800c7b4:	6829      	ldr	r1, [r5, #0]
 800c7b6:	291d      	cmp	r1, #29
 800c7b8:	d82b      	bhi.n	800c812 <__sflush_r+0xb2>
 800c7ba:	4a2a      	ldr	r2, [pc, #168]	@ (800c864 <__sflush_r+0x104>)
 800c7bc:	410a      	asrs	r2, r1
 800c7be:	07d6      	lsls	r6, r2, #31
 800c7c0:	d427      	bmi.n	800c812 <__sflush_r+0xb2>
 800c7c2:	2200      	movs	r2, #0
 800c7c4:	6062      	str	r2, [r4, #4]
 800c7c6:	04d9      	lsls	r1, r3, #19
 800c7c8:	6922      	ldr	r2, [r4, #16]
 800c7ca:	6022      	str	r2, [r4, #0]
 800c7cc:	d504      	bpl.n	800c7d8 <__sflush_r+0x78>
 800c7ce:	1c42      	adds	r2, r0, #1
 800c7d0:	d101      	bne.n	800c7d6 <__sflush_r+0x76>
 800c7d2:	682b      	ldr	r3, [r5, #0]
 800c7d4:	b903      	cbnz	r3, 800c7d8 <__sflush_r+0x78>
 800c7d6:	6560      	str	r0, [r4, #84]	@ 0x54
 800c7d8:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 800c7da:	602f      	str	r7, [r5, #0]
 800c7dc:	b1b9      	cbz	r1, 800c80e <__sflush_r+0xae>
 800c7de:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 800c7e2:	4299      	cmp	r1, r3
 800c7e4:	d002      	beq.n	800c7ec <__sflush_r+0x8c>
 800c7e6:	4628      	mov	r0, r5
 800c7e8:	f7fe f8ea 	bl	800a9c0 <_free_r>
 800c7ec:	2300      	movs	r3, #0
 800c7ee:	6363      	str	r3, [r4, #52]	@ 0x34
 800c7f0:	e00d      	b.n	800c80e <__sflush_r+0xae>
 800c7f2:	2301      	movs	r3, #1
 800c7f4:	4628      	mov	r0, r5
 800c7f6:	47b0      	blx	r6
 800c7f8:	4602      	mov	r2, r0
 800c7fa:	1c50      	adds	r0, r2, #1
 800c7fc:	d1c9      	bne.n	800c792 <__sflush_r+0x32>
 800c7fe:	682b      	ldr	r3, [r5, #0]
 800c800:	2b00      	cmp	r3, #0
 800c802:	d0c6      	beq.n	800c792 <__sflush_r+0x32>
 800c804:	2b1d      	cmp	r3, #29
 800c806:	d001      	beq.n	800c80c <__sflush_r+0xac>
 800c808:	2b16      	cmp	r3, #22
 800c80a:	d11e      	bne.n	800c84a <__sflush_r+0xea>
 800c80c:	602f      	str	r7, [r5, #0]
 800c80e:	2000      	movs	r0, #0
 800c810:	e022      	b.n	800c858 <__sflush_r+0xf8>
 800c812:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 800c816:	b21b      	sxth	r3, r3
 800c818:	e01b      	b.n	800c852 <__sflush_r+0xf2>
 800c81a:	690f      	ldr	r7, [r1, #16]
 800c81c:	2f00      	cmp	r7, #0
 800c81e:	d0f6      	beq.n	800c80e <__sflush_r+0xae>
 800c820:	0793      	lsls	r3, r2, #30
 800c822:	680e      	ldr	r6, [r1, #0]
 800c824:	bf08      	it	eq
 800c826:	694b      	ldreq	r3, [r1, #20]
 800c828:	600f      	str	r7, [r1, #0]
 800c82a:	bf18      	it	ne
 800c82c:	2300      	movne	r3, #0
 800c82e:	eba6 0807 	sub.w	r8, r6, r7
 800c832:	608b      	str	r3, [r1, #8]
 800c834:	f1b8 0f00 	cmp.w	r8, #0
 800c838:	dde9      	ble.n	800c80e <__sflush_r+0xae>
 800c83a:	6a21      	ldr	r1, [r4, #32]
 800c83c:	6aa6      	ldr	r6, [r4, #40]	@ 0x28
 800c83e:	4643      	mov	r3, r8
 800c840:	463a      	mov	r2, r7
 800c842:	4628      	mov	r0, r5
 800c844:	47b0      	blx	r6
 800c846:	2800      	cmp	r0, #0
 800c848:	dc08      	bgt.n	800c85c <__sflush_r+0xfc>
 800c84a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800c84e:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 800c852:	81a3      	strh	r3, [r4, #12]
 800c854:	f04f 30ff 	mov.w	r0, #4294967295
 800c858:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800c85c:	4407      	add	r7, r0
 800c85e:	eba8 0800 	sub.w	r8, r8, r0
 800c862:	e7e7      	b.n	800c834 <__sflush_r+0xd4>
 800c864:	dfbffffe 	.word	0xdfbffffe

0800c868 <_fflush_r>:
 800c868:	b538      	push	{r3, r4, r5, lr}
 800c86a:	690b      	ldr	r3, [r1, #16]
 800c86c:	4605      	mov	r5, r0
 800c86e:	460c      	mov	r4, r1
 800c870:	b913      	cbnz	r3, 800c878 <_fflush_r+0x10>
 800c872:	2500      	movs	r5, #0
 800c874:	4628      	mov	r0, r5
 800c876:	bd38      	pop	{r3, r4, r5, pc}
 800c878:	b118      	cbz	r0, 800c882 <_fflush_r+0x1a>
 800c87a:	6a03      	ldr	r3, [r0, #32]
 800c87c:	b90b      	cbnz	r3, 800c882 <_fflush_r+0x1a>
 800c87e:	f7fd f81f 	bl	80098c0 <__sinit>
 800c882:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800c886:	2b00      	cmp	r3, #0
 800c888:	d0f3      	beq.n	800c872 <_fflush_r+0xa>
 800c88a:	6e62      	ldr	r2, [r4, #100]	@ 0x64
 800c88c:	07d0      	lsls	r0, r2, #31
 800c88e:	d404      	bmi.n	800c89a <_fflush_r+0x32>
 800c890:	0599      	lsls	r1, r3, #22
 800c892:	d402      	bmi.n	800c89a <_fflush_r+0x32>
 800c894:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 800c896:	f7fd fa2e 	bl	8009cf6 <__retarget_lock_acquire_recursive>
 800c89a:	4628      	mov	r0, r5
 800c89c:	4621      	mov	r1, r4
 800c89e:	f7ff ff5f 	bl	800c760 <__sflush_r>
 800c8a2:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 800c8a4:	07da      	lsls	r2, r3, #31
 800c8a6:	4605      	mov	r5, r0
 800c8a8:	d4e4      	bmi.n	800c874 <_fflush_r+0xc>
 800c8aa:	89a3      	ldrh	r3, [r4, #12]
 800c8ac:	059b      	lsls	r3, r3, #22
 800c8ae:	d4e1      	bmi.n	800c874 <_fflush_r+0xc>
 800c8b0:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 800c8b2:	f7fd fa21 	bl	8009cf8 <__retarget_lock_release_recursive>
 800c8b6:	e7dd      	b.n	800c874 <_fflush_r+0xc>

0800c8b8 <__swhatbuf_r>:
 800c8b8:	b570      	push	{r4, r5, r6, lr}
 800c8ba:	460c      	mov	r4, r1
 800c8bc:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800c8c0:	2900      	cmp	r1, #0
 800c8c2:	b096      	sub	sp, #88	@ 0x58
 800c8c4:	4615      	mov	r5, r2
 800c8c6:	461e      	mov	r6, r3
 800c8c8:	da0d      	bge.n	800c8e6 <__swhatbuf_r+0x2e>
 800c8ca:	89a3      	ldrh	r3, [r4, #12]
 800c8cc:	f013 0f80 	tst.w	r3, #128	@ 0x80
 800c8d0:	f04f 0100 	mov.w	r1, #0
 800c8d4:	bf14      	ite	ne
 800c8d6:	2340      	movne	r3, #64	@ 0x40
 800c8d8:	f44f 6380 	moveq.w	r3, #1024	@ 0x400
 800c8dc:	2000      	movs	r0, #0
 800c8de:	6031      	str	r1, [r6, #0]
 800c8e0:	602b      	str	r3, [r5, #0]
 800c8e2:	b016      	add	sp, #88	@ 0x58
 800c8e4:	bd70      	pop	{r4, r5, r6, pc}
 800c8e6:	466a      	mov	r2, sp
 800c8e8:	f000 f874 	bl	800c9d4 <_fstat_r>
 800c8ec:	2800      	cmp	r0, #0
 800c8ee:	dbec      	blt.n	800c8ca <__swhatbuf_r+0x12>
 800c8f0:	9901      	ldr	r1, [sp, #4]
 800c8f2:	f401 4170 	and.w	r1, r1, #61440	@ 0xf000
 800c8f6:	f5a1 5300 	sub.w	r3, r1, #8192	@ 0x2000
 800c8fa:	4259      	negs	r1, r3
 800c8fc:	4159      	adcs	r1, r3
 800c8fe:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 800c902:	e7eb      	b.n	800c8dc <__swhatbuf_r+0x24>

0800c904 <__smakebuf_r>:
 800c904:	898b      	ldrh	r3, [r1, #12]
 800c906:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800c908:	079d      	lsls	r5, r3, #30
 800c90a:	4606      	mov	r6, r0
 800c90c:	460c      	mov	r4, r1
 800c90e:	d507      	bpl.n	800c920 <__smakebuf_r+0x1c>
 800c910:	f104 0347 	add.w	r3, r4, #71	@ 0x47
 800c914:	6023      	str	r3, [r4, #0]
 800c916:	6123      	str	r3, [r4, #16]
 800c918:	2301      	movs	r3, #1
 800c91a:	6163      	str	r3, [r4, #20]
 800c91c:	b003      	add	sp, #12
 800c91e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800c920:	ab01      	add	r3, sp, #4
 800c922:	466a      	mov	r2, sp
 800c924:	f7ff ffc8 	bl	800c8b8 <__swhatbuf_r>
 800c928:	9f00      	ldr	r7, [sp, #0]
 800c92a:	4605      	mov	r5, r0
 800c92c:	4639      	mov	r1, r7
 800c92e:	4630      	mov	r0, r6
 800c930:	f7fe f8ba 	bl	800aaa8 <_malloc_r>
 800c934:	b948      	cbnz	r0, 800c94a <__smakebuf_r+0x46>
 800c936:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800c93a:	059a      	lsls	r2, r3, #22
 800c93c:	d4ee      	bmi.n	800c91c <__smakebuf_r+0x18>
 800c93e:	f023 0303 	bic.w	r3, r3, #3
 800c942:	f043 0302 	orr.w	r3, r3, #2
 800c946:	81a3      	strh	r3, [r4, #12]
 800c948:	e7e2      	b.n	800c910 <__smakebuf_r+0xc>
 800c94a:	89a3      	ldrh	r3, [r4, #12]
 800c94c:	6020      	str	r0, [r4, #0]
 800c94e:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 800c952:	81a3      	strh	r3, [r4, #12]
 800c954:	9b01      	ldr	r3, [sp, #4]
 800c956:	e9c4 0704 	strd	r0, r7, [r4, #16]
 800c95a:	b15b      	cbz	r3, 800c974 <__smakebuf_r+0x70>
 800c95c:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 800c960:	4630      	mov	r0, r6
 800c962:	f000 f849 	bl	800c9f8 <_isatty_r>
 800c966:	b128      	cbz	r0, 800c974 <__smakebuf_r+0x70>
 800c968:	89a3      	ldrh	r3, [r4, #12]
 800c96a:	f023 0303 	bic.w	r3, r3, #3
 800c96e:	f043 0301 	orr.w	r3, r3, #1
 800c972:	81a3      	strh	r3, [r4, #12]
 800c974:	89a3      	ldrh	r3, [r4, #12]
 800c976:	431d      	orrs	r5, r3
 800c978:	81a5      	strh	r5, [r4, #12]
 800c97a:	e7cf      	b.n	800c91c <__smakebuf_r+0x18>

0800c97c <memmove>:
 800c97c:	4288      	cmp	r0, r1
 800c97e:	b510      	push	{r4, lr}
 800c980:	eb01 0402 	add.w	r4, r1, r2
 800c984:	d902      	bls.n	800c98c <memmove+0x10>
 800c986:	4284      	cmp	r4, r0
 800c988:	4623      	mov	r3, r4
 800c98a:	d807      	bhi.n	800c99c <memmove+0x20>
 800c98c:	1e43      	subs	r3, r0, #1
 800c98e:	42a1      	cmp	r1, r4
 800c990:	d008      	beq.n	800c9a4 <memmove+0x28>
 800c992:	f811 2b01 	ldrb.w	r2, [r1], #1
 800c996:	f803 2f01 	strb.w	r2, [r3, #1]!
 800c99a:	e7f8      	b.n	800c98e <memmove+0x12>
 800c99c:	4402      	add	r2, r0
 800c99e:	4601      	mov	r1, r0
 800c9a0:	428a      	cmp	r2, r1
 800c9a2:	d100      	bne.n	800c9a6 <memmove+0x2a>
 800c9a4:	bd10      	pop	{r4, pc}
 800c9a6:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 800c9aa:	f802 4d01 	strb.w	r4, [r2, #-1]!
 800c9ae:	e7f7      	b.n	800c9a0 <memmove+0x24>

0800c9b0 <strncmp>:
 800c9b0:	b510      	push	{r4, lr}
 800c9b2:	b16a      	cbz	r2, 800c9d0 <strncmp+0x20>
 800c9b4:	3901      	subs	r1, #1
 800c9b6:	1884      	adds	r4, r0, r2
 800c9b8:	f810 2b01 	ldrb.w	r2, [r0], #1
 800c9bc:	f811 3f01 	ldrb.w	r3, [r1, #1]!
 800c9c0:	429a      	cmp	r2, r3
 800c9c2:	d103      	bne.n	800c9cc <strncmp+0x1c>
 800c9c4:	42a0      	cmp	r0, r4
 800c9c6:	d001      	beq.n	800c9cc <strncmp+0x1c>
 800c9c8:	2a00      	cmp	r2, #0
 800c9ca:	d1f5      	bne.n	800c9b8 <strncmp+0x8>
 800c9cc:	1ad0      	subs	r0, r2, r3
 800c9ce:	bd10      	pop	{r4, pc}
 800c9d0:	4610      	mov	r0, r2
 800c9d2:	e7fc      	b.n	800c9ce <strncmp+0x1e>

0800c9d4 <_fstat_r>:
 800c9d4:	b538      	push	{r3, r4, r5, lr}
 800c9d6:	4d07      	ldr	r5, [pc, #28]	@ (800c9f4 <_fstat_r+0x20>)
 800c9d8:	2300      	movs	r3, #0
 800c9da:	4604      	mov	r4, r0
 800c9dc:	4608      	mov	r0, r1
 800c9de:	4611      	mov	r1, r2
 800c9e0:	602b      	str	r3, [r5, #0]
 800c9e2:	f7f6 fef3 	bl	80037cc <_fstat>
 800c9e6:	1c43      	adds	r3, r0, #1
 800c9e8:	d102      	bne.n	800c9f0 <_fstat_r+0x1c>
 800c9ea:	682b      	ldr	r3, [r5, #0]
 800c9ec:	b103      	cbz	r3, 800c9f0 <_fstat_r+0x1c>
 800c9ee:	6023      	str	r3, [r4, #0]
 800c9f0:	bd38      	pop	{r3, r4, r5, pc}
 800c9f2:	bf00      	nop
 800c9f4:	20000838 	.word	0x20000838

0800c9f8 <_isatty_r>:
 800c9f8:	b538      	push	{r3, r4, r5, lr}
 800c9fa:	4d06      	ldr	r5, [pc, #24]	@ (800ca14 <_isatty_r+0x1c>)
 800c9fc:	2300      	movs	r3, #0
 800c9fe:	4604      	mov	r4, r0
 800ca00:	4608      	mov	r0, r1
 800ca02:	602b      	str	r3, [r5, #0]
 800ca04:	f7f6 fef2 	bl	80037ec <_isatty>
 800ca08:	1c43      	adds	r3, r0, #1
 800ca0a:	d102      	bne.n	800ca12 <_isatty_r+0x1a>
 800ca0c:	682b      	ldr	r3, [r5, #0]
 800ca0e:	b103      	cbz	r3, 800ca12 <_isatty_r+0x1a>
 800ca10:	6023      	str	r3, [r4, #0]
 800ca12:	bd38      	pop	{r3, r4, r5, pc}
 800ca14:	20000838 	.word	0x20000838

0800ca18 <_sbrk_r>:
 800ca18:	b538      	push	{r3, r4, r5, lr}
 800ca1a:	4d06      	ldr	r5, [pc, #24]	@ (800ca34 <_sbrk_r+0x1c>)
 800ca1c:	2300      	movs	r3, #0
 800ca1e:	4604      	mov	r4, r0
 800ca20:	4608      	mov	r0, r1
 800ca22:	602b      	str	r3, [r5, #0]
 800ca24:	f7f6 fefa 	bl	800381c <_sbrk>
 800ca28:	1c43      	adds	r3, r0, #1
 800ca2a:	d102      	bne.n	800ca32 <_sbrk_r+0x1a>
 800ca2c:	682b      	ldr	r3, [r5, #0]
 800ca2e:	b103      	cbz	r3, 800ca32 <_sbrk_r+0x1a>
 800ca30:	6023      	str	r3, [r4, #0]
 800ca32:	bd38      	pop	{r3, r4, r5, pc}
 800ca34:	20000838 	.word	0x20000838

0800ca38 <nan>:
 800ca38:	ed9f 0b01 	vldr	d0, [pc, #4]	@ 800ca40 <nan+0x8>
 800ca3c:	4770      	bx	lr
 800ca3e:	bf00      	nop
 800ca40:	00000000 	.word	0x00000000
 800ca44:	7ff80000 	.word	0x7ff80000

0800ca48 <__assert_func>:
 800ca48:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800ca4a:	4614      	mov	r4, r2
 800ca4c:	461a      	mov	r2, r3
 800ca4e:	4b09      	ldr	r3, [pc, #36]	@ (800ca74 <__assert_func+0x2c>)
 800ca50:	681b      	ldr	r3, [r3, #0]
 800ca52:	4605      	mov	r5, r0
 800ca54:	68d8      	ldr	r0, [r3, #12]
 800ca56:	b954      	cbnz	r4, 800ca6e <__assert_func+0x26>
 800ca58:	4b07      	ldr	r3, [pc, #28]	@ (800ca78 <__assert_func+0x30>)
 800ca5a:	461c      	mov	r4, r3
 800ca5c:	e9cd 3401 	strd	r3, r4, [sp, #4]
 800ca60:	9100      	str	r1, [sp, #0]
 800ca62:	462b      	mov	r3, r5
 800ca64:	4905      	ldr	r1, [pc, #20]	@ (800ca7c <__assert_func+0x34>)
 800ca66:	f000 fba7 	bl	800d1b8 <fiprintf>
 800ca6a:	f000 fbb7 	bl	800d1dc <abort>
 800ca6e:	4b04      	ldr	r3, [pc, #16]	@ (800ca80 <__assert_func+0x38>)
 800ca70:	e7f4      	b.n	800ca5c <__assert_func+0x14>
 800ca72:	bf00      	nop
 800ca74:	20000040 	.word	0x20000040
 800ca78:	0800d91d 	.word	0x0800d91d
 800ca7c:	0800d8ef 	.word	0x0800d8ef
 800ca80:	0800d8e2 	.word	0x0800d8e2

0800ca84 <_calloc_r>:
 800ca84:	b570      	push	{r4, r5, r6, lr}
 800ca86:	fba1 5402 	umull	r5, r4, r1, r2
 800ca8a:	b93c      	cbnz	r4, 800ca9c <_calloc_r+0x18>
 800ca8c:	4629      	mov	r1, r5
 800ca8e:	f7fe f80b 	bl	800aaa8 <_malloc_r>
 800ca92:	4606      	mov	r6, r0
 800ca94:	b928      	cbnz	r0, 800caa2 <_calloc_r+0x1e>
 800ca96:	2600      	movs	r6, #0
 800ca98:	4630      	mov	r0, r6
 800ca9a:	bd70      	pop	{r4, r5, r6, pc}
 800ca9c:	220c      	movs	r2, #12
 800ca9e:	6002      	str	r2, [r0, #0]
 800caa0:	e7f9      	b.n	800ca96 <_calloc_r+0x12>
 800caa2:	462a      	mov	r2, r5
 800caa4:	4621      	mov	r1, r4
 800caa6:	f7fd f8a9 	bl	8009bfc <memset>
 800caaa:	e7f5      	b.n	800ca98 <_calloc_r+0x14>

0800caac <rshift>:
 800caac:	6903      	ldr	r3, [r0, #16]
 800caae:	ebb3 1f61 	cmp.w	r3, r1, asr #5
 800cab2:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800cab6:	ea4f 1261 	mov.w	r2, r1, asr #5
 800caba:	f100 0414 	add.w	r4, r0, #20
 800cabe:	dd45      	ble.n	800cb4c <rshift+0xa0>
 800cac0:	f011 011f 	ands.w	r1, r1, #31
 800cac4:	eb04 0683 	add.w	r6, r4, r3, lsl #2
 800cac8:	eb04 0582 	add.w	r5, r4, r2, lsl #2
 800cacc:	d10c      	bne.n	800cae8 <rshift+0x3c>
 800cace:	f100 0710 	add.w	r7, r0, #16
 800cad2:	4629      	mov	r1, r5
 800cad4:	42b1      	cmp	r1, r6
 800cad6:	d334      	bcc.n	800cb42 <rshift+0x96>
 800cad8:	1a9b      	subs	r3, r3, r2
 800cada:	009b      	lsls	r3, r3, #2
 800cadc:	1eea      	subs	r2, r5, #3
 800cade:	4296      	cmp	r6, r2
 800cae0:	bf38      	it	cc
 800cae2:	2300      	movcc	r3, #0
 800cae4:	4423      	add	r3, r4
 800cae6:	e015      	b.n	800cb14 <rshift+0x68>
 800cae8:	f854 7022 	ldr.w	r7, [r4, r2, lsl #2]
 800caec:	f1c1 0820 	rsb	r8, r1, #32
 800caf0:	40cf      	lsrs	r7, r1
 800caf2:	f105 0e04 	add.w	lr, r5, #4
 800caf6:	46a1      	mov	r9, r4
 800caf8:	4576      	cmp	r6, lr
 800cafa:	46f4      	mov	ip, lr
 800cafc:	d815      	bhi.n	800cb2a <rshift+0x7e>
 800cafe:	1a9a      	subs	r2, r3, r2
 800cb00:	0092      	lsls	r2, r2, #2
 800cb02:	3a04      	subs	r2, #4
 800cb04:	3501      	adds	r5, #1
 800cb06:	42ae      	cmp	r6, r5
 800cb08:	bf38      	it	cc
 800cb0a:	2200      	movcc	r2, #0
 800cb0c:	18a3      	adds	r3, r4, r2
 800cb0e:	50a7      	str	r7, [r4, r2]
 800cb10:	b107      	cbz	r7, 800cb14 <rshift+0x68>
 800cb12:	3304      	adds	r3, #4
 800cb14:	1b1a      	subs	r2, r3, r4
 800cb16:	42a3      	cmp	r3, r4
 800cb18:	ea4f 02a2 	mov.w	r2, r2, asr #2
 800cb1c:	bf08      	it	eq
 800cb1e:	2300      	moveq	r3, #0
 800cb20:	6102      	str	r2, [r0, #16]
 800cb22:	bf08      	it	eq
 800cb24:	6143      	streq	r3, [r0, #20]
 800cb26:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800cb2a:	f8dc c000 	ldr.w	ip, [ip]
 800cb2e:	fa0c fc08 	lsl.w	ip, ip, r8
 800cb32:	ea4c 0707 	orr.w	r7, ip, r7
 800cb36:	f849 7b04 	str.w	r7, [r9], #4
 800cb3a:	f85e 7b04 	ldr.w	r7, [lr], #4
 800cb3e:	40cf      	lsrs	r7, r1
 800cb40:	e7da      	b.n	800caf8 <rshift+0x4c>
 800cb42:	f851 cb04 	ldr.w	ip, [r1], #4
 800cb46:	f847 cf04 	str.w	ip, [r7, #4]!
 800cb4a:	e7c3      	b.n	800cad4 <rshift+0x28>
 800cb4c:	4623      	mov	r3, r4
 800cb4e:	e7e1      	b.n	800cb14 <rshift+0x68>

0800cb50 <__hexdig_fun>:
 800cb50:	f1a0 0330 	sub.w	r3, r0, #48	@ 0x30
 800cb54:	2b09      	cmp	r3, #9
 800cb56:	d802      	bhi.n	800cb5e <__hexdig_fun+0xe>
 800cb58:	3820      	subs	r0, #32
 800cb5a:	b2c0      	uxtb	r0, r0
 800cb5c:	4770      	bx	lr
 800cb5e:	f1a0 0361 	sub.w	r3, r0, #97	@ 0x61
 800cb62:	2b05      	cmp	r3, #5
 800cb64:	d801      	bhi.n	800cb6a <__hexdig_fun+0x1a>
 800cb66:	3847      	subs	r0, #71	@ 0x47
 800cb68:	e7f7      	b.n	800cb5a <__hexdig_fun+0xa>
 800cb6a:	f1a0 0341 	sub.w	r3, r0, #65	@ 0x41
 800cb6e:	2b05      	cmp	r3, #5
 800cb70:	d801      	bhi.n	800cb76 <__hexdig_fun+0x26>
 800cb72:	3827      	subs	r0, #39	@ 0x27
 800cb74:	e7f1      	b.n	800cb5a <__hexdig_fun+0xa>
 800cb76:	2000      	movs	r0, #0
 800cb78:	4770      	bx	lr
	...

0800cb7c <__gethex>:
 800cb7c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800cb80:	b085      	sub	sp, #20
 800cb82:	468a      	mov	sl, r1
 800cb84:	9302      	str	r3, [sp, #8]
 800cb86:	680b      	ldr	r3, [r1, #0]
 800cb88:	9001      	str	r0, [sp, #4]
 800cb8a:	4690      	mov	r8, r2
 800cb8c:	1c9c      	adds	r4, r3, #2
 800cb8e:	46a1      	mov	r9, r4
 800cb90:	f814 0b01 	ldrb.w	r0, [r4], #1
 800cb94:	2830      	cmp	r0, #48	@ 0x30
 800cb96:	d0fa      	beq.n	800cb8e <__gethex+0x12>
 800cb98:	eba9 0303 	sub.w	r3, r9, r3
 800cb9c:	f1a3 0b02 	sub.w	fp, r3, #2
 800cba0:	f7ff ffd6 	bl	800cb50 <__hexdig_fun>
 800cba4:	4605      	mov	r5, r0
 800cba6:	2800      	cmp	r0, #0
 800cba8:	d168      	bne.n	800cc7c <__gethex+0x100>
 800cbaa:	49a0      	ldr	r1, [pc, #640]	@ (800ce2c <__gethex+0x2b0>)
 800cbac:	2201      	movs	r2, #1
 800cbae:	4648      	mov	r0, r9
 800cbb0:	f7ff fefe 	bl	800c9b0 <strncmp>
 800cbb4:	4607      	mov	r7, r0
 800cbb6:	2800      	cmp	r0, #0
 800cbb8:	d167      	bne.n	800cc8a <__gethex+0x10e>
 800cbba:	f899 0001 	ldrb.w	r0, [r9, #1]
 800cbbe:	4626      	mov	r6, r4
 800cbc0:	f7ff ffc6 	bl	800cb50 <__hexdig_fun>
 800cbc4:	2800      	cmp	r0, #0
 800cbc6:	d062      	beq.n	800cc8e <__gethex+0x112>
 800cbc8:	4623      	mov	r3, r4
 800cbca:	7818      	ldrb	r0, [r3, #0]
 800cbcc:	2830      	cmp	r0, #48	@ 0x30
 800cbce:	4699      	mov	r9, r3
 800cbd0:	f103 0301 	add.w	r3, r3, #1
 800cbd4:	d0f9      	beq.n	800cbca <__gethex+0x4e>
 800cbd6:	f7ff ffbb 	bl	800cb50 <__hexdig_fun>
 800cbda:	fab0 f580 	clz	r5, r0
 800cbde:	096d      	lsrs	r5, r5, #5
 800cbe0:	f04f 0b01 	mov.w	fp, #1
 800cbe4:	464a      	mov	r2, r9
 800cbe6:	4616      	mov	r6, r2
 800cbe8:	3201      	adds	r2, #1
 800cbea:	7830      	ldrb	r0, [r6, #0]
 800cbec:	f7ff ffb0 	bl	800cb50 <__hexdig_fun>
 800cbf0:	2800      	cmp	r0, #0
 800cbf2:	d1f8      	bne.n	800cbe6 <__gethex+0x6a>
 800cbf4:	498d      	ldr	r1, [pc, #564]	@ (800ce2c <__gethex+0x2b0>)
 800cbf6:	2201      	movs	r2, #1
 800cbf8:	4630      	mov	r0, r6
 800cbfa:	f7ff fed9 	bl	800c9b0 <strncmp>
 800cbfe:	2800      	cmp	r0, #0
 800cc00:	d13f      	bne.n	800cc82 <__gethex+0x106>
 800cc02:	b944      	cbnz	r4, 800cc16 <__gethex+0x9a>
 800cc04:	1c74      	adds	r4, r6, #1
 800cc06:	4622      	mov	r2, r4
 800cc08:	4616      	mov	r6, r2
 800cc0a:	3201      	adds	r2, #1
 800cc0c:	7830      	ldrb	r0, [r6, #0]
 800cc0e:	f7ff ff9f 	bl	800cb50 <__hexdig_fun>
 800cc12:	2800      	cmp	r0, #0
 800cc14:	d1f8      	bne.n	800cc08 <__gethex+0x8c>
 800cc16:	1ba4      	subs	r4, r4, r6
 800cc18:	00a7      	lsls	r7, r4, #2
 800cc1a:	7833      	ldrb	r3, [r6, #0]
 800cc1c:	f003 03df 	and.w	r3, r3, #223	@ 0xdf
 800cc20:	2b50      	cmp	r3, #80	@ 0x50
 800cc22:	d13e      	bne.n	800cca2 <__gethex+0x126>
 800cc24:	7873      	ldrb	r3, [r6, #1]
 800cc26:	2b2b      	cmp	r3, #43	@ 0x2b
 800cc28:	d033      	beq.n	800cc92 <__gethex+0x116>
 800cc2a:	2b2d      	cmp	r3, #45	@ 0x2d
 800cc2c:	d034      	beq.n	800cc98 <__gethex+0x11c>
 800cc2e:	1c71      	adds	r1, r6, #1
 800cc30:	2400      	movs	r4, #0
 800cc32:	7808      	ldrb	r0, [r1, #0]
 800cc34:	f7ff ff8c 	bl	800cb50 <__hexdig_fun>
 800cc38:	1e43      	subs	r3, r0, #1
 800cc3a:	b2db      	uxtb	r3, r3
 800cc3c:	2b18      	cmp	r3, #24
 800cc3e:	d830      	bhi.n	800cca2 <__gethex+0x126>
 800cc40:	f1a0 0210 	sub.w	r2, r0, #16
 800cc44:	f811 0f01 	ldrb.w	r0, [r1, #1]!
 800cc48:	f7ff ff82 	bl	800cb50 <__hexdig_fun>
 800cc4c:	f100 3cff 	add.w	ip, r0, #4294967295
 800cc50:	fa5f fc8c 	uxtb.w	ip, ip
 800cc54:	f1bc 0f18 	cmp.w	ip, #24
 800cc58:	f04f 030a 	mov.w	r3, #10
 800cc5c:	d91e      	bls.n	800cc9c <__gethex+0x120>
 800cc5e:	b104      	cbz	r4, 800cc62 <__gethex+0xe6>
 800cc60:	4252      	negs	r2, r2
 800cc62:	4417      	add	r7, r2
 800cc64:	f8ca 1000 	str.w	r1, [sl]
 800cc68:	b1ed      	cbz	r5, 800cca6 <__gethex+0x12a>
 800cc6a:	f1bb 0f00 	cmp.w	fp, #0
 800cc6e:	bf0c      	ite	eq
 800cc70:	2506      	moveq	r5, #6
 800cc72:	2500      	movne	r5, #0
 800cc74:	4628      	mov	r0, r5
 800cc76:	b005      	add	sp, #20
 800cc78:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800cc7c:	2500      	movs	r5, #0
 800cc7e:	462c      	mov	r4, r5
 800cc80:	e7b0      	b.n	800cbe4 <__gethex+0x68>
 800cc82:	2c00      	cmp	r4, #0
 800cc84:	d1c7      	bne.n	800cc16 <__gethex+0x9a>
 800cc86:	4627      	mov	r7, r4
 800cc88:	e7c7      	b.n	800cc1a <__gethex+0x9e>
 800cc8a:	464e      	mov	r6, r9
 800cc8c:	462f      	mov	r7, r5
 800cc8e:	2501      	movs	r5, #1
 800cc90:	e7c3      	b.n	800cc1a <__gethex+0x9e>
 800cc92:	2400      	movs	r4, #0
 800cc94:	1cb1      	adds	r1, r6, #2
 800cc96:	e7cc      	b.n	800cc32 <__gethex+0xb6>
 800cc98:	2401      	movs	r4, #1
 800cc9a:	e7fb      	b.n	800cc94 <__gethex+0x118>
 800cc9c:	fb03 0002 	mla	r0, r3, r2, r0
 800cca0:	e7ce      	b.n	800cc40 <__gethex+0xc4>
 800cca2:	4631      	mov	r1, r6
 800cca4:	e7de      	b.n	800cc64 <__gethex+0xe8>
 800cca6:	eba6 0309 	sub.w	r3, r6, r9
 800ccaa:	3b01      	subs	r3, #1
 800ccac:	4629      	mov	r1, r5
 800ccae:	2b07      	cmp	r3, #7
 800ccb0:	dc0a      	bgt.n	800ccc8 <__gethex+0x14c>
 800ccb2:	9801      	ldr	r0, [sp, #4]
 800ccb4:	f7fd ff84 	bl	800abc0 <_Balloc>
 800ccb8:	4604      	mov	r4, r0
 800ccba:	b940      	cbnz	r0, 800ccce <__gethex+0x152>
 800ccbc:	4b5c      	ldr	r3, [pc, #368]	@ (800ce30 <__gethex+0x2b4>)
 800ccbe:	4602      	mov	r2, r0
 800ccc0:	21e4      	movs	r1, #228	@ 0xe4
 800ccc2:	485c      	ldr	r0, [pc, #368]	@ (800ce34 <__gethex+0x2b8>)
 800ccc4:	f7ff fec0 	bl	800ca48 <__assert_func>
 800ccc8:	3101      	adds	r1, #1
 800ccca:	105b      	asrs	r3, r3, #1
 800cccc:	e7ef      	b.n	800ccae <__gethex+0x132>
 800ccce:	f100 0a14 	add.w	sl, r0, #20
 800ccd2:	2300      	movs	r3, #0
 800ccd4:	4655      	mov	r5, sl
 800ccd6:	469b      	mov	fp, r3
 800ccd8:	45b1      	cmp	r9, r6
 800ccda:	d337      	bcc.n	800cd4c <__gethex+0x1d0>
 800ccdc:	f845 bb04 	str.w	fp, [r5], #4
 800cce0:	eba5 050a 	sub.w	r5, r5, sl
 800cce4:	10ad      	asrs	r5, r5, #2
 800cce6:	6125      	str	r5, [r4, #16]
 800cce8:	4658      	mov	r0, fp
 800ccea:	f7fe f85b 	bl	800ada4 <__hi0bits>
 800ccee:	016d      	lsls	r5, r5, #5
 800ccf0:	f8d8 6000 	ldr.w	r6, [r8]
 800ccf4:	1a2d      	subs	r5, r5, r0
 800ccf6:	42b5      	cmp	r5, r6
 800ccf8:	dd54      	ble.n	800cda4 <__gethex+0x228>
 800ccfa:	1bad      	subs	r5, r5, r6
 800ccfc:	4629      	mov	r1, r5
 800ccfe:	4620      	mov	r0, r4
 800cd00:	f7fe fbef 	bl	800b4e2 <__any_on>
 800cd04:	4681      	mov	r9, r0
 800cd06:	b178      	cbz	r0, 800cd28 <__gethex+0x1ac>
 800cd08:	1e6b      	subs	r3, r5, #1
 800cd0a:	1159      	asrs	r1, r3, #5
 800cd0c:	f003 021f 	and.w	r2, r3, #31
 800cd10:	f85a 1021 	ldr.w	r1, [sl, r1, lsl #2]
 800cd14:	f04f 0901 	mov.w	r9, #1
 800cd18:	fa09 f202 	lsl.w	r2, r9, r2
 800cd1c:	420a      	tst	r2, r1
 800cd1e:	d003      	beq.n	800cd28 <__gethex+0x1ac>
 800cd20:	454b      	cmp	r3, r9
 800cd22:	dc36      	bgt.n	800cd92 <__gethex+0x216>
 800cd24:	f04f 0902 	mov.w	r9, #2
 800cd28:	4629      	mov	r1, r5
 800cd2a:	4620      	mov	r0, r4
 800cd2c:	f7ff febe 	bl	800caac <rshift>
 800cd30:	442f      	add	r7, r5
 800cd32:	f8d8 3008 	ldr.w	r3, [r8, #8]
 800cd36:	42bb      	cmp	r3, r7
 800cd38:	da42      	bge.n	800cdc0 <__gethex+0x244>
 800cd3a:	9801      	ldr	r0, [sp, #4]
 800cd3c:	4621      	mov	r1, r4
 800cd3e:	f7fd ff7f 	bl	800ac40 <_Bfree>
 800cd42:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 800cd44:	2300      	movs	r3, #0
 800cd46:	6013      	str	r3, [r2, #0]
 800cd48:	25a3      	movs	r5, #163	@ 0xa3
 800cd4a:	e793      	b.n	800cc74 <__gethex+0xf8>
 800cd4c:	f816 2d01 	ldrb.w	r2, [r6, #-1]!
 800cd50:	2a2e      	cmp	r2, #46	@ 0x2e
 800cd52:	d012      	beq.n	800cd7a <__gethex+0x1fe>
 800cd54:	2b20      	cmp	r3, #32
 800cd56:	d104      	bne.n	800cd62 <__gethex+0x1e6>
 800cd58:	f845 bb04 	str.w	fp, [r5], #4
 800cd5c:	f04f 0b00 	mov.w	fp, #0
 800cd60:	465b      	mov	r3, fp
 800cd62:	7830      	ldrb	r0, [r6, #0]
 800cd64:	9303      	str	r3, [sp, #12]
 800cd66:	f7ff fef3 	bl	800cb50 <__hexdig_fun>
 800cd6a:	9b03      	ldr	r3, [sp, #12]
 800cd6c:	f000 000f 	and.w	r0, r0, #15
 800cd70:	4098      	lsls	r0, r3
 800cd72:	ea4b 0b00 	orr.w	fp, fp, r0
 800cd76:	3304      	adds	r3, #4
 800cd78:	e7ae      	b.n	800ccd8 <__gethex+0x15c>
 800cd7a:	45b1      	cmp	r9, r6
 800cd7c:	d8ea      	bhi.n	800cd54 <__gethex+0x1d8>
 800cd7e:	492b      	ldr	r1, [pc, #172]	@ (800ce2c <__gethex+0x2b0>)
 800cd80:	9303      	str	r3, [sp, #12]
 800cd82:	2201      	movs	r2, #1
 800cd84:	4630      	mov	r0, r6
 800cd86:	f7ff fe13 	bl	800c9b0 <strncmp>
 800cd8a:	9b03      	ldr	r3, [sp, #12]
 800cd8c:	2800      	cmp	r0, #0
 800cd8e:	d1e1      	bne.n	800cd54 <__gethex+0x1d8>
 800cd90:	e7a2      	b.n	800ccd8 <__gethex+0x15c>
 800cd92:	1ea9      	subs	r1, r5, #2
 800cd94:	4620      	mov	r0, r4
 800cd96:	f7fe fba4 	bl	800b4e2 <__any_on>
 800cd9a:	2800      	cmp	r0, #0
 800cd9c:	d0c2      	beq.n	800cd24 <__gethex+0x1a8>
 800cd9e:	f04f 0903 	mov.w	r9, #3
 800cda2:	e7c1      	b.n	800cd28 <__gethex+0x1ac>
 800cda4:	da09      	bge.n	800cdba <__gethex+0x23e>
 800cda6:	1b75      	subs	r5, r6, r5
 800cda8:	4621      	mov	r1, r4
 800cdaa:	9801      	ldr	r0, [sp, #4]
 800cdac:	462a      	mov	r2, r5
 800cdae:	f7fe f95f 	bl	800b070 <__lshift>
 800cdb2:	1b7f      	subs	r7, r7, r5
 800cdb4:	4604      	mov	r4, r0
 800cdb6:	f100 0a14 	add.w	sl, r0, #20
 800cdba:	f04f 0900 	mov.w	r9, #0
 800cdbe:	e7b8      	b.n	800cd32 <__gethex+0x1b6>
 800cdc0:	f8d8 5004 	ldr.w	r5, [r8, #4]
 800cdc4:	42bd      	cmp	r5, r7
 800cdc6:	dd6f      	ble.n	800cea8 <__gethex+0x32c>
 800cdc8:	1bed      	subs	r5, r5, r7
 800cdca:	42ae      	cmp	r6, r5
 800cdcc:	dc34      	bgt.n	800ce38 <__gethex+0x2bc>
 800cdce:	f8d8 300c 	ldr.w	r3, [r8, #12]
 800cdd2:	2b02      	cmp	r3, #2
 800cdd4:	d022      	beq.n	800ce1c <__gethex+0x2a0>
 800cdd6:	2b03      	cmp	r3, #3
 800cdd8:	d024      	beq.n	800ce24 <__gethex+0x2a8>
 800cdda:	2b01      	cmp	r3, #1
 800cddc:	d115      	bne.n	800ce0a <__gethex+0x28e>
 800cdde:	42ae      	cmp	r6, r5
 800cde0:	d113      	bne.n	800ce0a <__gethex+0x28e>
 800cde2:	2e01      	cmp	r6, #1
 800cde4:	d10b      	bne.n	800cdfe <__gethex+0x282>
 800cde6:	9a02      	ldr	r2, [sp, #8]
 800cde8:	f8d8 3004 	ldr.w	r3, [r8, #4]
 800cdec:	6013      	str	r3, [r2, #0]
 800cdee:	2301      	movs	r3, #1
 800cdf0:	6123      	str	r3, [r4, #16]
 800cdf2:	f8ca 3000 	str.w	r3, [sl]
 800cdf6:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 800cdf8:	2562      	movs	r5, #98	@ 0x62
 800cdfa:	601c      	str	r4, [r3, #0]
 800cdfc:	e73a      	b.n	800cc74 <__gethex+0xf8>
 800cdfe:	1e71      	subs	r1, r6, #1
 800ce00:	4620      	mov	r0, r4
 800ce02:	f7fe fb6e 	bl	800b4e2 <__any_on>
 800ce06:	2800      	cmp	r0, #0
 800ce08:	d1ed      	bne.n	800cde6 <__gethex+0x26a>
 800ce0a:	9801      	ldr	r0, [sp, #4]
 800ce0c:	4621      	mov	r1, r4
 800ce0e:	f7fd ff17 	bl	800ac40 <_Bfree>
 800ce12:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 800ce14:	2300      	movs	r3, #0
 800ce16:	6013      	str	r3, [r2, #0]
 800ce18:	2550      	movs	r5, #80	@ 0x50
 800ce1a:	e72b      	b.n	800cc74 <__gethex+0xf8>
 800ce1c:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 800ce1e:	2b00      	cmp	r3, #0
 800ce20:	d1f3      	bne.n	800ce0a <__gethex+0x28e>
 800ce22:	e7e0      	b.n	800cde6 <__gethex+0x26a>
 800ce24:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 800ce26:	2b00      	cmp	r3, #0
 800ce28:	d1dd      	bne.n	800cde6 <__gethex+0x26a>
 800ce2a:	e7ee      	b.n	800ce0a <__gethex+0x28e>
 800ce2c:	0800d770 	.word	0x0800d770
 800ce30:	0800d605 	.word	0x0800d605
 800ce34:	0800d91e 	.word	0x0800d91e
 800ce38:	1e6f      	subs	r7, r5, #1
 800ce3a:	f1b9 0f00 	cmp.w	r9, #0
 800ce3e:	d130      	bne.n	800cea2 <__gethex+0x326>
 800ce40:	b127      	cbz	r7, 800ce4c <__gethex+0x2d0>
 800ce42:	4639      	mov	r1, r7
 800ce44:	4620      	mov	r0, r4
 800ce46:	f7fe fb4c 	bl	800b4e2 <__any_on>
 800ce4a:	4681      	mov	r9, r0
 800ce4c:	117a      	asrs	r2, r7, #5
 800ce4e:	2301      	movs	r3, #1
 800ce50:	f85a 2022 	ldr.w	r2, [sl, r2, lsl #2]
 800ce54:	f007 071f 	and.w	r7, r7, #31
 800ce58:	40bb      	lsls	r3, r7
 800ce5a:	4213      	tst	r3, r2
 800ce5c:	4629      	mov	r1, r5
 800ce5e:	4620      	mov	r0, r4
 800ce60:	bf18      	it	ne
 800ce62:	f049 0902 	orrne.w	r9, r9, #2
 800ce66:	f7ff fe21 	bl	800caac <rshift>
 800ce6a:	f8d8 7004 	ldr.w	r7, [r8, #4]
 800ce6e:	1b76      	subs	r6, r6, r5
 800ce70:	2502      	movs	r5, #2
 800ce72:	f1b9 0f00 	cmp.w	r9, #0
 800ce76:	d047      	beq.n	800cf08 <__gethex+0x38c>
 800ce78:	f8d8 300c 	ldr.w	r3, [r8, #12]
 800ce7c:	2b02      	cmp	r3, #2
 800ce7e:	d015      	beq.n	800ceac <__gethex+0x330>
 800ce80:	2b03      	cmp	r3, #3
 800ce82:	d017      	beq.n	800ceb4 <__gethex+0x338>
 800ce84:	2b01      	cmp	r3, #1
 800ce86:	d109      	bne.n	800ce9c <__gethex+0x320>
 800ce88:	f019 0f02 	tst.w	r9, #2
 800ce8c:	d006      	beq.n	800ce9c <__gethex+0x320>
 800ce8e:	f8da 3000 	ldr.w	r3, [sl]
 800ce92:	ea49 0903 	orr.w	r9, r9, r3
 800ce96:	f019 0f01 	tst.w	r9, #1
 800ce9a:	d10e      	bne.n	800ceba <__gethex+0x33e>
 800ce9c:	f045 0510 	orr.w	r5, r5, #16
 800cea0:	e032      	b.n	800cf08 <__gethex+0x38c>
 800cea2:	f04f 0901 	mov.w	r9, #1
 800cea6:	e7d1      	b.n	800ce4c <__gethex+0x2d0>
 800cea8:	2501      	movs	r5, #1
 800ceaa:	e7e2      	b.n	800ce72 <__gethex+0x2f6>
 800ceac:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 800ceae:	f1c3 0301 	rsb	r3, r3, #1
 800ceb2:	930f      	str	r3, [sp, #60]	@ 0x3c
 800ceb4:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 800ceb6:	2b00      	cmp	r3, #0
 800ceb8:	d0f0      	beq.n	800ce9c <__gethex+0x320>
 800ceba:	f8d4 b010 	ldr.w	fp, [r4, #16]
 800cebe:	f104 0314 	add.w	r3, r4, #20
 800cec2:	ea4f 0a8b 	mov.w	sl, fp, lsl #2
 800cec6:	eb03 018b 	add.w	r1, r3, fp, lsl #2
 800ceca:	f04f 0c00 	mov.w	ip, #0
 800cece:	4618      	mov	r0, r3
 800ced0:	f853 2b04 	ldr.w	r2, [r3], #4
 800ced4:	f1b2 3fff 	cmp.w	r2, #4294967295
 800ced8:	d01b      	beq.n	800cf12 <__gethex+0x396>
 800ceda:	3201      	adds	r2, #1
 800cedc:	6002      	str	r2, [r0, #0]
 800cede:	2d02      	cmp	r5, #2
 800cee0:	f104 0314 	add.w	r3, r4, #20
 800cee4:	d13c      	bne.n	800cf60 <__gethex+0x3e4>
 800cee6:	f8d8 2000 	ldr.w	r2, [r8]
 800ceea:	3a01      	subs	r2, #1
 800ceec:	42b2      	cmp	r2, r6
 800ceee:	d109      	bne.n	800cf04 <__gethex+0x388>
 800cef0:	1171      	asrs	r1, r6, #5
 800cef2:	2201      	movs	r2, #1
 800cef4:	f853 3021 	ldr.w	r3, [r3, r1, lsl #2]
 800cef8:	f006 061f 	and.w	r6, r6, #31
 800cefc:	fa02 f606 	lsl.w	r6, r2, r6
 800cf00:	421e      	tst	r6, r3
 800cf02:	d13a      	bne.n	800cf7a <__gethex+0x3fe>
 800cf04:	f045 0520 	orr.w	r5, r5, #32
 800cf08:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 800cf0a:	601c      	str	r4, [r3, #0]
 800cf0c:	9b02      	ldr	r3, [sp, #8]
 800cf0e:	601f      	str	r7, [r3, #0]
 800cf10:	e6b0      	b.n	800cc74 <__gethex+0xf8>
 800cf12:	4299      	cmp	r1, r3
 800cf14:	f843 cc04 	str.w	ip, [r3, #-4]
 800cf18:	d8d9      	bhi.n	800cece <__gethex+0x352>
 800cf1a:	68a3      	ldr	r3, [r4, #8]
 800cf1c:	459b      	cmp	fp, r3
 800cf1e:	db17      	blt.n	800cf50 <__gethex+0x3d4>
 800cf20:	6861      	ldr	r1, [r4, #4]
 800cf22:	9801      	ldr	r0, [sp, #4]
 800cf24:	3101      	adds	r1, #1
 800cf26:	f7fd fe4b 	bl	800abc0 <_Balloc>
 800cf2a:	4681      	mov	r9, r0
 800cf2c:	b918      	cbnz	r0, 800cf36 <__gethex+0x3ba>
 800cf2e:	4b1a      	ldr	r3, [pc, #104]	@ (800cf98 <__gethex+0x41c>)
 800cf30:	4602      	mov	r2, r0
 800cf32:	2184      	movs	r1, #132	@ 0x84
 800cf34:	e6c5      	b.n	800ccc2 <__gethex+0x146>
 800cf36:	6922      	ldr	r2, [r4, #16]
 800cf38:	3202      	adds	r2, #2
 800cf3a:	f104 010c 	add.w	r1, r4, #12
 800cf3e:	0092      	lsls	r2, r2, #2
 800cf40:	300c      	adds	r0, #12
 800cf42:	f7fc feda 	bl	8009cfa <memcpy>
 800cf46:	4621      	mov	r1, r4
 800cf48:	9801      	ldr	r0, [sp, #4]
 800cf4a:	f7fd fe79 	bl	800ac40 <_Bfree>
 800cf4e:	464c      	mov	r4, r9
 800cf50:	6923      	ldr	r3, [r4, #16]
 800cf52:	1c5a      	adds	r2, r3, #1
 800cf54:	eb04 0383 	add.w	r3, r4, r3, lsl #2
 800cf58:	6122      	str	r2, [r4, #16]
 800cf5a:	2201      	movs	r2, #1
 800cf5c:	615a      	str	r2, [r3, #20]
 800cf5e:	e7be      	b.n	800cede <__gethex+0x362>
 800cf60:	6922      	ldr	r2, [r4, #16]
 800cf62:	455a      	cmp	r2, fp
 800cf64:	dd0b      	ble.n	800cf7e <__gethex+0x402>
 800cf66:	2101      	movs	r1, #1
 800cf68:	4620      	mov	r0, r4
 800cf6a:	f7ff fd9f 	bl	800caac <rshift>
 800cf6e:	f8d8 3008 	ldr.w	r3, [r8, #8]
 800cf72:	3701      	adds	r7, #1
 800cf74:	42bb      	cmp	r3, r7
 800cf76:	f6ff aee0 	blt.w	800cd3a <__gethex+0x1be>
 800cf7a:	2501      	movs	r5, #1
 800cf7c:	e7c2      	b.n	800cf04 <__gethex+0x388>
 800cf7e:	f016 061f 	ands.w	r6, r6, #31
 800cf82:	d0fa      	beq.n	800cf7a <__gethex+0x3fe>
 800cf84:	4453      	add	r3, sl
 800cf86:	f1c6 0620 	rsb	r6, r6, #32
 800cf8a:	f853 0c04 	ldr.w	r0, [r3, #-4]
 800cf8e:	f7fd ff09 	bl	800ada4 <__hi0bits>
 800cf92:	42b0      	cmp	r0, r6
 800cf94:	dbe7      	blt.n	800cf66 <__gethex+0x3ea>
 800cf96:	e7f0      	b.n	800cf7a <__gethex+0x3fe>
 800cf98:	0800d605 	.word	0x0800d605

0800cf9c <L_shift>:
 800cf9c:	f1c2 0208 	rsb	r2, r2, #8
 800cfa0:	0092      	lsls	r2, r2, #2
 800cfa2:	b570      	push	{r4, r5, r6, lr}
 800cfa4:	f1c2 0620 	rsb	r6, r2, #32
 800cfa8:	6843      	ldr	r3, [r0, #4]
 800cfaa:	6804      	ldr	r4, [r0, #0]
 800cfac:	fa03 f506 	lsl.w	r5, r3, r6
 800cfb0:	432c      	orrs	r4, r5
 800cfb2:	40d3      	lsrs	r3, r2
 800cfb4:	6004      	str	r4, [r0, #0]
 800cfb6:	f840 3f04 	str.w	r3, [r0, #4]!
 800cfba:	4288      	cmp	r0, r1
 800cfbc:	d3f4      	bcc.n	800cfa8 <L_shift+0xc>
 800cfbe:	bd70      	pop	{r4, r5, r6, pc}

0800cfc0 <__match>:
 800cfc0:	b530      	push	{r4, r5, lr}
 800cfc2:	6803      	ldr	r3, [r0, #0]
 800cfc4:	3301      	adds	r3, #1
 800cfc6:	f811 4b01 	ldrb.w	r4, [r1], #1
 800cfca:	b914      	cbnz	r4, 800cfd2 <__match+0x12>
 800cfcc:	6003      	str	r3, [r0, #0]
 800cfce:	2001      	movs	r0, #1
 800cfd0:	bd30      	pop	{r4, r5, pc}
 800cfd2:	f813 2b01 	ldrb.w	r2, [r3], #1
 800cfd6:	f1a2 0541 	sub.w	r5, r2, #65	@ 0x41
 800cfda:	2d19      	cmp	r5, #25
 800cfdc:	bf98      	it	ls
 800cfde:	3220      	addls	r2, #32
 800cfe0:	42a2      	cmp	r2, r4
 800cfe2:	d0f0      	beq.n	800cfc6 <__match+0x6>
 800cfe4:	2000      	movs	r0, #0
 800cfe6:	e7f3      	b.n	800cfd0 <__match+0x10>

0800cfe8 <__hexnan>:
 800cfe8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800cfec:	680b      	ldr	r3, [r1, #0]
 800cfee:	6801      	ldr	r1, [r0, #0]
 800cff0:	115e      	asrs	r6, r3, #5
 800cff2:	eb02 0686 	add.w	r6, r2, r6, lsl #2
 800cff6:	f013 031f 	ands.w	r3, r3, #31
 800cffa:	b087      	sub	sp, #28
 800cffc:	bf18      	it	ne
 800cffe:	3604      	addne	r6, #4
 800d000:	2500      	movs	r5, #0
 800d002:	1f37      	subs	r7, r6, #4
 800d004:	4682      	mov	sl, r0
 800d006:	4690      	mov	r8, r2
 800d008:	9301      	str	r3, [sp, #4]
 800d00a:	f846 5c04 	str.w	r5, [r6, #-4]
 800d00e:	46b9      	mov	r9, r7
 800d010:	463c      	mov	r4, r7
 800d012:	9502      	str	r5, [sp, #8]
 800d014:	46ab      	mov	fp, r5
 800d016:	784a      	ldrb	r2, [r1, #1]
 800d018:	1c4b      	adds	r3, r1, #1
 800d01a:	9303      	str	r3, [sp, #12]
 800d01c:	b342      	cbz	r2, 800d070 <__hexnan+0x88>
 800d01e:	4610      	mov	r0, r2
 800d020:	9105      	str	r1, [sp, #20]
 800d022:	9204      	str	r2, [sp, #16]
 800d024:	f7ff fd94 	bl	800cb50 <__hexdig_fun>
 800d028:	2800      	cmp	r0, #0
 800d02a:	d151      	bne.n	800d0d0 <__hexnan+0xe8>
 800d02c:	9a04      	ldr	r2, [sp, #16]
 800d02e:	9905      	ldr	r1, [sp, #20]
 800d030:	2a20      	cmp	r2, #32
 800d032:	d818      	bhi.n	800d066 <__hexnan+0x7e>
 800d034:	9b02      	ldr	r3, [sp, #8]
 800d036:	459b      	cmp	fp, r3
 800d038:	dd13      	ble.n	800d062 <__hexnan+0x7a>
 800d03a:	454c      	cmp	r4, r9
 800d03c:	d206      	bcs.n	800d04c <__hexnan+0x64>
 800d03e:	2d07      	cmp	r5, #7
 800d040:	dc04      	bgt.n	800d04c <__hexnan+0x64>
 800d042:	462a      	mov	r2, r5
 800d044:	4649      	mov	r1, r9
 800d046:	4620      	mov	r0, r4
 800d048:	f7ff ffa8 	bl	800cf9c <L_shift>
 800d04c:	4544      	cmp	r4, r8
 800d04e:	d952      	bls.n	800d0f6 <__hexnan+0x10e>
 800d050:	2300      	movs	r3, #0
 800d052:	f1a4 0904 	sub.w	r9, r4, #4
 800d056:	f844 3c04 	str.w	r3, [r4, #-4]
 800d05a:	f8cd b008 	str.w	fp, [sp, #8]
 800d05e:	464c      	mov	r4, r9
 800d060:	461d      	mov	r5, r3
 800d062:	9903      	ldr	r1, [sp, #12]
 800d064:	e7d7      	b.n	800d016 <__hexnan+0x2e>
 800d066:	2a29      	cmp	r2, #41	@ 0x29
 800d068:	d157      	bne.n	800d11a <__hexnan+0x132>
 800d06a:	3102      	adds	r1, #2
 800d06c:	f8ca 1000 	str.w	r1, [sl]
 800d070:	f1bb 0f00 	cmp.w	fp, #0
 800d074:	d051      	beq.n	800d11a <__hexnan+0x132>
 800d076:	454c      	cmp	r4, r9
 800d078:	d206      	bcs.n	800d088 <__hexnan+0xa0>
 800d07a:	2d07      	cmp	r5, #7
 800d07c:	dc04      	bgt.n	800d088 <__hexnan+0xa0>
 800d07e:	462a      	mov	r2, r5
 800d080:	4649      	mov	r1, r9
 800d082:	4620      	mov	r0, r4
 800d084:	f7ff ff8a 	bl	800cf9c <L_shift>
 800d088:	4544      	cmp	r4, r8
 800d08a:	d936      	bls.n	800d0fa <__hexnan+0x112>
 800d08c:	f1a8 0204 	sub.w	r2, r8, #4
 800d090:	4623      	mov	r3, r4
 800d092:	f853 1b04 	ldr.w	r1, [r3], #4
 800d096:	f842 1f04 	str.w	r1, [r2, #4]!
 800d09a:	429f      	cmp	r7, r3
 800d09c:	d2f9      	bcs.n	800d092 <__hexnan+0xaa>
 800d09e:	1b3b      	subs	r3, r7, r4
 800d0a0:	f023 0303 	bic.w	r3, r3, #3
 800d0a4:	3304      	adds	r3, #4
 800d0a6:	3401      	adds	r4, #1
 800d0a8:	3e03      	subs	r6, #3
 800d0aa:	42b4      	cmp	r4, r6
 800d0ac:	bf88      	it	hi
 800d0ae:	2304      	movhi	r3, #4
 800d0b0:	4443      	add	r3, r8
 800d0b2:	2200      	movs	r2, #0
 800d0b4:	f843 2b04 	str.w	r2, [r3], #4
 800d0b8:	429f      	cmp	r7, r3
 800d0ba:	d2fb      	bcs.n	800d0b4 <__hexnan+0xcc>
 800d0bc:	683b      	ldr	r3, [r7, #0]
 800d0be:	b91b      	cbnz	r3, 800d0c8 <__hexnan+0xe0>
 800d0c0:	4547      	cmp	r7, r8
 800d0c2:	d128      	bne.n	800d116 <__hexnan+0x12e>
 800d0c4:	2301      	movs	r3, #1
 800d0c6:	603b      	str	r3, [r7, #0]
 800d0c8:	2005      	movs	r0, #5
 800d0ca:	b007      	add	sp, #28
 800d0cc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d0d0:	3501      	adds	r5, #1
 800d0d2:	2d08      	cmp	r5, #8
 800d0d4:	f10b 0b01 	add.w	fp, fp, #1
 800d0d8:	dd06      	ble.n	800d0e8 <__hexnan+0x100>
 800d0da:	4544      	cmp	r4, r8
 800d0dc:	d9c1      	bls.n	800d062 <__hexnan+0x7a>
 800d0de:	2300      	movs	r3, #0
 800d0e0:	f844 3c04 	str.w	r3, [r4, #-4]
 800d0e4:	2501      	movs	r5, #1
 800d0e6:	3c04      	subs	r4, #4
 800d0e8:	6822      	ldr	r2, [r4, #0]
 800d0ea:	f000 000f 	and.w	r0, r0, #15
 800d0ee:	ea40 1002 	orr.w	r0, r0, r2, lsl #4
 800d0f2:	6020      	str	r0, [r4, #0]
 800d0f4:	e7b5      	b.n	800d062 <__hexnan+0x7a>
 800d0f6:	2508      	movs	r5, #8
 800d0f8:	e7b3      	b.n	800d062 <__hexnan+0x7a>
 800d0fa:	9b01      	ldr	r3, [sp, #4]
 800d0fc:	2b00      	cmp	r3, #0
 800d0fe:	d0dd      	beq.n	800d0bc <__hexnan+0xd4>
 800d100:	f1c3 0320 	rsb	r3, r3, #32
 800d104:	f04f 32ff 	mov.w	r2, #4294967295
 800d108:	40da      	lsrs	r2, r3
 800d10a:	f856 3c04 	ldr.w	r3, [r6, #-4]
 800d10e:	4013      	ands	r3, r2
 800d110:	f846 3c04 	str.w	r3, [r6, #-4]
 800d114:	e7d2      	b.n	800d0bc <__hexnan+0xd4>
 800d116:	3f04      	subs	r7, #4
 800d118:	e7d0      	b.n	800d0bc <__hexnan+0xd4>
 800d11a:	2004      	movs	r0, #4
 800d11c:	e7d5      	b.n	800d0ca <__hexnan+0xe2>

0800d11e <__ascii_mbtowc>:
 800d11e:	b082      	sub	sp, #8
 800d120:	b901      	cbnz	r1, 800d124 <__ascii_mbtowc+0x6>
 800d122:	a901      	add	r1, sp, #4
 800d124:	b142      	cbz	r2, 800d138 <__ascii_mbtowc+0x1a>
 800d126:	b14b      	cbz	r3, 800d13c <__ascii_mbtowc+0x1e>
 800d128:	7813      	ldrb	r3, [r2, #0]
 800d12a:	600b      	str	r3, [r1, #0]
 800d12c:	7812      	ldrb	r2, [r2, #0]
 800d12e:	1e10      	subs	r0, r2, #0
 800d130:	bf18      	it	ne
 800d132:	2001      	movne	r0, #1
 800d134:	b002      	add	sp, #8
 800d136:	4770      	bx	lr
 800d138:	4610      	mov	r0, r2
 800d13a:	e7fb      	b.n	800d134 <__ascii_mbtowc+0x16>
 800d13c:	f06f 0001 	mvn.w	r0, #1
 800d140:	e7f8      	b.n	800d134 <__ascii_mbtowc+0x16>

0800d142 <_realloc_r>:
 800d142:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800d146:	4680      	mov	r8, r0
 800d148:	4615      	mov	r5, r2
 800d14a:	460c      	mov	r4, r1
 800d14c:	b921      	cbnz	r1, 800d158 <_realloc_r+0x16>
 800d14e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800d152:	4611      	mov	r1, r2
 800d154:	f7fd bca8 	b.w	800aaa8 <_malloc_r>
 800d158:	b92a      	cbnz	r2, 800d166 <_realloc_r+0x24>
 800d15a:	f7fd fc31 	bl	800a9c0 <_free_r>
 800d15e:	2400      	movs	r4, #0
 800d160:	4620      	mov	r0, r4
 800d162:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800d166:	f000 f840 	bl	800d1ea <_malloc_usable_size_r>
 800d16a:	4285      	cmp	r5, r0
 800d16c:	4606      	mov	r6, r0
 800d16e:	d802      	bhi.n	800d176 <_realloc_r+0x34>
 800d170:	ebb5 0f50 	cmp.w	r5, r0, lsr #1
 800d174:	d8f4      	bhi.n	800d160 <_realloc_r+0x1e>
 800d176:	4629      	mov	r1, r5
 800d178:	4640      	mov	r0, r8
 800d17a:	f7fd fc95 	bl	800aaa8 <_malloc_r>
 800d17e:	4607      	mov	r7, r0
 800d180:	2800      	cmp	r0, #0
 800d182:	d0ec      	beq.n	800d15e <_realloc_r+0x1c>
 800d184:	42b5      	cmp	r5, r6
 800d186:	462a      	mov	r2, r5
 800d188:	4621      	mov	r1, r4
 800d18a:	bf28      	it	cs
 800d18c:	4632      	movcs	r2, r6
 800d18e:	f7fc fdb4 	bl	8009cfa <memcpy>
 800d192:	4621      	mov	r1, r4
 800d194:	4640      	mov	r0, r8
 800d196:	f7fd fc13 	bl	800a9c0 <_free_r>
 800d19a:	463c      	mov	r4, r7
 800d19c:	e7e0      	b.n	800d160 <_realloc_r+0x1e>

0800d19e <__ascii_wctomb>:
 800d19e:	4603      	mov	r3, r0
 800d1a0:	4608      	mov	r0, r1
 800d1a2:	b141      	cbz	r1, 800d1b6 <__ascii_wctomb+0x18>
 800d1a4:	2aff      	cmp	r2, #255	@ 0xff
 800d1a6:	d904      	bls.n	800d1b2 <__ascii_wctomb+0x14>
 800d1a8:	228a      	movs	r2, #138	@ 0x8a
 800d1aa:	601a      	str	r2, [r3, #0]
 800d1ac:	f04f 30ff 	mov.w	r0, #4294967295
 800d1b0:	4770      	bx	lr
 800d1b2:	700a      	strb	r2, [r1, #0]
 800d1b4:	2001      	movs	r0, #1
 800d1b6:	4770      	bx	lr

0800d1b8 <fiprintf>:
 800d1b8:	b40e      	push	{r1, r2, r3}
 800d1ba:	b503      	push	{r0, r1, lr}
 800d1bc:	4601      	mov	r1, r0
 800d1be:	ab03      	add	r3, sp, #12
 800d1c0:	4805      	ldr	r0, [pc, #20]	@ (800d1d8 <fiprintf+0x20>)
 800d1c2:	f853 2b04 	ldr.w	r2, [r3], #4
 800d1c6:	6800      	ldr	r0, [r0, #0]
 800d1c8:	9301      	str	r3, [sp, #4]
 800d1ca:	f7ff f9b1 	bl	800c530 <_vfiprintf_r>
 800d1ce:	b002      	add	sp, #8
 800d1d0:	f85d eb04 	ldr.w	lr, [sp], #4
 800d1d4:	b003      	add	sp, #12
 800d1d6:	4770      	bx	lr
 800d1d8:	20000040 	.word	0x20000040

0800d1dc <abort>:
 800d1dc:	b508      	push	{r3, lr}
 800d1de:	2006      	movs	r0, #6
 800d1e0:	f000 f834 	bl	800d24c <raise>
 800d1e4:	2001      	movs	r0, #1
 800d1e6:	f7f6 fabd 	bl	8003764 <_exit>

0800d1ea <_malloc_usable_size_r>:
 800d1ea:	f851 3c04 	ldr.w	r3, [r1, #-4]
 800d1ee:	1f18      	subs	r0, r3, #4
 800d1f0:	2b00      	cmp	r3, #0
 800d1f2:	bfbc      	itt	lt
 800d1f4:	580b      	ldrlt	r3, [r1, r0]
 800d1f6:	18c0      	addlt	r0, r0, r3
 800d1f8:	4770      	bx	lr

0800d1fa <_raise_r>:
 800d1fa:	291f      	cmp	r1, #31
 800d1fc:	b538      	push	{r3, r4, r5, lr}
 800d1fe:	4605      	mov	r5, r0
 800d200:	460c      	mov	r4, r1
 800d202:	d904      	bls.n	800d20e <_raise_r+0x14>
 800d204:	2316      	movs	r3, #22
 800d206:	6003      	str	r3, [r0, #0]
 800d208:	f04f 30ff 	mov.w	r0, #4294967295
 800d20c:	bd38      	pop	{r3, r4, r5, pc}
 800d20e:	6bc2      	ldr	r2, [r0, #60]	@ 0x3c
 800d210:	b112      	cbz	r2, 800d218 <_raise_r+0x1e>
 800d212:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 800d216:	b94b      	cbnz	r3, 800d22c <_raise_r+0x32>
 800d218:	4628      	mov	r0, r5
 800d21a:	f000 f831 	bl	800d280 <_getpid_r>
 800d21e:	4622      	mov	r2, r4
 800d220:	4601      	mov	r1, r0
 800d222:	4628      	mov	r0, r5
 800d224:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800d228:	f000 b818 	b.w	800d25c <_kill_r>
 800d22c:	2b01      	cmp	r3, #1
 800d22e:	d00a      	beq.n	800d246 <_raise_r+0x4c>
 800d230:	1c59      	adds	r1, r3, #1
 800d232:	d103      	bne.n	800d23c <_raise_r+0x42>
 800d234:	2316      	movs	r3, #22
 800d236:	6003      	str	r3, [r0, #0]
 800d238:	2001      	movs	r0, #1
 800d23a:	e7e7      	b.n	800d20c <_raise_r+0x12>
 800d23c:	2100      	movs	r1, #0
 800d23e:	f842 1024 	str.w	r1, [r2, r4, lsl #2]
 800d242:	4620      	mov	r0, r4
 800d244:	4798      	blx	r3
 800d246:	2000      	movs	r0, #0
 800d248:	e7e0      	b.n	800d20c <_raise_r+0x12>
	...

0800d24c <raise>:
 800d24c:	4b02      	ldr	r3, [pc, #8]	@ (800d258 <raise+0xc>)
 800d24e:	4601      	mov	r1, r0
 800d250:	6818      	ldr	r0, [r3, #0]
 800d252:	f7ff bfd2 	b.w	800d1fa <_raise_r>
 800d256:	bf00      	nop
 800d258:	20000040 	.word	0x20000040

0800d25c <_kill_r>:
 800d25c:	b538      	push	{r3, r4, r5, lr}
 800d25e:	4d07      	ldr	r5, [pc, #28]	@ (800d27c <_kill_r+0x20>)
 800d260:	2300      	movs	r3, #0
 800d262:	4604      	mov	r4, r0
 800d264:	4608      	mov	r0, r1
 800d266:	4611      	mov	r1, r2
 800d268:	602b      	str	r3, [r5, #0]
 800d26a:	f7f6 fa6b 	bl	8003744 <_kill>
 800d26e:	1c43      	adds	r3, r0, #1
 800d270:	d102      	bne.n	800d278 <_kill_r+0x1c>
 800d272:	682b      	ldr	r3, [r5, #0]
 800d274:	b103      	cbz	r3, 800d278 <_kill_r+0x1c>
 800d276:	6023      	str	r3, [r4, #0]
 800d278:	bd38      	pop	{r3, r4, r5, pc}
 800d27a:	bf00      	nop
 800d27c:	20000838 	.word	0x20000838

0800d280 <_getpid_r>:
 800d280:	f7f6 ba58 	b.w	8003734 <_getpid>

0800d284 <_init>:
 800d284:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800d286:	bf00      	nop
 800d288:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800d28a:	bc08      	pop	{r3}
 800d28c:	469e      	mov	lr, r3
 800d28e:	4770      	bx	lr

0800d290 <_fini>:
 800d290:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800d292:	bf00      	nop
 800d294:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800d296:	bc08      	pop	{r3}
 800d298:	469e      	mov	lr, r3
 800d29a:	4770      	bx	lr
