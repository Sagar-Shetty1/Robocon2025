
Robot_Config_1.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001c4  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0000cbb4  080001d0  080001d0  000011d0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000006d8  0800cd88  0800cd88  0000dd88  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  0800d460  0800d460  0000f1fc  2**0
                  CONTENTS
  4 .ARM          00000008  0800d460  0800d460  0000e460  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  0800d468  0800d468  0000f1fc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  0800d468  0800d468  0000e468  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  0800d46c  0800d46c  0000e46c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         000001fc  20000000  0800d470  0000f000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000604  200001fc  0800d66c  0000f1fc  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  20000800  0800d66c  0000f800  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  0000f1fc  2**0
                  CONTENTS, READONLY
 12 .debug_info   0001295d  00000000  00000000  0000f22c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00002823  00000000  00000000  00021b89  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00001230  00000000  00000000  000243b0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_rnglists 00000e60  00000000  00000000  000255e0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00024162  00000000  00000000  00026440  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00016180  00000000  00000000  0004a5a2  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    000d87a8  00000000  00000000  00060722  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000043  00000000  00000000  00138eca  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00006384  00000000  00000000  00138f10  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 0000006c  00000000  00000000  0013f294  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001d0 <__do_global_dtors_aux>:
 80001d0:	b510      	push	{r4, lr}
 80001d2:	4c05      	ldr	r4, [pc, #20]	@ (80001e8 <__do_global_dtors_aux+0x18>)
 80001d4:	7823      	ldrb	r3, [r4, #0]
 80001d6:	b933      	cbnz	r3, 80001e6 <__do_global_dtors_aux+0x16>
 80001d8:	4b04      	ldr	r3, [pc, #16]	@ (80001ec <__do_global_dtors_aux+0x1c>)
 80001da:	b113      	cbz	r3, 80001e2 <__do_global_dtors_aux+0x12>
 80001dc:	4804      	ldr	r0, [pc, #16]	@ (80001f0 <__do_global_dtors_aux+0x20>)
 80001de:	f3af 8000 	nop.w
 80001e2:	2301      	movs	r3, #1
 80001e4:	7023      	strb	r3, [r4, #0]
 80001e6:	bd10      	pop	{r4, pc}
 80001e8:	200001fc 	.word	0x200001fc
 80001ec:	00000000 	.word	0x00000000
 80001f0:	0800cd6c 	.word	0x0800cd6c

080001f4 <frame_dummy>:
 80001f4:	b508      	push	{r3, lr}
 80001f6:	4b03      	ldr	r3, [pc, #12]	@ (8000204 <frame_dummy+0x10>)
 80001f8:	b11b      	cbz	r3, 8000202 <frame_dummy+0xe>
 80001fa:	4903      	ldr	r1, [pc, #12]	@ (8000208 <frame_dummy+0x14>)
 80001fc:	4803      	ldr	r0, [pc, #12]	@ (800020c <frame_dummy+0x18>)
 80001fe:	f3af 8000 	nop.w
 8000202:	bd08      	pop	{r3, pc}
 8000204:	00000000 	.word	0x00000000
 8000208:	20000200 	.word	0x20000200
 800020c:	0800cd6c 	.word	0x0800cd6c

08000210 <memchr>:
 8000210:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 8000214:	2a10      	cmp	r2, #16
 8000216:	db2b      	blt.n	8000270 <memchr+0x60>
 8000218:	f010 0f07 	tst.w	r0, #7
 800021c:	d008      	beq.n	8000230 <memchr+0x20>
 800021e:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000222:	3a01      	subs	r2, #1
 8000224:	428b      	cmp	r3, r1
 8000226:	d02d      	beq.n	8000284 <memchr+0x74>
 8000228:	f010 0f07 	tst.w	r0, #7
 800022c:	b342      	cbz	r2, 8000280 <memchr+0x70>
 800022e:	d1f6      	bne.n	800021e <memchr+0xe>
 8000230:	b4f0      	push	{r4, r5, r6, r7}
 8000232:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000236:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800023a:	f022 0407 	bic.w	r4, r2, #7
 800023e:	f07f 0700 	mvns.w	r7, #0
 8000242:	2300      	movs	r3, #0
 8000244:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000248:	3c08      	subs	r4, #8
 800024a:	ea85 0501 	eor.w	r5, r5, r1
 800024e:	ea86 0601 	eor.w	r6, r6, r1
 8000252:	fa85 f547 	uadd8	r5, r5, r7
 8000256:	faa3 f587 	sel	r5, r3, r7
 800025a:	fa86 f647 	uadd8	r6, r6, r7
 800025e:	faa5 f687 	sel	r6, r5, r7
 8000262:	b98e      	cbnz	r6, 8000288 <memchr+0x78>
 8000264:	d1ee      	bne.n	8000244 <memchr+0x34>
 8000266:	bcf0      	pop	{r4, r5, r6, r7}
 8000268:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 800026c:	f002 0207 	and.w	r2, r2, #7
 8000270:	b132      	cbz	r2, 8000280 <memchr+0x70>
 8000272:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000276:	3a01      	subs	r2, #1
 8000278:	ea83 0301 	eor.w	r3, r3, r1
 800027c:	b113      	cbz	r3, 8000284 <memchr+0x74>
 800027e:	d1f8      	bne.n	8000272 <memchr+0x62>
 8000280:	2000      	movs	r0, #0
 8000282:	4770      	bx	lr
 8000284:	3801      	subs	r0, #1
 8000286:	4770      	bx	lr
 8000288:	2d00      	cmp	r5, #0
 800028a:	bf06      	itte	eq
 800028c:	4635      	moveq	r5, r6
 800028e:	3803      	subeq	r0, #3
 8000290:	3807      	subne	r0, #7
 8000292:	f015 0f01 	tst.w	r5, #1
 8000296:	d107      	bne.n	80002a8 <memchr+0x98>
 8000298:	3001      	adds	r0, #1
 800029a:	f415 7f80 	tst.w	r5, #256	@ 0x100
 800029e:	bf02      	ittt	eq
 80002a0:	3001      	addeq	r0, #1
 80002a2:	f415 3fc0 	tsteq.w	r5, #98304	@ 0x18000
 80002a6:	3001      	addeq	r0, #1
 80002a8:	bcf0      	pop	{r4, r5, r6, r7}
 80002aa:	3801      	subs	r0, #1
 80002ac:	4770      	bx	lr
 80002ae:	bf00      	nop

080002b0 <strlen>:
 80002b0:	4603      	mov	r3, r0
 80002b2:	f813 2b01 	ldrb.w	r2, [r3], #1
 80002b6:	2a00      	cmp	r2, #0
 80002b8:	d1fb      	bne.n	80002b2 <strlen+0x2>
 80002ba:	1a18      	subs	r0, r3, r0
 80002bc:	3801      	subs	r0, #1
 80002be:	4770      	bx	lr

080002c0 <__aeabi_drsub>:
 80002c0:	f081 4100 	eor.w	r1, r1, #2147483648	@ 0x80000000
 80002c4:	e002      	b.n	80002cc <__adddf3>
 80002c6:	bf00      	nop

080002c8 <__aeabi_dsub>:
 80002c8:	f083 4300 	eor.w	r3, r3, #2147483648	@ 0x80000000

080002cc <__adddf3>:
 80002cc:	b530      	push	{r4, r5, lr}
 80002ce:	ea4f 0441 	mov.w	r4, r1, lsl #1
 80002d2:	ea4f 0543 	mov.w	r5, r3, lsl #1
 80002d6:	ea94 0f05 	teq	r4, r5
 80002da:	bf08      	it	eq
 80002dc:	ea90 0f02 	teqeq	r0, r2
 80002e0:	bf1f      	itttt	ne
 80002e2:	ea54 0c00 	orrsne.w	ip, r4, r0
 80002e6:	ea55 0c02 	orrsne.w	ip, r5, r2
 80002ea:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 80002ee:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80002f2:	f000 80e2 	beq.w	80004ba <__adddf3+0x1ee>
 80002f6:	ea4f 5454 	mov.w	r4, r4, lsr #21
 80002fa:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 80002fe:	bfb8      	it	lt
 8000300:	426d      	neglt	r5, r5
 8000302:	dd0c      	ble.n	800031e <__adddf3+0x52>
 8000304:	442c      	add	r4, r5
 8000306:	ea80 0202 	eor.w	r2, r0, r2
 800030a:	ea81 0303 	eor.w	r3, r1, r3
 800030e:	ea82 0000 	eor.w	r0, r2, r0
 8000312:	ea83 0101 	eor.w	r1, r3, r1
 8000316:	ea80 0202 	eor.w	r2, r0, r2
 800031a:	ea81 0303 	eor.w	r3, r1, r3
 800031e:	2d36      	cmp	r5, #54	@ 0x36
 8000320:	bf88      	it	hi
 8000322:	bd30      	pophi	{r4, r5, pc}
 8000324:	f011 4f00 	tst.w	r1, #2147483648	@ 0x80000000
 8000328:	ea4f 3101 	mov.w	r1, r1, lsl #12
 800032c:	f44f 1c80 	mov.w	ip, #1048576	@ 0x100000
 8000330:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 8000334:	d002      	beq.n	800033c <__adddf3+0x70>
 8000336:	4240      	negs	r0, r0
 8000338:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 800033c:	f013 4f00 	tst.w	r3, #2147483648	@ 0x80000000
 8000340:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000344:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 8000348:	d002      	beq.n	8000350 <__adddf3+0x84>
 800034a:	4252      	negs	r2, r2
 800034c:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000350:	ea94 0f05 	teq	r4, r5
 8000354:	f000 80a7 	beq.w	80004a6 <__adddf3+0x1da>
 8000358:	f1a4 0401 	sub.w	r4, r4, #1
 800035c:	f1d5 0e20 	rsbs	lr, r5, #32
 8000360:	db0d      	blt.n	800037e <__adddf3+0xb2>
 8000362:	fa02 fc0e 	lsl.w	ip, r2, lr
 8000366:	fa22 f205 	lsr.w	r2, r2, r5
 800036a:	1880      	adds	r0, r0, r2
 800036c:	f141 0100 	adc.w	r1, r1, #0
 8000370:	fa03 f20e 	lsl.w	r2, r3, lr
 8000374:	1880      	adds	r0, r0, r2
 8000376:	fa43 f305 	asr.w	r3, r3, r5
 800037a:	4159      	adcs	r1, r3
 800037c:	e00e      	b.n	800039c <__adddf3+0xd0>
 800037e:	f1a5 0520 	sub.w	r5, r5, #32
 8000382:	f10e 0e20 	add.w	lr, lr, #32
 8000386:	2a01      	cmp	r2, #1
 8000388:	fa03 fc0e 	lsl.w	ip, r3, lr
 800038c:	bf28      	it	cs
 800038e:	f04c 0c02 	orrcs.w	ip, ip, #2
 8000392:	fa43 f305 	asr.w	r3, r3, r5
 8000396:	18c0      	adds	r0, r0, r3
 8000398:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 800039c:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 80003a0:	d507      	bpl.n	80003b2 <__adddf3+0xe6>
 80003a2:	f04f 0e00 	mov.w	lr, #0
 80003a6:	f1dc 0c00 	rsbs	ip, ip, #0
 80003aa:	eb7e 0000 	sbcs.w	r0, lr, r0
 80003ae:	eb6e 0101 	sbc.w	r1, lr, r1
 80003b2:	f5b1 1f80 	cmp.w	r1, #1048576	@ 0x100000
 80003b6:	d31b      	bcc.n	80003f0 <__adddf3+0x124>
 80003b8:	f5b1 1f00 	cmp.w	r1, #2097152	@ 0x200000
 80003bc:	d30c      	bcc.n	80003d8 <__adddf3+0x10c>
 80003be:	0849      	lsrs	r1, r1, #1
 80003c0:	ea5f 0030 	movs.w	r0, r0, rrx
 80003c4:	ea4f 0c3c 	mov.w	ip, ip, rrx
 80003c8:	f104 0401 	add.w	r4, r4, #1
 80003cc:	ea4f 5244 	mov.w	r2, r4, lsl #21
 80003d0:	f512 0f80 	cmn.w	r2, #4194304	@ 0x400000
 80003d4:	f080 809a 	bcs.w	800050c <__adddf3+0x240>
 80003d8:	f1bc 4f00 	cmp.w	ip, #2147483648	@ 0x80000000
 80003dc:	bf08      	it	eq
 80003de:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80003e2:	f150 0000 	adcs.w	r0, r0, #0
 80003e6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80003ea:	ea41 0105 	orr.w	r1, r1, r5
 80003ee:	bd30      	pop	{r4, r5, pc}
 80003f0:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 80003f4:	4140      	adcs	r0, r0
 80003f6:	eb41 0101 	adc.w	r1, r1, r1
 80003fa:	3c01      	subs	r4, #1
 80003fc:	bf28      	it	cs
 80003fe:	f5b1 1f80 	cmpcs.w	r1, #1048576	@ 0x100000
 8000402:	d2e9      	bcs.n	80003d8 <__adddf3+0x10c>
 8000404:	f091 0f00 	teq	r1, #0
 8000408:	bf04      	itt	eq
 800040a:	4601      	moveq	r1, r0
 800040c:	2000      	moveq	r0, #0
 800040e:	fab1 f381 	clz	r3, r1
 8000412:	bf08      	it	eq
 8000414:	3320      	addeq	r3, #32
 8000416:	f1a3 030b 	sub.w	r3, r3, #11
 800041a:	f1b3 0220 	subs.w	r2, r3, #32
 800041e:	da0c      	bge.n	800043a <__adddf3+0x16e>
 8000420:	320c      	adds	r2, #12
 8000422:	dd08      	ble.n	8000436 <__adddf3+0x16a>
 8000424:	f102 0c14 	add.w	ip, r2, #20
 8000428:	f1c2 020c 	rsb	r2, r2, #12
 800042c:	fa01 f00c 	lsl.w	r0, r1, ip
 8000430:	fa21 f102 	lsr.w	r1, r1, r2
 8000434:	e00c      	b.n	8000450 <__adddf3+0x184>
 8000436:	f102 0214 	add.w	r2, r2, #20
 800043a:	bfd8      	it	le
 800043c:	f1c2 0c20 	rsble	ip, r2, #32
 8000440:	fa01 f102 	lsl.w	r1, r1, r2
 8000444:	fa20 fc0c 	lsr.w	ip, r0, ip
 8000448:	bfdc      	itt	le
 800044a:	ea41 010c 	orrle.w	r1, r1, ip
 800044e:	4090      	lslle	r0, r2
 8000450:	1ae4      	subs	r4, r4, r3
 8000452:	bfa2      	ittt	ge
 8000454:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 8000458:	4329      	orrge	r1, r5
 800045a:	bd30      	popge	{r4, r5, pc}
 800045c:	ea6f 0404 	mvn.w	r4, r4
 8000460:	3c1f      	subs	r4, #31
 8000462:	da1c      	bge.n	800049e <__adddf3+0x1d2>
 8000464:	340c      	adds	r4, #12
 8000466:	dc0e      	bgt.n	8000486 <__adddf3+0x1ba>
 8000468:	f104 0414 	add.w	r4, r4, #20
 800046c:	f1c4 0220 	rsb	r2, r4, #32
 8000470:	fa20 f004 	lsr.w	r0, r0, r4
 8000474:	fa01 f302 	lsl.w	r3, r1, r2
 8000478:	ea40 0003 	orr.w	r0, r0, r3
 800047c:	fa21 f304 	lsr.w	r3, r1, r4
 8000480:	ea45 0103 	orr.w	r1, r5, r3
 8000484:	bd30      	pop	{r4, r5, pc}
 8000486:	f1c4 040c 	rsb	r4, r4, #12
 800048a:	f1c4 0220 	rsb	r2, r4, #32
 800048e:	fa20 f002 	lsr.w	r0, r0, r2
 8000492:	fa01 f304 	lsl.w	r3, r1, r4
 8000496:	ea40 0003 	orr.w	r0, r0, r3
 800049a:	4629      	mov	r1, r5
 800049c:	bd30      	pop	{r4, r5, pc}
 800049e:	fa21 f004 	lsr.w	r0, r1, r4
 80004a2:	4629      	mov	r1, r5
 80004a4:	bd30      	pop	{r4, r5, pc}
 80004a6:	f094 0f00 	teq	r4, #0
 80004aa:	f483 1380 	eor.w	r3, r3, #1048576	@ 0x100000
 80004ae:	bf06      	itte	eq
 80004b0:	f481 1180 	eoreq.w	r1, r1, #1048576	@ 0x100000
 80004b4:	3401      	addeq	r4, #1
 80004b6:	3d01      	subne	r5, #1
 80004b8:	e74e      	b.n	8000358 <__adddf3+0x8c>
 80004ba:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80004be:	bf18      	it	ne
 80004c0:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80004c4:	d029      	beq.n	800051a <__adddf3+0x24e>
 80004c6:	ea94 0f05 	teq	r4, r5
 80004ca:	bf08      	it	eq
 80004cc:	ea90 0f02 	teqeq	r0, r2
 80004d0:	d005      	beq.n	80004de <__adddf3+0x212>
 80004d2:	ea54 0c00 	orrs.w	ip, r4, r0
 80004d6:	bf04      	itt	eq
 80004d8:	4619      	moveq	r1, r3
 80004da:	4610      	moveq	r0, r2
 80004dc:	bd30      	pop	{r4, r5, pc}
 80004de:	ea91 0f03 	teq	r1, r3
 80004e2:	bf1e      	ittt	ne
 80004e4:	2100      	movne	r1, #0
 80004e6:	2000      	movne	r0, #0
 80004e8:	bd30      	popne	{r4, r5, pc}
 80004ea:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 80004ee:	d105      	bne.n	80004fc <__adddf3+0x230>
 80004f0:	0040      	lsls	r0, r0, #1
 80004f2:	4149      	adcs	r1, r1
 80004f4:	bf28      	it	cs
 80004f6:	f041 4100 	orrcs.w	r1, r1, #2147483648	@ 0x80000000
 80004fa:	bd30      	pop	{r4, r5, pc}
 80004fc:	f514 0480 	adds.w	r4, r4, #4194304	@ 0x400000
 8000500:	bf3c      	itt	cc
 8000502:	f501 1180 	addcc.w	r1, r1, #1048576	@ 0x100000
 8000506:	bd30      	popcc	{r4, r5, pc}
 8000508:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 800050c:	f045 41fe 	orr.w	r1, r5, #2130706432	@ 0x7f000000
 8000510:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 8000514:	f04f 0000 	mov.w	r0, #0
 8000518:	bd30      	pop	{r4, r5, pc}
 800051a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800051e:	bf1a      	itte	ne
 8000520:	4619      	movne	r1, r3
 8000522:	4610      	movne	r0, r2
 8000524:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 8000528:	bf1c      	itt	ne
 800052a:	460b      	movne	r3, r1
 800052c:	4602      	movne	r2, r0
 800052e:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8000532:	bf06      	itte	eq
 8000534:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 8000538:	ea91 0f03 	teqeq	r1, r3
 800053c:	f441 2100 	orrne.w	r1, r1, #524288	@ 0x80000
 8000540:	bd30      	pop	{r4, r5, pc}
 8000542:	bf00      	nop

08000544 <__aeabi_ui2d>:
 8000544:	f090 0f00 	teq	r0, #0
 8000548:	bf04      	itt	eq
 800054a:	2100      	moveq	r1, #0
 800054c:	4770      	bxeq	lr
 800054e:	b530      	push	{r4, r5, lr}
 8000550:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 8000554:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 8000558:	f04f 0500 	mov.w	r5, #0
 800055c:	f04f 0100 	mov.w	r1, #0
 8000560:	e750      	b.n	8000404 <__adddf3+0x138>
 8000562:	bf00      	nop

08000564 <__aeabi_i2d>:
 8000564:	f090 0f00 	teq	r0, #0
 8000568:	bf04      	itt	eq
 800056a:	2100      	moveq	r1, #0
 800056c:	4770      	bxeq	lr
 800056e:	b530      	push	{r4, r5, lr}
 8000570:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 8000574:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 8000578:	f010 4500 	ands.w	r5, r0, #2147483648	@ 0x80000000
 800057c:	bf48      	it	mi
 800057e:	4240      	negmi	r0, r0
 8000580:	f04f 0100 	mov.w	r1, #0
 8000584:	e73e      	b.n	8000404 <__adddf3+0x138>
 8000586:	bf00      	nop

08000588 <__aeabi_f2d>:
 8000588:	0042      	lsls	r2, r0, #1
 800058a:	ea4f 01e2 	mov.w	r1, r2, asr #3
 800058e:	ea4f 0131 	mov.w	r1, r1, rrx
 8000592:	ea4f 7002 	mov.w	r0, r2, lsl #28
 8000596:	bf1f      	itttt	ne
 8000598:	f012 437f 	andsne.w	r3, r2, #4278190080	@ 0xff000000
 800059c:	f093 4f7f 	teqne	r3, #4278190080	@ 0xff000000
 80005a0:	f081 5160 	eorne.w	r1, r1, #939524096	@ 0x38000000
 80005a4:	4770      	bxne	lr
 80005a6:	f032 427f 	bics.w	r2, r2, #4278190080	@ 0xff000000
 80005aa:	bf08      	it	eq
 80005ac:	4770      	bxeq	lr
 80005ae:	f093 4f7f 	teq	r3, #4278190080	@ 0xff000000
 80005b2:	bf04      	itt	eq
 80005b4:	f441 2100 	orreq.w	r1, r1, #524288	@ 0x80000
 80005b8:	4770      	bxeq	lr
 80005ba:	b530      	push	{r4, r5, lr}
 80005bc:	f44f 7460 	mov.w	r4, #896	@ 0x380
 80005c0:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 80005c4:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
 80005c8:	e71c      	b.n	8000404 <__adddf3+0x138>
 80005ca:	bf00      	nop

080005cc <__aeabi_ul2d>:
 80005cc:	ea50 0201 	orrs.w	r2, r0, r1
 80005d0:	bf08      	it	eq
 80005d2:	4770      	bxeq	lr
 80005d4:	b530      	push	{r4, r5, lr}
 80005d6:	f04f 0500 	mov.w	r5, #0
 80005da:	e00a      	b.n	80005f2 <__aeabi_l2d+0x16>

080005dc <__aeabi_l2d>:
 80005dc:	ea50 0201 	orrs.w	r2, r0, r1
 80005e0:	bf08      	it	eq
 80005e2:	4770      	bxeq	lr
 80005e4:	b530      	push	{r4, r5, lr}
 80005e6:	f011 4500 	ands.w	r5, r1, #2147483648	@ 0x80000000
 80005ea:	d502      	bpl.n	80005f2 <__aeabi_l2d+0x16>
 80005ec:	4240      	negs	r0, r0
 80005ee:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80005f2:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 80005f6:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 80005fa:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 80005fe:	f43f aed8 	beq.w	80003b2 <__adddf3+0xe6>
 8000602:	f04f 0203 	mov.w	r2, #3
 8000606:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 800060a:	bf18      	it	ne
 800060c:	3203      	addne	r2, #3
 800060e:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 8000612:	bf18      	it	ne
 8000614:	3203      	addne	r2, #3
 8000616:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 800061a:	f1c2 0320 	rsb	r3, r2, #32
 800061e:	fa00 fc03 	lsl.w	ip, r0, r3
 8000622:	fa20 f002 	lsr.w	r0, r0, r2
 8000626:	fa01 fe03 	lsl.w	lr, r1, r3
 800062a:	ea40 000e 	orr.w	r0, r0, lr
 800062e:	fa21 f102 	lsr.w	r1, r1, r2
 8000632:	4414      	add	r4, r2
 8000634:	e6bd      	b.n	80003b2 <__adddf3+0xe6>
 8000636:	bf00      	nop

08000638 <__aeabi_dmul>:
 8000638:	b570      	push	{r4, r5, r6, lr}
 800063a:	f04f 0cff 	mov.w	ip, #255	@ 0xff
 800063e:	f44c 6ce0 	orr.w	ip, ip, #1792	@ 0x700
 8000642:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 8000646:	bf1d      	ittte	ne
 8000648:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 800064c:	ea94 0f0c 	teqne	r4, ip
 8000650:	ea95 0f0c 	teqne	r5, ip
 8000654:	f000 f8de 	bleq	8000814 <__aeabi_dmul+0x1dc>
 8000658:	442c      	add	r4, r5
 800065a:	ea81 0603 	eor.w	r6, r1, r3
 800065e:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 8000662:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 8000666:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 800066a:	bf18      	it	ne
 800066c:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8000670:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 8000674:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 8000678:	d038      	beq.n	80006ec <__aeabi_dmul+0xb4>
 800067a:	fba0 ce02 	umull	ip, lr, r0, r2
 800067e:	f04f 0500 	mov.w	r5, #0
 8000682:	fbe1 e502 	umlal	lr, r5, r1, r2
 8000686:	f006 4200 	and.w	r2, r6, #2147483648	@ 0x80000000
 800068a:	fbe0 e503 	umlal	lr, r5, r0, r3
 800068e:	f04f 0600 	mov.w	r6, #0
 8000692:	fbe1 5603 	umlal	r5, r6, r1, r3
 8000696:	f09c 0f00 	teq	ip, #0
 800069a:	bf18      	it	ne
 800069c:	f04e 0e01 	orrne.w	lr, lr, #1
 80006a0:	f1a4 04ff 	sub.w	r4, r4, #255	@ 0xff
 80006a4:	f5b6 7f00 	cmp.w	r6, #512	@ 0x200
 80006a8:	f564 7440 	sbc.w	r4, r4, #768	@ 0x300
 80006ac:	d204      	bcs.n	80006b8 <__aeabi_dmul+0x80>
 80006ae:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 80006b2:	416d      	adcs	r5, r5
 80006b4:	eb46 0606 	adc.w	r6, r6, r6
 80006b8:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 80006bc:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 80006c0:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 80006c4:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 80006c8:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 80006cc:	f1b4 0cfd 	subs.w	ip, r4, #253	@ 0xfd
 80006d0:	bf88      	it	hi
 80006d2:	f5bc 6fe0 	cmphi.w	ip, #1792	@ 0x700
 80006d6:	d81e      	bhi.n	8000716 <__aeabi_dmul+0xde>
 80006d8:	f1be 4f00 	cmp.w	lr, #2147483648	@ 0x80000000
 80006dc:	bf08      	it	eq
 80006de:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 80006e2:	f150 0000 	adcs.w	r0, r0, #0
 80006e6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80006ea:	bd70      	pop	{r4, r5, r6, pc}
 80006ec:	f006 4600 	and.w	r6, r6, #2147483648	@ 0x80000000
 80006f0:	ea46 0101 	orr.w	r1, r6, r1
 80006f4:	ea40 0002 	orr.w	r0, r0, r2
 80006f8:	ea81 0103 	eor.w	r1, r1, r3
 80006fc:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 8000700:	bfc2      	ittt	gt
 8000702:	ebd4 050c 	rsbsgt	r5, r4, ip
 8000706:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 800070a:	bd70      	popgt	{r4, r5, r6, pc}
 800070c:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 8000710:	f04f 0e00 	mov.w	lr, #0
 8000714:	3c01      	subs	r4, #1
 8000716:	f300 80ab 	bgt.w	8000870 <__aeabi_dmul+0x238>
 800071a:	f114 0f36 	cmn.w	r4, #54	@ 0x36
 800071e:	bfde      	ittt	le
 8000720:	2000      	movle	r0, #0
 8000722:	f001 4100 	andle.w	r1, r1, #2147483648	@ 0x80000000
 8000726:	bd70      	pople	{r4, r5, r6, pc}
 8000728:	f1c4 0400 	rsb	r4, r4, #0
 800072c:	3c20      	subs	r4, #32
 800072e:	da35      	bge.n	800079c <__aeabi_dmul+0x164>
 8000730:	340c      	adds	r4, #12
 8000732:	dc1b      	bgt.n	800076c <__aeabi_dmul+0x134>
 8000734:	f104 0414 	add.w	r4, r4, #20
 8000738:	f1c4 0520 	rsb	r5, r4, #32
 800073c:	fa00 f305 	lsl.w	r3, r0, r5
 8000740:	fa20 f004 	lsr.w	r0, r0, r4
 8000744:	fa01 f205 	lsl.w	r2, r1, r5
 8000748:	ea40 0002 	orr.w	r0, r0, r2
 800074c:	f001 4200 	and.w	r2, r1, #2147483648	@ 0x80000000
 8000750:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
 8000754:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8000758:	fa21 f604 	lsr.w	r6, r1, r4
 800075c:	eb42 0106 	adc.w	r1, r2, r6
 8000760:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000764:	bf08      	it	eq
 8000766:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800076a:	bd70      	pop	{r4, r5, r6, pc}
 800076c:	f1c4 040c 	rsb	r4, r4, #12
 8000770:	f1c4 0520 	rsb	r5, r4, #32
 8000774:	fa00 f304 	lsl.w	r3, r0, r4
 8000778:	fa20 f005 	lsr.w	r0, r0, r5
 800077c:	fa01 f204 	lsl.w	r2, r1, r4
 8000780:	ea40 0002 	orr.w	r0, r0, r2
 8000784:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 8000788:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 800078c:	f141 0100 	adc.w	r1, r1, #0
 8000790:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000794:	bf08      	it	eq
 8000796:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800079a:	bd70      	pop	{r4, r5, r6, pc}
 800079c:	f1c4 0520 	rsb	r5, r4, #32
 80007a0:	fa00 f205 	lsl.w	r2, r0, r5
 80007a4:	ea4e 0e02 	orr.w	lr, lr, r2
 80007a8:	fa20 f304 	lsr.w	r3, r0, r4
 80007ac:	fa01 f205 	lsl.w	r2, r1, r5
 80007b0:	ea43 0302 	orr.w	r3, r3, r2
 80007b4:	fa21 f004 	lsr.w	r0, r1, r4
 80007b8:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 80007bc:	fa21 f204 	lsr.w	r2, r1, r4
 80007c0:	ea20 0002 	bic.w	r0, r0, r2
 80007c4:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 80007c8:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 80007cc:	bf08      	it	eq
 80007ce:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80007d2:	bd70      	pop	{r4, r5, r6, pc}
 80007d4:	f094 0f00 	teq	r4, #0
 80007d8:	d10f      	bne.n	80007fa <__aeabi_dmul+0x1c2>
 80007da:	f001 4600 	and.w	r6, r1, #2147483648	@ 0x80000000
 80007de:	0040      	lsls	r0, r0, #1
 80007e0:	eb41 0101 	adc.w	r1, r1, r1
 80007e4:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 80007e8:	bf08      	it	eq
 80007ea:	3c01      	subeq	r4, #1
 80007ec:	d0f7      	beq.n	80007de <__aeabi_dmul+0x1a6>
 80007ee:	ea41 0106 	orr.w	r1, r1, r6
 80007f2:	f095 0f00 	teq	r5, #0
 80007f6:	bf18      	it	ne
 80007f8:	4770      	bxne	lr
 80007fa:	f003 4600 	and.w	r6, r3, #2147483648	@ 0x80000000
 80007fe:	0052      	lsls	r2, r2, #1
 8000800:	eb43 0303 	adc.w	r3, r3, r3
 8000804:	f413 1f80 	tst.w	r3, #1048576	@ 0x100000
 8000808:	bf08      	it	eq
 800080a:	3d01      	subeq	r5, #1
 800080c:	d0f7      	beq.n	80007fe <__aeabi_dmul+0x1c6>
 800080e:	ea43 0306 	orr.w	r3, r3, r6
 8000812:	4770      	bx	lr
 8000814:	ea94 0f0c 	teq	r4, ip
 8000818:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 800081c:	bf18      	it	ne
 800081e:	ea95 0f0c 	teqne	r5, ip
 8000822:	d00c      	beq.n	800083e <__aeabi_dmul+0x206>
 8000824:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000828:	bf18      	it	ne
 800082a:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800082e:	d1d1      	bne.n	80007d4 <__aeabi_dmul+0x19c>
 8000830:	ea81 0103 	eor.w	r1, r1, r3
 8000834:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 8000838:	f04f 0000 	mov.w	r0, #0
 800083c:	bd70      	pop	{r4, r5, r6, pc}
 800083e:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000842:	bf06      	itte	eq
 8000844:	4610      	moveq	r0, r2
 8000846:	4619      	moveq	r1, r3
 8000848:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800084c:	d019      	beq.n	8000882 <__aeabi_dmul+0x24a>
 800084e:	ea94 0f0c 	teq	r4, ip
 8000852:	d102      	bne.n	800085a <__aeabi_dmul+0x222>
 8000854:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 8000858:	d113      	bne.n	8000882 <__aeabi_dmul+0x24a>
 800085a:	ea95 0f0c 	teq	r5, ip
 800085e:	d105      	bne.n	800086c <__aeabi_dmul+0x234>
 8000860:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 8000864:	bf1c      	itt	ne
 8000866:	4610      	movne	r0, r2
 8000868:	4619      	movne	r1, r3
 800086a:	d10a      	bne.n	8000882 <__aeabi_dmul+0x24a>
 800086c:	ea81 0103 	eor.w	r1, r1, r3
 8000870:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 8000874:	f041 41fe 	orr.w	r1, r1, #2130706432	@ 0x7f000000
 8000878:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 800087c:	f04f 0000 	mov.w	r0, #0
 8000880:	bd70      	pop	{r4, r5, r6, pc}
 8000882:	f041 41fe 	orr.w	r1, r1, #2130706432	@ 0x7f000000
 8000886:	f441 0178 	orr.w	r1, r1, #16252928	@ 0xf80000
 800088a:	bd70      	pop	{r4, r5, r6, pc}

0800088c <__aeabi_ddiv>:
 800088c:	b570      	push	{r4, r5, r6, lr}
 800088e:	f04f 0cff 	mov.w	ip, #255	@ 0xff
 8000892:	f44c 6ce0 	orr.w	ip, ip, #1792	@ 0x700
 8000896:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800089a:	bf1d      	ittte	ne
 800089c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 80008a0:	ea94 0f0c 	teqne	r4, ip
 80008a4:	ea95 0f0c 	teqne	r5, ip
 80008a8:	f000 f8a7 	bleq	80009fa <__aeabi_ddiv+0x16e>
 80008ac:	eba4 0405 	sub.w	r4, r4, r5
 80008b0:	ea81 0e03 	eor.w	lr, r1, r3
 80008b4:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 80008b8:	ea4f 3101 	mov.w	r1, r1, lsl #12
 80008bc:	f000 8088 	beq.w	80009d0 <__aeabi_ddiv+0x144>
 80008c0:	ea4f 3303 	mov.w	r3, r3, lsl #12
 80008c4:	f04f 5580 	mov.w	r5, #268435456	@ 0x10000000
 80008c8:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 80008cc:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 80008d0:	ea4f 2202 	mov.w	r2, r2, lsl #8
 80008d4:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 80008d8:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 80008dc:	ea4f 2600 	mov.w	r6, r0, lsl #8
 80008e0:	f00e 4100 	and.w	r1, lr, #2147483648	@ 0x80000000
 80008e4:	429d      	cmp	r5, r3
 80008e6:	bf08      	it	eq
 80008e8:	4296      	cmpeq	r6, r2
 80008ea:	f144 04fd 	adc.w	r4, r4, #253	@ 0xfd
 80008ee:	f504 7440 	add.w	r4, r4, #768	@ 0x300
 80008f2:	d202      	bcs.n	80008fa <__aeabi_ddiv+0x6e>
 80008f4:	085b      	lsrs	r3, r3, #1
 80008f6:	ea4f 0232 	mov.w	r2, r2, rrx
 80008fa:	1ab6      	subs	r6, r6, r2
 80008fc:	eb65 0503 	sbc.w	r5, r5, r3
 8000900:	085b      	lsrs	r3, r3, #1
 8000902:	ea4f 0232 	mov.w	r2, r2, rrx
 8000906:	f44f 1080 	mov.w	r0, #1048576	@ 0x100000
 800090a:	f44f 2c00 	mov.w	ip, #524288	@ 0x80000
 800090e:	ebb6 0e02 	subs.w	lr, r6, r2
 8000912:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000916:	bf22      	ittt	cs
 8000918:	1ab6      	subcs	r6, r6, r2
 800091a:	4675      	movcs	r5, lr
 800091c:	ea40 000c 	orrcs.w	r0, r0, ip
 8000920:	085b      	lsrs	r3, r3, #1
 8000922:	ea4f 0232 	mov.w	r2, r2, rrx
 8000926:	ebb6 0e02 	subs.w	lr, r6, r2
 800092a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800092e:	bf22      	ittt	cs
 8000930:	1ab6      	subcs	r6, r6, r2
 8000932:	4675      	movcs	r5, lr
 8000934:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 8000938:	085b      	lsrs	r3, r3, #1
 800093a:	ea4f 0232 	mov.w	r2, r2, rrx
 800093e:	ebb6 0e02 	subs.w	lr, r6, r2
 8000942:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000946:	bf22      	ittt	cs
 8000948:	1ab6      	subcs	r6, r6, r2
 800094a:	4675      	movcs	r5, lr
 800094c:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8000950:	085b      	lsrs	r3, r3, #1
 8000952:	ea4f 0232 	mov.w	r2, r2, rrx
 8000956:	ebb6 0e02 	subs.w	lr, r6, r2
 800095a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800095e:	bf22      	ittt	cs
 8000960:	1ab6      	subcs	r6, r6, r2
 8000962:	4675      	movcs	r5, lr
 8000964:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000968:	ea55 0e06 	orrs.w	lr, r5, r6
 800096c:	d018      	beq.n	80009a0 <__aeabi_ddiv+0x114>
 800096e:	ea4f 1505 	mov.w	r5, r5, lsl #4
 8000972:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 8000976:	ea4f 1606 	mov.w	r6, r6, lsl #4
 800097a:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 800097e:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 8000982:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8000986:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 800098a:	d1c0      	bne.n	800090e <__aeabi_ddiv+0x82>
 800098c:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 8000990:	d10b      	bne.n	80009aa <__aeabi_ddiv+0x11e>
 8000992:	ea41 0100 	orr.w	r1, r1, r0
 8000996:	f04f 0000 	mov.w	r0, #0
 800099a:	f04f 4c00 	mov.w	ip, #2147483648	@ 0x80000000
 800099e:	e7b6      	b.n	800090e <__aeabi_ddiv+0x82>
 80009a0:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 80009a4:	bf04      	itt	eq
 80009a6:	4301      	orreq	r1, r0
 80009a8:	2000      	moveq	r0, #0
 80009aa:	f1b4 0cfd 	subs.w	ip, r4, #253	@ 0xfd
 80009ae:	bf88      	it	hi
 80009b0:	f5bc 6fe0 	cmphi.w	ip, #1792	@ 0x700
 80009b4:	f63f aeaf 	bhi.w	8000716 <__aeabi_dmul+0xde>
 80009b8:	ebb5 0c03 	subs.w	ip, r5, r3
 80009bc:	bf04      	itt	eq
 80009be:	ebb6 0c02 	subseq.w	ip, r6, r2
 80009c2:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80009c6:	f150 0000 	adcs.w	r0, r0, #0
 80009ca:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80009ce:	bd70      	pop	{r4, r5, r6, pc}
 80009d0:	f00e 4e00 	and.w	lr, lr, #2147483648	@ 0x80000000
 80009d4:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 80009d8:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 80009dc:	bfc2      	ittt	gt
 80009de:	ebd4 050c 	rsbsgt	r5, r4, ip
 80009e2:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80009e6:	bd70      	popgt	{r4, r5, r6, pc}
 80009e8:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 80009ec:	f04f 0e00 	mov.w	lr, #0
 80009f0:	3c01      	subs	r4, #1
 80009f2:	e690      	b.n	8000716 <__aeabi_dmul+0xde>
 80009f4:	ea45 0e06 	orr.w	lr, r5, r6
 80009f8:	e68d      	b.n	8000716 <__aeabi_dmul+0xde>
 80009fa:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80009fe:	ea94 0f0c 	teq	r4, ip
 8000a02:	bf08      	it	eq
 8000a04:	ea95 0f0c 	teqeq	r5, ip
 8000a08:	f43f af3b 	beq.w	8000882 <__aeabi_dmul+0x24a>
 8000a0c:	ea94 0f0c 	teq	r4, ip
 8000a10:	d10a      	bne.n	8000a28 <__aeabi_ddiv+0x19c>
 8000a12:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8000a16:	f47f af34 	bne.w	8000882 <__aeabi_dmul+0x24a>
 8000a1a:	ea95 0f0c 	teq	r5, ip
 8000a1e:	f47f af25 	bne.w	800086c <__aeabi_dmul+0x234>
 8000a22:	4610      	mov	r0, r2
 8000a24:	4619      	mov	r1, r3
 8000a26:	e72c      	b.n	8000882 <__aeabi_dmul+0x24a>
 8000a28:	ea95 0f0c 	teq	r5, ip
 8000a2c:	d106      	bne.n	8000a3c <__aeabi_ddiv+0x1b0>
 8000a2e:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000a32:	f43f aefd 	beq.w	8000830 <__aeabi_dmul+0x1f8>
 8000a36:	4610      	mov	r0, r2
 8000a38:	4619      	mov	r1, r3
 8000a3a:	e722      	b.n	8000882 <__aeabi_dmul+0x24a>
 8000a3c:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000a40:	bf18      	it	ne
 8000a42:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000a46:	f47f aec5 	bne.w	80007d4 <__aeabi_dmul+0x19c>
 8000a4a:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 8000a4e:	f47f af0d 	bne.w	800086c <__aeabi_dmul+0x234>
 8000a52:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 8000a56:	f47f aeeb 	bne.w	8000830 <__aeabi_dmul+0x1f8>
 8000a5a:	e712      	b.n	8000882 <__aeabi_dmul+0x24a>

08000a5c <__gedf2>:
 8000a5c:	f04f 3cff 	mov.w	ip, #4294967295
 8000a60:	e006      	b.n	8000a70 <__cmpdf2+0x4>
 8000a62:	bf00      	nop

08000a64 <__ledf2>:
 8000a64:	f04f 0c01 	mov.w	ip, #1
 8000a68:	e002      	b.n	8000a70 <__cmpdf2+0x4>
 8000a6a:	bf00      	nop

08000a6c <__cmpdf2>:
 8000a6c:	f04f 0c01 	mov.w	ip, #1
 8000a70:	f84d cd04 	str.w	ip, [sp, #-4]!
 8000a74:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a78:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a7c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a80:	bf18      	it	ne
 8000a82:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
 8000a86:	d01b      	beq.n	8000ac0 <__cmpdf2+0x54>
 8000a88:	b001      	add	sp, #4
 8000a8a:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
 8000a8e:	bf0c      	ite	eq
 8000a90:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
 8000a94:	ea91 0f03 	teqne	r1, r3
 8000a98:	bf02      	ittt	eq
 8000a9a:	ea90 0f02 	teqeq	r0, r2
 8000a9e:	2000      	moveq	r0, #0
 8000aa0:	4770      	bxeq	lr
 8000aa2:	f110 0f00 	cmn.w	r0, #0
 8000aa6:	ea91 0f03 	teq	r1, r3
 8000aaa:	bf58      	it	pl
 8000aac:	4299      	cmppl	r1, r3
 8000aae:	bf08      	it	eq
 8000ab0:	4290      	cmpeq	r0, r2
 8000ab2:	bf2c      	ite	cs
 8000ab4:	17d8      	asrcs	r0, r3, #31
 8000ab6:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
 8000aba:	f040 0001 	orr.w	r0, r0, #1
 8000abe:	4770      	bx	lr
 8000ac0:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000ac4:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000ac8:	d102      	bne.n	8000ad0 <__cmpdf2+0x64>
 8000aca:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000ace:	d107      	bne.n	8000ae0 <__cmpdf2+0x74>
 8000ad0:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000ad4:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000ad8:	d1d6      	bne.n	8000a88 <__cmpdf2+0x1c>
 8000ada:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000ade:	d0d3      	beq.n	8000a88 <__cmpdf2+0x1c>
 8000ae0:	f85d 0b04 	ldr.w	r0, [sp], #4
 8000ae4:	4770      	bx	lr
 8000ae6:	bf00      	nop

08000ae8 <__aeabi_cdrcmple>:
 8000ae8:	4684      	mov	ip, r0
 8000aea:	4610      	mov	r0, r2
 8000aec:	4662      	mov	r2, ip
 8000aee:	468c      	mov	ip, r1
 8000af0:	4619      	mov	r1, r3
 8000af2:	4663      	mov	r3, ip
 8000af4:	e000      	b.n	8000af8 <__aeabi_cdcmpeq>
 8000af6:	bf00      	nop

08000af8 <__aeabi_cdcmpeq>:
 8000af8:	b501      	push	{r0, lr}
 8000afa:	f7ff ffb7 	bl	8000a6c <__cmpdf2>
 8000afe:	2800      	cmp	r0, #0
 8000b00:	bf48      	it	mi
 8000b02:	f110 0f00 	cmnmi.w	r0, #0
 8000b06:	bd01      	pop	{r0, pc}

08000b08 <__aeabi_dcmpeq>:
 8000b08:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b0c:	f7ff fff4 	bl	8000af8 <__aeabi_cdcmpeq>
 8000b10:	bf0c      	ite	eq
 8000b12:	2001      	moveq	r0, #1
 8000b14:	2000      	movne	r0, #0
 8000b16:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b1a:	bf00      	nop

08000b1c <__aeabi_dcmplt>:
 8000b1c:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b20:	f7ff ffea 	bl	8000af8 <__aeabi_cdcmpeq>
 8000b24:	bf34      	ite	cc
 8000b26:	2001      	movcc	r0, #1
 8000b28:	2000      	movcs	r0, #0
 8000b2a:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b2e:	bf00      	nop

08000b30 <__aeabi_dcmple>:
 8000b30:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b34:	f7ff ffe0 	bl	8000af8 <__aeabi_cdcmpeq>
 8000b38:	bf94      	ite	ls
 8000b3a:	2001      	movls	r0, #1
 8000b3c:	2000      	movhi	r0, #0
 8000b3e:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b42:	bf00      	nop

08000b44 <__aeabi_dcmpge>:
 8000b44:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b48:	f7ff ffce 	bl	8000ae8 <__aeabi_cdrcmple>
 8000b4c:	bf94      	ite	ls
 8000b4e:	2001      	movls	r0, #1
 8000b50:	2000      	movhi	r0, #0
 8000b52:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b56:	bf00      	nop

08000b58 <__aeabi_dcmpgt>:
 8000b58:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b5c:	f7ff ffc4 	bl	8000ae8 <__aeabi_cdrcmple>
 8000b60:	bf34      	ite	cc
 8000b62:	2001      	movcc	r0, #1
 8000b64:	2000      	movcs	r0, #0
 8000b66:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b6a:	bf00      	nop

08000b6c <__aeabi_dcmpun>:
 8000b6c:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000b70:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b74:	d102      	bne.n	8000b7c <__aeabi_dcmpun+0x10>
 8000b76:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000b7a:	d10a      	bne.n	8000b92 <__aeabi_dcmpun+0x26>
 8000b7c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000b80:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b84:	d102      	bne.n	8000b8c <__aeabi_dcmpun+0x20>
 8000b86:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000b8a:	d102      	bne.n	8000b92 <__aeabi_dcmpun+0x26>
 8000b8c:	f04f 0000 	mov.w	r0, #0
 8000b90:	4770      	bx	lr
 8000b92:	f04f 0001 	mov.w	r0, #1
 8000b96:	4770      	bx	lr

08000b98 <__aeabi_d2iz>:
 8000b98:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000b9c:	f512 1200 	adds.w	r2, r2, #2097152	@ 0x200000
 8000ba0:	d215      	bcs.n	8000bce <__aeabi_d2iz+0x36>
 8000ba2:	d511      	bpl.n	8000bc8 <__aeabi_d2iz+0x30>
 8000ba4:	f46f 7378 	mvn.w	r3, #992	@ 0x3e0
 8000ba8:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000bac:	d912      	bls.n	8000bd4 <__aeabi_d2iz+0x3c>
 8000bae:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000bb2:	f043 4300 	orr.w	r3, r3, #2147483648	@ 0x80000000
 8000bb6:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000bba:	f011 4f00 	tst.w	r1, #2147483648	@ 0x80000000
 8000bbe:	fa23 f002 	lsr.w	r0, r3, r2
 8000bc2:	bf18      	it	ne
 8000bc4:	4240      	negne	r0, r0
 8000bc6:	4770      	bx	lr
 8000bc8:	f04f 0000 	mov.w	r0, #0
 8000bcc:	4770      	bx	lr
 8000bce:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000bd2:	d105      	bne.n	8000be0 <__aeabi_d2iz+0x48>
 8000bd4:	f011 4000 	ands.w	r0, r1, #2147483648	@ 0x80000000
 8000bd8:	bf08      	it	eq
 8000bda:	f06f 4000 	mvneq.w	r0, #2147483648	@ 0x80000000
 8000bde:	4770      	bx	lr
 8000be0:	f04f 0000 	mov.w	r0, #0
 8000be4:	4770      	bx	lr
 8000be6:	bf00      	nop

08000be8 <__aeabi_d2uiz>:
 8000be8:	004a      	lsls	r2, r1, #1
 8000bea:	d211      	bcs.n	8000c10 <__aeabi_d2uiz+0x28>
 8000bec:	f512 1200 	adds.w	r2, r2, #2097152	@ 0x200000
 8000bf0:	d211      	bcs.n	8000c16 <__aeabi_d2uiz+0x2e>
 8000bf2:	d50d      	bpl.n	8000c10 <__aeabi_d2uiz+0x28>
 8000bf4:	f46f 7378 	mvn.w	r3, #992	@ 0x3e0
 8000bf8:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000bfc:	d40e      	bmi.n	8000c1c <__aeabi_d2uiz+0x34>
 8000bfe:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000c02:	f043 4300 	orr.w	r3, r3, #2147483648	@ 0x80000000
 8000c06:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000c0a:	fa23 f002 	lsr.w	r0, r3, r2
 8000c0e:	4770      	bx	lr
 8000c10:	f04f 0000 	mov.w	r0, #0
 8000c14:	4770      	bx	lr
 8000c16:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000c1a:	d102      	bne.n	8000c22 <__aeabi_d2uiz+0x3a>
 8000c1c:	f04f 30ff 	mov.w	r0, #4294967295
 8000c20:	4770      	bx	lr
 8000c22:	f04f 0000 	mov.w	r0, #0
 8000c26:	4770      	bx	lr

08000c28 <__aeabi_d2f>:
 8000c28:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000c2c:	f1b2 43e0 	subs.w	r3, r2, #1879048192	@ 0x70000000
 8000c30:	bf24      	itt	cs
 8000c32:	f5b3 1c00 	subscs.w	ip, r3, #2097152	@ 0x200000
 8000c36:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	@ 0x1fc00000
 8000c3a:	d90d      	bls.n	8000c58 <__aeabi_d2f+0x30>
 8000c3c:	f001 4c00 	and.w	ip, r1, #2147483648	@ 0x80000000
 8000c40:	ea4f 02c0 	mov.w	r2, r0, lsl #3
 8000c44:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
 8000c48:	f1b2 4f00 	cmp.w	r2, #2147483648	@ 0x80000000
 8000c4c:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
 8000c50:	bf08      	it	eq
 8000c52:	f020 0001 	biceq.w	r0, r0, #1
 8000c56:	4770      	bx	lr
 8000c58:	f011 4f80 	tst.w	r1, #1073741824	@ 0x40000000
 8000c5c:	d121      	bne.n	8000ca2 <__aeabi_d2f+0x7a>
 8000c5e:	f113 7238 	adds.w	r2, r3, #48234496	@ 0x2e00000
 8000c62:	bfbc      	itt	lt
 8000c64:	f001 4000 	andlt.w	r0, r1, #2147483648	@ 0x80000000
 8000c68:	4770      	bxlt	lr
 8000c6a:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 8000c6e:	ea4f 5252 	mov.w	r2, r2, lsr #21
 8000c72:	f1c2 0218 	rsb	r2, r2, #24
 8000c76:	f1c2 0c20 	rsb	ip, r2, #32
 8000c7a:	fa10 f30c 	lsls.w	r3, r0, ip
 8000c7e:	fa20 f002 	lsr.w	r0, r0, r2
 8000c82:	bf18      	it	ne
 8000c84:	f040 0001 	orrne.w	r0, r0, #1
 8000c88:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000c8c:	ea4f 23d3 	mov.w	r3, r3, lsr #11
 8000c90:	fa03 fc0c 	lsl.w	ip, r3, ip
 8000c94:	ea40 000c 	orr.w	r0, r0, ip
 8000c98:	fa23 f302 	lsr.w	r3, r3, r2
 8000c9c:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8000ca0:	e7cc      	b.n	8000c3c <__aeabi_d2f+0x14>
 8000ca2:	ea7f 5362 	mvns.w	r3, r2, asr #21
 8000ca6:	d107      	bne.n	8000cb8 <__aeabi_d2f+0x90>
 8000ca8:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
 8000cac:	bf1e      	ittt	ne
 8000cae:	f04f 40fe 	movne.w	r0, #2130706432	@ 0x7f000000
 8000cb2:	f440 0040 	orrne.w	r0, r0, #12582912	@ 0xc00000
 8000cb6:	4770      	bxne	lr
 8000cb8:	f001 4000 	and.w	r0, r1, #2147483648	@ 0x80000000
 8000cbc:	f040 40fe 	orr.w	r0, r0, #2130706432	@ 0x7f000000
 8000cc0:	f440 0000 	orr.w	r0, r0, #8388608	@ 0x800000
 8000cc4:	4770      	bx	lr
 8000cc6:	bf00      	nop

08000cc8 <__aeabi_uldivmod>:
 8000cc8:	b953      	cbnz	r3, 8000ce0 <__aeabi_uldivmod+0x18>
 8000cca:	b94a      	cbnz	r2, 8000ce0 <__aeabi_uldivmod+0x18>
 8000ccc:	2900      	cmp	r1, #0
 8000cce:	bf08      	it	eq
 8000cd0:	2800      	cmpeq	r0, #0
 8000cd2:	bf1c      	itt	ne
 8000cd4:	f04f 31ff 	movne.w	r1, #4294967295
 8000cd8:	f04f 30ff 	movne.w	r0, #4294967295
 8000cdc:	f000 b9a0 	b.w	8001020 <__aeabi_idiv0>
 8000ce0:	f1ad 0c08 	sub.w	ip, sp, #8
 8000ce4:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 8000ce8:	f000 f83c 	bl	8000d64 <__udivmoddi4>
 8000cec:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000cf0:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8000cf4:	b004      	add	sp, #16
 8000cf6:	4770      	bx	lr

08000cf8 <__aeabi_d2lz>:
 8000cf8:	b538      	push	{r3, r4, r5, lr}
 8000cfa:	2200      	movs	r2, #0
 8000cfc:	2300      	movs	r3, #0
 8000cfe:	4604      	mov	r4, r0
 8000d00:	460d      	mov	r5, r1
 8000d02:	f7ff ff0b 	bl	8000b1c <__aeabi_dcmplt>
 8000d06:	b928      	cbnz	r0, 8000d14 <__aeabi_d2lz+0x1c>
 8000d08:	4620      	mov	r0, r4
 8000d0a:	4629      	mov	r1, r5
 8000d0c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8000d10:	f000 b80a 	b.w	8000d28 <__aeabi_d2ulz>
 8000d14:	4620      	mov	r0, r4
 8000d16:	f105 4100 	add.w	r1, r5, #2147483648	@ 0x80000000
 8000d1a:	f000 f805 	bl	8000d28 <__aeabi_d2ulz>
 8000d1e:	4240      	negs	r0, r0
 8000d20:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000d24:	bd38      	pop	{r3, r4, r5, pc}
 8000d26:	bf00      	nop

08000d28 <__aeabi_d2ulz>:
 8000d28:	b5d0      	push	{r4, r6, r7, lr}
 8000d2a:	4b0c      	ldr	r3, [pc, #48]	@ (8000d5c <__aeabi_d2ulz+0x34>)
 8000d2c:	2200      	movs	r2, #0
 8000d2e:	4606      	mov	r6, r0
 8000d30:	460f      	mov	r7, r1
 8000d32:	f7ff fc81 	bl	8000638 <__aeabi_dmul>
 8000d36:	f7ff ff57 	bl	8000be8 <__aeabi_d2uiz>
 8000d3a:	4604      	mov	r4, r0
 8000d3c:	f7ff fc02 	bl	8000544 <__aeabi_ui2d>
 8000d40:	4b07      	ldr	r3, [pc, #28]	@ (8000d60 <__aeabi_d2ulz+0x38>)
 8000d42:	2200      	movs	r2, #0
 8000d44:	f7ff fc78 	bl	8000638 <__aeabi_dmul>
 8000d48:	4602      	mov	r2, r0
 8000d4a:	460b      	mov	r3, r1
 8000d4c:	4630      	mov	r0, r6
 8000d4e:	4639      	mov	r1, r7
 8000d50:	f7ff faba 	bl	80002c8 <__aeabi_dsub>
 8000d54:	f7ff ff48 	bl	8000be8 <__aeabi_d2uiz>
 8000d58:	4621      	mov	r1, r4
 8000d5a:	bdd0      	pop	{r4, r6, r7, pc}
 8000d5c:	3df00000 	.word	0x3df00000
 8000d60:	41f00000 	.word	0x41f00000

08000d64 <__udivmoddi4>:
 8000d64:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000d68:	9d08      	ldr	r5, [sp, #32]
 8000d6a:	460c      	mov	r4, r1
 8000d6c:	2b00      	cmp	r3, #0
 8000d6e:	d14e      	bne.n	8000e0e <__udivmoddi4+0xaa>
 8000d70:	4694      	mov	ip, r2
 8000d72:	458c      	cmp	ip, r1
 8000d74:	4686      	mov	lr, r0
 8000d76:	fab2 f282 	clz	r2, r2
 8000d7a:	d962      	bls.n	8000e42 <__udivmoddi4+0xde>
 8000d7c:	b14a      	cbz	r2, 8000d92 <__udivmoddi4+0x2e>
 8000d7e:	f1c2 0320 	rsb	r3, r2, #32
 8000d82:	4091      	lsls	r1, r2
 8000d84:	fa20 f303 	lsr.w	r3, r0, r3
 8000d88:	fa0c fc02 	lsl.w	ip, ip, r2
 8000d8c:	4319      	orrs	r1, r3
 8000d8e:	fa00 fe02 	lsl.w	lr, r0, r2
 8000d92:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8000d96:	fa1f f68c 	uxth.w	r6, ip
 8000d9a:	fbb1 f4f7 	udiv	r4, r1, r7
 8000d9e:	ea4f 431e 	mov.w	r3, lr, lsr #16
 8000da2:	fb07 1114 	mls	r1, r7, r4, r1
 8000da6:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8000daa:	fb04 f106 	mul.w	r1, r4, r6
 8000dae:	4299      	cmp	r1, r3
 8000db0:	d90a      	bls.n	8000dc8 <__udivmoddi4+0x64>
 8000db2:	eb1c 0303 	adds.w	r3, ip, r3
 8000db6:	f104 30ff 	add.w	r0, r4, #4294967295
 8000dba:	f080 8112 	bcs.w	8000fe2 <__udivmoddi4+0x27e>
 8000dbe:	4299      	cmp	r1, r3
 8000dc0:	f240 810f 	bls.w	8000fe2 <__udivmoddi4+0x27e>
 8000dc4:	3c02      	subs	r4, #2
 8000dc6:	4463      	add	r3, ip
 8000dc8:	1a59      	subs	r1, r3, r1
 8000dca:	fa1f f38e 	uxth.w	r3, lr
 8000dce:	fbb1 f0f7 	udiv	r0, r1, r7
 8000dd2:	fb07 1110 	mls	r1, r7, r0, r1
 8000dd6:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8000dda:	fb00 f606 	mul.w	r6, r0, r6
 8000dde:	429e      	cmp	r6, r3
 8000de0:	d90a      	bls.n	8000df8 <__udivmoddi4+0x94>
 8000de2:	eb1c 0303 	adds.w	r3, ip, r3
 8000de6:	f100 31ff 	add.w	r1, r0, #4294967295
 8000dea:	f080 80fc 	bcs.w	8000fe6 <__udivmoddi4+0x282>
 8000dee:	429e      	cmp	r6, r3
 8000df0:	f240 80f9 	bls.w	8000fe6 <__udivmoddi4+0x282>
 8000df4:	4463      	add	r3, ip
 8000df6:	3802      	subs	r0, #2
 8000df8:	1b9b      	subs	r3, r3, r6
 8000dfa:	ea40 4004 	orr.w	r0, r0, r4, lsl #16
 8000dfe:	2100      	movs	r1, #0
 8000e00:	b11d      	cbz	r5, 8000e0a <__udivmoddi4+0xa6>
 8000e02:	40d3      	lsrs	r3, r2
 8000e04:	2200      	movs	r2, #0
 8000e06:	e9c5 3200 	strd	r3, r2, [r5]
 8000e0a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000e0e:	428b      	cmp	r3, r1
 8000e10:	d905      	bls.n	8000e1e <__udivmoddi4+0xba>
 8000e12:	b10d      	cbz	r5, 8000e18 <__udivmoddi4+0xb4>
 8000e14:	e9c5 0100 	strd	r0, r1, [r5]
 8000e18:	2100      	movs	r1, #0
 8000e1a:	4608      	mov	r0, r1
 8000e1c:	e7f5      	b.n	8000e0a <__udivmoddi4+0xa6>
 8000e1e:	fab3 f183 	clz	r1, r3
 8000e22:	2900      	cmp	r1, #0
 8000e24:	d146      	bne.n	8000eb4 <__udivmoddi4+0x150>
 8000e26:	42a3      	cmp	r3, r4
 8000e28:	d302      	bcc.n	8000e30 <__udivmoddi4+0xcc>
 8000e2a:	4290      	cmp	r0, r2
 8000e2c:	f0c0 80f0 	bcc.w	8001010 <__udivmoddi4+0x2ac>
 8000e30:	1a86      	subs	r6, r0, r2
 8000e32:	eb64 0303 	sbc.w	r3, r4, r3
 8000e36:	2001      	movs	r0, #1
 8000e38:	2d00      	cmp	r5, #0
 8000e3a:	d0e6      	beq.n	8000e0a <__udivmoddi4+0xa6>
 8000e3c:	e9c5 6300 	strd	r6, r3, [r5]
 8000e40:	e7e3      	b.n	8000e0a <__udivmoddi4+0xa6>
 8000e42:	2a00      	cmp	r2, #0
 8000e44:	f040 8090 	bne.w	8000f68 <__udivmoddi4+0x204>
 8000e48:	eba1 040c 	sub.w	r4, r1, ip
 8000e4c:	ea4f 481c 	mov.w	r8, ip, lsr #16
 8000e50:	fa1f f78c 	uxth.w	r7, ip
 8000e54:	2101      	movs	r1, #1
 8000e56:	fbb4 f6f8 	udiv	r6, r4, r8
 8000e5a:	ea4f 431e 	mov.w	r3, lr, lsr #16
 8000e5e:	fb08 4416 	mls	r4, r8, r6, r4
 8000e62:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
 8000e66:	fb07 f006 	mul.w	r0, r7, r6
 8000e6a:	4298      	cmp	r0, r3
 8000e6c:	d908      	bls.n	8000e80 <__udivmoddi4+0x11c>
 8000e6e:	eb1c 0303 	adds.w	r3, ip, r3
 8000e72:	f106 34ff 	add.w	r4, r6, #4294967295
 8000e76:	d202      	bcs.n	8000e7e <__udivmoddi4+0x11a>
 8000e78:	4298      	cmp	r0, r3
 8000e7a:	f200 80cd 	bhi.w	8001018 <__udivmoddi4+0x2b4>
 8000e7e:	4626      	mov	r6, r4
 8000e80:	1a1c      	subs	r4, r3, r0
 8000e82:	fa1f f38e 	uxth.w	r3, lr
 8000e86:	fbb4 f0f8 	udiv	r0, r4, r8
 8000e8a:	fb08 4410 	mls	r4, r8, r0, r4
 8000e8e:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
 8000e92:	fb00 f707 	mul.w	r7, r0, r7
 8000e96:	429f      	cmp	r7, r3
 8000e98:	d908      	bls.n	8000eac <__udivmoddi4+0x148>
 8000e9a:	eb1c 0303 	adds.w	r3, ip, r3
 8000e9e:	f100 34ff 	add.w	r4, r0, #4294967295
 8000ea2:	d202      	bcs.n	8000eaa <__udivmoddi4+0x146>
 8000ea4:	429f      	cmp	r7, r3
 8000ea6:	f200 80b0 	bhi.w	800100a <__udivmoddi4+0x2a6>
 8000eaa:	4620      	mov	r0, r4
 8000eac:	1bdb      	subs	r3, r3, r7
 8000eae:	ea40 4006 	orr.w	r0, r0, r6, lsl #16
 8000eb2:	e7a5      	b.n	8000e00 <__udivmoddi4+0x9c>
 8000eb4:	f1c1 0620 	rsb	r6, r1, #32
 8000eb8:	408b      	lsls	r3, r1
 8000eba:	fa22 f706 	lsr.w	r7, r2, r6
 8000ebe:	431f      	orrs	r7, r3
 8000ec0:	fa20 fc06 	lsr.w	ip, r0, r6
 8000ec4:	fa04 f301 	lsl.w	r3, r4, r1
 8000ec8:	ea43 030c 	orr.w	r3, r3, ip
 8000ecc:	40f4      	lsrs	r4, r6
 8000ece:	fa00 f801 	lsl.w	r8, r0, r1
 8000ed2:	0c38      	lsrs	r0, r7, #16
 8000ed4:	ea4f 4913 	mov.w	r9, r3, lsr #16
 8000ed8:	fbb4 fef0 	udiv	lr, r4, r0
 8000edc:	fa1f fc87 	uxth.w	ip, r7
 8000ee0:	fb00 441e 	mls	r4, r0, lr, r4
 8000ee4:	ea49 4404 	orr.w	r4, r9, r4, lsl #16
 8000ee8:	fb0e f90c 	mul.w	r9, lr, ip
 8000eec:	45a1      	cmp	r9, r4
 8000eee:	fa02 f201 	lsl.w	r2, r2, r1
 8000ef2:	d90a      	bls.n	8000f0a <__udivmoddi4+0x1a6>
 8000ef4:	193c      	adds	r4, r7, r4
 8000ef6:	f10e 3aff 	add.w	sl, lr, #4294967295
 8000efa:	f080 8084 	bcs.w	8001006 <__udivmoddi4+0x2a2>
 8000efe:	45a1      	cmp	r9, r4
 8000f00:	f240 8081 	bls.w	8001006 <__udivmoddi4+0x2a2>
 8000f04:	f1ae 0e02 	sub.w	lr, lr, #2
 8000f08:	443c      	add	r4, r7
 8000f0a:	eba4 0409 	sub.w	r4, r4, r9
 8000f0e:	fa1f f983 	uxth.w	r9, r3
 8000f12:	fbb4 f3f0 	udiv	r3, r4, r0
 8000f16:	fb00 4413 	mls	r4, r0, r3, r4
 8000f1a:	ea49 4404 	orr.w	r4, r9, r4, lsl #16
 8000f1e:	fb03 fc0c 	mul.w	ip, r3, ip
 8000f22:	45a4      	cmp	ip, r4
 8000f24:	d907      	bls.n	8000f36 <__udivmoddi4+0x1d2>
 8000f26:	193c      	adds	r4, r7, r4
 8000f28:	f103 30ff 	add.w	r0, r3, #4294967295
 8000f2c:	d267      	bcs.n	8000ffe <__udivmoddi4+0x29a>
 8000f2e:	45a4      	cmp	ip, r4
 8000f30:	d965      	bls.n	8000ffe <__udivmoddi4+0x29a>
 8000f32:	3b02      	subs	r3, #2
 8000f34:	443c      	add	r4, r7
 8000f36:	ea43 400e 	orr.w	r0, r3, lr, lsl #16
 8000f3a:	fba0 9302 	umull	r9, r3, r0, r2
 8000f3e:	eba4 040c 	sub.w	r4, r4, ip
 8000f42:	429c      	cmp	r4, r3
 8000f44:	46ce      	mov	lr, r9
 8000f46:	469c      	mov	ip, r3
 8000f48:	d351      	bcc.n	8000fee <__udivmoddi4+0x28a>
 8000f4a:	d04e      	beq.n	8000fea <__udivmoddi4+0x286>
 8000f4c:	b155      	cbz	r5, 8000f64 <__udivmoddi4+0x200>
 8000f4e:	ebb8 030e 	subs.w	r3, r8, lr
 8000f52:	eb64 040c 	sbc.w	r4, r4, ip
 8000f56:	fa04 f606 	lsl.w	r6, r4, r6
 8000f5a:	40cb      	lsrs	r3, r1
 8000f5c:	431e      	orrs	r6, r3
 8000f5e:	40cc      	lsrs	r4, r1
 8000f60:	e9c5 6400 	strd	r6, r4, [r5]
 8000f64:	2100      	movs	r1, #0
 8000f66:	e750      	b.n	8000e0a <__udivmoddi4+0xa6>
 8000f68:	f1c2 0320 	rsb	r3, r2, #32
 8000f6c:	fa20 f103 	lsr.w	r1, r0, r3
 8000f70:	fa0c fc02 	lsl.w	ip, ip, r2
 8000f74:	fa24 f303 	lsr.w	r3, r4, r3
 8000f78:	4094      	lsls	r4, r2
 8000f7a:	430c      	orrs	r4, r1
 8000f7c:	ea4f 481c 	mov.w	r8, ip, lsr #16
 8000f80:	fa00 fe02 	lsl.w	lr, r0, r2
 8000f84:	fa1f f78c 	uxth.w	r7, ip
 8000f88:	fbb3 f0f8 	udiv	r0, r3, r8
 8000f8c:	fb08 3110 	mls	r1, r8, r0, r3
 8000f90:	0c23      	lsrs	r3, r4, #16
 8000f92:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8000f96:	fb00 f107 	mul.w	r1, r0, r7
 8000f9a:	4299      	cmp	r1, r3
 8000f9c:	d908      	bls.n	8000fb0 <__udivmoddi4+0x24c>
 8000f9e:	eb1c 0303 	adds.w	r3, ip, r3
 8000fa2:	f100 36ff 	add.w	r6, r0, #4294967295
 8000fa6:	d22c      	bcs.n	8001002 <__udivmoddi4+0x29e>
 8000fa8:	4299      	cmp	r1, r3
 8000faa:	d92a      	bls.n	8001002 <__udivmoddi4+0x29e>
 8000fac:	3802      	subs	r0, #2
 8000fae:	4463      	add	r3, ip
 8000fb0:	1a5b      	subs	r3, r3, r1
 8000fb2:	b2a4      	uxth	r4, r4
 8000fb4:	fbb3 f1f8 	udiv	r1, r3, r8
 8000fb8:	fb08 3311 	mls	r3, r8, r1, r3
 8000fbc:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
 8000fc0:	fb01 f307 	mul.w	r3, r1, r7
 8000fc4:	42a3      	cmp	r3, r4
 8000fc6:	d908      	bls.n	8000fda <__udivmoddi4+0x276>
 8000fc8:	eb1c 0404 	adds.w	r4, ip, r4
 8000fcc:	f101 36ff 	add.w	r6, r1, #4294967295
 8000fd0:	d213      	bcs.n	8000ffa <__udivmoddi4+0x296>
 8000fd2:	42a3      	cmp	r3, r4
 8000fd4:	d911      	bls.n	8000ffa <__udivmoddi4+0x296>
 8000fd6:	3902      	subs	r1, #2
 8000fd8:	4464      	add	r4, ip
 8000fda:	1ae4      	subs	r4, r4, r3
 8000fdc:	ea41 4100 	orr.w	r1, r1, r0, lsl #16
 8000fe0:	e739      	b.n	8000e56 <__udivmoddi4+0xf2>
 8000fe2:	4604      	mov	r4, r0
 8000fe4:	e6f0      	b.n	8000dc8 <__udivmoddi4+0x64>
 8000fe6:	4608      	mov	r0, r1
 8000fe8:	e706      	b.n	8000df8 <__udivmoddi4+0x94>
 8000fea:	45c8      	cmp	r8, r9
 8000fec:	d2ae      	bcs.n	8000f4c <__udivmoddi4+0x1e8>
 8000fee:	ebb9 0e02 	subs.w	lr, r9, r2
 8000ff2:	eb63 0c07 	sbc.w	ip, r3, r7
 8000ff6:	3801      	subs	r0, #1
 8000ff8:	e7a8      	b.n	8000f4c <__udivmoddi4+0x1e8>
 8000ffa:	4631      	mov	r1, r6
 8000ffc:	e7ed      	b.n	8000fda <__udivmoddi4+0x276>
 8000ffe:	4603      	mov	r3, r0
 8001000:	e799      	b.n	8000f36 <__udivmoddi4+0x1d2>
 8001002:	4630      	mov	r0, r6
 8001004:	e7d4      	b.n	8000fb0 <__udivmoddi4+0x24c>
 8001006:	46d6      	mov	lr, sl
 8001008:	e77f      	b.n	8000f0a <__udivmoddi4+0x1a6>
 800100a:	4463      	add	r3, ip
 800100c:	3802      	subs	r0, #2
 800100e:	e74d      	b.n	8000eac <__udivmoddi4+0x148>
 8001010:	4606      	mov	r6, r0
 8001012:	4623      	mov	r3, r4
 8001014:	4608      	mov	r0, r1
 8001016:	e70f      	b.n	8000e38 <__udivmoddi4+0xd4>
 8001018:	3e02      	subs	r6, #2
 800101a:	4463      	add	r3, ip
 800101c:	e730      	b.n	8000e80 <__udivmoddi4+0x11c>
 800101e:	bf00      	nop

08001020 <__aeabi_idiv0>:
 8001020:	4770      	bx	lr
 8001022:	bf00      	nop

08001024 <bno055_setPage>:
 8001024:	b580      	push	{r7, lr}
 8001026:	b082      	sub	sp, #8
 8001028:	af00      	add	r7, sp, #0
 800102a:	4603      	mov	r3, r0
 800102c:	71fb      	strb	r3, [r7, #7]
 800102e:	79fb      	ldrb	r3, [r7, #7]
 8001030:	4619      	mov	r1, r3
 8001032:	2007      	movs	r0, #7
 8001034:	f000 f87a 	bl	800112c <bno055_writeData>
 8001038:	bf00      	nop
 800103a:	3708      	adds	r7, #8
 800103c:	46bd      	mov	sp, r7
 800103e:	bd80      	pop	{r7, pc}

08001040 <bno055_setOperationMode>:
 8001040:	b580      	push	{r7, lr}
 8001042:	b082      	sub	sp, #8
 8001044:	af00      	add	r7, sp, #0
 8001046:	4603      	mov	r3, r0
 8001048:	71fb      	strb	r3, [r7, #7]
 800104a:	79fb      	ldrb	r3, [r7, #7]
 800104c:	4619      	mov	r1, r3
 800104e:	203d      	movs	r0, #61	@ 0x3d
 8001050:	f000 f86c 	bl	800112c <bno055_writeData>
 8001054:	79fb      	ldrb	r3, [r7, #7]
 8001056:	2b00      	cmp	r3, #0
 8001058:	d103      	bne.n	8001062 <bno055_setOperationMode+0x22>
 800105a:	2013      	movs	r0, #19
 800105c:	f000 f85a 	bl	8001114 <bno055_delay>
 8001060:	e002      	b.n	8001068 <bno055_setOperationMode+0x28>
 8001062:	2007      	movs	r0, #7
 8001064:	f000 f856 	bl	8001114 <bno055_delay>
 8001068:	bf00      	nop
 800106a:	3708      	adds	r7, #8
 800106c:	46bd      	mov	sp, r7
 800106e:	bd80      	pop	{r7, pc}

08001070 <bno055_setOperationModeConfig>:
 8001070:	b580      	push	{r7, lr}
 8001072:	af00      	add	r7, sp, #0
 8001074:	2000      	movs	r0, #0
 8001076:	f7ff ffe3 	bl	8001040 <bno055_setOperationMode>
 800107a:	bf00      	nop
 800107c:	bd80      	pop	{r7, pc}

0800107e <bno055_setOperationModeNDOF>:
 800107e:	b580      	push	{r7, lr}
 8001080:	af00      	add	r7, sp, #0
 8001082:	200c      	movs	r0, #12
 8001084:	f7ff ffdc 	bl	8001040 <bno055_setOperationMode>
 8001088:	bf00      	nop
 800108a:	bd80      	pop	{r7, pc}

0800108c <bno055_reset>:
 800108c:	b580      	push	{r7, lr}
 800108e:	af00      	add	r7, sp, #0
 8001090:	2120      	movs	r1, #32
 8001092:	203f      	movs	r0, #63	@ 0x3f
 8001094:	f000 f84a 	bl	800112c <bno055_writeData>
 8001098:	f44f 702f 	mov.w	r0, #700	@ 0x2bc
 800109c:	f000 f83a 	bl	8001114 <bno055_delay>
 80010a0:	bf00      	nop
 80010a2:	bd80      	pop	{r7, pc}

080010a4 <bno055_setup>:
 80010a4:	b580      	push	{r7, lr}
 80010a6:	b082      	sub	sp, #8
 80010a8:	af00      	add	r7, sp, #0
 80010aa:	f7ff ffef 	bl	800108c <bno055_reset>
 80010ae:	2300      	movs	r3, #0
 80010b0:	71fb      	strb	r3, [r7, #7]
 80010b2:	1dfb      	adds	r3, r7, #7
 80010b4:	2201      	movs	r2, #1
 80010b6:	4619      	mov	r1, r3
 80010b8:	2000      	movs	r0, #0
 80010ba:	f000 f923 	bl	8001304 <bno055_readData>
 80010be:	79fb      	ldrb	r3, [r7, #7]
 80010c0:	2ba0      	cmp	r3, #160	@ 0xa0
 80010c2:	d004      	beq.n	80010ce <bno055_setup+0x2a>
 80010c4:	79fb      	ldrb	r3, [r7, #7]
 80010c6:	4619      	mov	r1, r3
 80010c8:	4809      	ldr	r0, [pc, #36]	@ (80010f0 <bno055_setup+0x4c>)
 80010ca:	f008 f9a3 	bl	8009414 <iprintf>
 80010ce:	2000      	movs	r0, #0
 80010d0:	f7ff ffa8 	bl	8001024 <bno055_setPage>
 80010d4:	2100      	movs	r1, #0
 80010d6:	203f      	movs	r0, #63	@ 0x3f
 80010d8:	f000 f828 	bl	800112c <bno055_writeData>
 80010dc:	f7ff ffc8 	bl	8001070 <bno055_setOperationModeConfig>
 80010e0:	200a      	movs	r0, #10
 80010e2:	f000 f817 	bl	8001114 <bno055_delay>
 80010e6:	bf00      	nop
 80010e8:	3708      	adds	r7, #8
 80010ea:	46bd      	mov	sp, r7
 80010ec:	bd80      	pop	{r7, pc}
 80010ee:	bf00      	nop
 80010f0:	0800cd88 	.word	0x0800cd88

080010f4 <bno055_assignI2C>:

#include "bno055.h"

I2C_HandleTypeDef *_bno055_i2c_port;

void bno055_assignI2C(I2C_HandleTypeDef *hi2c_device) {
 80010f4:	b480      	push	{r7}
 80010f6:	b083      	sub	sp, #12
 80010f8:	af00      	add	r7, sp, #0
 80010fa:	6078      	str	r0, [r7, #4]
  _bno055_i2c_port = hi2c_device;
 80010fc:	4a04      	ldr	r2, [pc, #16]	@ (8001110 <bno055_assignI2C+0x1c>)
 80010fe:	687b      	ldr	r3, [r7, #4]
 8001100:	6013      	str	r3, [r2, #0]
}
 8001102:	bf00      	nop
 8001104:	370c      	adds	r7, #12
 8001106:	46bd      	mov	sp, r7
 8001108:	f85d 7b04 	ldr.w	r7, [sp], #4
 800110c:	4770      	bx	lr
 800110e:	bf00      	nop
 8001110:	20000218 	.word	0x20000218

08001114 <bno055_delay>:

void bno055_delay(int time) {
 8001114:	b580      	push	{r7, lr}
 8001116:	b082      	sub	sp, #8
 8001118:	af00      	add	r7, sp, #0
 800111a:	6078      	str	r0, [r7, #4]
#ifdef FREERTOS_ENABLED
  osDelay(time);
#else
  HAL_Delay(time);
 800111c:	687b      	ldr	r3, [r7, #4]
 800111e:	4618      	mov	r0, r3
 8001120:	f002 fad2 	bl	80036c8 <HAL_Delay>
#endif
}
 8001124:	bf00      	nop
 8001126:	3708      	adds	r7, #8
 8001128:	46bd      	mov	sp, r7
 800112a:	bd80      	pop	{r7, pc}

0800112c <bno055_writeData>:

void bno055_writeData(uint8_t reg, uint8_t data) {
 800112c:	b580      	push	{r7, lr}
 800112e:	b088      	sub	sp, #32
 8001130:	af02      	add	r7, sp, #8
 8001132:	4603      	mov	r3, r0
 8001134:	460a      	mov	r2, r1
 8001136:	71fb      	strb	r3, [r7, #7]
 8001138:	4613      	mov	r3, r2
 800113a:	71bb      	strb	r3, [r7, #6]
  uint8_t txdata[2] = {reg, data};
 800113c:	79fb      	ldrb	r3, [r7, #7]
 800113e:	733b      	strb	r3, [r7, #12]
 8001140:	79bb      	ldrb	r3, [r7, #6]
 8001142:	737b      	strb	r3, [r7, #13]
  uint8_t status;
  status = HAL_I2C_Master_Transmit(_bno055_i2c_port, BNO055_I2C_ADDR << 1,
 8001144:	4b5a      	ldr	r3, [pc, #360]	@ (80012b0 <bno055_writeData+0x184>)
 8001146:	6818      	ldr	r0, [r3, #0]
 8001148:	f107 020c 	add.w	r2, r7, #12
 800114c:	230a      	movs	r3, #10
 800114e:	9300      	str	r3, [sp, #0]
 8001150:	2302      	movs	r3, #2
 8001152:	2150      	movs	r1, #80	@ 0x50
 8001154:	f003 fae2 	bl	800471c <HAL_I2C_Master_Transmit>
 8001158:	4603      	mov	r3, r0
 800115a:	75fb      	strb	r3, [r7, #23]
                                   txdata, sizeof(txdata), 10);
  if (status == HAL_OK) {
 800115c:	7dfb      	ldrb	r3, [r7, #23]
 800115e:	2b00      	cmp	r3, #0
 8001160:	f000 80a0 	beq.w	80012a4 <bno055_writeData+0x178>
    return;
  }

  if (status == HAL_ERROR) {
 8001164:	7dfb      	ldrb	r3, [r7, #23]
 8001166:	2b01      	cmp	r3, #1
 8001168:	d103      	bne.n	8001172 <bno055_writeData+0x46>
    printf("HAL_I2C_Master_Transmit HAL_ERROR\r\n");
 800116a:	4852      	ldr	r0, [pc, #328]	@ (80012b4 <bno055_writeData+0x188>)
 800116c:	f008 f9ba 	bl	80094e4 <puts>
 8001170:	e012      	b.n	8001198 <bno055_writeData+0x6c>
  } else if (status == HAL_TIMEOUT) {
 8001172:	7dfb      	ldrb	r3, [r7, #23]
 8001174:	2b03      	cmp	r3, #3
 8001176:	d103      	bne.n	8001180 <bno055_writeData+0x54>
    printf("HAL_I2C_Master_Transmit HAL_TIMEOUT\r\n");
 8001178:	484f      	ldr	r0, [pc, #316]	@ (80012b8 <bno055_writeData+0x18c>)
 800117a:	f008 f9b3 	bl	80094e4 <puts>
 800117e:	e00b      	b.n	8001198 <bno055_writeData+0x6c>
  } else if (status == HAL_BUSY) {
 8001180:	7dfb      	ldrb	r3, [r7, #23]
 8001182:	2b02      	cmp	r3, #2
 8001184:	d103      	bne.n	800118e <bno055_writeData+0x62>
    printf("HAL_I2C_Master_Transmit HAL_BUSY\r\n");
 8001186:	484d      	ldr	r0, [pc, #308]	@ (80012bc <bno055_writeData+0x190>)
 8001188:	f008 f9ac 	bl	80094e4 <puts>
 800118c:	e004      	b.n	8001198 <bno055_writeData+0x6c>
  } else {
    printf("Unknown status data %d", status);
 800118e:	7dfb      	ldrb	r3, [r7, #23]
 8001190:	4619      	mov	r1, r3
 8001192:	484b      	ldr	r0, [pc, #300]	@ (80012c0 <bno055_writeData+0x194>)
 8001194:	f008 f93e 	bl	8009414 <iprintf>
  }

  uint32_t error = HAL_I2C_GetError(_bno055_i2c_port);
 8001198:	4b45      	ldr	r3, [pc, #276]	@ (80012b0 <bno055_writeData+0x184>)
 800119a:	681b      	ldr	r3, [r3, #0]
 800119c:	4618      	mov	r0, r3
 800119e:	f003 fdfb 	bl	8004d98 <HAL_I2C_GetError>
 80011a2:	6138      	str	r0, [r7, #16]
  if (error == HAL_I2C_ERROR_NONE) {
 80011a4:	693b      	ldr	r3, [r7, #16]
 80011a6:	2b00      	cmp	r3, #0
 80011a8:	d07e      	beq.n	80012a8 <bno055_writeData+0x17c>
    return;
  } else if (error == HAL_I2C_ERROR_BERR) {
 80011aa:	693b      	ldr	r3, [r7, #16]
 80011ac:	2b01      	cmp	r3, #1
 80011ae:	d103      	bne.n	80011b8 <bno055_writeData+0x8c>
    printf("HAL_I2C_ERROR_BERR\r\n");
 80011b0:	4844      	ldr	r0, [pc, #272]	@ (80012c4 <bno055_writeData+0x198>)
 80011b2:	f008 f997 	bl	80094e4 <puts>
 80011b6:	e021      	b.n	80011fc <bno055_writeData+0xd0>
  } else if (error == HAL_I2C_ERROR_ARLO) {
 80011b8:	693b      	ldr	r3, [r7, #16]
 80011ba:	2b02      	cmp	r3, #2
 80011bc:	d103      	bne.n	80011c6 <bno055_writeData+0x9a>
    printf("HAL_I2C_ERROR_ARLO\r\n");
 80011be:	4842      	ldr	r0, [pc, #264]	@ (80012c8 <bno055_writeData+0x19c>)
 80011c0:	f008 f990 	bl	80094e4 <puts>
 80011c4:	e01a      	b.n	80011fc <bno055_writeData+0xd0>
  } else if (error == HAL_I2C_ERROR_AF) {
 80011c6:	693b      	ldr	r3, [r7, #16]
 80011c8:	2b04      	cmp	r3, #4
 80011ca:	d103      	bne.n	80011d4 <bno055_writeData+0xa8>
    printf("HAL_I2C_ERROR_AF\r\n");
 80011cc:	483f      	ldr	r0, [pc, #252]	@ (80012cc <bno055_writeData+0x1a0>)
 80011ce:	f008 f989 	bl	80094e4 <puts>
 80011d2:	e013      	b.n	80011fc <bno055_writeData+0xd0>
  } else if (error == HAL_I2C_ERROR_OVR) {
 80011d4:	693b      	ldr	r3, [r7, #16]
 80011d6:	2b08      	cmp	r3, #8
 80011d8:	d103      	bne.n	80011e2 <bno055_writeData+0xb6>
    printf("HAL_I2C_ERROR_OVR\r\n");
 80011da:	483d      	ldr	r0, [pc, #244]	@ (80012d0 <bno055_writeData+0x1a4>)
 80011dc:	f008 f982 	bl	80094e4 <puts>
 80011e0:	e00c      	b.n	80011fc <bno055_writeData+0xd0>
  } else if (error == HAL_I2C_ERROR_DMA) {
 80011e2:	693b      	ldr	r3, [r7, #16]
 80011e4:	2b10      	cmp	r3, #16
 80011e6:	d103      	bne.n	80011f0 <bno055_writeData+0xc4>
    printf("HAL_I2C_ERROR_DMA\r\n");
 80011e8:	483a      	ldr	r0, [pc, #232]	@ (80012d4 <bno055_writeData+0x1a8>)
 80011ea:	f008 f97b 	bl	80094e4 <puts>
 80011ee:	e005      	b.n	80011fc <bno055_writeData+0xd0>
  } else if (error == HAL_I2C_ERROR_TIMEOUT) {
 80011f0:	693b      	ldr	r3, [r7, #16]
 80011f2:	2b20      	cmp	r3, #32
 80011f4:	d102      	bne.n	80011fc <bno055_writeData+0xd0>
    printf("HAL_I2C_ERROR_TIMEOUT\r\n");
 80011f6:	4838      	ldr	r0, [pc, #224]	@ (80012d8 <bno055_writeData+0x1ac>)
 80011f8:	f008 f974 	bl	80094e4 <puts>
  }

  HAL_I2C_StateTypeDef state = HAL_I2C_GetState(_bno055_i2c_port);
 80011fc:	4b2c      	ldr	r3, [pc, #176]	@ (80012b0 <bno055_writeData+0x184>)
 80011fe:	681b      	ldr	r3, [r3, #0]
 8001200:	4618      	mov	r0, r3
 8001202:	f003 fdbb 	bl	8004d7c <HAL_I2C_GetState>
 8001206:	4603      	mov	r3, r0
 8001208:	73fb      	strb	r3, [r7, #15]
  if (state == HAL_I2C_STATE_RESET) {
 800120a:	7bfb      	ldrb	r3, [r7, #15]
 800120c:	2b00      	cmp	r3, #0
 800120e:	d103      	bne.n	8001218 <bno055_writeData+0xec>
    printf("HAL_I2C_STATE_RESET\r\n");
 8001210:	4832      	ldr	r0, [pc, #200]	@ (80012dc <bno055_writeData+0x1b0>)
 8001212:	f008 f967 	bl	80094e4 <puts>
 8001216:	e048      	b.n	80012aa <bno055_writeData+0x17e>
  } else if (state == HAL_I2C_STATE_READY) {
 8001218:	7bfb      	ldrb	r3, [r7, #15]
 800121a:	2b20      	cmp	r3, #32
 800121c:	d103      	bne.n	8001226 <bno055_writeData+0xfa>
    printf("HAL_I2C_STATE_RESET\r\n");
 800121e:	482f      	ldr	r0, [pc, #188]	@ (80012dc <bno055_writeData+0x1b0>)
 8001220:	f008 f960 	bl	80094e4 <puts>
 8001224:	e041      	b.n	80012aa <bno055_writeData+0x17e>
  } else if (state == HAL_I2C_STATE_BUSY) {
 8001226:	7bfb      	ldrb	r3, [r7, #15]
 8001228:	2b24      	cmp	r3, #36	@ 0x24
 800122a:	d103      	bne.n	8001234 <bno055_writeData+0x108>
    printf("HAL_I2C_STATE_BUSY\r\n");
 800122c:	482c      	ldr	r0, [pc, #176]	@ (80012e0 <bno055_writeData+0x1b4>)
 800122e:	f008 f959 	bl	80094e4 <puts>
 8001232:	e03a      	b.n	80012aa <bno055_writeData+0x17e>
  } else if (state == HAL_I2C_STATE_BUSY_TX) {
 8001234:	7bfb      	ldrb	r3, [r7, #15]
 8001236:	2b21      	cmp	r3, #33	@ 0x21
 8001238:	d103      	bne.n	8001242 <bno055_writeData+0x116>
    printf("HAL_I2C_STATE_BUSY_TX\r\n");
 800123a:	482a      	ldr	r0, [pc, #168]	@ (80012e4 <bno055_writeData+0x1b8>)
 800123c:	f008 f952 	bl	80094e4 <puts>
 8001240:	e033      	b.n	80012aa <bno055_writeData+0x17e>
  } else if (state == HAL_I2C_STATE_BUSY_RX) {
 8001242:	7bfb      	ldrb	r3, [r7, #15]
 8001244:	2b22      	cmp	r3, #34	@ 0x22
 8001246:	d103      	bne.n	8001250 <bno055_writeData+0x124>
    printf("HAL_I2C_STATE_BUSY_RX\r\n");
 8001248:	4827      	ldr	r0, [pc, #156]	@ (80012e8 <bno055_writeData+0x1bc>)
 800124a:	f008 f94b 	bl	80094e4 <puts>
 800124e:	e02c      	b.n	80012aa <bno055_writeData+0x17e>
  } else if (state == HAL_I2C_STATE_LISTEN) {
 8001250:	7bfb      	ldrb	r3, [r7, #15]
 8001252:	2b28      	cmp	r3, #40	@ 0x28
 8001254:	d103      	bne.n	800125e <bno055_writeData+0x132>
    printf("HAL_I2C_STATE_LISTEN\r\n");
 8001256:	4825      	ldr	r0, [pc, #148]	@ (80012ec <bno055_writeData+0x1c0>)
 8001258:	f008 f944 	bl	80094e4 <puts>
 800125c:	e025      	b.n	80012aa <bno055_writeData+0x17e>
  } else if (state == HAL_I2C_STATE_BUSY_TX_LISTEN) {
 800125e:	7bfb      	ldrb	r3, [r7, #15]
 8001260:	2b29      	cmp	r3, #41	@ 0x29
 8001262:	d103      	bne.n	800126c <bno055_writeData+0x140>
    printf("HAL_I2C_STATE_BUSY_TX_LISTEN\r\n");
 8001264:	4822      	ldr	r0, [pc, #136]	@ (80012f0 <bno055_writeData+0x1c4>)
 8001266:	f008 f93d 	bl	80094e4 <puts>
 800126a:	e01e      	b.n	80012aa <bno055_writeData+0x17e>
  } else if (state == HAL_I2C_STATE_BUSY_RX_LISTEN) {
 800126c:	7bfb      	ldrb	r3, [r7, #15]
 800126e:	2b2a      	cmp	r3, #42	@ 0x2a
 8001270:	d103      	bne.n	800127a <bno055_writeData+0x14e>
    printf("HAL_I2C_STATE_BUSY_RX_LISTEN\r\n");
 8001272:	4820      	ldr	r0, [pc, #128]	@ (80012f4 <bno055_writeData+0x1c8>)
 8001274:	f008 f936 	bl	80094e4 <puts>
 8001278:	e017      	b.n	80012aa <bno055_writeData+0x17e>
  } else if (state == HAL_I2C_STATE_ABORT) {
 800127a:	7bfb      	ldrb	r3, [r7, #15]
 800127c:	2b60      	cmp	r3, #96	@ 0x60
 800127e:	d103      	bne.n	8001288 <bno055_writeData+0x15c>
    printf("HAL_I2C_STATE_ABORT\r\n");
 8001280:	481d      	ldr	r0, [pc, #116]	@ (80012f8 <bno055_writeData+0x1cc>)
 8001282:	f008 f92f 	bl	80094e4 <puts>
 8001286:	e010      	b.n	80012aa <bno055_writeData+0x17e>
  } else if (state == HAL_I2C_STATE_TIMEOUT) {
 8001288:	7bfb      	ldrb	r3, [r7, #15]
 800128a:	2ba0      	cmp	r3, #160	@ 0xa0
 800128c:	d103      	bne.n	8001296 <bno055_writeData+0x16a>
    printf("HAL_I2C_STATE_TIMEOUT\r\n");
 800128e:	481b      	ldr	r0, [pc, #108]	@ (80012fc <bno055_writeData+0x1d0>)
 8001290:	f008 f928 	bl	80094e4 <puts>
 8001294:	e009      	b.n	80012aa <bno055_writeData+0x17e>
  } else if (state == HAL_I2C_STATE_ERROR) {
 8001296:	7bfb      	ldrb	r3, [r7, #15]
 8001298:	2be0      	cmp	r3, #224	@ 0xe0
 800129a:	d106      	bne.n	80012aa <bno055_writeData+0x17e>
    printf("HAL_I2C_STATE_ERROR\r\n");
 800129c:	4818      	ldr	r0, [pc, #96]	@ (8001300 <bno055_writeData+0x1d4>)
 800129e:	f008 f921 	bl	80094e4 <puts>
 80012a2:	e002      	b.n	80012aa <bno055_writeData+0x17e>
    return;
 80012a4:	bf00      	nop
 80012a6:	e000      	b.n	80012aa <bno055_writeData+0x17e>
    return;
 80012a8:	bf00      	nop
  }
  // while (HAL_I2C_GetState(_bno055_i2c_port) != HAL_I2C_STATE_READY) {}
  // return;
}
 80012aa:	3718      	adds	r7, #24
 80012ac:	46bd      	mov	sp, r7
 80012ae:	bd80      	pop	{r7, pc}
 80012b0:	20000218 	.word	0x20000218
 80012b4:	0800cdc4 	.word	0x0800cdc4
 80012b8:	0800cde8 	.word	0x0800cde8
 80012bc:	0800ce10 	.word	0x0800ce10
 80012c0:	0800ce34 	.word	0x0800ce34
 80012c4:	0800ce4c 	.word	0x0800ce4c
 80012c8:	0800ce60 	.word	0x0800ce60
 80012cc:	0800ce74 	.word	0x0800ce74
 80012d0:	0800ce88 	.word	0x0800ce88
 80012d4:	0800ce9c 	.word	0x0800ce9c
 80012d8:	0800ceb0 	.word	0x0800ceb0
 80012dc:	0800cec8 	.word	0x0800cec8
 80012e0:	0800cee0 	.word	0x0800cee0
 80012e4:	0800cef4 	.word	0x0800cef4
 80012e8:	0800cf0c 	.word	0x0800cf0c
 80012ec:	0800cf24 	.word	0x0800cf24
 80012f0:	0800cf3c 	.word	0x0800cf3c
 80012f4:	0800cf5c 	.word	0x0800cf5c
 80012f8:	0800cf7c 	.word	0x0800cf7c
 80012fc:	0800cf94 	.word	0x0800cf94
 8001300:	0800cfac 	.word	0x0800cfac

08001304 <bno055_readData>:

void bno055_readData(uint8_t reg, uint8_t *data, uint8_t len) {
 8001304:	b580      	push	{r7, lr}
 8001306:	b084      	sub	sp, #16
 8001308:	af02      	add	r7, sp, #8
 800130a:	4603      	mov	r3, r0
 800130c:	6039      	str	r1, [r7, #0]
 800130e:	71fb      	strb	r3, [r7, #7]
 8001310:	4613      	mov	r3, r2
 8001312:	71bb      	strb	r3, [r7, #6]
  HAL_I2C_Master_Transmit(_bno055_i2c_port, BNO055_I2C_ADDR << 1, &reg, 1,
 8001314:	4b0b      	ldr	r3, [pc, #44]	@ (8001344 <bno055_readData+0x40>)
 8001316:	6818      	ldr	r0, [r3, #0]
 8001318:	1dfa      	adds	r2, r7, #7
 800131a:	2364      	movs	r3, #100	@ 0x64
 800131c:	9300      	str	r3, [sp, #0]
 800131e:	2301      	movs	r3, #1
 8001320:	2150      	movs	r1, #80	@ 0x50
 8001322:	f003 f9fb 	bl	800471c <HAL_I2C_Master_Transmit>
                          100);
  HAL_I2C_Master_Receive(_bno055_i2c_port, BNO055_I2C_ADDR << 1, data, len,
 8001326:	4b07      	ldr	r3, [pc, #28]	@ (8001344 <bno055_readData+0x40>)
 8001328:	6818      	ldr	r0, [r3, #0]
 800132a:	79bb      	ldrb	r3, [r7, #6]
 800132c:	b29b      	uxth	r3, r3
 800132e:	2264      	movs	r2, #100	@ 0x64
 8001330:	9200      	str	r2, [sp, #0]
 8001332:	683a      	ldr	r2, [r7, #0]
 8001334:	2150      	movs	r1, #80	@ 0x50
 8001336:	f003 faef 	bl	8004918 <HAL_I2C_Master_Receive>
                         100);
  // HAL_I2C_Mem_Read(_bno055_i2c_port, BNO055_I2C_ADDR_LO<<1, reg,
  // I2C_MEMADD_SIZE_8BIT, data, len, 100);
}
 800133a:	bf00      	nop
 800133c:	3708      	adds	r7, #8
 800133e:	46bd      	mov	sp, r7
 8001340:	bd80      	pop	{r7, pc}
 8001342:	bf00      	nop
 8001344:	20000218 	.word	0x20000218

08001348 <HAL_UART_RxCpltCallback>:
// Encoder state
volatile int32_t prev_encoder5 = 0;
volatile int32_t prev_encoder10 = 0;
volatile int32_t prev_encoder11 = 0;

void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart) {
 8001348:	b580      	push	{r7, lr}
 800134a:	b082      	sub	sp, #8
 800134c:	af00      	add	r7, sp, #0
 800134e:	6078      	str	r0, [r7, #4]
	HAL_UART_Receive_DMA(&huart4, rxbuff, 16);
 8001350:	2210      	movs	r2, #16
 8001352:	4904      	ldr	r1, [pc, #16]	@ (8001364 <HAL_UART_RxCpltCallback+0x1c>)
 8001354:	4804      	ldr	r0, [pc, #16]	@ (8001368 <HAL_UART_RxCpltCallback+0x20>)
 8001356:	f006 f822 	bl	800739e <HAL_UART_Receive_DMA>
}
 800135a:	bf00      	nop
 800135c:	3708      	adds	r7, #8
 800135e:	46bd      	mov	sp, r7
 8001360:	bd80      	pop	{r7, pc}
 8001362:	bf00      	nop
 8001364:	20000640 	.word	0x20000640
 8001368:	200004f8 	.word	0x200004f8

0800136c <map>:
long map(long x, long in_min, long in_max, long out_min, long out_max) {
 800136c:	b480      	push	{r7}
 800136e:	b085      	sub	sp, #20
 8001370:	af00      	add	r7, sp, #0
 8001372:	60f8      	str	r0, [r7, #12]
 8001374:	60b9      	str	r1, [r7, #8]
 8001376:	607a      	str	r2, [r7, #4]
 8001378:	603b      	str	r3, [r7, #0]

	return (x - in_min) * (out_max - out_min) / (in_max - in_min) + out_min;
 800137a:	68fa      	ldr	r2, [r7, #12]
 800137c:	68bb      	ldr	r3, [r7, #8]
 800137e:	1ad3      	subs	r3, r2, r3
 8001380:	69b9      	ldr	r1, [r7, #24]
 8001382:	683a      	ldr	r2, [r7, #0]
 8001384:	1a8a      	subs	r2, r1, r2
 8001386:	fb03 f202 	mul.w	r2, r3, r2
 800138a:	6879      	ldr	r1, [r7, #4]
 800138c:	68bb      	ldr	r3, [r7, #8]
 800138e:	1acb      	subs	r3, r1, r3
 8001390:	fb92 f2f3 	sdiv	r2, r2, r3
 8001394:	683b      	ldr	r3, [r7, #0]
 8001396:	4413      	add	r3, r2

}
 8001398:	4618      	mov	r0, r3
 800139a:	3714      	adds	r7, #20
 800139c:	46bd      	mov	sp, r7
 800139e:	f85d 7b04 	ldr.w	r7, [sp], #4
 80013a2:	4770      	bx	lr
 80013a4:	0000      	movs	r0, r0
	...

080013a8 <update_odometry>:

void update_odometry(int16_t encoder1, int32_t encoder2, int16_t encoder3) {
 80013a8:	b580      	push	{r7, lr}
 80013aa:	b088      	sub	sp, #32
 80013ac:	af00      	add	r7, sp, #0
 80013ae:	4603      	mov	r3, r0
 80013b0:	6039      	str	r1, [r7, #0]
 80013b2:	80fb      	strh	r3, [r7, #6]
 80013b4:	4613      	mov	r3, r2
 80013b6:	80bb      	strh	r3, [r7, #4]
	// Calculate the change in encoder values
	int16_t delta1 = encoder1 - last_encoder1;
 80013b8:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 80013bc:	ee07 3a90 	vmov	s15, r3
 80013c0:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 80013c4:	4b8c      	ldr	r3, [pc, #560]	@ (80015f8 <update_odometry+0x250>)
 80013c6:	edd3 7a00 	vldr	s15, [r3]
 80013ca:	ee77 7a67 	vsub.f32	s15, s14, s15
 80013ce:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80013d2:	ee17 3a90 	vmov	r3, s15
 80013d6:	83fb      	strh	r3, [r7, #30]
	int32_t delta2 = encoder2 - last_encoder2;
 80013d8:	683b      	ldr	r3, [r7, #0]
 80013da:	ee07 3a90 	vmov	s15, r3
 80013de:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 80013e2:	4b86      	ldr	r3, [pc, #536]	@ (80015fc <update_odometry+0x254>)
 80013e4:	edd3 7a00 	vldr	s15, [r3]
 80013e8:	ee77 7a67 	vsub.f32	s15, s14, s15
 80013ec:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80013f0:	ee17 3a90 	vmov	r3, s15
 80013f4:	61bb      	str	r3, [r7, #24]
	int16_t delta3 = encoder3 - last_encoder3;
 80013f6:	f9b7 3004 	ldrsh.w	r3, [r7, #4]
 80013fa:	ee07 3a90 	vmov	s15, r3
 80013fe:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8001402:	4b7f      	ldr	r3, [pc, #508]	@ (8001600 <update_odometry+0x258>)
 8001404:	edd3 7a00 	vldr	s15, [r3]
 8001408:	ee77 7a67 	vsub.f32	s15, s14, s15
 800140c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8001410:	ee17 3a90 	vmov	r3, s15
 8001414:	82fb      	strh	r3, [r7, #22]

	// Calculate distance per encoder count
	float wheel_circumference = 2 * M_PI * WHEEL_RADIUS;
 8001416:	4b7b      	ldr	r3, [pc, #492]	@ (8001604 <update_odometry+0x25c>)
 8001418:	613b      	str	r3, [r7, #16]
	float distance_per_count = (1.0 / ENCODER_COUNTS_PER_REV)
			* (wheel_circumference / 1000);
 800141a:	edd7 7a04 	vldr	s15, [r7, #16]
 800141e:	ed9f 7a7a 	vldr	s14, [pc, #488]	@ 8001608 <update_odometry+0x260>
 8001422:	eec7 6a87 	vdiv.f32	s13, s15, s14
 8001426:	ee16 0a90 	vmov	r0, s13
 800142a:	f7ff f8ad 	bl	8000588 <__aeabi_f2d>
 800142e:	a370      	add	r3, pc, #448	@ (adr r3, 80015f0 <update_odometry+0x248>)
 8001430:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001434:	f7ff f900 	bl	8000638 <__aeabi_dmul>
 8001438:	4602      	mov	r2, r0
 800143a:	460b      	mov	r3, r1
	float distance_per_count = (1.0 / ENCODER_COUNTS_PER_REV)
 800143c:	4610      	mov	r0, r2
 800143e:	4619      	mov	r1, r3
 8001440:	f7ff fbf2 	bl	8000c28 <__aeabi_d2f>
 8001444:	4603      	mov	r3, r0
 8001446:	60fb      	str	r3, [r7, #12]

	// Compute average delta for forward/backward encoders (without abs)
	float avgDelta12 = (delta1 + delta2) / 2.0;
 8001448:	f9b7 201e 	ldrsh.w	r2, [r7, #30]
 800144c:	69bb      	ldr	r3, [r7, #24]
 800144e:	4413      	add	r3, r2
 8001450:	4618      	mov	r0, r3
 8001452:	f7ff f887 	bl	8000564 <__aeabi_i2d>
 8001456:	f04f 0200 	mov.w	r2, #0
 800145a:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 800145e:	f7ff fa15 	bl	800088c <__aeabi_ddiv>
 8001462:	4602      	mov	r2, r0
 8001464:	460b      	mov	r3, r1
 8001466:	4610      	mov	r0, r2
 8001468:	4619      	mov	r1, r3
 800146a:	f7ff fbdd 	bl	8000c28 <__aeabi_d2f>
 800146e:	4603      	mov	r3, r0
 8001470:	60bb      	str	r3, [r7, #8]

	// Check movement direction based on joystick
	if (ly >= Buff1 && (lx <= BuffP && lx >= BuffN)) {
 8001472:	4b66      	ldr	r3, [pc, #408]	@ (800160c <update_odometry+0x264>)
 8001474:	681a      	ldr	r2, [r3, #0]
 8001476:	4b66      	ldr	r3, [pc, #408]	@ (8001610 <update_odometry+0x268>)
 8001478:	681b      	ldr	r3, [r3, #0]
 800147a:	429a      	cmp	r2, r3
 800147c:	db1a      	blt.n	80014b4 <update_odometry+0x10c>
 800147e:	4b65      	ldr	r3, [pc, #404]	@ (8001614 <update_odometry+0x26c>)
 8001480:	681a      	ldr	r2, [r3, #0]
 8001482:	4b65      	ldr	r3, [pc, #404]	@ (8001618 <update_odometry+0x270>)
 8001484:	681b      	ldr	r3, [r3, #0]
 8001486:	429a      	cmp	r2, r3
 8001488:	dc14      	bgt.n	80014b4 <update_odometry+0x10c>
 800148a:	4b62      	ldr	r3, [pc, #392]	@ (8001614 <update_odometry+0x26c>)
 800148c:	681a      	ldr	r2, [r3, #0]
 800148e:	4b63      	ldr	r3, [pc, #396]	@ (800161c <update_odometry+0x274>)
 8001490:	681b      	ldr	r3, [r3, #0]
 8001492:	429a      	cmp	r2, r3
 8001494:	db0e      	blt.n	80014b4 <update_odometry+0x10c>
		// Forward motion - use the actual delta (with sign) to track position
		x += distance_per_count * avgDelta12;
 8001496:	ed97 7a03 	vldr	s14, [r7, #12]
 800149a:	edd7 7a02 	vldr	s15, [r7, #8]
 800149e:	ee27 7a27 	vmul.f32	s14, s14, s15
 80014a2:	4b5f      	ldr	r3, [pc, #380]	@ (8001620 <update_odometry+0x278>)
 80014a4:	edd3 7a00 	vldr	s15, [r3]
 80014a8:	ee77 7a27 	vadd.f32	s15, s14, s15
 80014ac:	4b5c      	ldr	r3, [pc, #368]	@ (8001620 <update_odometry+0x278>)
 80014ae:	edc3 7a00 	vstr	s15, [r3]
 80014b2:	e01f      	b.n	80014f4 <update_odometry+0x14c>
	} else if (ly <= Buff2 && (lx <= BuffP && lx >= BuffN)) {
 80014b4:	4b55      	ldr	r3, [pc, #340]	@ (800160c <update_odometry+0x264>)
 80014b6:	681a      	ldr	r2, [r3, #0]
 80014b8:	4b5a      	ldr	r3, [pc, #360]	@ (8001624 <update_odometry+0x27c>)
 80014ba:	681b      	ldr	r3, [r3, #0]
 80014bc:	429a      	cmp	r2, r3
 80014be:	dc19      	bgt.n	80014f4 <update_odometry+0x14c>
 80014c0:	4b54      	ldr	r3, [pc, #336]	@ (8001614 <update_odometry+0x26c>)
 80014c2:	681a      	ldr	r2, [r3, #0]
 80014c4:	4b54      	ldr	r3, [pc, #336]	@ (8001618 <update_odometry+0x270>)
 80014c6:	681b      	ldr	r3, [r3, #0]
 80014c8:	429a      	cmp	r2, r3
 80014ca:	dc13      	bgt.n	80014f4 <update_odometry+0x14c>
 80014cc:	4b51      	ldr	r3, [pc, #324]	@ (8001614 <update_odometry+0x26c>)
 80014ce:	681a      	ldr	r2, [r3, #0]
 80014d0:	4b52      	ldr	r3, [pc, #328]	@ (800161c <update_odometry+0x274>)
 80014d2:	681b      	ldr	r3, [r3, #0]
 80014d4:	429a      	cmp	r2, r3
 80014d6:	db0d      	blt.n	80014f4 <update_odometry+0x14c>
		// Backward motion - use the actual delta (with sign) to track position
		x += distance_per_count * avgDelta12; // Will be negative when going backward
 80014d8:	ed97 7a03 	vldr	s14, [r7, #12]
 80014dc:	edd7 7a02 	vldr	s15, [r7, #8]
 80014e0:	ee27 7a27 	vmul.f32	s14, s14, s15
 80014e4:	4b4e      	ldr	r3, [pc, #312]	@ (8001620 <update_odometry+0x278>)
 80014e6:	edd3 7a00 	vldr	s15, [r3]
 80014ea:	ee77 7a27 	vadd.f32	s15, s14, s15
 80014ee:	4b4c      	ldr	r3, [pc, #304]	@ (8001620 <update_odometry+0x278>)
 80014f0:	edc3 7a00 	vstr	s15, [r3]
	}

	if (lx >= Buff1 && (ly <= BuffP && ly >= BuffN)) {
 80014f4:	4b47      	ldr	r3, [pc, #284]	@ (8001614 <update_odometry+0x26c>)
 80014f6:	681a      	ldr	r2, [r3, #0]
 80014f8:	4b45      	ldr	r3, [pc, #276]	@ (8001610 <update_odometry+0x268>)
 80014fa:	681b      	ldr	r3, [r3, #0]
 80014fc:	429a      	cmp	r2, r3
 80014fe:	db28      	blt.n	8001552 <update_odometry+0x1aa>
 8001500:	4b42      	ldr	r3, [pc, #264]	@ (800160c <update_odometry+0x264>)
 8001502:	681a      	ldr	r2, [r3, #0]
 8001504:	4b44      	ldr	r3, [pc, #272]	@ (8001618 <update_odometry+0x270>)
 8001506:	681b      	ldr	r3, [r3, #0]
 8001508:	429a      	cmp	r2, r3
 800150a:	dc22      	bgt.n	8001552 <update_odometry+0x1aa>
 800150c:	4b3f      	ldr	r3, [pc, #252]	@ (800160c <update_odometry+0x264>)
 800150e:	681a      	ldr	r2, [r3, #0]
 8001510:	4b42      	ldr	r3, [pc, #264]	@ (800161c <update_odometry+0x274>)
 8001512:	681b      	ldr	r3, [r3, #0]
 8001514:	429a      	cmp	r2, r3
 8001516:	db1c      	blt.n	8001552 <update_odometry+0x1aa>
		dist3 = distance_per_count * abs(delta3);  // Using delta3 for y-axis
 8001518:	f9b7 3016 	ldrsh.w	r3, [r7, #22]
 800151c:	2b00      	cmp	r3, #0
 800151e:	bfb8      	it	lt
 8001520:	425b      	neglt	r3, r3
 8001522:	b29b      	uxth	r3, r3
 8001524:	ee07 3a90 	vmov	s15, r3
 8001528:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 800152c:	edd7 7a03 	vldr	s15, [r7, #12]
 8001530:	ee67 7a27 	vmul.f32	s15, s14, s15
 8001534:	4b3c      	ldr	r3, [pc, #240]	@ (8001628 <update_odometry+0x280>)
 8001536:	edc3 7a00 	vstr	s15, [r3]
		y += dist3;
 800153a:	4b3c      	ldr	r3, [pc, #240]	@ (800162c <update_odometry+0x284>)
 800153c:	ed93 7a00 	vldr	s14, [r3]
 8001540:	4b39      	ldr	r3, [pc, #228]	@ (8001628 <update_odometry+0x280>)
 8001542:	edd3 7a00 	vldr	s15, [r3]
 8001546:	ee77 7a27 	vadd.f32	s15, s14, s15
 800154a:	4b38      	ldr	r3, [pc, #224]	@ (800162c <update_odometry+0x284>)
 800154c:	edc3 7a00 	vstr	s15, [r3]
 8001550:	e02d      	b.n	80015ae <update_odometry+0x206>
	} else if (lx <= Buff2 && (ly <= BuffP && ly >= BuffN)) {
 8001552:	4b30      	ldr	r3, [pc, #192]	@ (8001614 <update_odometry+0x26c>)
 8001554:	681a      	ldr	r2, [r3, #0]
 8001556:	4b33      	ldr	r3, [pc, #204]	@ (8001624 <update_odometry+0x27c>)
 8001558:	681b      	ldr	r3, [r3, #0]
 800155a:	429a      	cmp	r2, r3
 800155c:	dc27      	bgt.n	80015ae <update_odometry+0x206>
 800155e:	4b2b      	ldr	r3, [pc, #172]	@ (800160c <update_odometry+0x264>)
 8001560:	681a      	ldr	r2, [r3, #0]
 8001562:	4b2d      	ldr	r3, [pc, #180]	@ (8001618 <update_odometry+0x270>)
 8001564:	681b      	ldr	r3, [r3, #0]
 8001566:	429a      	cmp	r2, r3
 8001568:	dc21      	bgt.n	80015ae <update_odometry+0x206>
 800156a:	4b28      	ldr	r3, [pc, #160]	@ (800160c <update_odometry+0x264>)
 800156c:	681a      	ldr	r2, [r3, #0]
 800156e:	4b2b      	ldr	r3, [pc, #172]	@ (800161c <update_odometry+0x274>)
 8001570:	681b      	ldr	r3, [r3, #0]
 8001572:	429a      	cmp	r2, r3
 8001574:	db1b      	blt.n	80015ae <update_odometry+0x206>
		dist4 = distance_per_count * abs(delta3);
 8001576:	f9b7 3016 	ldrsh.w	r3, [r7, #22]
 800157a:	2b00      	cmp	r3, #0
 800157c:	bfb8      	it	lt
 800157e:	425b      	neglt	r3, r3
 8001580:	b29b      	uxth	r3, r3
 8001582:	ee07 3a90 	vmov	s15, r3
 8001586:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 800158a:	edd7 7a03 	vldr	s15, [r7, #12]
 800158e:	ee67 7a27 	vmul.f32	s15, s14, s15
 8001592:	4b27      	ldr	r3, [pc, #156]	@ (8001630 <update_odometry+0x288>)
 8001594:	edc3 7a00 	vstr	s15, [r3]
		y -= dist4;
 8001598:	4b24      	ldr	r3, [pc, #144]	@ (800162c <update_odometry+0x284>)
 800159a:	ed93 7a00 	vldr	s14, [r3]
 800159e:	4b24      	ldr	r3, [pc, #144]	@ (8001630 <update_odometry+0x288>)
 80015a0:	edd3 7a00 	vldr	s15, [r3]
 80015a4:	ee77 7a67 	vsub.f32	s15, s14, s15
 80015a8:	4b20      	ldr	r3, [pc, #128]	@ (800162c <update_odometry+0x284>)
 80015aa:	edc3 7a00 	vstr	s15, [r3]
	}

	// Update last encoder values for the next iteration
	last_encoder1 = encoder1;
 80015ae:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 80015b2:	ee07 3a90 	vmov	s15, r3
 80015b6:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80015ba:	4b0f      	ldr	r3, [pc, #60]	@ (80015f8 <update_odometry+0x250>)
 80015bc:	edc3 7a00 	vstr	s15, [r3]
	last_encoder2 = encoder2;
 80015c0:	683b      	ldr	r3, [r7, #0]
 80015c2:	ee07 3a90 	vmov	s15, r3
 80015c6:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80015ca:	4b0c      	ldr	r3, [pc, #48]	@ (80015fc <update_odometry+0x254>)
 80015cc:	edc3 7a00 	vstr	s15, [r3]
	last_encoder3 = encoder3;
 80015d0:	f9b7 3004 	ldrsh.w	r3, [r7, #4]
 80015d4:	ee07 3a90 	vmov	s15, r3
 80015d8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80015dc:	4b08      	ldr	r3, [pc, #32]	@ (8001600 <update_odometry+0x258>)
 80015de:	edc3 7a00 	vstr	s15, [r3]
}
 80015e2:	bf00      	nop
 80015e4:	3720      	adds	r7, #32
 80015e6:	46bd      	mov	sp, r7
 80015e8:	bd80      	pop	{r7, pc}
 80015ea:	bf00      	nop
 80015ec:	f3af 8000 	nop.w
 80015f0:	1afb8a9d 	.word	0x1afb8a9d
 80015f4:	3f676821 	.word	0x3f676821
 80015f8:	20000698 	.word	0x20000698
 80015fc:	2000069c 	.word	0x2000069c
 8001600:	200006a0 	.word	0x200006a0
 8001604:	43c77dbb 	.word	0x43c77dbb
 8001608:	447a0000 	.word	0x447a0000
 800160c:	20000654 	.word	0x20000654
 8001610:	20000014 	.word	0x20000014
 8001614:	20000650 	.word	0x20000650
 8001618:	2000001c 	.word	0x2000001c
 800161c:	20000020 	.word	0x20000020
 8001620:	200006a4 	.word	0x200006a4
 8001624:	20000018 	.word	0x20000018
 8001628:	20000690 	.word	0x20000690
 800162c:	200006a8 	.word	0x200006a8
 8001630:	20000694 	.word	0x20000694

08001634 <stopEncoders>:
	__HAL_TIM_SET_COUNTER(&htim1, 0);
	__HAL_TIM_SET_COUNTER(&htim2, 0);
	__HAL_TIM_SET_COUNTER(&htim3, 0);
}

void stopEncoders() {
 8001634:	b580      	push	{r7, lr}
 8001636:	af00      	add	r7, sp, #0
	HAL_TIM_Encoder_Stop(&htim1, TIM_CHANNEL_ALL);
 8001638:	213c      	movs	r1, #60	@ 0x3c
 800163a:	4806      	ldr	r0, [pc, #24]	@ (8001654 <stopEncoders+0x20>)
 800163c:	f005 f81a 	bl	8006674 <HAL_TIM_Encoder_Stop>
	HAL_TIM_Encoder_Stop(&htim2, TIM_CHANNEL_ALL);
 8001640:	213c      	movs	r1, #60	@ 0x3c
 8001642:	4805      	ldr	r0, [pc, #20]	@ (8001658 <stopEncoders+0x24>)
 8001644:	f005 f816 	bl	8006674 <HAL_TIM_Encoder_Stop>
	HAL_TIM_Encoder_Stop(&htim3, TIM_CHANNEL_ALL);
 8001648:	213c      	movs	r1, #60	@ 0x3c
 800164a:	4804      	ldr	r0, [pc, #16]	@ (800165c <stopEncoders+0x28>)
 800164c:	f005 f812 	bl	8006674 <HAL_TIM_Encoder_Stop>
}
 8001650:	bf00      	nop
 8001652:	bd80      	pop	{r7, pc}
 8001654:	20000270 	.word	0x20000270
 8001658:	200002b8 	.word	0x200002b8
 800165c:	20000300 	.word	0x20000300

08001660 <startEncoders>:

void startEncoders() {
 8001660:	b580      	push	{r7, lr}
 8001662:	af00      	add	r7, sp, #0
	HAL_TIM_Encoder_Start(&htim1, TIM_CHANNEL_ALL);
 8001664:	213c      	movs	r1, #60	@ 0x3c
 8001666:	4806      	ldr	r0, [pc, #24]	@ (8001680 <startEncoders+0x20>)
 8001668:	f004 ff76 	bl	8006558 <HAL_TIM_Encoder_Start>
	HAL_TIM_Encoder_Start(&htim2, TIM_CHANNEL_ALL);
 800166c:	213c      	movs	r1, #60	@ 0x3c
 800166e:	4805      	ldr	r0, [pc, #20]	@ (8001684 <startEncoders+0x24>)
 8001670:	f004 ff72 	bl	8006558 <HAL_TIM_Encoder_Start>
	HAL_TIM_Encoder_Start(&htim3, TIM_CHANNEL_ALL);
 8001674:	213c      	movs	r1, #60	@ 0x3c
 8001676:	4804      	ldr	r0, [pc, #16]	@ (8001688 <startEncoders+0x28>)
 8001678:	f004 ff6e 	bl	8006558 <HAL_TIM_Encoder_Start>
}
 800167c:	bf00      	nop
 800167e:	bd80      	pop	{r7, pc}
 8001680:	20000270 	.word	0x20000270
 8001684:	200002b8 	.word	0x200002b8
 8001688:	20000300 	.word	0x20000300

0800168c <main>:

/**
 * @brief  The application entry point.
 * @retval int
 */
int main(void) {
 800168c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800168e:	b091      	sub	sp, #68	@ 0x44
 8001690:	af08      	add	r7, sp, #32
	/* USER CODE END 1 */

	/* MCU Configuration--------------------------------------------------------*/

	/* Reset of all peripherals, Initializes the Flash interface and the Systick. */
	HAL_Init();
 8001692:	f001 ffa7 	bl	80035e4 <HAL_Init>
	/* USER CODE BEGIN Init */

	/* USER CODE END Init */

	/* Configure the system clock */
	SystemClock_Config();
 8001696:	f000 fdeb 	bl	8002270 <SystemClock_Config>
	/* USER CODE BEGIN SysInit */

	/* USER CODE END SysInit */

	/* Initialize all configured peripherals */
	MX_GPIO_Init();
 800169a:	f001 fa23 	bl	8002ae4 <MX_GPIO_Init>
	MX_DMA_Init();
 800169e:	f001 fa01 	bl	8002aa4 <MX_DMA_Init>
	MX_USART2_UART_Init();
 80016a2:	f001 f9d5 	bl	8002a50 <MX_USART2_UART_Init>
	MX_UART4_Init();
 80016a6:	f001 f9a9 	bl	80029fc <MX_UART4_Init>
	MX_TIM1_Init();
 80016aa:	f000 fe81 	bl	80023b0 <MX_TIM1_Init>
	MX_TIM8_Init();
 80016ae:	f001 f801 	bl	80026b4 <MX_TIM8_Init>
	MX_I2C1_Init();
 80016b2:	f000 fe4f 	bl	8002354 <MX_I2C1_Init>
	MX_TIM5_Init();
 80016b6:	f000 ff7b 	bl	80025b0 <MX_TIM5_Init>
	MX_TIM10_Init();
 80016ba:	f001 f853 	bl	8002764 <MX_TIM10_Init>
	MX_TIM11_Init();
 80016be:	f001 f89f 	bl	8002800 <MX_TIM11_Init>
	MX_TIM13_Init();
 80016c2:	f001 f94d 	bl	8002960 <MX_TIM13_Init>
	MX_TIM2_Init();
 80016c6:	f000 fecb 	bl	8002460 <MX_TIM2_Init>
	MX_TIM3_Init();
 80016ca:	f000 ff1d 	bl	8002508 <MX_TIM3_Init>
	MX_TIM12_Init();
 80016ce:	f001 f8e5 	bl	800289c <MX_TIM12_Init>
	/* USER CODE BEGIN 2 */
	HAL_UART_Receive_DMA(&huart4, rxbuff, 16);
 80016d2:	2210      	movs	r2, #16
 80016d4:	4979      	ldr	r1, [pc, #484]	@ (80018bc <main+0x230>)
 80016d6:	487a      	ldr	r0, [pc, #488]	@ (80018c0 <main+0x234>)
 80016d8:	f005 fe61 	bl	800739e <HAL_UART_Receive_DMA>
	HAL_TIM_Encoder_Start(&htim1, TIM_CHANNEL_ALL);
 80016dc:	213c      	movs	r1, #60	@ 0x3c
 80016de:	4879      	ldr	r0, [pc, #484]	@ (80018c4 <main+0x238>)
 80016e0:	f004 ff3a 	bl	8006558 <HAL_TIM_Encoder_Start>
	HAL_TIM_Encoder_Start(&htim2, TIM_CHANNEL_ALL);
 80016e4:	213c      	movs	r1, #60	@ 0x3c
 80016e6:	4878      	ldr	r0, [pc, #480]	@ (80018c8 <main+0x23c>)
 80016e8:	f004 ff36 	bl	8006558 <HAL_TIM_Encoder_Start>
	HAL_TIM_Encoder_Start(&htim3, TIM_CHANNEL_ALL);
 80016ec:	213c      	movs	r1, #60	@ 0x3c
 80016ee:	4877      	ldr	r0, [pc, #476]	@ (80018cc <main+0x240>)
 80016f0:	f004 ff32 	bl	8006558 <HAL_TIM_Encoder_Start>
	bno055_assignI2C(&hi2c1);
 80016f4:	4876      	ldr	r0, [pc, #472]	@ (80018d0 <main+0x244>)
 80016f6:	f7ff fcfd 	bl	80010f4 <bno055_assignI2C>
	bno055_setup();
 80016fa:	f7ff fcd3 	bl	80010a4 <bno055_setup>
	bno055_setOperationModeNDOF();
 80016fe:	f7ff fcbe 	bl	800107e <bno055_setOperationModeNDOF>
	while (1) {
		/* USER CODE END WHILE */

		/* USER CODE BEGIN 3 */
		/* ps5 controller */
		lx = (rxbuff[0] & 0x80) ?
 8001702:	4b6e      	ldr	r3, [pc, #440]	@ (80018bc <main+0x230>)
 8001704:	781b      	ldrb	r3, [r3, #0]
 8001706:	b25b      	sxtb	r3, r3
				(int32_t) rxbuff[0] - 256 : (int32_t) rxbuff[0];
 8001708:	2b00      	cmp	r3, #0
 800170a:	da04      	bge.n	8001716 <main+0x8a>
 800170c:	4b6b      	ldr	r3, [pc, #428]	@ (80018bc <main+0x230>)
 800170e:	781b      	ldrb	r3, [r3, #0]
 8001710:	f5a3 7380 	sub.w	r3, r3, #256	@ 0x100
 8001714:	e001      	b.n	800171a <main+0x8e>
 8001716:	4b69      	ldr	r3, [pc, #420]	@ (80018bc <main+0x230>)
 8001718:	781b      	ldrb	r3, [r3, #0]
		lx = (rxbuff[0] & 0x80) ?
 800171a:	4a6e      	ldr	r2, [pc, #440]	@ (80018d4 <main+0x248>)
 800171c:	6013      	str	r3, [r2, #0]
		ly = (rxbuff[1] & 0x80) ?
 800171e:	4b67      	ldr	r3, [pc, #412]	@ (80018bc <main+0x230>)
 8001720:	785b      	ldrb	r3, [r3, #1]
 8001722:	b25b      	sxtb	r3, r3
				(int32_t) rxbuff[1] - 256 : (int32_t) rxbuff[1];
 8001724:	2b00      	cmp	r3, #0
 8001726:	da04      	bge.n	8001732 <main+0xa6>
 8001728:	4b64      	ldr	r3, [pc, #400]	@ (80018bc <main+0x230>)
 800172a:	785b      	ldrb	r3, [r3, #1]
 800172c:	f5a3 7380 	sub.w	r3, r3, #256	@ 0x100
 8001730:	e001      	b.n	8001736 <main+0xaa>
 8001732:	4b62      	ldr	r3, [pc, #392]	@ (80018bc <main+0x230>)
 8001734:	785b      	ldrb	r3, [r3, #1]
		ly = (rxbuff[1] & 0x80) ?
 8001736:	4a68      	ldr	r2, [pc, #416]	@ (80018d8 <main+0x24c>)
 8001738:	6013      	str	r3, [r2, #0]
		rx = (rxbuff[2] & 0x80) ?
 800173a:	4b60      	ldr	r3, [pc, #384]	@ (80018bc <main+0x230>)
 800173c:	789b      	ldrb	r3, [r3, #2]
 800173e:	b25b      	sxtb	r3, r3
				(int32_t) rxbuff[2] - 256 : (int32_t) rxbuff[2];
 8001740:	2b00      	cmp	r3, #0
 8001742:	da04      	bge.n	800174e <main+0xc2>
 8001744:	4b5d      	ldr	r3, [pc, #372]	@ (80018bc <main+0x230>)
 8001746:	789b      	ldrb	r3, [r3, #2]
 8001748:	f5a3 7380 	sub.w	r3, r3, #256	@ 0x100
 800174c:	e001      	b.n	8001752 <main+0xc6>
 800174e:	4b5b      	ldr	r3, [pc, #364]	@ (80018bc <main+0x230>)
 8001750:	789b      	ldrb	r3, [r3, #2]
		rx = (rxbuff[2] & 0x80) ?
 8001752:	4a62      	ldr	r2, [pc, #392]	@ (80018dc <main+0x250>)
 8001754:	6013      	str	r3, [r2, #0]
		ry = (rxbuff[3] & 0x80) ?
 8001756:	4b59      	ldr	r3, [pc, #356]	@ (80018bc <main+0x230>)
 8001758:	78db      	ldrb	r3, [r3, #3]
 800175a:	b25b      	sxtb	r3, r3
				(int32_t) rxbuff[3] - 256 : (int32_t) rxbuff[3];
 800175c:	2b00      	cmp	r3, #0
 800175e:	da04      	bge.n	800176a <main+0xde>
 8001760:	4b56      	ldr	r3, [pc, #344]	@ (80018bc <main+0x230>)
 8001762:	78db      	ldrb	r3, [r3, #3]
 8001764:	f5a3 7380 	sub.w	r3, r3, #256	@ 0x100
 8001768:	e001      	b.n	800176e <main+0xe2>
 800176a:	4b54      	ldr	r3, [pc, #336]	@ (80018bc <main+0x230>)
 800176c:	78db      	ldrb	r3, [r3, #3]
		ry = (rxbuff[3] & 0x80) ?
 800176e:	4a5c      	ldr	r2, [pc, #368]	@ (80018e0 <main+0x254>)
 8001770:	6013      	str	r3, [r2, #0]
		cro = (rxbuff[4] & 0x80) ?
 8001772:	4b52      	ldr	r3, [pc, #328]	@ (80018bc <main+0x230>)
 8001774:	791b      	ldrb	r3, [r3, #4]
 8001776:	b25b      	sxtb	r3, r3
				(int32_t) rxbuff[4] - 256 : (int32_t) rxbuff[4];
 8001778:	2b00      	cmp	r3, #0
 800177a:	da04      	bge.n	8001786 <main+0xfa>
 800177c:	4b4f      	ldr	r3, [pc, #316]	@ (80018bc <main+0x230>)
 800177e:	791b      	ldrb	r3, [r3, #4]
 8001780:	f5a3 7380 	sub.w	r3, r3, #256	@ 0x100
 8001784:	e001      	b.n	800178a <main+0xfe>
 8001786:	4b4d      	ldr	r3, [pc, #308]	@ (80018bc <main+0x230>)
 8001788:	791b      	ldrb	r3, [r3, #4]
		cro = (rxbuff[4] & 0x80) ?
 800178a:	4a56      	ldr	r2, [pc, #344]	@ (80018e4 <main+0x258>)
 800178c:	6013      	str	r3, [r2, #0]
		squ = (rxbuff[5] & 0x80) ?
 800178e:	4b4b      	ldr	r3, [pc, #300]	@ (80018bc <main+0x230>)
 8001790:	795b      	ldrb	r3, [r3, #5]
 8001792:	b25b      	sxtb	r3, r3
				(int32_t) rxbuff[5] - 256 : (int32_t) rxbuff[5];
 8001794:	2b00      	cmp	r3, #0
 8001796:	da04      	bge.n	80017a2 <main+0x116>
 8001798:	4b48      	ldr	r3, [pc, #288]	@ (80018bc <main+0x230>)
 800179a:	795b      	ldrb	r3, [r3, #5]
 800179c:	f5a3 7380 	sub.w	r3, r3, #256	@ 0x100
 80017a0:	e001      	b.n	80017a6 <main+0x11a>
 80017a2:	4b46      	ldr	r3, [pc, #280]	@ (80018bc <main+0x230>)
 80017a4:	795b      	ldrb	r3, [r3, #5]
		squ = (rxbuff[5] & 0x80) ?
 80017a6:	4a50      	ldr	r2, [pc, #320]	@ (80018e8 <main+0x25c>)
 80017a8:	6013      	str	r3, [r2, #0]
		tri = (rxbuff[6] & 0x80) ?
 80017aa:	4b44      	ldr	r3, [pc, #272]	@ (80018bc <main+0x230>)
 80017ac:	799b      	ldrb	r3, [r3, #6]
 80017ae:	b25b      	sxtb	r3, r3
				(int32_t) rxbuff[6] - 256 : (int32_t) rxbuff[6];
 80017b0:	2b00      	cmp	r3, #0
 80017b2:	da04      	bge.n	80017be <main+0x132>
 80017b4:	4b41      	ldr	r3, [pc, #260]	@ (80018bc <main+0x230>)
 80017b6:	799b      	ldrb	r3, [r3, #6]
 80017b8:	f5a3 7380 	sub.w	r3, r3, #256	@ 0x100
 80017bc:	e001      	b.n	80017c2 <main+0x136>
 80017be:	4b3f      	ldr	r3, [pc, #252]	@ (80018bc <main+0x230>)
 80017c0:	799b      	ldrb	r3, [r3, #6]
		tri = (rxbuff[6] & 0x80) ?
 80017c2:	4a4a      	ldr	r2, [pc, #296]	@ (80018ec <main+0x260>)
 80017c4:	6013      	str	r3, [r2, #0]
		cir = (rxbuff[7] & 0x80) ?
 80017c6:	4b3d      	ldr	r3, [pc, #244]	@ (80018bc <main+0x230>)
 80017c8:	79db      	ldrb	r3, [r3, #7]
 80017ca:	b25b      	sxtb	r3, r3
				(int32_t) rxbuff[7] - 256 : (int32_t) rxbuff[7];
 80017cc:	2b00      	cmp	r3, #0
 80017ce:	da04      	bge.n	80017da <main+0x14e>
 80017d0:	4b3a      	ldr	r3, [pc, #232]	@ (80018bc <main+0x230>)
 80017d2:	79db      	ldrb	r3, [r3, #7]
 80017d4:	f5a3 7380 	sub.w	r3, r3, #256	@ 0x100
 80017d8:	e001      	b.n	80017de <main+0x152>
 80017da:	4b38      	ldr	r3, [pc, #224]	@ (80018bc <main+0x230>)
 80017dc:	79db      	ldrb	r3, [r3, #7]
		cir = (rxbuff[7] & 0x80) ?
 80017de:	4a44      	ldr	r2, [pc, #272]	@ (80018f0 <main+0x264>)
 80017e0:	6013      	str	r3, [r2, #0]
		up = (rxbuff[8] & 0x80) ?
 80017e2:	4b36      	ldr	r3, [pc, #216]	@ (80018bc <main+0x230>)
 80017e4:	7a1b      	ldrb	r3, [r3, #8]
 80017e6:	b25b      	sxtb	r3, r3
				(int32_t) rxbuff[8] - 256 : (int32_t) rxbuff[8];
 80017e8:	2b00      	cmp	r3, #0
 80017ea:	da04      	bge.n	80017f6 <main+0x16a>
 80017ec:	4b33      	ldr	r3, [pc, #204]	@ (80018bc <main+0x230>)
 80017ee:	7a1b      	ldrb	r3, [r3, #8]
 80017f0:	f5a3 7380 	sub.w	r3, r3, #256	@ 0x100
 80017f4:	e001      	b.n	80017fa <main+0x16e>
 80017f6:	4b31      	ldr	r3, [pc, #196]	@ (80018bc <main+0x230>)
 80017f8:	7a1b      	ldrb	r3, [r3, #8]
		up = (rxbuff[8] & 0x80) ?
 80017fa:	4a3e      	ldr	r2, [pc, #248]	@ (80018f4 <main+0x268>)
 80017fc:	6013      	str	r3, [r2, #0]
		down = (rxbuff[9] & 0x80) ?
 80017fe:	4b2f      	ldr	r3, [pc, #188]	@ (80018bc <main+0x230>)
 8001800:	7a5b      	ldrb	r3, [r3, #9]
 8001802:	b25b      	sxtb	r3, r3
				(int32_t) rxbuff[9] - 256 : (int32_t) rxbuff[9];
 8001804:	2b00      	cmp	r3, #0
 8001806:	da04      	bge.n	8001812 <main+0x186>
 8001808:	4b2c      	ldr	r3, [pc, #176]	@ (80018bc <main+0x230>)
 800180a:	7a5b      	ldrb	r3, [r3, #9]
 800180c:	f5a3 7380 	sub.w	r3, r3, #256	@ 0x100
 8001810:	e001      	b.n	8001816 <main+0x18a>
 8001812:	4b2a      	ldr	r3, [pc, #168]	@ (80018bc <main+0x230>)
 8001814:	7a5b      	ldrb	r3, [r3, #9]
		down = (rxbuff[9] & 0x80) ?
 8001816:	4a38      	ldr	r2, [pc, #224]	@ (80018f8 <main+0x26c>)
 8001818:	6013      	str	r3, [r2, #0]
		left = (rxbuff[10] & 0x80) ?
 800181a:	4b28      	ldr	r3, [pc, #160]	@ (80018bc <main+0x230>)
 800181c:	7a9b      	ldrb	r3, [r3, #10]
 800181e:	b25b      	sxtb	r3, r3
				(int32_t) rxbuff[10] - 256 : (int32_t) rxbuff[10];
 8001820:	2b00      	cmp	r3, #0
 8001822:	da04      	bge.n	800182e <main+0x1a2>
 8001824:	4b25      	ldr	r3, [pc, #148]	@ (80018bc <main+0x230>)
 8001826:	7a9b      	ldrb	r3, [r3, #10]
 8001828:	f5a3 7380 	sub.w	r3, r3, #256	@ 0x100
 800182c:	e001      	b.n	8001832 <main+0x1a6>
 800182e:	4b23      	ldr	r3, [pc, #140]	@ (80018bc <main+0x230>)
 8001830:	7a9b      	ldrb	r3, [r3, #10]
		left = (rxbuff[10] & 0x80) ?
 8001832:	4a32      	ldr	r2, [pc, #200]	@ (80018fc <main+0x270>)
 8001834:	6013      	str	r3, [r2, #0]
		right = (rxbuff[11] & 0x80) ?
 8001836:	4b21      	ldr	r3, [pc, #132]	@ (80018bc <main+0x230>)
 8001838:	7adb      	ldrb	r3, [r3, #11]
 800183a:	b25b      	sxtb	r3, r3
				(int32_t) rxbuff[11] - 256 : (int32_t) rxbuff[11];
 800183c:	2b00      	cmp	r3, #0
 800183e:	da04      	bge.n	800184a <main+0x1be>
 8001840:	4b1e      	ldr	r3, [pc, #120]	@ (80018bc <main+0x230>)
 8001842:	7adb      	ldrb	r3, [r3, #11]
 8001844:	f5a3 7380 	sub.w	r3, r3, #256	@ 0x100
 8001848:	e001      	b.n	800184e <main+0x1c2>
 800184a:	4b1c      	ldr	r3, [pc, #112]	@ (80018bc <main+0x230>)
 800184c:	7adb      	ldrb	r3, [r3, #11]
		right = (rxbuff[11] & 0x80) ?
 800184e:	4a2c      	ldr	r2, [pc, #176]	@ (8001900 <main+0x274>)
 8001850:	6013      	str	r3, [r2, #0]
		ll1 = (rxbuff[12] & 0x80) ?
 8001852:	4b1a      	ldr	r3, [pc, #104]	@ (80018bc <main+0x230>)
 8001854:	7b1b      	ldrb	r3, [r3, #12]
 8001856:	b25b      	sxtb	r3, r3
				(int32_t) rxbuff[12] - 256 : (int32_t) rxbuff[12];
 8001858:	2b00      	cmp	r3, #0
 800185a:	da04      	bge.n	8001866 <main+0x1da>
 800185c:	4b17      	ldr	r3, [pc, #92]	@ (80018bc <main+0x230>)
 800185e:	7b1b      	ldrb	r3, [r3, #12]
 8001860:	f5a3 7380 	sub.w	r3, r3, #256	@ 0x100
 8001864:	e001      	b.n	800186a <main+0x1de>
 8001866:	4b15      	ldr	r3, [pc, #84]	@ (80018bc <main+0x230>)
 8001868:	7b1b      	ldrb	r3, [r3, #12]
		ll1 = (rxbuff[12] & 0x80) ?
 800186a:	4a26      	ldr	r2, [pc, #152]	@ (8001904 <main+0x278>)
 800186c:	6013      	str	r3, [r2, #0]
		ll2 = (rxbuff[13] & 0x80) ?
 800186e:	4b13      	ldr	r3, [pc, #76]	@ (80018bc <main+0x230>)
 8001870:	7b5b      	ldrb	r3, [r3, #13]
 8001872:	b25b      	sxtb	r3, r3
				(int32_t) rxbuff[13] - 256 : (int32_t) rxbuff[13];
 8001874:	2b00      	cmp	r3, #0
 8001876:	da04      	bge.n	8001882 <main+0x1f6>
 8001878:	4b10      	ldr	r3, [pc, #64]	@ (80018bc <main+0x230>)
 800187a:	7b5b      	ldrb	r3, [r3, #13]
 800187c:	f5a3 7380 	sub.w	r3, r3, #256	@ 0x100
 8001880:	e001      	b.n	8001886 <main+0x1fa>
 8001882:	4b0e      	ldr	r3, [pc, #56]	@ (80018bc <main+0x230>)
 8001884:	7b5b      	ldrb	r3, [r3, #13]
		ll2 = (rxbuff[13] & 0x80) ?
 8001886:	4a20      	ldr	r2, [pc, #128]	@ (8001908 <main+0x27c>)
 8001888:	6013      	str	r3, [r2, #0]
		rr1 = (rxbuff[14] & 0x80) ?
 800188a:	4b0c      	ldr	r3, [pc, #48]	@ (80018bc <main+0x230>)
 800188c:	7b9b      	ldrb	r3, [r3, #14]
 800188e:	b25b      	sxtb	r3, r3
				(int32_t) rxbuff[14] - 256 : (int32_t) rxbuff[14];
 8001890:	2b00      	cmp	r3, #0
 8001892:	da04      	bge.n	800189e <main+0x212>
 8001894:	4b09      	ldr	r3, [pc, #36]	@ (80018bc <main+0x230>)
 8001896:	7b9b      	ldrb	r3, [r3, #14]
 8001898:	f5a3 7380 	sub.w	r3, r3, #256	@ 0x100
 800189c:	e001      	b.n	80018a2 <main+0x216>
 800189e:	4b07      	ldr	r3, [pc, #28]	@ (80018bc <main+0x230>)
 80018a0:	7b9b      	ldrb	r3, [r3, #14]
		rr1 = (rxbuff[14] & 0x80) ?
 80018a2:	4a1a      	ldr	r2, [pc, #104]	@ (800190c <main+0x280>)
 80018a4:	6013      	str	r3, [r2, #0]
		rr2 = (rxbuff[15] & 0x80) ?
 80018a6:	4b05      	ldr	r3, [pc, #20]	@ (80018bc <main+0x230>)
 80018a8:	7bdb      	ldrb	r3, [r3, #15]
 80018aa:	b25b      	sxtb	r3, r3
				(int32_t) rxbuff[15] - 256 : (int32_t) rxbuff[15];
 80018ac:	2b00      	cmp	r3, #0
 80018ae:	da2f      	bge.n	8001910 <main+0x284>
 80018b0:	4b02      	ldr	r3, [pc, #8]	@ (80018bc <main+0x230>)
 80018b2:	7bdb      	ldrb	r3, [r3, #15]
 80018b4:	f5a3 7380 	sub.w	r3, r3, #256	@ 0x100
 80018b8:	e02c      	b.n	8001914 <main+0x288>
 80018ba:	bf00      	nop
 80018bc:	20000640 	.word	0x20000640
 80018c0:	200004f8 	.word	0x200004f8
 80018c4:	20000270 	.word	0x20000270
 80018c8:	200002b8 	.word	0x200002b8
 80018cc:	20000300 	.word	0x20000300
 80018d0:	2000021c 	.word	0x2000021c
 80018d4:	20000650 	.word	0x20000650
 80018d8:	20000654 	.word	0x20000654
 80018dc:	20000658 	.word	0x20000658
 80018e0:	2000065c 	.word	0x2000065c
 80018e4:	20000660 	.word	0x20000660
 80018e8:	20000664 	.word	0x20000664
 80018ec:	20000668 	.word	0x20000668
 80018f0:	2000066c 	.word	0x2000066c
 80018f4:	20000670 	.word	0x20000670
 80018f8:	20000674 	.word	0x20000674
 80018fc:	20000678 	.word	0x20000678
 8001900:	2000067c 	.word	0x2000067c
 8001904:	20000680 	.word	0x20000680
 8001908:	20000688 	.word	0x20000688
 800190c:	20000684 	.word	0x20000684
 8001910:	4b79      	ldr	r3, [pc, #484]	@ (8001af8 <main+0x46c>)
 8001912:	7bdb      	ldrb	r3, [r3, #15]
		rr2 = (rxbuff[15] & 0x80) ?
 8001914:	4a79      	ldr	r2, [pc, #484]	@ (8001afc <main+0x470>)
 8001916:	6013      	str	r3, [r2, #0]

		//		printf("Received Integers: %ld %ld %ld %ld %ld %ld %ld %ld %ld %ld\r\n",
		//				lx, ly, rx, ry, cro, squ, tri, cir, ll1, rr1);
		printf("Received Integers: %ld %ld %ld %ld %ld %ld %ld %ld %d %d\r\n", lx,
 8001918:	4b79      	ldr	r3, [pc, #484]	@ (8001b00 <main+0x474>)
 800191a:	681b      	ldr	r3, [r3, #0]
 800191c:	60fb      	str	r3, [r7, #12]
 800191e:	4b79      	ldr	r3, [pc, #484]	@ (8001b04 <main+0x478>)
 8001920:	681a      	ldr	r2, [r3, #0]
 8001922:	60ba      	str	r2, [r7, #8]
 8001924:	4b78      	ldr	r3, [pc, #480]	@ (8001b08 <main+0x47c>)
 8001926:	6818      	ldr	r0, [r3, #0]
 8001928:	6078      	str	r0, [r7, #4]
 800192a:	4b78      	ldr	r3, [pc, #480]	@ (8001b0c <main+0x480>)
 800192c:	681b      	ldr	r3, [r3, #0]
 800192e:	4a78      	ldr	r2, [pc, #480]	@ (8001b10 <main+0x484>)
 8001930:	6812      	ldr	r2, [r2, #0]
 8001932:	4978      	ldr	r1, [pc, #480]	@ (8001b14 <main+0x488>)
 8001934:	6809      	ldr	r1, [r1, #0]
 8001936:	4878      	ldr	r0, [pc, #480]	@ (8001b18 <main+0x48c>)
 8001938:	6800      	ldr	r0, [r0, #0]
 800193a:	4c78      	ldr	r4, [pc, #480]	@ (8001b1c <main+0x490>)
 800193c:	6824      	ldr	r4, [r4, #0]
 800193e:	4d78      	ldr	r5, [pc, #480]	@ (8001b20 <main+0x494>)
 8001940:	682d      	ldr	r5, [r5, #0]
 8001942:	4e78      	ldr	r6, [pc, #480]	@ (8001b24 <main+0x498>)
 8001944:	6836      	ldr	r6, [r6, #0]
 8001946:	9606      	str	r6, [sp, #24]
 8001948:	9505      	str	r5, [sp, #20]
 800194a:	9404      	str	r4, [sp, #16]
 800194c:	9003      	str	r0, [sp, #12]
 800194e:	9102      	str	r1, [sp, #8]
 8001950:	9201      	str	r2, [sp, #4]
 8001952:	9300      	str	r3, [sp, #0]
 8001954:	687b      	ldr	r3, [r7, #4]
 8001956:	68ba      	ldr	r2, [r7, #8]
 8001958:	68f9      	ldr	r1, [r7, #12]
 800195a:	4873      	ldr	r0, [pc, #460]	@ (8001b28 <main+0x49c>)
 800195c:	f007 fd5a 	bl	8009414 <iprintf>
				ly, rx, ry, cro, squ, tri, cir, pneumatic_open, drib_speed);

		/* 3 encoders */
		uint16_t raw_counter1 = __HAL_TIM_GET_COUNTER(&htim1);
 8001960:	4b72      	ldr	r3, [pc, #456]	@ (8001b2c <main+0x4a0>)
 8001962:	681b      	ldr	r3, [r3, #0]
 8001964:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8001966:	83bb      	strh	r3, [r7, #28]
		uint32_t raw_counter2 = __HAL_TIM_GET_COUNTER(&htim2);
 8001968:	4b71      	ldr	r3, [pc, #452]	@ (8001b30 <main+0x4a4>)
 800196a:	681b      	ldr	r3, [r3, #0]
 800196c:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800196e:	61bb      	str	r3, [r7, #24]
		uint16_t raw_counter3 = __HAL_TIM_GET_COUNTER(&htim3);
 8001970:	4b70      	ldr	r3, [pc, #448]	@ (8001b34 <main+0x4a8>)
 8001972:	681b      	ldr	r3, [r3, #0]
 8001974:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8001976:	82fb      	strh	r3, [r7, #22]

		// Convert to signed values
		signed_counter1 =
				(raw_counter1 < 32768) ?
						(int16_t) raw_counter1 :
 8001978:	f9b7 201c 	ldrsh.w	r2, [r7, #28]
		signed_counter1 =
 800197c:	4b6e      	ldr	r3, [pc, #440]	@ (8001b38 <main+0x4ac>)
 800197e:	801a      	strh	r2, [r3, #0]
						(int16_t) (raw_counter1 - 65536);
		signed_counter2 =
				(raw_counter2 < 2147483648) ?
						(int32_t) raw_counter2 :
 8001980:	69bb      	ldr	r3, [r7, #24]
		signed_counter2 =
 8001982:	4a6e      	ldr	r2, [pc, #440]	@ (8001b3c <main+0x4b0>)
 8001984:	6013      	str	r3, [r2, #0]
						(int32_t) (raw_counter2 - 4294967296);
		signed_counter3 =
				(raw_counter3 < 32768) ?
						(int16_t) raw_counter3 :
 8001986:	f9b7 2016 	ldrsh.w	r2, [r7, #22]
		signed_counter3 =
 800198a:	4b6d      	ldr	r3, [pc, #436]	@ (8001b40 <main+0x4b4>)
 800198c:	801a      	strh	r2, [r3, #0]
//		printf("Encoder position: %d %d %d X: %.2f Y: %.2f\r\n",
//				signed_counter1, signed_counter2, signed_counter3, x, y);
		/* 3 wheel */
		uint16_t dutycycle;

		dutycycle = 0;
 800198e:	2300      	movs	r3, #0
 8001990:	82bb      	strh	r3, [r7, #20]
		MovementState current_state = STOP;
 8001992:	2300      	movs	r3, #0
 8001994:	77fb      	strb	r3, [r7, #31]
		/* chassis */
		//motors stop
		if (ly >= Buff2 && ly <= Buff1 && lx >= Buff2 && lx <= Buff1
 8001996:	4b5b      	ldr	r3, [pc, #364]	@ (8001b04 <main+0x478>)
 8001998:	681a      	ldr	r2, [r3, #0]
 800199a:	4b6a      	ldr	r3, [pc, #424]	@ (8001b44 <main+0x4b8>)
 800199c:	681b      	ldr	r3, [r3, #0]
 800199e:	429a      	cmp	r2, r3
 80019a0:	db35      	blt.n	8001a0e <main+0x382>
 80019a2:	4b58      	ldr	r3, [pc, #352]	@ (8001b04 <main+0x478>)
 80019a4:	681a      	ldr	r2, [r3, #0]
 80019a6:	4b68      	ldr	r3, [pc, #416]	@ (8001b48 <main+0x4bc>)
 80019a8:	681b      	ldr	r3, [r3, #0]
 80019aa:	429a      	cmp	r2, r3
 80019ac:	dc2f      	bgt.n	8001a0e <main+0x382>
 80019ae:	4b54      	ldr	r3, [pc, #336]	@ (8001b00 <main+0x474>)
 80019b0:	681a      	ldr	r2, [r3, #0]
 80019b2:	4b64      	ldr	r3, [pc, #400]	@ (8001b44 <main+0x4b8>)
 80019b4:	681b      	ldr	r3, [r3, #0]
 80019b6:	429a      	cmp	r2, r3
 80019b8:	db29      	blt.n	8001a0e <main+0x382>
 80019ba:	4b51      	ldr	r3, [pc, #324]	@ (8001b00 <main+0x474>)
 80019bc:	681a      	ldr	r2, [r3, #0]
 80019be:	4b62      	ldr	r3, [pc, #392]	@ (8001b48 <main+0x4bc>)
 80019c0:	681b      	ldr	r3, [r3, #0]
 80019c2:	429a      	cmp	r2, r3
 80019c4:	dc23      	bgt.n	8001a0e <main+0x382>
				&& rx >= Buff2 && rx <= Buff1) {
 80019c6:	4b50      	ldr	r3, [pc, #320]	@ (8001b08 <main+0x47c>)
 80019c8:	681a      	ldr	r2, [r3, #0]
 80019ca:	4b5e      	ldr	r3, [pc, #376]	@ (8001b44 <main+0x4b8>)
 80019cc:	681b      	ldr	r3, [r3, #0]
 80019ce:	429a      	cmp	r2, r3
 80019d0:	db1d      	blt.n	8001a0e <main+0x382>
 80019d2:	4b4d      	ldr	r3, [pc, #308]	@ (8001b08 <main+0x47c>)
 80019d4:	681a      	ldr	r2, [r3, #0]
 80019d6:	4b5c      	ldr	r3, [pc, #368]	@ (8001b48 <main+0x4bc>)
 80019d8:	681b      	ldr	r3, [r3, #0]
 80019da:	429a      	cmp	r2, r3
 80019dc:	dc17      	bgt.n	8001a0e <main+0x382>

			dutycycle = 0;
 80019de:	2300      	movs	r3, #0
 80019e0:	82bb      	strh	r3, [r7, #20]

			TIM12->CCR1 = dutycycle;
 80019e2:	4a5a      	ldr	r2, [pc, #360]	@ (8001b4c <main+0x4c0>)
 80019e4:	8abb      	ldrh	r3, [r7, #20]
 80019e6:	6353      	str	r3, [r2, #52]	@ 0x34
			TIM10->CCR1 = dutycycle;
 80019e8:	4a59      	ldr	r2, [pc, #356]	@ (8001b50 <main+0x4c4>)
 80019ea:	8abb      	ldrh	r3, [r7, #20]
 80019ec:	6353      	str	r3, [r2, #52]	@ 0x34
			TIM11->CCR1 = dutycycle;
 80019ee:	4a59      	ldr	r2, [pc, #356]	@ (8001b54 <main+0x4c8>)
 80019f0:	8abb      	ldrh	r3, [r7, #20]
 80019f2:	6353      	str	r3, [r2, #52]	@ 0x34
			HAL_TIM_PWM_Start(&htim12, TIM_CHANNEL_1);
 80019f4:	2100      	movs	r1, #0
 80019f6:	4858      	ldr	r0, [pc, #352]	@ (8001b58 <main+0x4cc>)
 80019f8:	f004 fc40 	bl	800627c <HAL_TIM_PWM_Start>
			HAL_TIM_PWM_Start(&htim10, TIM_CHANNEL_1);
 80019fc:	2100      	movs	r1, #0
 80019fe:	4857      	ldr	r0, [pc, #348]	@ (8001b5c <main+0x4d0>)
 8001a00:	f004 fc3c 	bl	800627c <HAL_TIM_PWM_Start>
			HAL_TIM_PWM_Start(&htim11, TIM_CHANNEL_1);
 8001a04:	2100      	movs	r1, #0
 8001a06:	4856      	ldr	r0, [pc, #344]	@ (8001b60 <main+0x4d4>)
 8001a08:	f004 fc38 	bl	800627c <HAL_TIM_PWM_Start>
 8001a0c:	e21f      	b.n	8001e4e <main+0x7c2>

		}

		//	  	//forward

		else if (ly >= Buff1 && (lx <= BuffP && lx >= BuffN))
 8001a0e:	4b3d      	ldr	r3, [pc, #244]	@ (8001b04 <main+0x478>)
 8001a10:	681a      	ldr	r2, [r3, #0]
 8001a12:	4b4d      	ldr	r3, [pc, #308]	@ (8001b48 <main+0x4bc>)
 8001a14:	681b      	ldr	r3, [r3, #0]
 8001a16:	429a      	cmp	r2, r3
 8001a18:	db33      	blt.n	8001a82 <main+0x3f6>
 8001a1a:	4b39      	ldr	r3, [pc, #228]	@ (8001b00 <main+0x474>)
 8001a1c:	681a      	ldr	r2, [r3, #0]
 8001a1e:	4b51      	ldr	r3, [pc, #324]	@ (8001b64 <main+0x4d8>)
 8001a20:	681b      	ldr	r3, [r3, #0]
 8001a22:	429a      	cmp	r2, r3
 8001a24:	dc2d      	bgt.n	8001a82 <main+0x3f6>
 8001a26:	4b36      	ldr	r3, [pc, #216]	@ (8001b00 <main+0x474>)
 8001a28:	681a      	ldr	r2, [r3, #0]
 8001a2a:	4b4f      	ldr	r3, [pc, #316]	@ (8001b68 <main+0x4dc>)
 8001a2c:	681b      	ldr	r3, [r3, #0]
 8001a2e:	429a      	cmp	r2, r3
 8001a30:	db27      	blt.n	8001a82 <main+0x3f6>

		{

			dutycycle = map(ly, Buff1, 127, 0, fast);
 8001a32:	4b34      	ldr	r3, [pc, #208]	@ (8001b04 <main+0x478>)
 8001a34:	6818      	ldr	r0, [r3, #0]
 8001a36:	4b44      	ldr	r3, [pc, #272]	@ (8001b48 <main+0x4bc>)
 8001a38:	6819      	ldr	r1, [r3, #0]
 8001a3a:	4b4c      	ldr	r3, [pc, #304]	@ (8001b6c <main+0x4e0>)
 8001a3c:	681b      	ldr	r3, [r3, #0]
 8001a3e:	9300      	str	r3, [sp, #0]
 8001a40:	2300      	movs	r3, #0
 8001a42:	227f      	movs	r2, #127	@ 0x7f
 8001a44:	f7ff fc92 	bl	800136c <map>
 8001a48:	4603      	mov	r3, r0
 8001a4a:	82bb      	strh	r3, [r7, #20]

			TIM10->CCR1 = dutycycle;
 8001a4c:	4a40      	ldr	r2, [pc, #256]	@ (8001b50 <main+0x4c4>)
 8001a4e:	8abb      	ldrh	r3, [r7, #20]
 8001a50:	6353      	str	r3, [r2, #52]	@ 0x34
			TIM11->CCR1 = dutycycle;
 8001a52:	4a40      	ldr	r2, [pc, #256]	@ (8001b54 <main+0x4c8>)
 8001a54:	8abb      	ldrh	r3, [r7, #20]
 8001a56:	6353      	str	r3, [r2, #52]	@ 0x34
			HAL_TIM_PWM_Start(&htim10, TIM_CHANNEL_1);
 8001a58:	2100      	movs	r1, #0
 8001a5a:	4840      	ldr	r0, [pc, #256]	@ (8001b5c <main+0x4d0>)
 8001a5c:	f004 fc0e 	bl	800627c <HAL_TIM_PWM_Start>
			HAL_TIM_PWM_Start(&htim11, TIM_CHANNEL_1);
 8001a60:	2100      	movs	r1, #0
 8001a62:	483f      	ldr	r0, [pc, #252]	@ (8001b60 <main+0x4d4>)
 8001a64:	f004 fc0a 	bl	800627c <HAL_TIM_PWM_Start>

//			HAL_GPIO_WritePin(GPIOC, GPIO_PIN_0, GPIO_PIN_RESET);

			HAL_GPIO_WritePin(GPIOC, GPIO_PIN_1, GPIO_PIN_RESET);
 8001a68:	2200      	movs	r2, #0
 8001a6a:	2102      	movs	r1, #2
 8001a6c:	4840      	ldr	r0, [pc, #256]	@ (8001b70 <main+0x4e4>)
 8001a6e:	f002 fcf7 	bl	8004460 <HAL_GPIO_WritePin>

			HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001a72:	2201      	movs	r2, #1
 8001a74:	2104      	movs	r1, #4
 8001a76:	483e      	ldr	r0, [pc, #248]	@ (8001b70 <main+0x4e4>)
 8001a78:	f002 fcf2 	bl	8004460 <HAL_GPIO_WritePin>
			current_state = FORWARD;
 8001a7c:	2301      	movs	r3, #1
 8001a7e:	77fb      	strb	r3, [r7, #31]
 8001a80:	e1e5      	b.n	8001e4e <main+0x7c2>

		}

		// backward

		else if (ly <= Buff2 && (lx <= BuffP && lx >= BuffN))
 8001a82:	4b20      	ldr	r3, [pc, #128]	@ (8001b04 <main+0x478>)
 8001a84:	681a      	ldr	r2, [r3, #0]
 8001a86:	4b2f      	ldr	r3, [pc, #188]	@ (8001b44 <main+0x4b8>)
 8001a88:	681b      	ldr	r3, [r3, #0]
 8001a8a:	429a      	cmp	r2, r3
 8001a8c:	dc72      	bgt.n	8001b74 <main+0x4e8>
 8001a8e:	4b1c      	ldr	r3, [pc, #112]	@ (8001b00 <main+0x474>)
 8001a90:	681a      	ldr	r2, [r3, #0]
 8001a92:	4b34      	ldr	r3, [pc, #208]	@ (8001b64 <main+0x4d8>)
 8001a94:	681b      	ldr	r3, [r3, #0]
 8001a96:	429a      	cmp	r2, r3
 8001a98:	dc6c      	bgt.n	8001b74 <main+0x4e8>
 8001a9a:	4b19      	ldr	r3, [pc, #100]	@ (8001b00 <main+0x474>)
 8001a9c:	681a      	ldr	r2, [r3, #0]
 8001a9e:	4b32      	ldr	r3, [pc, #200]	@ (8001b68 <main+0x4dc>)
 8001aa0:	681b      	ldr	r3, [r3, #0]
 8001aa2:	429a      	cmp	r2, r3
 8001aa4:	db66      	blt.n	8001b74 <main+0x4e8>

		{

			dutycycle = map(ly, -128, Buff2, fast, 0);
 8001aa6:	4b17      	ldr	r3, [pc, #92]	@ (8001b04 <main+0x478>)
 8001aa8:	6818      	ldr	r0, [r3, #0]
 8001aaa:	4b26      	ldr	r3, [pc, #152]	@ (8001b44 <main+0x4b8>)
 8001aac:	681a      	ldr	r2, [r3, #0]
 8001aae:	4b2f      	ldr	r3, [pc, #188]	@ (8001b6c <main+0x4e0>)
 8001ab0:	681b      	ldr	r3, [r3, #0]
 8001ab2:	2100      	movs	r1, #0
 8001ab4:	9100      	str	r1, [sp, #0]
 8001ab6:	f06f 017f 	mvn.w	r1, #127	@ 0x7f
 8001aba:	f7ff fc57 	bl	800136c <map>
 8001abe:	4603      	mov	r3, r0
 8001ac0:	82bb      	strh	r3, [r7, #20]

			TIM10->CCR1 = dutycycle;
 8001ac2:	4a23      	ldr	r2, [pc, #140]	@ (8001b50 <main+0x4c4>)
 8001ac4:	8abb      	ldrh	r3, [r7, #20]
 8001ac6:	6353      	str	r3, [r2, #52]	@ 0x34
			TIM11->CCR1 = dutycycle;
 8001ac8:	4a22      	ldr	r2, [pc, #136]	@ (8001b54 <main+0x4c8>)
 8001aca:	8abb      	ldrh	r3, [r7, #20]
 8001acc:	6353      	str	r3, [r2, #52]	@ 0x34
			HAL_TIM_PWM_Start(&htim10, TIM_CHANNEL_1);
 8001ace:	2100      	movs	r1, #0
 8001ad0:	4822      	ldr	r0, [pc, #136]	@ (8001b5c <main+0x4d0>)
 8001ad2:	f004 fbd3 	bl	800627c <HAL_TIM_PWM_Start>
			HAL_TIM_PWM_Start(&htim11, TIM_CHANNEL_1);
 8001ad6:	2100      	movs	r1, #0
 8001ad8:	4821      	ldr	r0, [pc, #132]	@ (8001b60 <main+0x4d4>)
 8001ada:	f004 fbcf 	bl	800627c <HAL_TIM_PWM_Start>

//			HAL_GPIO_WritePin(GPIOC, GPIO_PIN_0, GPIO_PIN_RESET);

			HAL_GPIO_WritePin(GPIOC, GPIO_PIN_1, GPIO_PIN_SET);
 8001ade:	2201      	movs	r2, #1
 8001ae0:	2102      	movs	r1, #2
 8001ae2:	4823      	ldr	r0, [pc, #140]	@ (8001b70 <main+0x4e4>)
 8001ae4:	f002 fcbc 	bl	8004460 <HAL_GPIO_WritePin>

			HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001ae8:	2200      	movs	r2, #0
 8001aea:	2104      	movs	r1, #4
 8001aec:	4820      	ldr	r0, [pc, #128]	@ (8001b70 <main+0x4e4>)
 8001aee:	f002 fcb7 	bl	8004460 <HAL_GPIO_WritePin>

//			HAL_GPIO_WritePin(GPIOC, GPIO_PIN_3, GPIO_PIN_SET);
			current_state = BACKWARD;
 8001af2:	2302      	movs	r3, #2
 8001af4:	77fb      	strb	r3, [r7, #31]
 8001af6:	e1aa      	b.n	8001e4e <main+0x7c2>
 8001af8:	20000640 	.word	0x20000640
 8001afc:	2000068c 	.word	0x2000068c
 8001b00:	20000650 	.word	0x20000650
 8001b04:	20000654 	.word	0x20000654
 8001b08:	20000658 	.word	0x20000658
 8001b0c:	2000065c 	.word	0x2000065c
 8001b10:	20000660 	.word	0x20000660
 8001b14:	20000664 	.word	0x20000664
 8001b18:	20000668 	.word	0x20000668
 8001b1c:	2000066c 	.word	0x2000066c
 8001b20:	2000063c 	.word	0x2000063c
 8001b24:	2000000c 	.word	0x2000000c
 8001b28:	0800cfc4 	.word	0x0800cfc4
 8001b2c:	20000270 	.word	0x20000270
 8001b30:	200002b8 	.word	0x200002b8
 8001b34:	20000300 	.word	0x20000300
 8001b38:	20000630 	.word	0x20000630
 8001b3c:	20000634 	.word	0x20000634
 8001b40:	20000638 	.word	0x20000638
 8001b44:	20000018 	.word	0x20000018
 8001b48:	20000014 	.word	0x20000014
 8001b4c:	40001800 	.word	0x40001800
 8001b50:	40014400 	.word	0x40014400
 8001b54:	40014800 	.word	0x40014800
 8001b58:	20000468 	.word	0x20000468
 8001b5c:	200003d8 	.word	0x200003d8
 8001b60:	20000420 	.word	0x20000420
 8001b64:	2000001c 	.word	0x2000001c
 8001b68:	20000020 	.word	0x20000020
 8001b6c:	20000010 	.word	0x20000010
 8001b70:	40020800 	.word	0x40020800

		}

		//	right

		else if (lx >= Buff1 && (ly <= BuffP && ly >= BuffN))
 8001b74:	4b82      	ldr	r3, [pc, #520]	@ (8001d80 <main+0x6f4>)
 8001b76:	681a      	ldr	r2, [r3, #0]
 8001b78:	4b82      	ldr	r3, [pc, #520]	@ (8001d84 <main+0x6f8>)
 8001b7a:	681b      	ldr	r3, [r3, #0]
 8001b7c:	429a      	cmp	r2, r3
 8001b7e:	db59      	blt.n	8001c34 <main+0x5a8>
 8001b80:	4b81      	ldr	r3, [pc, #516]	@ (8001d88 <main+0x6fc>)
 8001b82:	681a      	ldr	r2, [r3, #0]
 8001b84:	4b81      	ldr	r3, [pc, #516]	@ (8001d8c <main+0x700>)
 8001b86:	681b      	ldr	r3, [r3, #0]
 8001b88:	429a      	cmp	r2, r3
 8001b8a:	dc53      	bgt.n	8001c34 <main+0x5a8>
 8001b8c:	4b7e      	ldr	r3, [pc, #504]	@ (8001d88 <main+0x6fc>)
 8001b8e:	681a      	ldr	r2, [r3, #0]
 8001b90:	4b7f      	ldr	r3, [pc, #508]	@ (8001d90 <main+0x704>)
 8001b92:	681b      	ldr	r3, [r3, #0]
 8001b94:	429a      	cmp	r2, r3
 8001b96:	db4d      	blt.n	8001c34 <main+0x5a8>

		{

			dutycycle = map(lx, Buff1, 127, 0, fast);
 8001b98:	4b79      	ldr	r3, [pc, #484]	@ (8001d80 <main+0x6f4>)
 8001b9a:	6818      	ldr	r0, [r3, #0]
 8001b9c:	4b79      	ldr	r3, [pc, #484]	@ (8001d84 <main+0x6f8>)
 8001b9e:	6819      	ldr	r1, [r3, #0]
 8001ba0:	4b7c      	ldr	r3, [pc, #496]	@ (8001d94 <main+0x708>)
 8001ba2:	681b      	ldr	r3, [r3, #0]
 8001ba4:	9300      	str	r3, [sp, #0]
 8001ba6:	2300      	movs	r3, #0
 8001ba8:	227f      	movs	r2, #127	@ 0x7f
 8001baa:	f7ff fbdf 	bl	800136c <map>
 8001bae:	4603      	mov	r3, r0
 8001bb0:	82bb      	strh	r3, [r7, #20]

			TIM12->CCR1 = dutycycle;
 8001bb2:	4a79      	ldr	r2, [pc, #484]	@ (8001d98 <main+0x70c>)
 8001bb4:	8abb      	ldrh	r3, [r7, #20]
 8001bb6:	6353      	str	r3, [r2, #52]	@ 0x34
			TIM10->CCR1 = cos30 * dutycycle;
 8001bb8:	8abb      	ldrh	r3, [r7, #20]
 8001bba:	ee07 3a90 	vmov	s15, r3
 8001bbe:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8001bc2:	4b76      	ldr	r3, [pc, #472]	@ (8001d9c <main+0x710>)
 8001bc4:	edd3 7a00 	vldr	s15, [r3]
 8001bc8:	ee67 7a27 	vmul.f32	s15, s14, s15
 8001bcc:	4b74      	ldr	r3, [pc, #464]	@ (8001da0 <main+0x714>)
 8001bce:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8001bd2:	ee17 2a90 	vmov	r2, s15
 8001bd6:	635a      	str	r2, [r3, #52]	@ 0x34
			TIM11->CCR1 = cos30 * dutycycle;
 8001bd8:	8abb      	ldrh	r3, [r7, #20]
 8001bda:	ee07 3a90 	vmov	s15, r3
 8001bde:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8001be2:	4b6e      	ldr	r3, [pc, #440]	@ (8001d9c <main+0x710>)
 8001be4:	edd3 7a00 	vldr	s15, [r3]
 8001be8:	ee67 7a27 	vmul.f32	s15, s14, s15
 8001bec:	4b6d      	ldr	r3, [pc, #436]	@ (8001da4 <main+0x718>)
 8001bee:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8001bf2:	ee17 2a90 	vmov	r2, s15
 8001bf6:	635a      	str	r2, [r3, #52]	@ 0x34
			HAL_TIM_PWM_Start(&htim12, TIM_CHANNEL_1);
 8001bf8:	2100      	movs	r1, #0
 8001bfa:	486b      	ldr	r0, [pc, #428]	@ (8001da8 <main+0x71c>)
 8001bfc:	f004 fb3e 	bl	800627c <HAL_TIM_PWM_Start>
			HAL_TIM_PWM_Start(&htim10, TIM_CHANNEL_1);
 8001c00:	2100      	movs	r1, #0
 8001c02:	486a      	ldr	r0, [pc, #424]	@ (8001dac <main+0x720>)
 8001c04:	f004 fb3a 	bl	800627c <HAL_TIM_PWM_Start>
			HAL_TIM_PWM_Start(&htim11, TIM_CHANNEL_1);
 8001c08:	2100      	movs	r1, #0
 8001c0a:	4869      	ldr	r0, [pc, #420]	@ (8001db0 <main+0x724>)
 8001c0c:	f004 fb36 	bl	800627c <HAL_TIM_PWM_Start>

			HAL_GPIO_WritePin(GPIOC, GPIO_PIN_0, GPIO_PIN_SET);
 8001c10:	2201      	movs	r2, #1
 8001c12:	2101      	movs	r1, #1
 8001c14:	4867      	ldr	r0, [pc, #412]	@ (8001db4 <main+0x728>)
 8001c16:	f002 fc23 	bl	8004460 <HAL_GPIO_WritePin>

			HAL_GPIO_WritePin(GPIOC, GPIO_PIN_1, GPIO_PIN_RESET);
 8001c1a:	2200      	movs	r2, #0
 8001c1c:	2102      	movs	r1, #2
 8001c1e:	4865      	ldr	r0, [pc, #404]	@ (8001db4 <main+0x728>)
 8001c20:	f002 fc1e 	bl	8004460 <HAL_GPIO_WritePin>

			HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001c24:	2200      	movs	r2, #0
 8001c26:	2104      	movs	r1, #4
 8001c28:	4862      	ldr	r0, [pc, #392]	@ (8001db4 <main+0x728>)
 8001c2a:	f002 fc19 	bl	8004460 <HAL_GPIO_WritePin>

//			HAL_GPIO_WritePin(GPIOC, GPIO_PIN_3, GPIO_PIN_SET);
			current_state = RIGHT;
 8001c2e:	2303      	movs	r3, #3
 8001c30:	77fb      	strb	r3, [r7, #31]
 8001c32:	e10c      	b.n	8001e4e <main+0x7c2>

		}

		// left

		else if (lx <= Buff2 && (ly <= BuffP && ly >= BuffN))
 8001c34:	4b52      	ldr	r3, [pc, #328]	@ (8001d80 <main+0x6f4>)
 8001c36:	681a      	ldr	r2, [r3, #0]
 8001c38:	4b5f      	ldr	r3, [pc, #380]	@ (8001db8 <main+0x72c>)
 8001c3a:	681b      	ldr	r3, [r3, #0]
 8001c3c:	429a      	cmp	r2, r3
 8001c3e:	dc5a      	bgt.n	8001cf6 <main+0x66a>
 8001c40:	4b51      	ldr	r3, [pc, #324]	@ (8001d88 <main+0x6fc>)
 8001c42:	681a      	ldr	r2, [r3, #0]
 8001c44:	4b51      	ldr	r3, [pc, #324]	@ (8001d8c <main+0x700>)
 8001c46:	681b      	ldr	r3, [r3, #0]
 8001c48:	429a      	cmp	r2, r3
 8001c4a:	dc54      	bgt.n	8001cf6 <main+0x66a>
 8001c4c:	4b4e      	ldr	r3, [pc, #312]	@ (8001d88 <main+0x6fc>)
 8001c4e:	681a      	ldr	r2, [r3, #0]
 8001c50:	4b4f      	ldr	r3, [pc, #316]	@ (8001d90 <main+0x704>)
 8001c52:	681b      	ldr	r3, [r3, #0]
 8001c54:	429a      	cmp	r2, r3
 8001c56:	db4e      	blt.n	8001cf6 <main+0x66a>

		{

			dutycycle = map(lx, -128, Buff2, fast, 0);
 8001c58:	4b49      	ldr	r3, [pc, #292]	@ (8001d80 <main+0x6f4>)
 8001c5a:	6818      	ldr	r0, [r3, #0]
 8001c5c:	4b56      	ldr	r3, [pc, #344]	@ (8001db8 <main+0x72c>)
 8001c5e:	681a      	ldr	r2, [r3, #0]
 8001c60:	4b4c      	ldr	r3, [pc, #304]	@ (8001d94 <main+0x708>)
 8001c62:	681b      	ldr	r3, [r3, #0]
 8001c64:	2100      	movs	r1, #0
 8001c66:	9100      	str	r1, [sp, #0]
 8001c68:	f06f 017f 	mvn.w	r1, #127	@ 0x7f
 8001c6c:	f7ff fb7e 	bl	800136c <map>
 8001c70:	4603      	mov	r3, r0
 8001c72:	82bb      	strh	r3, [r7, #20]

			TIM12->CCR1 = dutycycle;
 8001c74:	4a48      	ldr	r2, [pc, #288]	@ (8001d98 <main+0x70c>)
 8001c76:	8abb      	ldrh	r3, [r7, #20]
 8001c78:	6353      	str	r3, [r2, #52]	@ 0x34
			TIM10->CCR1 = cos30 * dutycycle;
 8001c7a:	8abb      	ldrh	r3, [r7, #20]
 8001c7c:	ee07 3a90 	vmov	s15, r3
 8001c80:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8001c84:	4b45      	ldr	r3, [pc, #276]	@ (8001d9c <main+0x710>)
 8001c86:	edd3 7a00 	vldr	s15, [r3]
 8001c8a:	ee67 7a27 	vmul.f32	s15, s14, s15
 8001c8e:	4b44      	ldr	r3, [pc, #272]	@ (8001da0 <main+0x714>)
 8001c90:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8001c94:	ee17 2a90 	vmov	r2, s15
 8001c98:	635a      	str	r2, [r3, #52]	@ 0x34
			TIM11->CCR1 = cos30 * dutycycle;
 8001c9a:	8abb      	ldrh	r3, [r7, #20]
 8001c9c:	ee07 3a90 	vmov	s15, r3
 8001ca0:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8001ca4:	4b3d      	ldr	r3, [pc, #244]	@ (8001d9c <main+0x710>)
 8001ca6:	edd3 7a00 	vldr	s15, [r3]
 8001caa:	ee67 7a27 	vmul.f32	s15, s14, s15
 8001cae:	4b3d      	ldr	r3, [pc, #244]	@ (8001da4 <main+0x718>)
 8001cb0:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8001cb4:	ee17 2a90 	vmov	r2, s15
 8001cb8:	635a      	str	r2, [r3, #52]	@ 0x34
			HAL_TIM_PWM_Start(&htim12, TIM_CHANNEL_1);
 8001cba:	2100      	movs	r1, #0
 8001cbc:	483a      	ldr	r0, [pc, #232]	@ (8001da8 <main+0x71c>)
 8001cbe:	f004 fadd 	bl	800627c <HAL_TIM_PWM_Start>
			HAL_TIM_PWM_Start(&htim10, TIM_CHANNEL_1);
 8001cc2:	2100      	movs	r1, #0
 8001cc4:	4839      	ldr	r0, [pc, #228]	@ (8001dac <main+0x720>)
 8001cc6:	f004 fad9 	bl	800627c <HAL_TIM_PWM_Start>
			HAL_TIM_PWM_Start(&htim11, TIM_CHANNEL_1);
 8001cca:	2100      	movs	r1, #0
 8001ccc:	4838      	ldr	r0, [pc, #224]	@ (8001db0 <main+0x724>)
 8001cce:	f004 fad5 	bl	800627c <HAL_TIM_PWM_Start>

			HAL_GPIO_WritePin(GPIOC, GPIO_PIN_0, GPIO_PIN_RESET);
 8001cd2:	2200      	movs	r2, #0
 8001cd4:	2101      	movs	r1, #1
 8001cd6:	4837      	ldr	r0, [pc, #220]	@ (8001db4 <main+0x728>)
 8001cd8:	f002 fbc2 	bl	8004460 <HAL_GPIO_WritePin>

			HAL_GPIO_WritePin(GPIOC, GPIO_PIN_1, GPIO_PIN_SET);
 8001cdc:	2201      	movs	r2, #1
 8001cde:	2102      	movs	r1, #2
 8001ce0:	4834      	ldr	r0, [pc, #208]	@ (8001db4 <main+0x728>)
 8001ce2:	f002 fbbd 	bl	8004460 <HAL_GPIO_WritePin>

			HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001ce6:	2201      	movs	r2, #1
 8001ce8:	2104      	movs	r1, #4
 8001cea:	4832      	ldr	r0, [pc, #200]	@ (8001db4 <main+0x728>)
 8001cec:	f002 fbb8 	bl	8004460 <HAL_GPIO_WritePin>
			current_state = LEFT;
 8001cf0:	2304      	movs	r3, #4
 8001cf2:	77fb      	strb	r3, [r7, #31]
 8001cf4:	e0ab      	b.n	8001e4e <main+0x7c2>

		}

		//clockwise

		else if (rx >= Buff1 && (ry <= BuffP && ry >= BuffN)) {
 8001cf6:	4b31      	ldr	r3, [pc, #196]	@ (8001dbc <main+0x730>)
 8001cf8:	681a      	ldr	r2, [r3, #0]
 8001cfa:	4b22      	ldr	r3, [pc, #136]	@ (8001d84 <main+0x6f8>)
 8001cfc:	681b      	ldr	r3, [r3, #0]
 8001cfe:	429a      	cmp	r2, r3
 8001d00:	db60      	blt.n	8001dc4 <main+0x738>
 8001d02:	4b2f      	ldr	r3, [pc, #188]	@ (8001dc0 <main+0x734>)
 8001d04:	681a      	ldr	r2, [r3, #0]
 8001d06:	4b21      	ldr	r3, [pc, #132]	@ (8001d8c <main+0x700>)
 8001d08:	681b      	ldr	r3, [r3, #0]
 8001d0a:	429a      	cmp	r2, r3
 8001d0c:	dc5a      	bgt.n	8001dc4 <main+0x738>
 8001d0e:	4b2c      	ldr	r3, [pc, #176]	@ (8001dc0 <main+0x734>)
 8001d10:	681a      	ldr	r2, [r3, #0]
 8001d12:	4b1f      	ldr	r3, [pc, #124]	@ (8001d90 <main+0x704>)
 8001d14:	681b      	ldr	r3, [r3, #0]
 8001d16:	429a      	cmp	r2, r3
 8001d18:	db54      	blt.n	8001dc4 <main+0x738>

			dutycycle = map(rx, Buff1, 127, 0, 100);
 8001d1a:	4b28      	ldr	r3, [pc, #160]	@ (8001dbc <main+0x730>)
 8001d1c:	6818      	ldr	r0, [r3, #0]
 8001d1e:	4b19      	ldr	r3, [pc, #100]	@ (8001d84 <main+0x6f8>)
 8001d20:	6819      	ldr	r1, [r3, #0]
 8001d22:	2364      	movs	r3, #100	@ 0x64
 8001d24:	9300      	str	r3, [sp, #0]
 8001d26:	2300      	movs	r3, #0
 8001d28:	227f      	movs	r2, #127	@ 0x7f
 8001d2a:	f7ff fb1f 	bl	800136c <map>
 8001d2e:	4603      	mov	r3, r0
 8001d30:	82bb      	strh	r3, [r7, #20]

			TIM12->CCR1 = dutycycle;
 8001d32:	4a19      	ldr	r2, [pc, #100]	@ (8001d98 <main+0x70c>)
 8001d34:	8abb      	ldrh	r3, [r7, #20]
 8001d36:	6353      	str	r3, [r2, #52]	@ 0x34
			TIM10->CCR1 = dutycycle;
 8001d38:	4a19      	ldr	r2, [pc, #100]	@ (8001da0 <main+0x714>)
 8001d3a:	8abb      	ldrh	r3, [r7, #20]
 8001d3c:	6353      	str	r3, [r2, #52]	@ 0x34
			TIM11->CCR1 = dutycycle;
 8001d3e:	4a19      	ldr	r2, [pc, #100]	@ (8001da4 <main+0x718>)
 8001d40:	8abb      	ldrh	r3, [r7, #20]
 8001d42:	6353      	str	r3, [r2, #52]	@ 0x34
			HAL_TIM_PWM_Start(&htim12, TIM_CHANNEL_1);
 8001d44:	2100      	movs	r1, #0
 8001d46:	4818      	ldr	r0, [pc, #96]	@ (8001da8 <main+0x71c>)
 8001d48:	f004 fa98 	bl	800627c <HAL_TIM_PWM_Start>
			HAL_TIM_PWM_Start(&htim10, TIM_CHANNEL_1);
 8001d4c:	2100      	movs	r1, #0
 8001d4e:	4817      	ldr	r0, [pc, #92]	@ (8001dac <main+0x720>)
 8001d50:	f004 fa94 	bl	800627c <HAL_TIM_PWM_Start>
			HAL_TIM_PWM_Start(&htim11, TIM_CHANNEL_1);
 8001d54:	2100      	movs	r1, #0
 8001d56:	4816      	ldr	r0, [pc, #88]	@ (8001db0 <main+0x724>)
 8001d58:	f004 fa90 	bl	800627c <HAL_TIM_PWM_Start>

			HAL_GPIO_WritePin(GPIOC, GPIO_PIN_0, GPIO_PIN_RESET);
 8001d5c:	2200      	movs	r2, #0
 8001d5e:	2101      	movs	r1, #1
 8001d60:	4814      	ldr	r0, [pc, #80]	@ (8001db4 <main+0x728>)
 8001d62:	f002 fb7d 	bl	8004460 <HAL_GPIO_WritePin>

			HAL_GPIO_WritePin(GPIOC, GPIO_PIN_1, GPIO_PIN_RESET);
 8001d66:	2200      	movs	r2, #0
 8001d68:	2102      	movs	r1, #2
 8001d6a:	4812      	ldr	r0, [pc, #72]	@ (8001db4 <main+0x728>)
 8001d6c:	f002 fb78 	bl	8004460 <HAL_GPIO_WritePin>

			HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001d70:	2200      	movs	r2, #0
 8001d72:	2104      	movs	r1, #4
 8001d74:	480f      	ldr	r0, [pc, #60]	@ (8001db4 <main+0x728>)
 8001d76:	f002 fb73 	bl	8004460 <HAL_GPIO_WritePin>
			current_state = CLOCKWISE;
 8001d7a:	2305      	movs	r3, #5
 8001d7c:	77fb      	strb	r3, [r7, #31]
 8001d7e:	e066      	b.n	8001e4e <main+0x7c2>
 8001d80:	20000650 	.word	0x20000650
 8001d84:	20000014 	.word	0x20000014
 8001d88:	20000654 	.word	0x20000654
 8001d8c:	2000001c 	.word	0x2000001c
 8001d90:	20000020 	.word	0x20000020
 8001d94:	20000010 	.word	0x20000010
 8001d98:	40001800 	.word	0x40001800
 8001d9c:	20000024 	.word	0x20000024
 8001da0:	40014400 	.word	0x40014400
 8001da4:	40014800 	.word	0x40014800
 8001da8:	20000468 	.word	0x20000468
 8001dac:	200003d8 	.word	0x200003d8
 8001db0:	20000420 	.word	0x20000420
 8001db4:	40020800 	.word	0x40020800
 8001db8:	20000018 	.word	0x20000018
 8001dbc:	20000658 	.word	0x20000658
 8001dc0:	2000065c 	.word	0x2000065c

		}

		// anticlockwise

		else if (rx <= Buff2 && (ry <= BuffP && ry >= BuffN)) {
 8001dc4:	4b95      	ldr	r3, [pc, #596]	@ (800201c <main+0x990>)
 8001dc6:	681a      	ldr	r2, [r3, #0]
 8001dc8:	4b95      	ldr	r3, [pc, #596]	@ (8002020 <main+0x994>)
 8001dca:	681b      	ldr	r3, [r3, #0]
 8001dcc:	429a      	cmp	r2, r3
 8001dce:	dc3e      	bgt.n	8001e4e <main+0x7c2>
 8001dd0:	4b94      	ldr	r3, [pc, #592]	@ (8002024 <main+0x998>)
 8001dd2:	681a      	ldr	r2, [r3, #0]
 8001dd4:	4b94      	ldr	r3, [pc, #592]	@ (8002028 <main+0x99c>)
 8001dd6:	681b      	ldr	r3, [r3, #0]
 8001dd8:	429a      	cmp	r2, r3
 8001dda:	dc38      	bgt.n	8001e4e <main+0x7c2>
 8001ddc:	4b91      	ldr	r3, [pc, #580]	@ (8002024 <main+0x998>)
 8001dde:	681a      	ldr	r2, [r3, #0]
 8001de0:	4b92      	ldr	r3, [pc, #584]	@ (800202c <main+0x9a0>)
 8001de2:	681b      	ldr	r3, [r3, #0]
 8001de4:	429a      	cmp	r2, r3
 8001de6:	db32      	blt.n	8001e4e <main+0x7c2>

			dutycycle = map(rx, -128, Buff2, 100, 0);
 8001de8:	4b8c      	ldr	r3, [pc, #560]	@ (800201c <main+0x990>)
 8001dea:	6818      	ldr	r0, [r3, #0]
 8001dec:	4b8c      	ldr	r3, [pc, #560]	@ (8002020 <main+0x994>)
 8001dee:	681a      	ldr	r2, [r3, #0]
 8001df0:	2300      	movs	r3, #0
 8001df2:	9300      	str	r3, [sp, #0]
 8001df4:	2364      	movs	r3, #100	@ 0x64
 8001df6:	f06f 017f 	mvn.w	r1, #127	@ 0x7f
 8001dfa:	f7ff fab7 	bl	800136c <map>
 8001dfe:	4603      	mov	r3, r0
 8001e00:	82bb      	strh	r3, [r7, #20]

			TIM12->CCR1 = dutycycle;
 8001e02:	4a8b      	ldr	r2, [pc, #556]	@ (8002030 <main+0x9a4>)
 8001e04:	8abb      	ldrh	r3, [r7, #20]
 8001e06:	6353      	str	r3, [r2, #52]	@ 0x34
			TIM10->CCR1 = dutycycle;
 8001e08:	4a8a      	ldr	r2, [pc, #552]	@ (8002034 <main+0x9a8>)
 8001e0a:	8abb      	ldrh	r3, [r7, #20]
 8001e0c:	6353      	str	r3, [r2, #52]	@ 0x34
			TIM11->CCR1 = dutycycle;
 8001e0e:	4a8a      	ldr	r2, [pc, #552]	@ (8002038 <main+0x9ac>)
 8001e10:	8abb      	ldrh	r3, [r7, #20]
 8001e12:	6353      	str	r3, [r2, #52]	@ 0x34
			HAL_TIM_PWM_Start(&htim12, TIM_CHANNEL_1);
 8001e14:	2100      	movs	r1, #0
 8001e16:	4889      	ldr	r0, [pc, #548]	@ (800203c <main+0x9b0>)
 8001e18:	f004 fa30 	bl	800627c <HAL_TIM_PWM_Start>
			HAL_TIM_PWM_Start(&htim10, TIM_CHANNEL_1);
 8001e1c:	2100      	movs	r1, #0
 8001e1e:	4888      	ldr	r0, [pc, #544]	@ (8002040 <main+0x9b4>)
 8001e20:	f004 fa2c 	bl	800627c <HAL_TIM_PWM_Start>
			HAL_TIM_PWM_Start(&htim11, TIM_CHANNEL_1);
 8001e24:	2100      	movs	r1, #0
 8001e26:	4887      	ldr	r0, [pc, #540]	@ (8002044 <main+0x9b8>)
 8001e28:	f004 fa28 	bl	800627c <HAL_TIM_PWM_Start>

			HAL_GPIO_WritePin(GPIOC, GPIO_PIN_0, GPIO_PIN_SET);
 8001e2c:	2201      	movs	r2, #1
 8001e2e:	2101      	movs	r1, #1
 8001e30:	4885      	ldr	r0, [pc, #532]	@ (8002048 <main+0x9bc>)
 8001e32:	f002 fb15 	bl	8004460 <HAL_GPIO_WritePin>

			HAL_GPIO_WritePin(GPIOC, GPIO_PIN_1, GPIO_PIN_SET);
 8001e36:	2201      	movs	r2, #1
 8001e38:	2102      	movs	r1, #2
 8001e3a:	4883      	ldr	r0, [pc, #524]	@ (8002048 <main+0x9bc>)
 8001e3c:	f002 fb10 	bl	8004460 <HAL_GPIO_WritePin>

			HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001e40:	2201      	movs	r2, #1
 8001e42:	2104      	movs	r1, #4
 8001e44:	4880      	ldr	r0, [pc, #512]	@ (8002048 <main+0x9bc>)
 8001e46:	f002 fb0b 	bl	8004460 <HAL_GPIO_WritePin>
			current_state = ANTICLOCKWISE;
 8001e4a:	2306      	movs	r3, #6
 8001e4c:	77fb      	strb	r3, [r7, #31]

//			HAL_GPIO_WritePin(GPIOC, GPIO_PIN_3, GPIO_PIN_RESET);

		}

		if (current_state == CLOCKWISE || current_state == ANTICLOCKWISE) {
 8001e4e:	7ffb      	ldrb	r3, [r7, #31]
 8001e50:	2b05      	cmp	r3, #5
 8001e52:	d002      	beq.n	8001e5a <main+0x7ce>
 8001e54:	7ffb      	ldrb	r3, [r7, #31]
 8001e56:	2b06      	cmp	r3, #6
 8001e58:	d102      	bne.n	8001e60 <main+0x7d4>
			stopEncoders();
 8001e5a:	f7ff fbeb 	bl	8001634 <stopEncoders>
 8001e5e:	e001      	b.n	8001e64 <main+0x7d8>
		} else {
			startEncoders();
 8001e60:	f7ff fbfe 	bl	8001660 <startEncoders>
		}

		update_odometry(signed_counter1, signed_counter2, signed_counter3);
 8001e64:	4b79      	ldr	r3, [pc, #484]	@ (800204c <main+0x9c0>)
 8001e66:	f9b3 3000 	ldrsh.w	r3, [r3]
 8001e6a:	4a79      	ldr	r2, [pc, #484]	@ (8002050 <main+0x9c4>)
 8001e6c:	6811      	ldr	r1, [r2, #0]
 8001e6e:	4a79      	ldr	r2, [pc, #484]	@ (8002054 <main+0x9c8>)
 8001e70:	f9b2 2000 	ldrsh.w	r2, [r2]
 8001e74:	4618      	mov	r0, r3
 8001e76:	f7ff fa97 	bl	80013a8 <update_odometry>

		/* Stepper */
//		stepper_running1 = 1;
		HAL_GPIO_WritePin(GPIOC, GPIO_PIN_3,
 8001e7a:	4b77      	ldr	r3, [pc, #476]	@ (8002058 <main+0x9cc>)
 8001e7c:	681b      	ldr	r3, [r3, #0]
 8001e7e:	2b00      	cmp	r3, #0
 8001e80:	bf14      	ite	ne
 8001e82:	2301      	movne	r3, #1
 8001e84:	2300      	moveq	r3, #0
 8001e86:	b2db      	uxtb	r3, r3
 8001e88:	461a      	mov	r2, r3
 8001e8a:	2108      	movs	r1, #8
 8001e8c:	486e      	ldr	r0, [pc, #440]	@ (8002048 <main+0x9bc>)
 8001e8e:	f002 fae7 	bl	8004460 <HAL_GPIO_WritePin>
				direction1 ? GPIO_PIN_SET : GPIO_PIN_RESET);
		HAL_GPIO_WritePin(GPIOC, GPIO_PIN_6,
 8001e92:	4b71      	ldr	r3, [pc, #452]	@ (8002058 <main+0x9cc>)
 8001e94:	681b      	ldr	r3, [r3, #0]
 8001e96:	2b00      	cmp	r3, #0
 8001e98:	bf0c      	ite	eq
 8001e9a:	2301      	moveq	r3, #1
 8001e9c:	2300      	movne	r3, #0
 8001e9e:	b2db      	uxtb	r3, r3
 8001ea0:	461a      	mov	r2, r3
 8001ea2:	2140      	movs	r1, #64	@ 0x40
 8001ea4:	4868      	ldr	r0, [pc, #416]	@ (8002048 <main+0x9bc>)
 8001ea6:	f002 fadb 	bl	8004460 <HAL_GPIO_WritePin>
				!direction1 ? GPIO_PIN_SET : GPIO_PIN_RESET);

		if (ll1 == 1 && !prev_ll1) {  // LL1 button pressed
 8001eaa:	4b6c      	ldr	r3, [pc, #432]	@ (800205c <main+0x9d0>)
 8001eac:	681b      	ldr	r3, [r3, #0]
 8001eae:	2b01      	cmp	r3, #1
 8001eb0:	d117      	bne.n	8001ee2 <main+0x856>
 8001eb2:	4b6b      	ldr	r3, [pc, #428]	@ (8002060 <main+0x9d4>)
 8001eb4:	681b      	ldr	r3, [r3, #0]
 8001eb6:	2b00      	cmp	r3, #0
 8001eb8:	d113      	bne.n	8001ee2 <main+0x856>
			direction1 = 1;  // Set to Anti-clockwise
 8001eba:	4b67      	ldr	r3, [pc, #412]	@ (8002058 <main+0x9cc>)
 8001ebc:	2201      	movs	r2, #1
 8001ebe:	601a      	str	r2, [r3, #0]
			stepper_running = 1;
 8001ec0:	4b68      	ldr	r3, [pc, #416]	@ (8002064 <main+0x9d8>)
 8001ec2:	2201      	movs	r2, #1
 8001ec4:	601a      	str	r2, [r3, #0]
			stepper_running1 = 1;
 8001ec6:	4b68      	ldr	r3, [pc, #416]	@ (8002068 <main+0x9dc>)
 8001ec8:	2201      	movs	r2, #1
 8001eca:	601a      	str	r2, [r3, #0]
			target_steps = STEPS;
 8001ecc:	4b67      	ldr	r3, [pc, #412]	@ (800206c <main+0x9e0>)
 8001ece:	22f0      	movs	r2, #240	@ 0xf0
 8001ed0:	601a      	str	r2, [r3, #0]
			target_steps1 = STEPS;
 8001ed2:	4b67      	ldr	r3, [pc, #412]	@ (8002070 <main+0x9e4>)
 8001ed4:	22f0      	movs	r2, #240	@ 0xf0
 8001ed6:	601a      	str	r2, [r3, #0]
			HAL_GPIO_WritePin(GPIOC, GPIO_PIN_7, GPIO_PIN_RESET);
 8001ed8:	2200      	movs	r2, #0
 8001eda:	2180      	movs	r1, #128	@ 0x80
 8001edc:	485a      	ldr	r0, [pc, #360]	@ (8002048 <main+0x9bc>)
 8001ede:	f002 fabf 	bl	8004460 <HAL_GPIO_WritePin>
		}
		if (rr1 == 1 && !prev_rr1) {  // RR1 button pressed
 8001ee2:	4b64      	ldr	r3, [pc, #400]	@ (8002074 <main+0x9e8>)
 8001ee4:	681b      	ldr	r3, [r3, #0]
 8001ee6:	2b01      	cmp	r3, #1
 8001ee8:	d117      	bne.n	8001f1a <main+0x88e>
 8001eea:	4b63      	ldr	r3, [pc, #396]	@ (8002078 <main+0x9ec>)
 8001eec:	681b      	ldr	r3, [r3, #0]
 8001eee:	2b00      	cmp	r3, #0
 8001ef0:	d113      	bne.n	8001f1a <main+0x88e>
			direction1 = 0;  // Set to Clockwise
 8001ef2:	4b59      	ldr	r3, [pc, #356]	@ (8002058 <main+0x9cc>)
 8001ef4:	2200      	movs	r2, #0
 8001ef6:	601a      	str	r2, [r3, #0]
			stepper_running = 1;
 8001ef8:	4b5a      	ldr	r3, [pc, #360]	@ (8002064 <main+0x9d8>)
 8001efa:	2201      	movs	r2, #1
 8001efc:	601a      	str	r2, [r3, #0]
			stepper_running1 = 1;
 8001efe:	4b5a      	ldr	r3, [pc, #360]	@ (8002068 <main+0x9dc>)
 8001f00:	2201      	movs	r2, #1
 8001f02:	601a      	str	r2, [r3, #0]
			target_steps = STEPS;
 8001f04:	4b59      	ldr	r3, [pc, #356]	@ (800206c <main+0x9e0>)
 8001f06:	22f0      	movs	r2, #240	@ 0xf0
 8001f08:	601a      	str	r2, [r3, #0]
			target_steps1 = STEPS;
 8001f0a:	4b59      	ldr	r3, [pc, #356]	@ (8002070 <main+0x9e4>)
 8001f0c:	22f0      	movs	r2, #240	@ 0xf0
 8001f0e:	601a      	str	r2, [r3, #0]
			HAL_GPIO_WritePin(GPIOC, GPIO_PIN_7, GPIO_PIN_RESET);
 8001f10:	2200      	movs	r2, #0
 8001f12:	2180      	movs	r1, #128	@ 0x80
 8001f14:	484c      	ldr	r0, [pc, #304]	@ (8002048 <main+0x9bc>)
 8001f16:	f002 faa3 	bl	8004460 <HAL_GPIO_WritePin>
		}
		if (cir == 1 && !prev_cir) {
 8001f1a:	4b58      	ldr	r3, [pc, #352]	@ (800207c <main+0x9f0>)
 8001f1c:	681b      	ldr	r3, [r3, #0]
 8001f1e:	2b01      	cmp	r3, #1
 8001f20:	d111      	bne.n	8001f46 <main+0x8ba>
 8001f22:	4b57      	ldr	r3, [pc, #348]	@ (8002080 <main+0x9f4>)
 8001f24:	681b      	ldr	r3, [r3, #0]
 8001f26:	2b00      	cmp	r3, #0
 8001f28:	d10d      	bne.n	8001f46 <main+0x8ba>
			stepper_running1 = 0;
 8001f2a:	4b4f      	ldr	r3, [pc, #316]	@ (8002068 <main+0x9dc>)
 8001f2c:	2200      	movs	r2, #0
 8001f2e:	601a      	str	r2, [r3, #0]
			current_steps = 0;
 8001f30:	4b54      	ldr	r3, [pc, #336]	@ (8002084 <main+0x9f8>)
 8001f32:	2200      	movs	r2, #0
 8001f34:	601a      	str	r2, [r3, #0]
			current_steps1 = 0;
 8001f36:	4b54      	ldr	r3, [pc, #336]	@ (8002088 <main+0x9fc>)
 8001f38:	2200      	movs	r2, #0
 8001f3a:	601a      	str	r2, [r3, #0]
			HAL_GPIO_WritePin(GPIOC, GPIO_PIN_7, GPIO_PIN_SET);
 8001f3c:	2201      	movs	r2, #1
 8001f3e:	2180      	movs	r1, #128	@ 0x80
 8001f40:	4841      	ldr	r0, [pc, #260]	@ (8002048 <main+0x9bc>)
 8001f42:	f002 fa8d 	bl	8004460 <HAL_GPIO_WritePin>
		}
		prev_ll1 = ll1;
 8001f46:	4b45      	ldr	r3, [pc, #276]	@ (800205c <main+0x9d0>)
 8001f48:	681b      	ldr	r3, [r3, #0]
 8001f4a:	4a45      	ldr	r2, [pc, #276]	@ (8002060 <main+0x9d4>)
 8001f4c:	6013      	str	r3, [r2, #0]
		prev_rr1 = rr1;
 8001f4e:	4b49      	ldr	r3, [pc, #292]	@ (8002074 <main+0x9e8>)
 8001f50:	681b      	ldr	r3, [r3, #0]
 8001f52:	4a49      	ldr	r2, [pc, #292]	@ (8002078 <main+0x9ec>)
 8001f54:	6013      	str	r3, [r2, #0]
		prev_cir = cir;
 8001f56:	4b49      	ldr	r3, [pc, #292]	@ (800207c <main+0x9f0>)
 8001f58:	681b      	ldr	r3, [r3, #0]
 8001f5a:	4a49      	ldr	r2, [pc, #292]	@ (8002080 <main+0x9f4>)
 8001f5c:	6013      	str	r3, [r2, #0]
		if (stepper_running && (HAL_GetTick() - last_step_time) >= step_delay
 8001f5e:	4b41      	ldr	r3, [pc, #260]	@ (8002064 <main+0x9d8>)
 8001f60:	681b      	ldr	r3, [r3, #0]
 8001f62:	2b00      	cmp	r3, #0
 8001f64:	d02e      	beq.n	8001fc4 <main+0x938>
 8001f66:	f001 fba3 	bl	80036b0 <HAL_GetTick>
 8001f6a:	4602      	mov	r2, r0
 8001f6c:	4b47      	ldr	r3, [pc, #284]	@ (800208c <main+0xa00>)
 8001f6e:	681b      	ldr	r3, [r3, #0]
 8001f70:	1ad3      	subs	r3, r2, r3
 8001f72:	4a47      	ldr	r2, [pc, #284]	@ (8002090 <main+0xa04>)
 8001f74:	6812      	ldr	r2, [r2, #0]
 8001f76:	4293      	cmp	r3, r2
 8001f78:	d324      	bcc.n	8001fc4 <main+0x938>
				&& current_steps < target_steps) {
 8001f7a:	4b42      	ldr	r3, [pc, #264]	@ (8002084 <main+0x9f8>)
 8001f7c:	681a      	ldr	r2, [r3, #0]
 8001f7e:	4b3b      	ldr	r3, [pc, #236]	@ (800206c <main+0x9e0>)
 8001f80:	681b      	ldr	r3, [r3, #0]
 8001f82:	429a      	cmp	r2, r3
 8001f84:	d21e      	bcs.n	8001fc4 <main+0x938>
			last_step_time = HAL_GetTick(); // Update last step time
 8001f86:	f001 fb93 	bl	80036b0 <HAL_GetTick>
 8001f8a:	4603      	mov	r3, r0
 8001f8c:	4a3f      	ldr	r2, [pc, #252]	@ (800208c <main+0xa00>)
 8001f8e:	6013      	str	r3, [r2, #0]

			if (step_state == 0) {
 8001f90:	4b40      	ldr	r3, [pc, #256]	@ (8002094 <main+0xa08>)
 8001f92:	681b      	ldr	r3, [r3, #0]
 8001f94:	2b00      	cmp	r3, #0
 8001f96:	d10d      	bne.n	8001fb4 <main+0x928>
				HAL_GPIO_WritePin(GPIOC, GPIO_PIN_5, GPIO_PIN_SET); // Step HIGH
 8001f98:	2201      	movs	r2, #1
 8001f9a:	2120      	movs	r1, #32
 8001f9c:	482a      	ldr	r0, [pc, #168]	@ (8002048 <main+0x9bc>)
 8001f9e:	f002 fa5f 	bl	8004460 <HAL_GPIO_WritePin>
				step_state = 1;
 8001fa2:	4b3c      	ldr	r3, [pc, #240]	@ (8002094 <main+0xa08>)
 8001fa4:	2201      	movs	r2, #1
 8001fa6:	601a      	str	r2, [r3, #0]
				current_steps++;
 8001fa8:	4b36      	ldr	r3, [pc, #216]	@ (8002084 <main+0x9f8>)
 8001faa:	681b      	ldr	r3, [r3, #0]
 8001fac:	3301      	adds	r3, #1
 8001fae:	4a35      	ldr	r2, [pc, #212]	@ (8002084 <main+0x9f8>)
 8001fb0:	6013      	str	r3, [r2, #0]
 8001fb2:	e007      	b.n	8001fc4 <main+0x938>
			} else {
				HAL_GPIO_WritePin(GPIOC, GPIO_PIN_5, GPIO_PIN_RESET); // Step LOW
 8001fb4:	2200      	movs	r2, #0
 8001fb6:	2120      	movs	r1, #32
 8001fb8:	4823      	ldr	r0, [pc, #140]	@ (8002048 <main+0x9bc>)
 8001fba:	f002 fa51 	bl	8004460 <HAL_GPIO_WritePin>
				step_state = 0;
 8001fbe:	4b35      	ldr	r3, [pc, #212]	@ (8002094 <main+0xa08>)
 8001fc0:	2200      	movs	r2, #0
 8001fc2:	601a      	str	r2, [r3, #0]
			}
		}
		if (stepper_running1 && (HAL_GetTick() - last_step_time1) >= step_delay1
 8001fc4:	4b28      	ldr	r3, [pc, #160]	@ (8002068 <main+0x9dc>)
 8001fc6:	681b      	ldr	r3, [r3, #0]
 8001fc8:	2b00      	cmp	r3, #0
 8001fca:	d076      	beq.n	80020ba <main+0xa2e>
 8001fcc:	f001 fb70 	bl	80036b0 <HAL_GetTick>
 8001fd0:	4602      	mov	r2, r0
 8001fd2:	4b31      	ldr	r3, [pc, #196]	@ (8002098 <main+0xa0c>)
 8001fd4:	681b      	ldr	r3, [r3, #0]
 8001fd6:	1ad3      	subs	r3, r2, r3
 8001fd8:	4a30      	ldr	r2, [pc, #192]	@ (800209c <main+0xa10>)
 8001fda:	6812      	ldr	r2, [r2, #0]
 8001fdc:	4293      	cmp	r3, r2
 8001fde:	d36c      	bcc.n	80020ba <main+0xa2e>
				&& current_steps1 < target_steps1) {
 8001fe0:	4b29      	ldr	r3, [pc, #164]	@ (8002088 <main+0x9fc>)
 8001fe2:	681a      	ldr	r2, [r3, #0]
 8001fe4:	4b22      	ldr	r3, [pc, #136]	@ (8002070 <main+0x9e4>)
 8001fe6:	681b      	ldr	r3, [r3, #0]
 8001fe8:	429a      	cmp	r2, r3
 8001fea:	d266      	bcs.n	80020ba <main+0xa2e>
			last_step_time1 = HAL_GetTick(); // Update last step time
 8001fec:	f001 fb60 	bl	80036b0 <HAL_GetTick>
 8001ff0:	4603      	mov	r3, r0
 8001ff2:	4a29      	ldr	r2, [pc, #164]	@ (8002098 <main+0xa0c>)
 8001ff4:	6013      	str	r3, [r2, #0]

			if (step_state1 == 0) {
 8001ff6:	4b2a      	ldr	r3, [pc, #168]	@ (80020a0 <main+0xa14>)
 8001ff8:	681b      	ldr	r3, [r3, #0]
 8001ffa:	2b00      	cmp	r3, #0
 8001ffc:	d154      	bne.n	80020a8 <main+0xa1c>
				HAL_GPIO_WritePin(GPIOB, GPIO_PIN_15, GPIO_PIN_SET); // Step HIGH
 8001ffe:	2201      	movs	r2, #1
 8002000:	f44f 4100 	mov.w	r1, #32768	@ 0x8000
 8002004:	4827      	ldr	r0, [pc, #156]	@ (80020a4 <main+0xa18>)
 8002006:	f002 fa2b 	bl	8004460 <HAL_GPIO_WritePin>
				step_state1 = 1;
 800200a:	4b25      	ldr	r3, [pc, #148]	@ (80020a0 <main+0xa14>)
 800200c:	2201      	movs	r2, #1
 800200e:	601a      	str	r2, [r3, #0]
				current_steps1++;
 8002010:	4b1d      	ldr	r3, [pc, #116]	@ (8002088 <main+0x9fc>)
 8002012:	681b      	ldr	r3, [r3, #0]
 8002014:	3301      	adds	r3, #1
 8002016:	4a1c      	ldr	r2, [pc, #112]	@ (8002088 <main+0x9fc>)
 8002018:	6013      	str	r3, [r2, #0]
 800201a:	e04e      	b.n	80020ba <main+0xa2e>
 800201c:	20000658 	.word	0x20000658
 8002020:	20000018 	.word	0x20000018
 8002024:	2000065c 	.word	0x2000065c
 8002028:	2000001c 	.word	0x2000001c
 800202c:	20000020 	.word	0x20000020
 8002030:	40001800 	.word	0x40001800
 8002034:	40014400 	.word	0x40014400
 8002038:	40014800 	.word	0x40014800
 800203c:	20000468 	.word	0x20000468
 8002040:	200003d8 	.word	0x200003d8
 8002044:	20000420 	.word	0x20000420
 8002048:	40020800 	.word	0x40020800
 800204c:	20000630 	.word	0x20000630
 8002050:	20000634 	.word	0x20000634
 8002054:	20000638 	.word	0x20000638
 8002058:	20000000 	.word	0x20000000
 800205c:	20000680 	.word	0x20000680
 8002060:	20000610 	.word	0x20000610
 8002064:	200005f8 	.word	0x200005f8
 8002068:	200005fc 	.word	0x200005fc
 800206c:	20000620 	.word	0x20000620
 8002070:	20000628 	.word	0x20000628
 8002074:	20000684 	.word	0x20000684
 8002078:	20000614 	.word	0x20000614
 800207c:	2000066c 	.word	0x2000066c
 8002080:	20000604 	.word	0x20000604
 8002084:	20000624 	.word	0x20000624
 8002088:	2000062c 	.word	0x2000062c
 800208c:	200005e8 	.word	0x200005e8
 8002090:	20000004 	.word	0x20000004
 8002094:	200005f0 	.word	0x200005f0
 8002098:	200005ec 	.word	0x200005ec
 800209c:	20000008 	.word	0x20000008
 80020a0:	200005f4 	.word	0x200005f4
 80020a4:	40020400 	.word	0x40020400
			} else {
				HAL_GPIO_WritePin(GPIOB, GPIO_PIN_15, GPIO_PIN_RESET); // Step LOW
 80020a8:	2200      	movs	r2, #0
 80020aa:	f44f 4100 	mov.w	r1, #32768	@ 0x8000
 80020ae:	4856      	ldr	r0, [pc, #344]	@ (8002208 <main+0xb7c>)
 80020b0:	f002 f9d6 	bl	8004460 <HAL_GPIO_WritePin>
				step_state1 = 0;
 80020b4:	4b55      	ldr	r3, [pc, #340]	@ (800220c <main+0xb80>)
 80020b6:	2200      	movs	r2, #0
 80020b8:	601a      	str	r2, [r3, #0]
			}
		}
		// Stop when target steps are reached
		if (current_steps >= target_steps) {
 80020ba:	4b55      	ldr	r3, [pc, #340]	@ (8002210 <main+0xb84>)
 80020bc:	681a      	ldr	r2, [r3, #0]
 80020be:	4b55      	ldr	r3, [pc, #340]	@ (8002214 <main+0xb88>)
 80020c0:	681b      	ldr	r3, [r3, #0]
 80020c2:	429a      	cmp	r2, r3
 80020c4:	d30a      	bcc.n	80020dc <main+0xa50>
			stepper_running = 0;
 80020c6:	4b54      	ldr	r3, [pc, #336]	@ (8002218 <main+0xb8c>)
 80020c8:	2200      	movs	r2, #0
 80020ca:	601a      	str	r2, [r3, #0]
			current_steps = 0;
 80020cc:	4b50      	ldr	r3, [pc, #320]	@ (8002210 <main+0xb84>)
 80020ce:	2200      	movs	r2, #0
 80020d0:	601a      	str	r2, [r3, #0]
			HAL_GPIO_WritePin(GPIOC, GPIO_PIN_7, GPIO_PIN_SET);
 80020d2:	2201      	movs	r2, #1
 80020d4:	2180      	movs	r1, #128	@ 0x80
 80020d6:	4851      	ldr	r0, [pc, #324]	@ (800221c <main+0xb90>)
 80020d8:	f002 f9c2 	bl	8004460 <HAL_GPIO_WritePin>
		}
		if (current_steps1 >= target_steps1) {
 80020dc:	4b50      	ldr	r3, [pc, #320]	@ (8002220 <main+0xb94>)
 80020de:	681a      	ldr	r2, [r3, #0]
 80020e0:	4b50      	ldr	r3, [pc, #320]	@ (8002224 <main+0xb98>)
 80020e2:	681b      	ldr	r3, [r3, #0]
 80020e4:	429a      	cmp	r2, r3
 80020e6:	d30a      	bcc.n	80020fe <main+0xa72>
			stepper_running1 = 0;
 80020e8:	4b4f      	ldr	r3, [pc, #316]	@ (8002228 <main+0xb9c>)
 80020ea:	2200      	movs	r2, #0
 80020ec:	601a      	str	r2, [r3, #0]
			current_steps1 = 0;
 80020ee:	4b4c      	ldr	r3, [pc, #304]	@ (8002220 <main+0xb94>)
 80020f0:	2200      	movs	r2, #0
 80020f2:	601a      	str	r2, [r3, #0]
			HAL_GPIO_WritePin(GPIOC, GPIO_PIN_7, GPIO_PIN_SET);
 80020f4:	2201      	movs	r2, #1
 80020f6:	2180      	movs	r1, #128	@ 0x80
 80020f8:	4848      	ldr	r0, [pc, #288]	@ (800221c <main+0xb90>)
 80020fa:	f002 f9b1 	bl	8004460 <HAL_GPIO_WritePin>
		}

		/* IMU */

		/* Dribbling */
		if (tri == 1 && !prev_tri) {
 80020fe:	4b4b      	ldr	r3, [pc, #300]	@ (800222c <main+0xba0>)
 8002100:	681b      	ldr	r3, [r3, #0]
 8002102:	2b01      	cmp	r3, #1
 8002104:	d106      	bne.n	8002114 <main+0xa88>
 8002106:	4b4a      	ldr	r3, [pc, #296]	@ (8002230 <main+0xba4>)
 8002108:	681b      	ldr	r3, [r3, #0]
 800210a:	2b00      	cmp	r3, #0
 800210c:	d102      	bne.n	8002114 <main+0xa88>
			ebike_running = 1;
 800210e:	4b49      	ldr	r3, [pc, #292]	@ (8002234 <main+0xba8>)
 8002110:	2201      	movs	r2, #1
 8002112:	601a      	str	r2, [r3, #0]
		}
		if (cro == 1 && !prev_cro) {  // cro button pressed
 8002114:	4b48      	ldr	r3, [pc, #288]	@ (8002238 <main+0xbac>)
 8002116:	681b      	ldr	r3, [r3, #0]
 8002118:	2b01      	cmp	r3, #1
 800211a:	d109      	bne.n	8002130 <main+0xaa4>
 800211c:	4b47      	ldr	r3, [pc, #284]	@ (800223c <main+0xbb0>)
 800211e:	681b      	ldr	r3, [r3, #0]
 8002120:	2b00      	cmp	r3, #0
 8002122:	d105      	bne.n	8002130 <main+0xaa4>
			printf("cross pressed");
 8002124:	4846      	ldr	r0, [pc, #280]	@ (8002240 <main+0xbb4>)
 8002126:	f007 f975 	bl	8009414 <iprintf>
//			direction1 = 0;  // Set to Clockwise
			ebike_running = 0;
 800212a:	4b42      	ldr	r3, [pc, #264]	@ (8002234 <main+0xba8>)
 800212c:	2200      	movs	r2, #0
 800212e:	601a      	str	r2, [r3, #0]
		}
		if (ll2 == 1 && !prev_ll2) {
 8002130:	4b44      	ldr	r3, [pc, #272]	@ (8002244 <main+0xbb8>)
 8002132:	681b      	ldr	r3, [r3, #0]
 8002134:	2b01      	cmp	r3, #1
 8002136:	d108      	bne.n	800214a <main+0xabe>
 8002138:	4b43      	ldr	r3, [pc, #268]	@ (8002248 <main+0xbbc>)
 800213a:	681b      	ldr	r3, [r3, #0]
 800213c:	2b00      	cmp	r3, #0
 800213e:	d104      	bne.n	800214a <main+0xabe>
			drib_speed = drib_speed + 2;
 8002140:	4b42      	ldr	r3, [pc, #264]	@ (800224c <main+0xbc0>)
 8002142:	681b      	ldr	r3, [r3, #0]
 8002144:	3302      	adds	r3, #2
 8002146:	4a41      	ldr	r2, [pc, #260]	@ (800224c <main+0xbc0>)
 8002148:	6013      	str	r3, [r2, #0]
		}
		prev_ll2 = ll2;
 800214a:	4b3e      	ldr	r3, [pc, #248]	@ (8002244 <main+0xbb8>)
 800214c:	681b      	ldr	r3, [r3, #0]
 800214e:	4a3e      	ldr	r2, [pc, #248]	@ (8002248 <main+0xbbc>)
 8002150:	6013      	str	r3, [r2, #0]
		if (rr2 == 1 && !prev_rr2) {
 8002152:	4b3f      	ldr	r3, [pc, #252]	@ (8002250 <main+0xbc4>)
 8002154:	681b      	ldr	r3, [r3, #0]
 8002156:	2b01      	cmp	r3, #1
 8002158:	d108      	bne.n	800216c <main+0xae0>
 800215a:	4b3e      	ldr	r3, [pc, #248]	@ (8002254 <main+0xbc8>)
 800215c:	681b      	ldr	r3, [r3, #0]
 800215e:	2b00      	cmp	r3, #0
 8002160:	d104      	bne.n	800216c <main+0xae0>
			drib_speed = drib_speed - 2;
 8002162:	4b3a      	ldr	r3, [pc, #232]	@ (800224c <main+0xbc0>)
 8002164:	681b      	ldr	r3, [r3, #0]
 8002166:	3b02      	subs	r3, #2
 8002168:	4a38      	ldr	r2, [pc, #224]	@ (800224c <main+0xbc0>)
 800216a:	6013      	str	r3, [r2, #0]
		}
		prev_rr2 = rr2;
 800216c:	4b38      	ldr	r3, [pc, #224]	@ (8002250 <main+0xbc4>)
 800216e:	681b      	ldr	r3, [r3, #0]
 8002170:	4a38      	ldr	r2, [pc, #224]	@ (8002254 <main+0xbc8>)
 8002172:	6013      	str	r3, [r2, #0]
		prev_tri = tri;
 8002174:	4b2d      	ldr	r3, [pc, #180]	@ (800222c <main+0xba0>)
 8002176:	681b      	ldr	r3, [r3, #0]
 8002178:	4a2d      	ldr	r2, [pc, #180]	@ (8002230 <main+0xba4>)
 800217a:	6013      	str	r3, [r2, #0]
		prev_cro = cro;
 800217c:	4b2e      	ldr	r3, [pc, #184]	@ (8002238 <main+0xbac>)
 800217e:	681b      	ldr	r3, [r3, #0]
 8002180:	4a2e      	ldr	r2, [pc, #184]	@ (800223c <main+0xbb0>)
 8002182:	6013      	str	r3, [r2, #0]
		if (ebike_running) {
 8002184:	4b2b      	ldr	r3, [pc, #172]	@ (8002234 <main+0xba8>)
 8002186:	681b      	ldr	r3, [r3, #0]
 8002188:	2b00      	cmp	r3, #0
 800218a:	d016      	beq.n	80021ba <main+0xb2e>
			HAL_GPIO_WritePin(GPIOC, GPIO_PIN_15, 1);
 800218c:	2201      	movs	r2, #1
 800218e:	f44f 4100 	mov.w	r1, #32768	@ 0x8000
 8002192:	4822      	ldr	r0, [pc, #136]	@ (800221c <main+0xb90>)
 8002194:	f002 f964 	bl	8004460 <HAL_GPIO_WritePin>
			TIM13->CCR1 = (drib_speed * 999) / 100;  //rpm 2000 test
 8002198:	4b2c      	ldr	r3, [pc, #176]	@ (800224c <main+0xbc0>)
 800219a:	681b      	ldr	r3, [r3, #0]
 800219c:	f240 32e7 	movw	r2, #999	@ 0x3e7
 80021a0:	fb02 f303 	mul.w	r3, r2, r3
 80021a4:	4a2c      	ldr	r2, [pc, #176]	@ (8002258 <main+0xbcc>)
 80021a6:	492d      	ldr	r1, [pc, #180]	@ (800225c <main+0xbd0>)
 80021a8:	fba1 1303 	umull	r1, r3, r1, r3
 80021ac:	095b      	lsrs	r3, r3, #5
 80021ae:	6353      	str	r3, [r2, #52]	@ 0x34
			HAL_TIM_PWM_Start(&htim13, TIM_CHANNEL_1);
 80021b0:	2100      	movs	r1, #0
 80021b2:	482b      	ldr	r0, [pc, #172]	@ (8002260 <main+0xbd4>)
 80021b4:	f004 f862 	bl	800627c <HAL_TIM_PWM_Start>
 80021b8:	e006      	b.n	80021c8 <main+0xb3c>
		} else {
			//			HAL_GPIO_WritePin(GPIOC, GPIO_PIN_15, 1);
			TIM13->CCR1 = (0 * 999) / 100;
 80021ba:	4b27      	ldr	r3, [pc, #156]	@ (8002258 <main+0xbcc>)
 80021bc:	2200      	movs	r2, #0
 80021be:	635a      	str	r2, [r3, #52]	@ 0x34
			HAL_TIM_PWM_Start(&htim13, TIM_CHANNEL_1);
 80021c0:	2100      	movs	r1, #0
 80021c2:	4827      	ldr	r0, [pc, #156]	@ (8002260 <main+0xbd4>)
 80021c4:	f004 f85a 	bl	800627c <HAL_TIM_PWM_Start>
		}

		// pneumatics
		if (squ == 1) {
 80021c8:	4b26      	ldr	r3, [pc, #152]	@ (8002264 <main+0xbd8>)
 80021ca:	681b      	ldr	r3, [r3, #0]
 80021cc:	2b01      	cmp	r3, #1
 80021ce:	d103      	bne.n	80021d8 <main+0xb4c>
			pneumatic_open = 1;
 80021d0:	4b25      	ldr	r3, [pc, #148]	@ (8002268 <main+0xbdc>)
 80021d2:	2201      	movs	r2, #1
 80021d4:	601a      	str	r2, [r3, #0]
 80021d6:	e002      	b.n	80021de <main+0xb52>
		} else {
			pneumatic_open = 0;
 80021d8:	4b23      	ldr	r3, [pc, #140]	@ (8002268 <main+0xbdc>)
 80021da:	2200      	movs	r2, #0
 80021dc:	601a      	str	r2, [r3, #0]
		}
//		prev_squ = squ;
		if (pneumatic_open) {
 80021de:	4b22      	ldr	r3, [pc, #136]	@ (8002268 <main+0xbdc>)
 80021e0:	681b      	ldr	r3, [r3, #0]
 80021e2:	2b00      	cmp	r3, #0
 80021e4:	d007      	beq.n	80021f6 <main+0xb6a>
			HAL_GPIO_WritePin(GPIOA, GPIO_PIN_12, 1);
 80021e6:	2201      	movs	r2, #1
 80021e8:	f44f 5180 	mov.w	r1, #4096	@ 0x1000
 80021ec:	481f      	ldr	r0, [pc, #124]	@ (800226c <main+0xbe0>)
 80021ee:	f002 f937 	bl	8004460 <HAL_GPIO_WritePin>
 80021f2:	f7ff ba86 	b.w	8001702 <main+0x76>
		} else {
			HAL_GPIO_WritePin(GPIOA, GPIO_PIN_12, 0);
 80021f6:	2200      	movs	r2, #0
 80021f8:	f44f 5180 	mov.w	r1, #4096	@ 0x1000
 80021fc:	481b      	ldr	r0, [pc, #108]	@ (800226c <main+0xbe0>)
 80021fe:	f002 f92f 	bl	8004460 <HAL_GPIO_WritePin>
	while (1) {
 8002202:	f7ff ba7e 	b.w	8001702 <main+0x76>
 8002206:	bf00      	nop
 8002208:	40020400 	.word	0x40020400
 800220c:	200005f4 	.word	0x200005f4
 8002210:	20000624 	.word	0x20000624
 8002214:	20000620 	.word	0x20000620
 8002218:	200005f8 	.word	0x200005f8
 800221c:	40020800 	.word	0x40020800
 8002220:	2000062c 	.word	0x2000062c
 8002224:	20000628 	.word	0x20000628
 8002228:	200005fc 	.word	0x200005fc
 800222c:	20000668 	.word	0x20000668
 8002230:	20000608 	.word	0x20000608
 8002234:	20000600 	.word	0x20000600
 8002238:	20000660 	.word	0x20000660
 800223c:	2000060c 	.word	0x2000060c
 8002240:	0800d000 	.word	0x0800d000
 8002244:	20000688 	.word	0x20000688
 8002248:	20000618 	.word	0x20000618
 800224c:	2000000c 	.word	0x2000000c
 8002250:	2000068c 	.word	0x2000068c
 8002254:	2000061c 	.word	0x2000061c
 8002258:	40001c00 	.word	0x40001c00
 800225c:	51eb851f 	.word	0x51eb851f
 8002260:	200004b0 	.word	0x200004b0
 8002264:	20000664 	.word	0x20000664
 8002268:	2000063c 	.word	0x2000063c
 800226c:	40020000 	.word	0x40020000

08002270 <SystemClock_Config>:

/**
 * @brief System Clock Configuration
 * @retval None
 */
void SystemClock_Config(void) {
 8002270:	b580      	push	{r7, lr}
 8002272:	b094      	sub	sp, #80	@ 0x50
 8002274:	af00      	add	r7, sp, #0
	RCC_OscInitTypeDef RCC_OscInitStruct = { 0 };
 8002276:	f107 031c 	add.w	r3, r7, #28
 800227a:	2234      	movs	r2, #52	@ 0x34
 800227c:	2100      	movs	r1, #0
 800227e:	4618      	mov	r0, r3
 8002280:	f007 fa30 	bl	80096e4 <memset>
	RCC_ClkInitTypeDef RCC_ClkInitStruct = { 0 };
 8002284:	f107 0308 	add.w	r3, r7, #8
 8002288:	2200      	movs	r2, #0
 800228a:	601a      	str	r2, [r3, #0]
 800228c:	605a      	str	r2, [r3, #4]
 800228e:	609a      	str	r2, [r3, #8]
 8002290:	60da      	str	r2, [r3, #12]
 8002292:	611a      	str	r2, [r3, #16]

	/** Configure the main internal regulator output voltage
	 */
	__HAL_RCC_PWR_CLK_ENABLE();
 8002294:	2300      	movs	r3, #0
 8002296:	607b      	str	r3, [r7, #4]
 8002298:	4b2c      	ldr	r3, [pc, #176]	@ (800234c <SystemClock_Config+0xdc>)
 800229a:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800229c:	4a2b      	ldr	r2, [pc, #172]	@ (800234c <SystemClock_Config+0xdc>)
 800229e:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 80022a2:	6413      	str	r3, [r2, #64]	@ 0x40
 80022a4:	4b29      	ldr	r3, [pc, #164]	@ (800234c <SystemClock_Config+0xdc>)
 80022a6:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80022a8:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 80022ac:	607b      	str	r3, [r7, #4]
 80022ae:	687b      	ldr	r3, [r7, #4]
	__HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 80022b0:	2300      	movs	r3, #0
 80022b2:	603b      	str	r3, [r7, #0]
 80022b4:	4b26      	ldr	r3, [pc, #152]	@ (8002350 <SystemClock_Config+0xe0>)
 80022b6:	681b      	ldr	r3, [r3, #0]
 80022b8:	4a25      	ldr	r2, [pc, #148]	@ (8002350 <SystemClock_Config+0xe0>)
 80022ba:	f443 4340 	orr.w	r3, r3, #49152	@ 0xc000
 80022be:	6013      	str	r3, [r2, #0]
 80022c0:	4b23      	ldr	r3, [pc, #140]	@ (8002350 <SystemClock_Config+0xe0>)
 80022c2:	681b      	ldr	r3, [r3, #0]
 80022c4:	f403 4340 	and.w	r3, r3, #49152	@ 0xc000
 80022c8:	603b      	str	r3, [r7, #0]
 80022ca:	683b      	ldr	r3, [r7, #0]

	/** Initializes the RCC Oscillators according to the specified parameters
	 * in the RCC_OscInitTypeDef structure.
	 */
	RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 80022cc:	2302      	movs	r3, #2
 80022ce:	61fb      	str	r3, [r7, #28]
	RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 80022d0:	2301      	movs	r3, #1
 80022d2:	62bb      	str	r3, [r7, #40]	@ 0x28
	RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 80022d4:	2310      	movs	r3, #16
 80022d6:	62fb      	str	r3, [r7, #44]	@ 0x2c
	RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 80022d8:	2302      	movs	r3, #2
 80022da:	637b      	str	r3, [r7, #52]	@ 0x34
	RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 80022dc:	2300      	movs	r3, #0
 80022de:	63bb      	str	r3, [r7, #56]	@ 0x38
	RCC_OscInitStruct.PLL.PLLM = 8;
 80022e0:	2308      	movs	r3, #8
 80022e2:	63fb      	str	r3, [r7, #60]	@ 0x3c
	RCC_OscInitStruct.PLL.PLLN = 180;
 80022e4:	23b4      	movs	r3, #180	@ 0xb4
 80022e6:	643b      	str	r3, [r7, #64]	@ 0x40
	RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 80022e8:	2302      	movs	r3, #2
 80022ea:	647b      	str	r3, [r7, #68]	@ 0x44
	RCC_OscInitStruct.PLL.PLLQ = 2;
 80022ec:	2302      	movs	r3, #2
 80022ee:	64bb      	str	r3, [r7, #72]	@ 0x48
	RCC_OscInitStruct.PLL.PLLR = 2;
 80022f0:	2302      	movs	r3, #2
 80022f2:	64fb      	str	r3, [r7, #76]	@ 0x4c
	if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK) {
 80022f4:	f107 031c 	add.w	r3, r7, #28
 80022f8:	4618      	mov	r0, r3
 80022fa:	f003 fc79 	bl	8005bf0 <HAL_RCC_OscConfig>
 80022fe:	4603      	mov	r3, r0
 8002300:	2b00      	cmp	r3, #0
 8002302:	d001      	beq.n	8002308 <SystemClock_Config+0x98>
		Error_Handler();
 8002304:	f000 fca0 	bl	8002c48 <Error_Handler>
	}

	/** Activate the Over-Drive mode
	 */
	if (HAL_PWREx_EnableOverDrive() != HAL_OK) {
 8002308:	f003 f8d8 	bl	80054bc <HAL_PWREx_EnableOverDrive>
 800230c:	4603      	mov	r3, r0
 800230e:	2b00      	cmp	r3, #0
 8002310:	d001      	beq.n	8002316 <SystemClock_Config+0xa6>
		Error_Handler();
 8002312:	f000 fc99 	bl	8002c48 <Error_Handler>
	}

	/** Initializes the CPU, AHB and APB buses clocks
	 */
	RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_SYSCLK
 8002316:	230f      	movs	r3, #15
 8002318:	60bb      	str	r3, [r7, #8]
			| RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2;
	RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 800231a:	2302      	movs	r3, #2
 800231c:	60fb      	str	r3, [r7, #12]
	RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 800231e:	2300      	movs	r3, #0
 8002320:	613b      	str	r3, [r7, #16]
	RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 8002322:	f44f 53a0 	mov.w	r3, #5120	@ 0x1400
 8002326:	617b      	str	r3, [r7, #20]
	RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 8002328:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 800232c:	61bb      	str	r3, [r7, #24]

	if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK) {
 800232e:	f107 0308 	add.w	r3, r7, #8
 8002332:	2105      	movs	r1, #5
 8002334:	4618      	mov	r0, r3
 8002336:	f003 f911 	bl	800555c <HAL_RCC_ClockConfig>
 800233a:	4603      	mov	r3, r0
 800233c:	2b00      	cmp	r3, #0
 800233e:	d001      	beq.n	8002344 <SystemClock_Config+0xd4>
		Error_Handler();
 8002340:	f000 fc82 	bl	8002c48 <Error_Handler>
	}
}
 8002344:	bf00      	nop
 8002346:	3750      	adds	r7, #80	@ 0x50
 8002348:	46bd      	mov	sp, r7
 800234a:	bd80      	pop	{r7, pc}
 800234c:	40023800 	.word	0x40023800
 8002350:	40007000 	.word	0x40007000

08002354 <MX_I2C1_Init>:
/**
 * @brief I2C1 Initialization Function
 * @param None
 * @retval None
 */
static void MX_I2C1_Init(void) {
 8002354:	b580      	push	{r7, lr}
 8002356:	af00      	add	r7, sp, #0
	/* USER CODE END I2C1_Init 0 */

	/* USER CODE BEGIN I2C1_Init 1 */

	/* USER CODE END I2C1_Init 1 */
	hi2c1.Instance = I2C1;
 8002358:	4b12      	ldr	r3, [pc, #72]	@ (80023a4 <MX_I2C1_Init+0x50>)
 800235a:	4a13      	ldr	r2, [pc, #76]	@ (80023a8 <MX_I2C1_Init+0x54>)
 800235c:	601a      	str	r2, [r3, #0]
	hi2c1.Init.ClockSpeed = 400000;
 800235e:	4b11      	ldr	r3, [pc, #68]	@ (80023a4 <MX_I2C1_Init+0x50>)
 8002360:	4a12      	ldr	r2, [pc, #72]	@ (80023ac <MX_I2C1_Init+0x58>)
 8002362:	605a      	str	r2, [r3, #4]
	hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
 8002364:	4b0f      	ldr	r3, [pc, #60]	@ (80023a4 <MX_I2C1_Init+0x50>)
 8002366:	2200      	movs	r2, #0
 8002368:	609a      	str	r2, [r3, #8]
	hi2c1.Init.OwnAddress1 = 0;
 800236a:	4b0e      	ldr	r3, [pc, #56]	@ (80023a4 <MX_I2C1_Init+0x50>)
 800236c:	2200      	movs	r2, #0
 800236e:	60da      	str	r2, [r3, #12]
	hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 8002370:	4b0c      	ldr	r3, [pc, #48]	@ (80023a4 <MX_I2C1_Init+0x50>)
 8002372:	f44f 4280 	mov.w	r2, #16384	@ 0x4000
 8002376:	611a      	str	r2, [r3, #16]
	hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 8002378:	4b0a      	ldr	r3, [pc, #40]	@ (80023a4 <MX_I2C1_Init+0x50>)
 800237a:	2200      	movs	r2, #0
 800237c:	615a      	str	r2, [r3, #20]
	hi2c1.Init.OwnAddress2 = 0;
 800237e:	4b09      	ldr	r3, [pc, #36]	@ (80023a4 <MX_I2C1_Init+0x50>)
 8002380:	2200      	movs	r2, #0
 8002382:	619a      	str	r2, [r3, #24]
	hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 8002384:	4b07      	ldr	r3, [pc, #28]	@ (80023a4 <MX_I2C1_Init+0x50>)
 8002386:	2200      	movs	r2, #0
 8002388:	61da      	str	r2, [r3, #28]
	hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 800238a:	4b06      	ldr	r3, [pc, #24]	@ (80023a4 <MX_I2C1_Init+0x50>)
 800238c:	2200      	movs	r2, #0
 800238e:	621a      	str	r2, [r3, #32]
	if (HAL_I2C_Init(&hi2c1) != HAL_OK) {
 8002390:	4804      	ldr	r0, [pc, #16]	@ (80023a4 <MX_I2C1_Init+0x50>)
 8002392:	f002 f87f 	bl	8004494 <HAL_I2C_Init>
 8002396:	4603      	mov	r3, r0
 8002398:	2b00      	cmp	r3, #0
 800239a:	d001      	beq.n	80023a0 <MX_I2C1_Init+0x4c>
		Error_Handler();
 800239c:	f000 fc54 	bl	8002c48 <Error_Handler>
	}
	/* USER CODE BEGIN I2C1_Init 2 */

	/* USER CODE END I2C1_Init 2 */

}
 80023a0:	bf00      	nop
 80023a2:	bd80      	pop	{r7, pc}
 80023a4:	2000021c 	.word	0x2000021c
 80023a8:	40005400 	.word	0x40005400
 80023ac:	00061a80 	.word	0x00061a80

080023b0 <MX_TIM1_Init>:
/**
 * @brief TIM1 Initialization Function
 * @param None
 * @retval None
 */
static void MX_TIM1_Init(void) {
 80023b0:	b580      	push	{r7, lr}
 80023b2:	b08c      	sub	sp, #48	@ 0x30
 80023b4:	af00      	add	r7, sp, #0

	/* USER CODE BEGIN TIM1_Init 0 */

	/* USER CODE END TIM1_Init 0 */

	TIM_Encoder_InitTypeDef sConfig = { 0 };
 80023b6:	f107 030c 	add.w	r3, r7, #12
 80023ba:	2224      	movs	r2, #36	@ 0x24
 80023bc:	2100      	movs	r1, #0
 80023be:	4618      	mov	r0, r3
 80023c0:	f007 f990 	bl	80096e4 <memset>
	TIM_MasterConfigTypeDef sMasterConfig = { 0 };
 80023c4:	1d3b      	adds	r3, r7, #4
 80023c6:	2200      	movs	r2, #0
 80023c8:	601a      	str	r2, [r3, #0]
 80023ca:	605a      	str	r2, [r3, #4]

	/* USER CODE BEGIN TIM1_Init 1 */

	/* USER CODE END TIM1_Init 1 */
	htim1.Instance = TIM1;
 80023cc:	4b22      	ldr	r3, [pc, #136]	@ (8002458 <MX_TIM1_Init+0xa8>)
 80023ce:	4a23      	ldr	r2, [pc, #140]	@ (800245c <MX_TIM1_Init+0xac>)
 80023d0:	601a      	str	r2, [r3, #0]
	htim1.Init.Prescaler = 0;
 80023d2:	4b21      	ldr	r3, [pc, #132]	@ (8002458 <MX_TIM1_Init+0xa8>)
 80023d4:	2200      	movs	r2, #0
 80023d6:	605a      	str	r2, [r3, #4]
	htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 80023d8:	4b1f      	ldr	r3, [pc, #124]	@ (8002458 <MX_TIM1_Init+0xa8>)
 80023da:	2200      	movs	r2, #0
 80023dc:	609a      	str	r2, [r3, #8]
	htim1.Init.Period = 65535;
 80023de:	4b1e      	ldr	r3, [pc, #120]	@ (8002458 <MX_TIM1_Init+0xa8>)
 80023e0:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 80023e4:	60da      	str	r2, [r3, #12]
	htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 80023e6:	4b1c      	ldr	r3, [pc, #112]	@ (8002458 <MX_TIM1_Init+0xa8>)
 80023e8:	2200      	movs	r2, #0
 80023ea:	611a      	str	r2, [r3, #16]
	htim1.Init.RepetitionCounter = 0;
 80023ec:	4b1a      	ldr	r3, [pc, #104]	@ (8002458 <MX_TIM1_Init+0xa8>)
 80023ee:	2200      	movs	r2, #0
 80023f0:	615a      	str	r2, [r3, #20]
	htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 80023f2:	4b19      	ldr	r3, [pc, #100]	@ (8002458 <MX_TIM1_Init+0xa8>)
 80023f4:	2200      	movs	r2, #0
 80023f6:	619a      	str	r2, [r3, #24]
	sConfig.EncoderMode = TIM_ENCODERMODE_TI1;
 80023f8:	2301      	movs	r3, #1
 80023fa:	60fb      	str	r3, [r7, #12]
	sConfig.IC1Polarity = TIM_ICPOLARITY_RISING;
 80023fc:	2300      	movs	r3, #0
 80023fe:	613b      	str	r3, [r7, #16]
	sConfig.IC1Selection = TIM_ICSELECTION_DIRECTTI;
 8002400:	2301      	movs	r3, #1
 8002402:	617b      	str	r3, [r7, #20]
	sConfig.IC1Prescaler = TIM_ICPSC_DIV1;
 8002404:	2300      	movs	r3, #0
 8002406:	61bb      	str	r3, [r7, #24]
	sConfig.IC1Filter = 0;
 8002408:	2300      	movs	r3, #0
 800240a:	61fb      	str	r3, [r7, #28]
	sConfig.IC2Polarity = TIM_ICPOLARITY_RISING;
 800240c:	2300      	movs	r3, #0
 800240e:	623b      	str	r3, [r7, #32]
	sConfig.IC2Selection = TIM_ICSELECTION_DIRECTTI;
 8002410:	2301      	movs	r3, #1
 8002412:	627b      	str	r3, [r7, #36]	@ 0x24
	sConfig.IC2Prescaler = TIM_ICPSC_DIV1;
 8002414:	2300      	movs	r3, #0
 8002416:	62bb      	str	r3, [r7, #40]	@ 0x28
	sConfig.IC2Filter = 0;
 8002418:	2300      	movs	r3, #0
 800241a:	62fb      	str	r3, [r7, #44]	@ 0x2c
	if (HAL_TIM_Encoder_Init(&htim1, &sConfig) != HAL_OK) {
 800241c:	f107 030c 	add.w	r3, r7, #12
 8002420:	4619      	mov	r1, r3
 8002422:	480d      	ldr	r0, [pc, #52]	@ (8002458 <MX_TIM1_Init+0xa8>)
 8002424:	f003 fff2 	bl	800640c <HAL_TIM_Encoder_Init>
 8002428:	4603      	mov	r3, r0
 800242a:	2b00      	cmp	r3, #0
 800242c:	d001      	beq.n	8002432 <MX_TIM1_Init+0x82>
		Error_Handler();
 800242e:	f000 fc0b 	bl	8002c48 <Error_Handler>
	}
	sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8002432:	2300      	movs	r3, #0
 8002434:	607b      	str	r3, [r7, #4]
	sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8002436:	2300      	movs	r3, #0
 8002438:	60bb      	str	r3, [r7, #8]
	if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig)
 800243a:	1d3b      	adds	r3, r7, #4
 800243c:	4619      	mov	r1, r3
 800243e:	4806      	ldr	r0, [pc, #24]	@ (8002458 <MX_TIM1_Init+0xa8>)
 8002440:	f004 fe56 	bl	80070f0 <HAL_TIMEx_MasterConfigSynchronization>
 8002444:	4603      	mov	r3, r0
 8002446:	2b00      	cmp	r3, #0
 8002448:	d001      	beq.n	800244e <MX_TIM1_Init+0x9e>
			!= HAL_OK) {
		Error_Handler();
 800244a:	f000 fbfd 	bl	8002c48 <Error_Handler>
	}
	/* USER CODE BEGIN TIM1_Init 2 */

	/* USER CODE END TIM1_Init 2 */

}
 800244e:	bf00      	nop
 8002450:	3730      	adds	r7, #48	@ 0x30
 8002452:	46bd      	mov	sp, r7
 8002454:	bd80      	pop	{r7, pc}
 8002456:	bf00      	nop
 8002458:	20000270 	.word	0x20000270
 800245c:	40010000 	.word	0x40010000

08002460 <MX_TIM2_Init>:
/**
 * @brief TIM2 Initialization Function
 * @param None
 * @retval None
 */
static void MX_TIM2_Init(void) {
 8002460:	b580      	push	{r7, lr}
 8002462:	b08c      	sub	sp, #48	@ 0x30
 8002464:	af00      	add	r7, sp, #0

	/* USER CODE BEGIN TIM2_Init 0 */

	/* USER CODE END TIM2_Init 0 */

	TIM_Encoder_InitTypeDef sConfig = { 0 };
 8002466:	f107 030c 	add.w	r3, r7, #12
 800246a:	2224      	movs	r2, #36	@ 0x24
 800246c:	2100      	movs	r1, #0
 800246e:	4618      	mov	r0, r3
 8002470:	f007 f938 	bl	80096e4 <memset>
	TIM_MasterConfigTypeDef sMasterConfig = { 0 };
 8002474:	1d3b      	adds	r3, r7, #4
 8002476:	2200      	movs	r2, #0
 8002478:	601a      	str	r2, [r3, #0]
 800247a:	605a      	str	r2, [r3, #4]

	/* USER CODE BEGIN TIM2_Init 1 */

	/* USER CODE END TIM2_Init 1 */
	htim2.Instance = TIM2;
 800247c:	4b21      	ldr	r3, [pc, #132]	@ (8002504 <MX_TIM2_Init+0xa4>)
 800247e:	f04f 4280 	mov.w	r2, #1073741824	@ 0x40000000
 8002482:	601a      	str	r2, [r3, #0]
	htim2.Init.Prescaler = 0;
 8002484:	4b1f      	ldr	r3, [pc, #124]	@ (8002504 <MX_TIM2_Init+0xa4>)
 8002486:	2200      	movs	r2, #0
 8002488:	605a      	str	r2, [r3, #4]
	htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 800248a:	4b1e      	ldr	r3, [pc, #120]	@ (8002504 <MX_TIM2_Init+0xa4>)
 800248c:	2200      	movs	r2, #0
 800248e:	609a      	str	r2, [r3, #8]
	htim2.Init.Period = 4294967295;
 8002490:	4b1c      	ldr	r3, [pc, #112]	@ (8002504 <MX_TIM2_Init+0xa4>)
 8002492:	f04f 32ff 	mov.w	r2, #4294967295
 8002496:	60da      	str	r2, [r3, #12]
	htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8002498:	4b1a      	ldr	r3, [pc, #104]	@ (8002504 <MX_TIM2_Init+0xa4>)
 800249a:	2200      	movs	r2, #0
 800249c:	611a      	str	r2, [r3, #16]
	htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 800249e:	4b19      	ldr	r3, [pc, #100]	@ (8002504 <MX_TIM2_Init+0xa4>)
 80024a0:	2200      	movs	r2, #0
 80024a2:	619a      	str	r2, [r3, #24]
	sConfig.EncoderMode = TIM_ENCODERMODE_TI1;
 80024a4:	2301      	movs	r3, #1
 80024a6:	60fb      	str	r3, [r7, #12]
	sConfig.IC1Polarity = TIM_ICPOLARITY_RISING;
 80024a8:	2300      	movs	r3, #0
 80024aa:	613b      	str	r3, [r7, #16]
	sConfig.IC1Selection = TIM_ICSELECTION_DIRECTTI;
 80024ac:	2301      	movs	r3, #1
 80024ae:	617b      	str	r3, [r7, #20]
	sConfig.IC1Prescaler = TIM_ICPSC_DIV1;
 80024b0:	2300      	movs	r3, #0
 80024b2:	61bb      	str	r3, [r7, #24]
	sConfig.IC1Filter = 0;
 80024b4:	2300      	movs	r3, #0
 80024b6:	61fb      	str	r3, [r7, #28]
	sConfig.IC2Polarity = TIM_ICPOLARITY_RISING;
 80024b8:	2300      	movs	r3, #0
 80024ba:	623b      	str	r3, [r7, #32]
	sConfig.IC2Selection = TIM_ICSELECTION_DIRECTTI;
 80024bc:	2301      	movs	r3, #1
 80024be:	627b      	str	r3, [r7, #36]	@ 0x24
	sConfig.IC2Prescaler = TIM_ICPSC_DIV1;
 80024c0:	2300      	movs	r3, #0
 80024c2:	62bb      	str	r3, [r7, #40]	@ 0x28
	sConfig.IC2Filter = 0;
 80024c4:	2300      	movs	r3, #0
 80024c6:	62fb      	str	r3, [r7, #44]	@ 0x2c
	if (HAL_TIM_Encoder_Init(&htim2, &sConfig) != HAL_OK) {
 80024c8:	f107 030c 	add.w	r3, r7, #12
 80024cc:	4619      	mov	r1, r3
 80024ce:	480d      	ldr	r0, [pc, #52]	@ (8002504 <MX_TIM2_Init+0xa4>)
 80024d0:	f003 ff9c 	bl	800640c <HAL_TIM_Encoder_Init>
 80024d4:	4603      	mov	r3, r0
 80024d6:	2b00      	cmp	r3, #0
 80024d8:	d001      	beq.n	80024de <MX_TIM2_Init+0x7e>
		Error_Handler();
 80024da:	f000 fbb5 	bl	8002c48 <Error_Handler>
	}
	sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 80024de:	2300      	movs	r3, #0
 80024e0:	607b      	str	r3, [r7, #4]
	sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 80024e2:	2300      	movs	r3, #0
 80024e4:	60bb      	str	r3, [r7, #8]
	if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig)
 80024e6:	1d3b      	adds	r3, r7, #4
 80024e8:	4619      	mov	r1, r3
 80024ea:	4806      	ldr	r0, [pc, #24]	@ (8002504 <MX_TIM2_Init+0xa4>)
 80024ec:	f004 fe00 	bl	80070f0 <HAL_TIMEx_MasterConfigSynchronization>
 80024f0:	4603      	mov	r3, r0
 80024f2:	2b00      	cmp	r3, #0
 80024f4:	d001      	beq.n	80024fa <MX_TIM2_Init+0x9a>
			!= HAL_OK) {
		Error_Handler();
 80024f6:	f000 fba7 	bl	8002c48 <Error_Handler>
	}
	/* USER CODE BEGIN TIM2_Init 2 */

	/* USER CODE END TIM2_Init 2 */

}
 80024fa:	bf00      	nop
 80024fc:	3730      	adds	r7, #48	@ 0x30
 80024fe:	46bd      	mov	sp, r7
 8002500:	bd80      	pop	{r7, pc}
 8002502:	bf00      	nop
 8002504:	200002b8 	.word	0x200002b8

08002508 <MX_TIM3_Init>:
/**
 * @brief TIM3 Initialization Function
 * @param None
 * @retval None
 */
static void MX_TIM3_Init(void) {
 8002508:	b580      	push	{r7, lr}
 800250a:	b08c      	sub	sp, #48	@ 0x30
 800250c:	af00      	add	r7, sp, #0

	/* USER CODE BEGIN TIM3_Init 0 */

	/* USER CODE END TIM3_Init 0 */

	TIM_Encoder_InitTypeDef sConfig = { 0 };
 800250e:	f107 030c 	add.w	r3, r7, #12
 8002512:	2224      	movs	r2, #36	@ 0x24
 8002514:	2100      	movs	r1, #0
 8002516:	4618      	mov	r0, r3
 8002518:	f007 f8e4 	bl	80096e4 <memset>
	TIM_MasterConfigTypeDef sMasterConfig = { 0 };
 800251c:	1d3b      	adds	r3, r7, #4
 800251e:	2200      	movs	r2, #0
 8002520:	601a      	str	r2, [r3, #0]
 8002522:	605a      	str	r2, [r3, #4]

	/* USER CODE BEGIN TIM3_Init 1 */

	/* USER CODE END TIM3_Init 1 */
	htim3.Instance = TIM3;
 8002524:	4b20      	ldr	r3, [pc, #128]	@ (80025a8 <MX_TIM3_Init+0xa0>)
 8002526:	4a21      	ldr	r2, [pc, #132]	@ (80025ac <MX_TIM3_Init+0xa4>)
 8002528:	601a      	str	r2, [r3, #0]
	htim3.Init.Prescaler = 0;
 800252a:	4b1f      	ldr	r3, [pc, #124]	@ (80025a8 <MX_TIM3_Init+0xa0>)
 800252c:	2200      	movs	r2, #0
 800252e:	605a      	str	r2, [r3, #4]
	htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 8002530:	4b1d      	ldr	r3, [pc, #116]	@ (80025a8 <MX_TIM3_Init+0xa0>)
 8002532:	2200      	movs	r2, #0
 8002534:	609a      	str	r2, [r3, #8]
	htim3.Init.Period = 65535;
 8002536:	4b1c      	ldr	r3, [pc, #112]	@ (80025a8 <MX_TIM3_Init+0xa0>)
 8002538:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 800253c:	60da      	str	r2, [r3, #12]
	htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 800253e:	4b1a      	ldr	r3, [pc, #104]	@ (80025a8 <MX_TIM3_Init+0xa0>)
 8002540:	2200      	movs	r2, #0
 8002542:	611a      	str	r2, [r3, #16]
	htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8002544:	4b18      	ldr	r3, [pc, #96]	@ (80025a8 <MX_TIM3_Init+0xa0>)
 8002546:	2200      	movs	r2, #0
 8002548:	619a      	str	r2, [r3, #24]
	sConfig.EncoderMode = TIM_ENCODERMODE_TI1;
 800254a:	2301      	movs	r3, #1
 800254c:	60fb      	str	r3, [r7, #12]
	sConfig.IC1Polarity = TIM_ICPOLARITY_RISING;
 800254e:	2300      	movs	r3, #0
 8002550:	613b      	str	r3, [r7, #16]
	sConfig.IC1Selection = TIM_ICSELECTION_DIRECTTI;
 8002552:	2301      	movs	r3, #1
 8002554:	617b      	str	r3, [r7, #20]
	sConfig.IC1Prescaler = TIM_ICPSC_DIV1;
 8002556:	2300      	movs	r3, #0
 8002558:	61bb      	str	r3, [r7, #24]
	sConfig.IC1Filter = 0;
 800255a:	2300      	movs	r3, #0
 800255c:	61fb      	str	r3, [r7, #28]
	sConfig.IC2Polarity = TIM_ICPOLARITY_RISING;
 800255e:	2300      	movs	r3, #0
 8002560:	623b      	str	r3, [r7, #32]
	sConfig.IC2Selection = TIM_ICSELECTION_DIRECTTI;
 8002562:	2301      	movs	r3, #1
 8002564:	627b      	str	r3, [r7, #36]	@ 0x24
	sConfig.IC2Prescaler = TIM_ICPSC_DIV1;
 8002566:	2300      	movs	r3, #0
 8002568:	62bb      	str	r3, [r7, #40]	@ 0x28
	sConfig.IC2Filter = 0;
 800256a:	2300      	movs	r3, #0
 800256c:	62fb      	str	r3, [r7, #44]	@ 0x2c
	if (HAL_TIM_Encoder_Init(&htim3, &sConfig) != HAL_OK) {
 800256e:	f107 030c 	add.w	r3, r7, #12
 8002572:	4619      	mov	r1, r3
 8002574:	480c      	ldr	r0, [pc, #48]	@ (80025a8 <MX_TIM3_Init+0xa0>)
 8002576:	f003 ff49 	bl	800640c <HAL_TIM_Encoder_Init>
 800257a:	4603      	mov	r3, r0
 800257c:	2b00      	cmp	r3, #0
 800257e:	d001      	beq.n	8002584 <MX_TIM3_Init+0x7c>
		Error_Handler();
 8002580:	f000 fb62 	bl	8002c48 <Error_Handler>
	}
	sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8002584:	2300      	movs	r3, #0
 8002586:	607b      	str	r3, [r7, #4]
	sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8002588:	2300      	movs	r3, #0
 800258a:	60bb      	str	r3, [r7, #8]
	if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig)
 800258c:	1d3b      	adds	r3, r7, #4
 800258e:	4619      	mov	r1, r3
 8002590:	4805      	ldr	r0, [pc, #20]	@ (80025a8 <MX_TIM3_Init+0xa0>)
 8002592:	f004 fdad 	bl	80070f0 <HAL_TIMEx_MasterConfigSynchronization>
 8002596:	4603      	mov	r3, r0
 8002598:	2b00      	cmp	r3, #0
 800259a:	d001      	beq.n	80025a0 <MX_TIM3_Init+0x98>
			!= HAL_OK) {
		Error_Handler();
 800259c:	f000 fb54 	bl	8002c48 <Error_Handler>
	}
	/* USER CODE BEGIN TIM3_Init 2 */

	/* USER CODE END TIM3_Init 2 */

}
 80025a0:	bf00      	nop
 80025a2:	3730      	adds	r7, #48	@ 0x30
 80025a4:	46bd      	mov	sp, r7
 80025a6:	bd80      	pop	{r7, pc}
 80025a8:	20000300 	.word	0x20000300
 80025ac:	40000400 	.word	0x40000400

080025b0 <MX_TIM5_Init>:
/**
 * @brief TIM5 Initialization Function
 * @param None
 * @retval None
 */
static void MX_TIM5_Init(void) {
 80025b0:	b580      	push	{r7, lr}
 80025b2:	b08e      	sub	sp, #56	@ 0x38
 80025b4:	af00      	add	r7, sp, #0

	/* USER CODE BEGIN TIM5_Init 0 */

	/* USER CODE END TIM5_Init 0 */

	TIM_ClockConfigTypeDef sClockSourceConfig = { 0 };
 80025b6:	f107 0328 	add.w	r3, r7, #40	@ 0x28
 80025ba:	2200      	movs	r2, #0
 80025bc:	601a      	str	r2, [r3, #0]
 80025be:	605a      	str	r2, [r3, #4]
 80025c0:	609a      	str	r2, [r3, #8]
 80025c2:	60da      	str	r2, [r3, #12]
	TIM_MasterConfigTypeDef sMasterConfig = { 0 };
 80025c4:	f107 0320 	add.w	r3, r7, #32
 80025c8:	2200      	movs	r2, #0
 80025ca:	601a      	str	r2, [r3, #0]
 80025cc:	605a      	str	r2, [r3, #4]
	TIM_OC_InitTypeDef sConfigOC = { 0 };
 80025ce:	1d3b      	adds	r3, r7, #4
 80025d0:	2200      	movs	r2, #0
 80025d2:	601a      	str	r2, [r3, #0]
 80025d4:	605a      	str	r2, [r3, #4]
 80025d6:	609a      	str	r2, [r3, #8]
 80025d8:	60da      	str	r2, [r3, #12]
 80025da:	611a      	str	r2, [r3, #16]
 80025dc:	615a      	str	r2, [r3, #20]
 80025de:	619a      	str	r2, [r3, #24]

	/* USER CODE BEGIN TIM5_Init 1 */

	/* USER CODE END TIM5_Init 1 */
	htim5.Instance = TIM5;
 80025e0:	4b32      	ldr	r3, [pc, #200]	@ (80026ac <MX_TIM5_Init+0xfc>)
 80025e2:	4a33      	ldr	r2, [pc, #204]	@ (80026b0 <MX_TIM5_Init+0x100>)
 80025e4:	601a      	str	r2, [r3, #0]
	htim5.Init.Prescaler = 0;
 80025e6:	4b31      	ldr	r3, [pc, #196]	@ (80026ac <MX_TIM5_Init+0xfc>)
 80025e8:	2200      	movs	r2, #0
 80025ea:	605a      	str	r2, [r3, #4]
	htim5.Init.CounterMode = TIM_COUNTERMODE_UP;
 80025ec:	4b2f      	ldr	r3, [pc, #188]	@ (80026ac <MX_TIM5_Init+0xfc>)
 80025ee:	2200      	movs	r2, #0
 80025f0:	609a      	str	r2, [r3, #8]
	htim5.Init.Period = 4294967295;
 80025f2:	4b2e      	ldr	r3, [pc, #184]	@ (80026ac <MX_TIM5_Init+0xfc>)
 80025f4:	f04f 32ff 	mov.w	r2, #4294967295
 80025f8:	60da      	str	r2, [r3, #12]
	htim5.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 80025fa:	4b2c      	ldr	r3, [pc, #176]	@ (80026ac <MX_TIM5_Init+0xfc>)
 80025fc:	2200      	movs	r2, #0
 80025fe:	611a      	str	r2, [r3, #16]
	htim5.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8002600:	4b2a      	ldr	r3, [pc, #168]	@ (80026ac <MX_TIM5_Init+0xfc>)
 8002602:	2200      	movs	r2, #0
 8002604:	619a      	str	r2, [r3, #24]
	if (HAL_TIM_Base_Init(&htim5) != HAL_OK) {
 8002606:	4829      	ldr	r0, [pc, #164]	@ (80026ac <MX_TIM5_Init+0xfc>)
 8002608:	f003 fd90 	bl	800612c <HAL_TIM_Base_Init>
 800260c:	4603      	mov	r3, r0
 800260e:	2b00      	cmp	r3, #0
 8002610:	d001      	beq.n	8002616 <MX_TIM5_Init+0x66>
		Error_Handler();
 8002612:	f000 fb19 	bl	8002c48 <Error_Handler>
	}
	sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8002616:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 800261a:	62bb      	str	r3, [r7, #40]	@ 0x28
	if (HAL_TIM_ConfigClockSource(&htim5, &sClockSourceConfig) != HAL_OK) {
 800261c:	f107 0328 	add.w	r3, r7, #40	@ 0x28
 8002620:	4619      	mov	r1, r3
 8002622:	4822      	ldr	r0, [pc, #136]	@ (80026ac <MX_TIM5_Init+0xfc>)
 8002624:	f004 f980 	bl	8006928 <HAL_TIM_ConfigClockSource>
 8002628:	4603      	mov	r3, r0
 800262a:	2b00      	cmp	r3, #0
 800262c:	d001      	beq.n	8002632 <MX_TIM5_Init+0x82>
		Error_Handler();
 800262e:	f000 fb0b 	bl	8002c48 <Error_Handler>
	}
	if (HAL_TIM_PWM_Init(&htim5) != HAL_OK) {
 8002632:	481e      	ldr	r0, [pc, #120]	@ (80026ac <MX_TIM5_Init+0xfc>)
 8002634:	f003 fdc9 	bl	80061ca <HAL_TIM_PWM_Init>
 8002638:	4603      	mov	r3, r0
 800263a:	2b00      	cmp	r3, #0
 800263c:	d001      	beq.n	8002642 <MX_TIM5_Init+0x92>
		Error_Handler();
 800263e:	f000 fb03 	bl	8002c48 <Error_Handler>
	}
	sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8002642:	2300      	movs	r3, #0
 8002644:	623b      	str	r3, [r7, #32]
	sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8002646:	2300      	movs	r3, #0
 8002648:	627b      	str	r3, [r7, #36]	@ 0x24
	if (HAL_TIMEx_MasterConfigSynchronization(&htim5, &sMasterConfig)
 800264a:	f107 0320 	add.w	r3, r7, #32
 800264e:	4619      	mov	r1, r3
 8002650:	4816      	ldr	r0, [pc, #88]	@ (80026ac <MX_TIM5_Init+0xfc>)
 8002652:	f004 fd4d 	bl	80070f0 <HAL_TIMEx_MasterConfigSynchronization>
 8002656:	4603      	mov	r3, r0
 8002658:	2b00      	cmp	r3, #0
 800265a:	d001      	beq.n	8002660 <MX_TIM5_Init+0xb0>
			!= HAL_OK) {
		Error_Handler();
 800265c:	f000 faf4 	bl	8002c48 <Error_Handler>
	}
	sConfigOC.OCMode = TIM_OCMODE_PWM1;
 8002660:	2360      	movs	r3, #96	@ 0x60
 8002662:	607b      	str	r3, [r7, #4]
	sConfigOC.Pulse = 0;
 8002664:	2300      	movs	r3, #0
 8002666:	60bb      	str	r3, [r7, #8]
	sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 8002668:	2300      	movs	r3, #0
 800266a:	60fb      	str	r3, [r7, #12]
	sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 800266c:	2300      	movs	r3, #0
 800266e:	617b      	str	r3, [r7, #20]
	if (HAL_TIM_PWM_ConfigChannel(&htim5, &sConfigOC, TIM_CHANNEL_1)
 8002670:	1d3b      	adds	r3, r7, #4
 8002672:	2200      	movs	r2, #0
 8002674:	4619      	mov	r1, r3
 8002676:	480d      	ldr	r0, [pc, #52]	@ (80026ac <MX_TIM5_Init+0xfc>)
 8002678:	f004 f894 	bl	80067a4 <HAL_TIM_PWM_ConfigChannel>
 800267c:	4603      	mov	r3, r0
 800267e:	2b00      	cmp	r3, #0
 8002680:	d001      	beq.n	8002686 <MX_TIM5_Init+0xd6>
			!= HAL_OK) {
		Error_Handler();
 8002682:	f000 fae1 	bl	8002c48 <Error_Handler>
	}
	if (HAL_TIM_PWM_ConfigChannel(&htim5, &sConfigOC, TIM_CHANNEL_2)
 8002686:	1d3b      	adds	r3, r7, #4
 8002688:	2204      	movs	r2, #4
 800268a:	4619      	mov	r1, r3
 800268c:	4807      	ldr	r0, [pc, #28]	@ (80026ac <MX_TIM5_Init+0xfc>)
 800268e:	f004 f889 	bl	80067a4 <HAL_TIM_PWM_ConfigChannel>
 8002692:	4603      	mov	r3, r0
 8002694:	2b00      	cmp	r3, #0
 8002696:	d001      	beq.n	800269c <MX_TIM5_Init+0xec>
			!= HAL_OK) {
		Error_Handler();
 8002698:	f000 fad6 	bl	8002c48 <Error_Handler>
	}
	/* USER CODE BEGIN TIM5_Init 2 */

	/* USER CODE END TIM5_Init 2 */
	HAL_TIM_MspPostInit(&htim5);
 800269c:	4803      	ldr	r0, [pc, #12]	@ (80026ac <MX_TIM5_Init+0xfc>)
 800269e:	f000 fce7 	bl	8003070 <HAL_TIM_MspPostInit>

}
 80026a2:	bf00      	nop
 80026a4:	3738      	adds	r7, #56	@ 0x38
 80026a6:	46bd      	mov	sp, r7
 80026a8:	bd80      	pop	{r7, pc}
 80026aa:	bf00      	nop
 80026ac:	20000348 	.word	0x20000348
 80026b0:	40000c00 	.word	0x40000c00

080026b4 <MX_TIM8_Init>:
/**
 * @brief TIM8 Initialization Function
 * @param None
 * @retval None
 */
static void MX_TIM8_Init(void) {
 80026b4:	b580      	push	{r7, lr}
 80026b6:	b08c      	sub	sp, #48	@ 0x30
 80026b8:	af00      	add	r7, sp, #0

	/* USER CODE BEGIN TIM8_Init 0 */

	/* USER CODE END TIM8_Init 0 */

	TIM_Encoder_InitTypeDef sConfig = { 0 };
 80026ba:	f107 030c 	add.w	r3, r7, #12
 80026be:	2224      	movs	r2, #36	@ 0x24
 80026c0:	2100      	movs	r1, #0
 80026c2:	4618      	mov	r0, r3
 80026c4:	f007 f80e 	bl	80096e4 <memset>
	TIM_MasterConfigTypeDef sMasterConfig = { 0 };
 80026c8:	1d3b      	adds	r3, r7, #4
 80026ca:	2200      	movs	r2, #0
 80026cc:	601a      	str	r2, [r3, #0]
 80026ce:	605a      	str	r2, [r3, #4]

	/* USER CODE BEGIN TIM8_Init 1 */

	/* USER CODE END TIM8_Init 1 */
	htim8.Instance = TIM8;
 80026d0:	4b22      	ldr	r3, [pc, #136]	@ (800275c <MX_TIM8_Init+0xa8>)
 80026d2:	4a23      	ldr	r2, [pc, #140]	@ (8002760 <MX_TIM8_Init+0xac>)
 80026d4:	601a      	str	r2, [r3, #0]
	htim8.Init.Prescaler = 180 - 1;
 80026d6:	4b21      	ldr	r3, [pc, #132]	@ (800275c <MX_TIM8_Init+0xa8>)
 80026d8:	22b3      	movs	r2, #179	@ 0xb3
 80026da:	605a      	str	r2, [r3, #4]
	htim8.Init.CounterMode = TIM_COUNTERMODE_UP;
 80026dc:	4b1f      	ldr	r3, [pc, #124]	@ (800275c <MX_TIM8_Init+0xa8>)
 80026de:	2200      	movs	r2, #0
 80026e0:	609a      	str	r2, [r3, #8]
	htim8.Init.Period = 1000 - 1;
 80026e2:	4b1e      	ldr	r3, [pc, #120]	@ (800275c <MX_TIM8_Init+0xa8>)
 80026e4:	f240 32e7 	movw	r2, #999	@ 0x3e7
 80026e8:	60da      	str	r2, [r3, #12]
	htim8.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 80026ea:	4b1c      	ldr	r3, [pc, #112]	@ (800275c <MX_TIM8_Init+0xa8>)
 80026ec:	2200      	movs	r2, #0
 80026ee:	611a      	str	r2, [r3, #16]
	htim8.Init.RepetitionCounter = 0;
 80026f0:	4b1a      	ldr	r3, [pc, #104]	@ (800275c <MX_TIM8_Init+0xa8>)
 80026f2:	2200      	movs	r2, #0
 80026f4:	615a      	str	r2, [r3, #20]
	htim8.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 80026f6:	4b19      	ldr	r3, [pc, #100]	@ (800275c <MX_TIM8_Init+0xa8>)
 80026f8:	2200      	movs	r2, #0
 80026fa:	619a      	str	r2, [r3, #24]
	sConfig.EncoderMode = TIM_ENCODERMODE_TI1;
 80026fc:	2301      	movs	r3, #1
 80026fe:	60fb      	str	r3, [r7, #12]
	sConfig.IC1Polarity = TIM_ICPOLARITY_RISING;
 8002700:	2300      	movs	r3, #0
 8002702:	613b      	str	r3, [r7, #16]
	sConfig.IC1Selection = TIM_ICSELECTION_DIRECTTI;
 8002704:	2301      	movs	r3, #1
 8002706:	617b      	str	r3, [r7, #20]
	sConfig.IC1Prescaler = TIM_ICPSC_DIV1;
 8002708:	2300      	movs	r3, #0
 800270a:	61bb      	str	r3, [r7, #24]
	sConfig.IC1Filter = 0;
 800270c:	2300      	movs	r3, #0
 800270e:	61fb      	str	r3, [r7, #28]
	sConfig.IC2Polarity = TIM_ICPOLARITY_RISING;
 8002710:	2300      	movs	r3, #0
 8002712:	623b      	str	r3, [r7, #32]
	sConfig.IC2Selection = TIM_ICSELECTION_DIRECTTI;
 8002714:	2301      	movs	r3, #1
 8002716:	627b      	str	r3, [r7, #36]	@ 0x24
	sConfig.IC2Prescaler = TIM_ICPSC_DIV1;
 8002718:	2300      	movs	r3, #0
 800271a:	62bb      	str	r3, [r7, #40]	@ 0x28
	sConfig.IC2Filter = 0;
 800271c:	2300      	movs	r3, #0
 800271e:	62fb      	str	r3, [r7, #44]	@ 0x2c
	if (HAL_TIM_Encoder_Init(&htim8, &sConfig) != HAL_OK) {
 8002720:	f107 030c 	add.w	r3, r7, #12
 8002724:	4619      	mov	r1, r3
 8002726:	480d      	ldr	r0, [pc, #52]	@ (800275c <MX_TIM8_Init+0xa8>)
 8002728:	f003 fe70 	bl	800640c <HAL_TIM_Encoder_Init>
 800272c:	4603      	mov	r3, r0
 800272e:	2b00      	cmp	r3, #0
 8002730:	d001      	beq.n	8002736 <MX_TIM8_Init+0x82>
		Error_Handler();
 8002732:	f000 fa89 	bl	8002c48 <Error_Handler>
	}
	sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8002736:	2300      	movs	r3, #0
 8002738:	607b      	str	r3, [r7, #4]
	sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 800273a:	2300      	movs	r3, #0
 800273c:	60bb      	str	r3, [r7, #8]
	if (HAL_TIMEx_MasterConfigSynchronization(&htim8, &sMasterConfig)
 800273e:	1d3b      	adds	r3, r7, #4
 8002740:	4619      	mov	r1, r3
 8002742:	4806      	ldr	r0, [pc, #24]	@ (800275c <MX_TIM8_Init+0xa8>)
 8002744:	f004 fcd4 	bl	80070f0 <HAL_TIMEx_MasterConfigSynchronization>
 8002748:	4603      	mov	r3, r0
 800274a:	2b00      	cmp	r3, #0
 800274c:	d001      	beq.n	8002752 <MX_TIM8_Init+0x9e>
			!= HAL_OK) {
		Error_Handler();
 800274e:	f000 fa7b 	bl	8002c48 <Error_Handler>
	}
	/* USER CODE BEGIN TIM8_Init 2 */

	/* USER CODE END TIM8_Init 2 */

}
 8002752:	bf00      	nop
 8002754:	3730      	adds	r7, #48	@ 0x30
 8002756:	46bd      	mov	sp, r7
 8002758:	bd80      	pop	{r7, pc}
 800275a:	bf00      	nop
 800275c:	20000390 	.word	0x20000390
 8002760:	40010400 	.word	0x40010400

08002764 <MX_TIM10_Init>:
/**
 * @brief TIM10 Initialization Function
 * @param None
 * @retval None
 */
static void MX_TIM10_Init(void) {
 8002764:	b580      	push	{r7, lr}
 8002766:	b088      	sub	sp, #32
 8002768:	af00      	add	r7, sp, #0

	/* USER CODE BEGIN TIM10_Init 0 */

	/* USER CODE END TIM10_Init 0 */

	TIM_OC_InitTypeDef sConfigOC = { 0 };
 800276a:	1d3b      	adds	r3, r7, #4
 800276c:	2200      	movs	r2, #0
 800276e:	601a      	str	r2, [r3, #0]
 8002770:	605a      	str	r2, [r3, #4]
 8002772:	609a      	str	r2, [r3, #8]
 8002774:	60da      	str	r2, [r3, #12]
 8002776:	611a      	str	r2, [r3, #16]
 8002778:	615a      	str	r2, [r3, #20]
 800277a:	619a      	str	r2, [r3, #24]

	/* USER CODE BEGIN TIM10_Init 1 */

	/* USER CODE END TIM10_Init 1 */
	htim10.Instance = TIM10;
 800277c:	4b1e      	ldr	r3, [pc, #120]	@ (80027f8 <MX_TIM10_Init+0x94>)
 800277e:	4a1f      	ldr	r2, [pc, #124]	@ (80027fc <MX_TIM10_Init+0x98>)
 8002780:	601a      	str	r2, [r3, #0]
	htim10.Init.Prescaler = 179;
 8002782:	4b1d      	ldr	r3, [pc, #116]	@ (80027f8 <MX_TIM10_Init+0x94>)
 8002784:	22b3      	movs	r2, #179	@ 0xb3
 8002786:	605a      	str	r2, [r3, #4]
	htim10.Init.CounterMode = TIM_COUNTERMODE_UP;
 8002788:	4b1b      	ldr	r3, [pc, #108]	@ (80027f8 <MX_TIM10_Init+0x94>)
 800278a:	2200      	movs	r2, #0
 800278c:	609a      	str	r2, [r3, #8]
	htim10.Init.Period = 999;
 800278e:	4b1a      	ldr	r3, [pc, #104]	@ (80027f8 <MX_TIM10_Init+0x94>)
 8002790:	f240 32e7 	movw	r2, #999	@ 0x3e7
 8002794:	60da      	str	r2, [r3, #12]
	htim10.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8002796:	4b18      	ldr	r3, [pc, #96]	@ (80027f8 <MX_TIM10_Init+0x94>)
 8002798:	2200      	movs	r2, #0
 800279a:	611a      	str	r2, [r3, #16]
	htim10.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 800279c:	4b16      	ldr	r3, [pc, #88]	@ (80027f8 <MX_TIM10_Init+0x94>)
 800279e:	2200      	movs	r2, #0
 80027a0:	619a      	str	r2, [r3, #24]
	if (HAL_TIM_Base_Init(&htim10) != HAL_OK) {
 80027a2:	4815      	ldr	r0, [pc, #84]	@ (80027f8 <MX_TIM10_Init+0x94>)
 80027a4:	f003 fcc2 	bl	800612c <HAL_TIM_Base_Init>
 80027a8:	4603      	mov	r3, r0
 80027aa:	2b00      	cmp	r3, #0
 80027ac:	d001      	beq.n	80027b2 <MX_TIM10_Init+0x4e>
		Error_Handler();
 80027ae:	f000 fa4b 	bl	8002c48 <Error_Handler>
	}
	if (HAL_TIM_PWM_Init(&htim10) != HAL_OK) {
 80027b2:	4811      	ldr	r0, [pc, #68]	@ (80027f8 <MX_TIM10_Init+0x94>)
 80027b4:	f003 fd09 	bl	80061ca <HAL_TIM_PWM_Init>
 80027b8:	4603      	mov	r3, r0
 80027ba:	2b00      	cmp	r3, #0
 80027bc:	d001      	beq.n	80027c2 <MX_TIM10_Init+0x5e>
		Error_Handler();
 80027be:	f000 fa43 	bl	8002c48 <Error_Handler>
	}
	sConfigOC.OCMode = TIM_OCMODE_PWM1;
 80027c2:	2360      	movs	r3, #96	@ 0x60
 80027c4:	607b      	str	r3, [r7, #4]
	sConfigOC.Pulse = 0;
 80027c6:	2300      	movs	r3, #0
 80027c8:	60bb      	str	r3, [r7, #8]
	sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 80027ca:	2300      	movs	r3, #0
 80027cc:	60fb      	str	r3, [r7, #12]
	sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 80027ce:	2300      	movs	r3, #0
 80027d0:	617b      	str	r3, [r7, #20]
	if (HAL_TIM_PWM_ConfigChannel(&htim10, &sConfigOC, TIM_CHANNEL_1)
 80027d2:	1d3b      	adds	r3, r7, #4
 80027d4:	2200      	movs	r2, #0
 80027d6:	4619      	mov	r1, r3
 80027d8:	4807      	ldr	r0, [pc, #28]	@ (80027f8 <MX_TIM10_Init+0x94>)
 80027da:	f003 ffe3 	bl	80067a4 <HAL_TIM_PWM_ConfigChannel>
 80027de:	4603      	mov	r3, r0
 80027e0:	2b00      	cmp	r3, #0
 80027e2:	d001      	beq.n	80027e8 <MX_TIM10_Init+0x84>
			!= HAL_OK) {
		Error_Handler();
 80027e4:	f000 fa30 	bl	8002c48 <Error_Handler>
	}
	/* USER CODE BEGIN TIM10_Init 2 */

	/* USER CODE END TIM10_Init 2 */
	HAL_TIM_MspPostInit(&htim10);
 80027e8:	4803      	ldr	r0, [pc, #12]	@ (80027f8 <MX_TIM10_Init+0x94>)
 80027ea:	f000 fc41 	bl	8003070 <HAL_TIM_MspPostInit>

}
 80027ee:	bf00      	nop
 80027f0:	3720      	adds	r7, #32
 80027f2:	46bd      	mov	sp, r7
 80027f4:	bd80      	pop	{r7, pc}
 80027f6:	bf00      	nop
 80027f8:	200003d8 	.word	0x200003d8
 80027fc:	40014400 	.word	0x40014400

08002800 <MX_TIM11_Init>:
/**
 * @brief TIM11 Initialization Function
 * @param None
 * @retval None
 */
static void MX_TIM11_Init(void) {
 8002800:	b580      	push	{r7, lr}
 8002802:	b088      	sub	sp, #32
 8002804:	af00      	add	r7, sp, #0

	/* USER CODE BEGIN TIM11_Init 0 */

	/* USER CODE END TIM11_Init 0 */

	TIM_OC_InitTypeDef sConfigOC = { 0 };
 8002806:	1d3b      	adds	r3, r7, #4
 8002808:	2200      	movs	r2, #0
 800280a:	601a      	str	r2, [r3, #0]
 800280c:	605a      	str	r2, [r3, #4]
 800280e:	609a      	str	r2, [r3, #8]
 8002810:	60da      	str	r2, [r3, #12]
 8002812:	611a      	str	r2, [r3, #16]
 8002814:	615a      	str	r2, [r3, #20]
 8002816:	619a      	str	r2, [r3, #24]

	/* USER CODE BEGIN TIM11_Init 1 */

	/* USER CODE END TIM11_Init 1 */
	htim11.Instance = TIM11;
 8002818:	4b1e      	ldr	r3, [pc, #120]	@ (8002894 <MX_TIM11_Init+0x94>)
 800281a:	4a1f      	ldr	r2, [pc, #124]	@ (8002898 <MX_TIM11_Init+0x98>)
 800281c:	601a      	str	r2, [r3, #0]
	htim11.Init.Prescaler = 179;
 800281e:	4b1d      	ldr	r3, [pc, #116]	@ (8002894 <MX_TIM11_Init+0x94>)
 8002820:	22b3      	movs	r2, #179	@ 0xb3
 8002822:	605a      	str	r2, [r3, #4]
	htim11.Init.CounterMode = TIM_COUNTERMODE_UP;
 8002824:	4b1b      	ldr	r3, [pc, #108]	@ (8002894 <MX_TIM11_Init+0x94>)
 8002826:	2200      	movs	r2, #0
 8002828:	609a      	str	r2, [r3, #8]
	htim11.Init.Period = 999;
 800282a:	4b1a      	ldr	r3, [pc, #104]	@ (8002894 <MX_TIM11_Init+0x94>)
 800282c:	f240 32e7 	movw	r2, #999	@ 0x3e7
 8002830:	60da      	str	r2, [r3, #12]
	htim11.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8002832:	4b18      	ldr	r3, [pc, #96]	@ (8002894 <MX_TIM11_Init+0x94>)
 8002834:	2200      	movs	r2, #0
 8002836:	611a      	str	r2, [r3, #16]
	htim11.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8002838:	4b16      	ldr	r3, [pc, #88]	@ (8002894 <MX_TIM11_Init+0x94>)
 800283a:	2200      	movs	r2, #0
 800283c:	619a      	str	r2, [r3, #24]
	if (HAL_TIM_Base_Init(&htim11) != HAL_OK) {
 800283e:	4815      	ldr	r0, [pc, #84]	@ (8002894 <MX_TIM11_Init+0x94>)
 8002840:	f003 fc74 	bl	800612c <HAL_TIM_Base_Init>
 8002844:	4603      	mov	r3, r0
 8002846:	2b00      	cmp	r3, #0
 8002848:	d001      	beq.n	800284e <MX_TIM11_Init+0x4e>
		Error_Handler();
 800284a:	f000 f9fd 	bl	8002c48 <Error_Handler>
	}
	if (HAL_TIM_PWM_Init(&htim11) != HAL_OK) {
 800284e:	4811      	ldr	r0, [pc, #68]	@ (8002894 <MX_TIM11_Init+0x94>)
 8002850:	f003 fcbb 	bl	80061ca <HAL_TIM_PWM_Init>
 8002854:	4603      	mov	r3, r0
 8002856:	2b00      	cmp	r3, #0
 8002858:	d001      	beq.n	800285e <MX_TIM11_Init+0x5e>
		Error_Handler();
 800285a:	f000 f9f5 	bl	8002c48 <Error_Handler>
	}
	sConfigOC.OCMode = TIM_OCMODE_PWM1;
 800285e:	2360      	movs	r3, #96	@ 0x60
 8002860:	607b      	str	r3, [r7, #4]
	sConfigOC.Pulse = 0;
 8002862:	2300      	movs	r3, #0
 8002864:	60bb      	str	r3, [r7, #8]
	sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 8002866:	2300      	movs	r3, #0
 8002868:	60fb      	str	r3, [r7, #12]
	sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 800286a:	2300      	movs	r3, #0
 800286c:	617b      	str	r3, [r7, #20]
	if (HAL_TIM_PWM_ConfigChannel(&htim11, &sConfigOC, TIM_CHANNEL_1)
 800286e:	1d3b      	adds	r3, r7, #4
 8002870:	2200      	movs	r2, #0
 8002872:	4619      	mov	r1, r3
 8002874:	4807      	ldr	r0, [pc, #28]	@ (8002894 <MX_TIM11_Init+0x94>)
 8002876:	f003 ff95 	bl	80067a4 <HAL_TIM_PWM_ConfigChannel>
 800287a:	4603      	mov	r3, r0
 800287c:	2b00      	cmp	r3, #0
 800287e:	d001      	beq.n	8002884 <MX_TIM11_Init+0x84>
			!= HAL_OK) {
		Error_Handler();
 8002880:	f000 f9e2 	bl	8002c48 <Error_Handler>
	}
	/* USER CODE BEGIN TIM11_Init 2 */

	/* USER CODE END TIM11_Init 2 */
	HAL_TIM_MspPostInit(&htim11);
 8002884:	4803      	ldr	r0, [pc, #12]	@ (8002894 <MX_TIM11_Init+0x94>)
 8002886:	f000 fbf3 	bl	8003070 <HAL_TIM_MspPostInit>

}
 800288a:	bf00      	nop
 800288c:	3720      	adds	r7, #32
 800288e:	46bd      	mov	sp, r7
 8002890:	bd80      	pop	{r7, pc}
 8002892:	bf00      	nop
 8002894:	20000420 	.word	0x20000420
 8002898:	40014800 	.word	0x40014800

0800289c <MX_TIM12_Init>:
/**
 * @brief TIM12 Initialization Function
 * @param None
 * @retval None
 */
static void MX_TIM12_Init(void) {
 800289c:	b580      	push	{r7, lr}
 800289e:	b08c      	sub	sp, #48	@ 0x30
 80028a0:	af00      	add	r7, sp, #0

	/* USER CODE BEGIN TIM12_Init 0 */

	/* USER CODE END TIM12_Init 0 */

	TIM_ClockConfigTypeDef sClockSourceConfig = { 0 };
 80028a2:	f107 0320 	add.w	r3, r7, #32
 80028a6:	2200      	movs	r2, #0
 80028a8:	601a      	str	r2, [r3, #0]
 80028aa:	605a      	str	r2, [r3, #4]
 80028ac:	609a      	str	r2, [r3, #8]
 80028ae:	60da      	str	r2, [r3, #12]
	TIM_OC_InitTypeDef sConfigOC = { 0 };
 80028b0:	1d3b      	adds	r3, r7, #4
 80028b2:	2200      	movs	r2, #0
 80028b4:	601a      	str	r2, [r3, #0]
 80028b6:	605a      	str	r2, [r3, #4]
 80028b8:	609a      	str	r2, [r3, #8]
 80028ba:	60da      	str	r2, [r3, #12]
 80028bc:	611a      	str	r2, [r3, #16]
 80028be:	615a      	str	r2, [r3, #20]
 80028c0:	619a      	str	r2, [r3, #24]

	/* USER CODE BEGIN TIM12_Init 1 */

	/* USER CODE END TIM12_Init 1 */
	htim12.Instance = TIM12;
 80028c2:	4b25      	ldr	r3, [pc, #148]	@ (8002958 <MX_TIM12_Init+0xbc>)
 80028c4:	4a25      	ldr	r2, [pc, #148]	@ (800295c <MX_TIM12_Init+0xc0>)
 80028c6:	601a      	str	r2, [r3, #0]
	htim12.Init.Prescaler = 179;
 80028c8:	4b23      	ldr	r3, [pc, #140]	@ (8002958 <MX_TIM12_Init+0xbc>)
 80028ca:	22b3      	movs	r2, #179	@ 0xb3
 80028cc:	605a      	str	r2, [r3, #4]
	htim12.Init.CounterMode = TIM_COUNTERMODE_UP;
 80028ce:	4b22      	ldr	r3, [pc, #136]	@ (8002958 <MX_TIM12_Init+0xbc>)
 80028d0:	2200      	movs	r2, #0
 80028d2:	609a      	str	r2, [r3, #8]
	htim12.Init.Period = 999;
 80028d4:	4b20      	ldr	r3, [pc, #128]	@ (8002958 <MX_TIM12_Init+0xbc>)
 80028d6:	f240 32e7 	movw	r2, #999	@ 0x3e7
 80028da:	60da      	str	r2, [r3, #12]
	htim12.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 80028dc:	4b1e      	ldr	r3, [pc, #120]	@ (8002958 <MX_TIM12_Init+0xbc>)
 80028de:	2200      	movs	r2, #0
 80028e0:	611a      	str	r2, [r3, #16]
	htim12.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 80028e2:	4b1d      	ldr	r3, [pc, #116]	@ (8002958 <MX_TIM12_Init+0xbc>)
 80028e4:	2200      	movs	r2, #0
 80028e6:	619a      	str	r2, [r3, #24]
	if (HAL_TIM_Base_Init(&htim12) != HAL_OK) {
 80028e8:	481b      	ldr	r0, [pc, #108]	@ (8002958 <MX_TIM12_Init+0xbc>)
 80028ea:	f003 fc1f 	bl	800612c <HAL_TIM_Base_Init>
 80028ee:	4603      	mov	r3, r0
 80028f0:	2b00      	cmp	r3, #0
 80028f2:	d001      	beq.n	80028f8 <MX_TIM12_Init+0x5c>
		Error_Handler();
 80028f4:	f000 f9a8 	bl	8002c48 <Error_Handler>
	}
	sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 80028f8:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 80028fc:	623b      	str	r3, [r7, #32]
	if (HAL_TIM_ConfigClockSource(&htim12, &sClockSourceConfig) != HAL_OK) {
 80028fe:	f107 0320 	add.w	r3, r7, #32
 8002902:	4619      	mov	r1, r3
 8002904:	4814      	ldr	r0, [pc, #80]	@ (8002958 <MX_TIM12_Init+0xbc>)
 8002906:	f004 f80f 	bl	8006928 <HAL_TIM_ConfigClockSource>
 800290a:	4603      	mov	r3, r0
 800290c:	2b00      	cmp	r3, #0
 800290e:	d001      	beq.n	8002914 <MX_TIM12_Init+0x78>
		Error_Handler();
 8002910:	f000 f99a 	bl	8002c48 <Error_Handler>
	}
	if (HAL_TIM_PWM_Init(&htim12) != HAL_OK) {
 8002914:	4810      	ldr	r0, [pc, #64]	@ (8002958 <MX_TIM12_Init+0xbc>)
 8002916:	f003 fc58 	bl	80061ca <HAL_TIM_PWM_Init>
 800291a:	4603      	mov	r3, r0
 800291c:	2b00      	cmp	r3, #0
 800291e:	d001      	beq.n	8002924 <MX_TIM12_Init+0x88>
		Error_Handler();
 8002920:	f000 f992 	bl	8002c48 <Error_Handler>
	}
	sConfigOC.OCMode = TIM_OCMODE_PWM1;
 8002924:	2360      	movs	r3, #96	@ 0x60
 8002926:	607b      	str	r3, [r7, #4]
	sConfigOC.Pulse = 0;
 8002928:	2300      	movs	r3, #0
 800292a:	60bb      	str	r3, [r7, #8]
	sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 800292c:	2300      	movs	r3, #0
 800292e:	60fb      	str	r3, [r7, #12]
	sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 8002930:	2300      	movs	r3, #0
 8002932:	617b      	str	r3, [r7, #20]
	if (HAL_TIM_PWM_ConfigChannel(&htim12, &sConfigOC, TIM_CHANNEL_1)
 8002934:	1d3b      	adds	r3, r7, #4
 8002936:	2200      	movs	r2, #0
 8002938:	4619      	mov	r1, r3
 800293a:	4807      	ldr	r0, [pc, #28]	@ (8002958 <MX_TIM12_Init+0xbc>)
 800293c:	f003 ff32 	bl	80067a4 <HAL_TIM_PWM_ConfigChannel>
 8002940:	4603      	mov	r3, r0
 8002942:	2b00      	cmp	r3, #0
 8002944:	d001      	beq.n	800294a <MX_TIM12_Init+0xae>
			!= HAL_OK) {
		Error_Handler();
 8002946:	f000 f97f 	bl	8002c48 <Error_Handler>
	}
	/* USER CODE BEGIN TIM12_Init 2 */

	/* USER CODE END TIM12_Init 2 */
	HAL_TIM_MspPostInit(&htim12);
 800294a:	4803      	ldr	r0, [pc, #12]	@ (8002958 <MX_TIM12_Init+0xbc>)
 800294c:	f000 fb90 	bl	8003070 <HAL_TIM_MspPostInit>

}
 8002950:	bf00      	nop
 8002952:	3730      	adds	r7, #48	@ 0x30
 8002954:	46bd      	mov	sp, r7
 8002956:	bd80      	pop	{r7, pc}
 8002958:	20000468 	.word	0x20000468
 800295c:	40001800 	.word	0x40001800

08002960 <MX_TIM13_Init>:
/**
 * @brief TIM13 Initialization Function
 * @param None
 * @retval None
 */
static void MX_TIM13_Init(void) {
 8002960:	b580      	push	{r7, lr}
 8002962:	b088      	sub	sp, #32
 8002964:	af00      	add	r7, sp, #0

	/* USER CODE BEGIN TIM13_Init 0 */

	/* USER CODE END TIM13_Init 0 */

	TIM_OC_InitTypeDef sConfigOC = { 0 };
 8002966:	1d3b      	adds	r3, r7, #4
 8002968:	2200      	movs	r2, #0
 800296a:	601a      	str	r2, [r3, #0]
 800296c:	605a      	str	r2, [r3, #4]
 800296e:	609a      	str	r2, [r3, #8]
 8002970:	60da      	str	r2, [r3, #12]
 8002972:	611a      	str	r2, [r3, #16]
 8002974:	615a      	str	r2, [r3, #20]
 8002976:	619a      	str	r2, [r3, #24]

	/* USER CODE BEGIN TIM13_Init 1 */

	/* USER CODE END TIM13_Init 1 */
	htim13.Instance = TIM13;
 8002978:	4b1e      	ldr	r3, [pc, #120]	@ (80029f4 <MX_TIM13_Init+0x94>)
 800297a:	4a1f      	ldr	r2, [pc, #124]	@ (80029f8 <MX_TIM13_Init+0x98>)
 800297c:	601a      	str	r2, [r3, #0]
	htim13.Init.Prescaler = 179;
 800297e:	4b1d      	ldr	r3, [pc, #116]	@ (80029f4 <MX_TIM13_Init+0x94>)
 8002980:	22b3      	movs	r2, #179	@ 0xb3
 8002982:	605a      	str	r2, [r3, #4]
	htim13.Init.CounterMode = TIM_COUNTERMODE_UP;
 8002984:	4b1b      	ldr	r3, [pc, #108]	@ (80029f4 <MX_TIM13_Init+0x94>)
 8002986:	2200      	movs	r2, #0
 8002988:	609a      	str	r2, [r3, #8]
	htim13.Init.Period = 999;
 800298a:	4b1a      	ldr	r3, [pc, #104]	@ (80029f4 <MX_TIM13_Init+0x94>)
 800298c:	f240 32e7 	movw	r2, #999	@ 0x3e7
 8002990:	60da      	str	r2, [r3, #12]
	htim13.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8002992:	4b18      	ldr	r3, [pc, #96]	@ (80029f4 <MX_TIM13_Init+0x94>)
 8002994:	2200      	movs	r2, #0
 8002996:	611a      	str	r2, [r3, #16]
	htim13.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8002998:	4b16      	ldr	r3, [pc, #88]	@ (80029f4 <MX_TIM13_Init+0x94>)
 800299a:	2200      	movs	r2, #0
 800299c:	619a      	str	r2, [r3, #24]
	if (HAL_TIM_Base_Init(&htim13) != HAL_OK) {
 800299e:	4815      	ldr	r0, [pc, #84]	@ (80029f4 <MX_TIM13_Init+0x94>)
 80029a0:	f003 fbc4 	bl	800612c <HAL_TIM_Base_Init>
 80029a4:	4603      	mov	r3, r0
 80029a6:	2b00      	cmp	r3, #0
 80029a8:	d001      	beq.n	80029ae <MX_TIM13_Init+0x4e>
		Error_Handler();
 80029aa:	f000 f94d 	bl	8002c48 <Error_Handler>
	}
	if (HAL_TIM_PWM_Init(&htim13) != HAL_OK) {
 80029ae:	4811      	ldr	r0, [pc, #68]	@ (80029f4 <MX_TIM13_Init+0x94>)
 80029b0:	f003 fc0b 	bl	80061ca <HAL_TIM_PWM_Init>
 80029b4:	4603      	mov	r3, r0
 80029b6:	2b00      	cmp	r3, #0
 80029b8:	d001      	beq.n	80029be <MX_TIM13_Init+0x5e>
		Error_Handler();
 80029ba:	f000 f945 	bl	8002c48 <Error_Handler>
	}
	sConfigOC.OCMode = TIM_OCMODE_PWM1;
 80029be:	2360      	movs	r3, #96	@ 0x60
 80029c0:	607b      	str	r3, [r7, #4]
	sConfigOC.Pulse = 0;
 80029c2:	2300      	movs	r3, #0
 80029c4:	60bb      	str	r3, [r7, #8]
	sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 80029c6:	2300      	movs	r3, #0
 80029c8:	60fb      	str	r3, [r7, #12]
	sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 80029ca:	2300      	movs	r3, #0
 80029cc:	617b      	str	r3, [r7, #20]
	if (HAL_TIM_PWM_ConfigChannel(&htim13, &sConfigOC, TIM_CHANNEL_1)
 80029ce:	1d3b      	adds	r3, r7, #4
 80029d0:	2200      	movs	r2, #0
 80029d2:	4619      	mov	r1, r3
 80029d4:	4807      	ldr	r0, [pc, #28]	@ (80029f4 <MX_TIM13_Init+0x94>)
 80029d6:	f003 fee5 	bl	80067a4 <HAL_TIM_PWM_ConfigChannel>
 80029da:	4603      	mov	r3, r0
 80029dc:	2b00      	cmp	r3, #0
 80029de:	d001      	beq.n	80029e4 <MX_TIM13_Init+0x84>
			!= HAL_OK) {
		Error_Handler();
 80029e0:	f000 f932 	bl	8002c48 <Error_Handler>
	}
	/* USER CODE BEGIN TIM13_Init 2 */

	/* USER CODE END TIM13_Init 2 */
	HAL_TIM_MspPostInit(&htim13);
 80029e4:	4803      	ldr	r0, [pc, #12]	@ (80029f4 <MX_TIM13_Init+0x94>)
 80029e6:	f000 fb43 	bl	8003070 <HAL_TIM_MspPostInit>

}
 80029ea:	bf00      	nop
 80029ec:	3720      	adds	r7, #32
 80029ee:	46bd      	mov	sp, r7
 80029f0:	bd80      	pop	{r7, pc}
 80029f2:	bf00      	nop
 80029f4:	200004b0 	.word	0x200004b0
 80029f8:	40001c00 	.word	0x40001c00

080029fc <MX_UART4_Init>:
/**
 * @brief UART4 Initialization Function
 * @param None
 * @retval None
 */
static void MX_UART4_Init(void) {
 80029fc:	b580      	push	{r7, lr}
 80029fe:	af00      	add	r7, sp, #0
	/* USER CODE END UART4_Init 0 */

	/* USER CODE BEGIN UART4_Init 1 */

	/* USER CODE END UART4_Init 1 */
	huart4.Instance = UART4;
 8002a00:	4b11      	ldr	r3, [pc, #68]	@ (8002a48 <MX_UART4_Init+0x4c>)
 8002a02:	4a12      	ldr	r2, [pc, #72]	@ (8002a4c <MX_UART4_Init+0x50>)
 8002a04:	601a      	str	r2, [r3, #0]
	huart4.Init.BaudRate = 115200;
 8002a06:	4b10      	ldr	r3, [pc, #64]	@ (8002a48 <MX_UART4_Init+0x4c>)
 8002a08:	f44f 32e1 	mov.w	r2, #115200	@ 0x1c200
 8002a0c:	605a      	str	r2, [r3, #4]
	huart4.Init.WordLength = UART_WORDLENGTH_8B;
 8002a0e:	4b0e      	ldr	r3, [pc, #56]	@ (8002a48 <MX_UART4_Init+0x4c>)
 8002a10:	2200      	movs	r2, #0
 8002a12:	609a      	str	r2, [r3, #8]
	huart4.Init.StopBits = UART_STOPBITS_1;
 8002a14:	4b0c      	ldr	r3, [pc, #48]	@ (8002a48 <MX_UART4_Init+0x4c>)
 8002a16:	2200      	movs	r2, #0
 8002a18:	60da      	str	r2, [r3, #12]
	huart4.Init.Parity = UART_PARITY_NONE;
 8002a1a:	4b0b      	ldr	r3, [pc, #44]	@ (8002a48 <MX_UART4_Init+0x4c>)
 8002a1c:	2200      	movs	r2, #0
 8002a1e:	611a      	str	r2, [r3, #16]
	huart4.Init.Mode = UART_MODE_TX_RX;
 8002a20:	4b09      	ldr	r3, [pc, #36]	@ (8002a48 <MX_UART4_Init+0x4c>)
 8002a22:	220c      	movs	r2, #12
 8002a24:	615a      	str	r2, [r3, #20]
	huart4.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 8002a26:	4b08      	ldr	r3, [pc, #32]	@ (8002a48 <MX_UART4_Init+0x4c>)
 8002a28:	2200      	movs	r2, #0
 8002a2a:	619a      	str	r2, [r3, #24]
	huart4.Init.OverSampling = UART_OVERSAMPLING_16;
 8002a2c:	4b06      	ldr	r3, [pc, #24]	@ (8002a48 <MX_UART4_Init+0x4c>)
 8002a2e:	2200      	movs	r2, #0
 8002a30:	61da      	str	r2, [r3, #28]
	if (HAL_UART_Init(&huart4) != HAL_OK) {
 8002a32:	4805      	ldr	r0, [pc, #20]	@ (8002a48 <MX_UART4_Init+0x4c>)
 8002a34:	f004 fbd8 	bl	80071e8 <HAL_UART_Init>
 8002a38:	4603      	mov	r3, r0
 8002a3a:	2b00      	cmp	r3, #0
 8002a3c:	d001      	beq.n	8002a42 <MX_UART4_Init+0x46>
		Error_Handler();
 8002a3e:	f000 f903 	bl	8002c48 <Error_Handler>
	}
	/* USER CODE BEGIN UART4_Init 2 */

	/* USER CODE END UART4_Init 2 */

}
 8002a42:	bf00      	nop
 8002a44:	bd80      	pop	{r7, pc}
 8002a46:	bf00      	nop
 8002a48:	200004f8 	.word	0x200004f8
 8002a4c:	40004c00 	.word	0x40004c00

08002a50 <MX_USART2_UART_Init>:
/**
 * @brief USART2 Initialization Function
 * @param None
 * @retval None
 */
static void MX_USART2_UART_Init(void) {
 8002a50:	b580      	push	{r7, lr}
 8002a52:	af00      	add	r7, sp, #0
	/* USER CODE END USART2_Init 0 */

	/* USER CODE BEGIN USART2_Init 1 */

	/* USER CODE END USART2_Init 1 */
	huart2.Instance = USART2;
 8002a54:	4b11      	ldr	r3, [pc, #68]	@ (8002a9c <MX_USART2_UART_Init+0x4c>)
 8002a56:	4a12      	ldr	r2, [pc, #72]	@ (8002aa0 <MX_USART2_UART_Init+0x50>)
 8002a58:	601a      	str	r2, [r3, #0]
	huart2.Init.BaudRate = 115200;
 8002a5a:	4b10      	ldr	r3, [pc, #64]	@ (8002a9c <MX_USART2_UART_Init+0x4c>)
 8002a5c:	f44f 32e1 	mov.w	r2, #115200	@ 0x1c200
 8002a60:	605a      	str	r2, [r3, #4]
	huart2.Init.WordLength = UART_WORDLENGTH_8B;
 8002a62:	4b0e      	ldr	r3, [pc, #56]	@ (8002a9c <MX_USART2_UART_Init+0x4c>)
 8002a64:	2200      	movs	r2, #0
 8002a66:	609a      	str	r2, [r3, #8]
	huart2.Init.StopBits = UART_STOPBITS_1;
 8002a68:	4b0c      	ldr	r3, [pc, #48]	@ (8002a9c <MX_USART2_UART_Init+0x4c>)
 8002a6a:	2200      	movs	r2, #0
 8002a6c:	60da      	str	r2, [r3, #12]
	huart2.Init.Parity = UART_PARITY_NONE;
 8002a6e:	4b0b      	ldr	r3, [pc, #44]	@ (8002a9c <MX_USART2_UART_Init+0x4c>)
 8002a70:	2200      	movs	r2, #0
 8002a72:	611a      	str	r2, [r3, #16]
	huart2.Init.Mode = UART_MODE_TX_RX;
 8002a74:	4b09      	ldr	r3, [pc, #36]	@ (8002a9c <MX_USART2_UART_Init+0x4c>)
 8002a76:	220c      	movs	r2, #12
 8002a78:	615a      	str	r2, [r3, #20]
	huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 8002a7a:	4b08      	ldr	r3, [pc, #32]	@ (8002a9c <MX_USART2_UART_Init+0x4c>)
 8002a7c:	2200      	movs	r2, #0
 8002a7e:	619a      	str	r2, [r3, #24]
	huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 8002a80:	4b06      	ldr	r3, [pc, #24]	@ (8002a9c <MX_USART2_UART_Init+0x4c>)
 8002a82:	2200      	movs	r2, #0
 8002a84:	61da      	str	r2, [r3, #28]
	if (HAL_UART_Init(&huart2) != HAL_OK) {
 8002a86:	4805      	ldr	r0, [pc, #20]	@ (8002a9c <MX_USART2_UART_Init+0x4c>)
 8002a88:	f004 fbae 	bl	80071e8 <HAL_UART_Init>
 8002a8c:	4603      	mov	r3, r0
 8002a8e:	2b00      	cmp	r3, #0
 8002a90:	d001      	beq.n	8002a96 <MX_USART2_UART_Init+0x46>
		Error_Handler();
 8002a92:	f000 f8d9 	bl	8002c48 <Error_Handler>
	}
	/* USER CODE BEGIN USART2_Init 2 */

	/* USER CODE END USART2_Init 2 */

}
 8002a96:	bf00      	nop
 8002a98:	bd80      	pop	{r7, pc}
 8002a9a:	bf00      	nop
 8002a9c:	20000540 	.word	0x20000540
 8002aa0:	40004400 	.word	0x40004400

08002aa4 <MX_DMA_Init>:

/**
 * Enable DMA controller clock
 */
static void MX_DMA_Init(void) {
 8002aa4:	b580      	push	{r7, lr}
 8002aa6:	b082      	sub	sp, #8
 8002aa8:	af00      	add	r7, sp, #0

	/* DMA controller clock enable */
	__HAL_RCC_DMA1_CLK_ENABLE();
 8002aaa:	2300      	movs	r3, #0
 8002aac:	607b      	str	r3, [r7, #4]
 8002aae:	4b0c      	ldr	r3, [pc, #48]	@ (8002ae0 <MX_DMA_Init+0x3c>)
 8002ab0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002ab2:	4a0b      	ldr	r2, [pc, #44]	@ (8002ae0 <MX_DMA_Init+0x3c>)
 8002ab4:	f443 1300 	orr.w	r3, r3, #2097152	@ 0x200000
 8002ab8:	6313      	str	r3, [r2, #48]	@ 0x30
 8002aba:	4b09      	ldr	r3, [pc, #36]	@ (8002ae0 <MX_DMA_Init+0x3c>)
 8002abc:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002abe:	f403 1300 	and.w	r3, r3, #2097152	@ 0x200000
 8002ac2:	607b      	str	r3, [r7, #4]
 8002ac4:	687b      	ldr	r3, [r7, #4]

	/* DMA interrupt init */
	/* DMA1_Stream2_IRQn interrupt configuration */
	HAL_NVIC_SetPriority(DMA1_Stream2_IRQn, 0, 0);
 8002ac6:	2200      	movs	r2, #0
 8002ac8:	2100      	movs	r1, #0
 8002aca:	200d      	movs	r0, #13
 8002acc:	f000 fefb 	bl	80038c6 <HAL_NVIC_SetPriority>
	HAL_NVIC_EnableIRQ(DMA1_Stream2_IRQn);
 8002ad0:	200d      	movs	r0, #13
 8002ad2:	f000 ff14 	bl	80038fe <HAL_NVIC_EnableIRQ>

}
 8002ad6:	bf00      	nop
 8002ad8:	3708      	adds	r7, #8
 8002ada:	46bd      	mov	sp, r7
 8002adc:	bd80      	pop	{r7, pc}
 8002ade:	bf00      	nop
 8002ae0:	40023800 	.word	0x40023800

08002ae4 <MX_GPIO_Init>:
/**
 * @brief GPIO Initialization Function
 * @param None
 * @retval None
 */
static void MX_GPIO_Init(void) {
 8002ae4:	b580      	push	{r7, lr}
 8002ae6:	b08a      	sub	sp, #40	@ 0x28
 8002ae8:	af00      	add	r7, sp, #0
	GPIO_InitTypeDef GPIO_InitStruct = { 0 };
 8002aea:	f107 0314 	add.w	r3, r7, #20
 8002aee:	2200      	movs	r2, #0
 8002af0:	601a      	str	r2, [r3, #0]
 8002af2:	605a      	str	r2, [r3, #4]
 8002af4:	609a      	str	r2, [r3, #8]
 8002af6:	60da      	str	r2, [r3, #12]
 8002af8:	611a      	str	r2, [r3, #16]
	/* USER CODE BEGIN MX_GPIO_Init_1 */
	/* USER CODE END MX_GPIO_Init_1 */

	/* GPIO Ports Clock Enable */
	__HAL_RCC_GPIOC_CLK_ENABLE();
 8002afa:	2300      	movs	r3, #0
 8002afc:	613b      	str	r3, [r7, #16]
 8002afe:	4b43      	ldr	r3, [pc, #268]	@ (8002c0c <MX_GPIO_Init+0x128>)
 8002b00:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002b02:	4a42      	ldr	r2, [pc, #264]	@ (8002c0c <MX_GPIO_Init+0x128>)
 8002b04:	f043 0304 	orr.w	r3, r3, #4
 8002b08:	6313      	str	r3, [r2, #48]	@ 0x30
 8002b0a:	4b40      	ldr	r3, [pc, #256]	@ (8002c0c <MX_GPIO_Init+0x128>)
 8002b0c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002b0e:	f003 0304 	and.w	r3, r3, #4
 8002b12:	613b      	str	r3, [r7, #16]
 8002b14:	693b      	ldr	r3, [r7, #16]
	__HAL_RCC_GPIOH_CLK_ENABLE();
 8002b16:	2300      	movs	r3, #0
 8002b18:	60fb      	str	r3, [r7, #12]
 8002b1a:	4b3c      	ldr	r3, [pc, #240]	@ (8002c0c <MX_GPIO_Init+0x128>)
 8002b1c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002b1e:	4a3b      	ldr	r2, [pc, #236]	@ (8002c0c <MX_GPIO_Init+0x128>)
 8002b20:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8002b24:	6313      	str	r3, [r2, #48]	@ 0x30
 8002b26:	4b39      	ldr	r3, [pc, #228]	@ (8002c0c <MX_GPIO_Init+0x128>)
 8002b28:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002b2a:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8002b2e:	60fb      	str	r3, [r7, #12]
 8002b30:	68fb      	ldr	r3, [r7, #12]
	__HAL_RCC_GPIOA_CLK_ENABLE();
 8002b32:	2300      	movs	r3, #0
 8002b34:	60bb      	str	r3, [r7, #8]
 8002b36:	4b35      	ldr	r3, [pc, #212]	@ (8002c0c <MX_GPIO_Init+0x128>)
 8002b38:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002b3a:	4a34      	ldr	r2, [pc, #208]	@ (8002c0c <MX_GPIO_Init+0x128>)
 8002b3c:	f043 0301 	orr.w	r3, r3, #1
 8002b40:	6313      	str	r3, [r2, #48]	@ 0x30
 8002b42:	4b32      	ldr	r3, [pc, #200]	@ (8002c0c <MX_GPIO_Init+0x128>)
 8002b44:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002b46:	f003 0301 	and.w	r3, r3, #1
 8002b4a:	60bb      	str	r3, [r7, #8]
 8002b4c:	68bb      	ldr	r3, [r7, #8]
	__HAL_RCC_GPIOB_CLK_ENABLE();
 8002b4e:	2300      	movs	r3, #0
 8002b50:	607b      	str	r3, [r7, #4]
 8002b52:	4b2e      	ldr	r3, [pc, #184]	@ (8002c0c <MX_GPIO_Init+0x128>)
 8002b54:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002b56:	4a2d      	ldr	r2, [pc, #180]	@ (8002c0c <MX_GPIO_Init+0x128>)
 8002b58:	f043 0302 	orr.w	r3, r3, #2
 8002b5c:	6313      	str	r3, [r2, #48]	@ 0x30
 8002b5e:	4b2b      	ldr	r3, [pc, #172]	@ (8002c0c <MX_GPIO_Init+0x128>)
 8002b60:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002b62:	f003 0302 	and.w	r3, r3, #2
 8002b66:	607b      	str	r3, [r7, #4]
 8002b68:	687b      	ldr	r3, [r7, #4]

	/*Configure GPIO pin Output Level */
	HAL_GPIO_WritePin(GPIOC,
 8002b6a:	2200      	movs	r2, #0
 8002b6c:	f248 013f 	movw	r1, #32831	@ 0x803f
 8002b70:	4827      	ldr	r0, [pc, #156]	@ (8002c10 <MX_GPIO_Init+0x12c>)
 8002b72:	f001 fc75 	bl	8004460 <HAL_GPIO_WritePin>
			GPIO_PIN_15 | M1_Pin | M2_Pin | M3_Pin | stepper_direction_1_Pin
					| ENA_1_Pin | stepper_pulse_1_Pin, GPIO_PIN_RESET);

	/*Configure GPIO pin Output Level */
	HAL_GPIO_WritePin(GPIOA, LD2_Pin | P1_Pin | P2_Pin, GPIO_PIN_RESET);
 8002b76:	2200      	movs	r2, #0
 8002b78:	f44f 51c1 	mov.w	r1, #6176	@ 0x1820
 8002b7c:	4825      	ldr	r0, [pc, #148]	@ (8002c14 <MX_GPIO_Init+0x130>)
 8002b7e:	f001 fc6f 	bl	8004460 <HAL_GPIO_WritePin>

	/*Configure GPIO pin Output Level */
	HAL_GPIO_WritePin(GPIOB,
 8002b82:	2200      	movs	r2, #0
 8002b84:	f249 4104 	movw	r1, #37892	@ 0x9404
 8002b88:	4823      	ldr	r0, [pc, #140]	@ (8002c18 <MX_GPIO_Init+0x134>)
 8002b8a:	f001 fc69 	bl	8004460 <HAL_GPIO_WritePin>
			GPIO_PIN_2 | GPIO_PIN_10 | P3_Pin | stepper_pulse_2_Pin,
			GPIO_PIN_RESET);

	/*Configure GPIO pin : B1_Pin */
	GPIO_InitStruct.Pin = B1_Pin;
 8002b8e:	f44f 5300 	mov.w	r3, #8192	@ 0x2000
 8002b92:	617b      	str	r3, [r7, #20]
	GPIO_InitStruct.Mode = GPIO_MODE_IT_FALLING;
 8002b94:	f44f 1304 	mov.w	r3, #2162688	@ 0x210000
 8002b98:	61bb      	str	r3, [r7, #24]
	GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002b9a:	2300      	movs	r3, #0
 8002b9c:	61fb      	str	r3, [r7, #28]
	HAL_GPIO_Init(B1_GPIO_Port, &GPIO_InitStruct);
 8002b9e:	f107 0314 	add.w	r3, r7, #20
 8002ba2:	4619      	mov	r1, r3
 8002ba4:	481a      	ldr	r0, [pc, #104]	@ (8002c10 <MX_GPIO_Init+0x12c>)
 8002ba6:	f001 fac7 	bl	8004138 <HAL_GPIO_Init>

	/*Configure GPIO pins : PC15 M1_Pin M2_Pin M3_Pin
	 stepper_direction_1_Pin ENA_1_Pin stepper_pulse_1_Pin */
	GPIO_InitStruct.Pin = GPIO_PIN_15 | M1_Pin | M2_Pin | M3_Pin
 8002baa:	f248 033f 	movw	r3, #32831	@ 0x803f
 8002bae:	617b      	str	r3, [r7, #20]
			| stepper_direction_1_Pin | ENA_1_Pin | stepper_pulse_1_Pin;
	GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8002bb0:	2301      	movs	r3, #1
 8002bb2:	61bb      	str	r3, [r7, #24]
	GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002bb4:	2300      	movs	r3, #0
 8002bb6:	61fb      	str	r3, [r7, #28]
	GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8002bb8:	2300      	movs	r3, #0
 8002bba:	623b      	str	r3, [r7, #32]
	HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8002bbc:	f107 0314 	add.w	r3, r7, #20
 8002bc0:	4619      	mov	r1, r3
 8002bc2:	4813      	ldr	r0, [pc, #76]	@ (8002c10 <MX_GPIO_Init+0x12c>)
 8002bc4:	f001 fab8 	bl	8004138 <HAL_GPIO_Init>

	/*Configure GPIO pins : LD2_Pin P1_Pin P2_Pin */
	GPIO_InitStruct.Pin = LD2_Pin | P1_Pin | P2_Pin;
 8002bc8:	f44f 53c1 	mov.w	r3, #6176	@ 0x1820
 8002bcc:	617b      	str	r3, [r7, #20]
	GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8002bce:	2301      	movs	r3, #1
 8002bd0:	61bb      	str	r3, [r7, #24]
	GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002bd2:	2300      	movs	r3, #0
 8002bd4:	61fb      	str	r3, [r7, #28]
	GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8002bd6:	2300      	movs	r3, #0
 8002bd8:	623b      	str	r3, [r7, #32]
	HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8002bda:	f107 0314 	add.w	r3, r7, #20
 8002bde:	4619      	mov	r1, r3
 8002be0:	480c      	ldr	r0, [pc, #48]	@ (8002c14 <MX_GPIO_Init+0x130>)
 8002be2:	f001 faa9 	bl	8004138 <HAL_GPIO_Init>

	/*Configure GPIO pins : PB2 PB10 P3_Pin stepper_pulse_2_Pin */
	GPIO_InitStruct.Pin = GPIO_PIN_2 | GPIO_PIN_10 | P3_Pin
 8002be6:	f249 4304 	movw	r3, #37892	@ 0x9404
 8002bea:	617b      	str	r3, [r7, #20]
			| stepper_pulse_2_Pin;
	GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8002bec:	2301      	movs	r3, #1
 8002bee:	61bb      	str	r3, [r7, #24]
	GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002bf0:	2300      	movs	r3, #0
 8002bf2:	61fb      	str	r3, [r7, #28]
	GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8002bf4:	2300      	movs	r3, #0
 8002bf6:	623b      	str	r3, [r7, #32]
	HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002bf8:	f107 0314 	add.w	r3, r7, #20
 8002bfc:	4619      	mov	r1, r3
 8002bfe:	4806      	ldr	r0, [pc, #24]	@ (8002c18 <MX_GPIO_Init+0x134>)
 8002c00:	f001 fa9a 	bl	8004138 <HAL_GPIO_Init>

	/* USER CODE BEGIN MX_GPIO_Init_2 */
	/* USER CODE END MX_GPIO_Init_2 */
}
 8002c04:	bf00      	nop
 8002c06:	3728      	adds	r7, #40	@ 0x28
 8002c08:	46bd      	mov	sp, r7
 8002c0a:	bd80      	pop	{r7, pc}
 8002c0c:	40023800 	.word	0x40023800
 8002c10:	40020800 	.word	0x40020800
 8002c14:	40020000 	.word	0x40020000
 8002c18:	40020400 	.word	0x40020400

08002c1c <_write>:

/* USER CODE BEGIN 4 */
int _write(int file, char *ptr, int len) {
 8002c1c:	b580      	push	{r7, lr}
 8002c1e:	b084      	sub	sp, #16
 8002c20:	af00      	add	r7, sp, #0
 8002c22:	60f8      	str	r0, [r7, #12]
 8002c24:	60b9      	str	r1, [r7, #8]
 8002c26:	607a      	str	r2, [r7, #4]
	HAL_UART_Transmit(&huart2, (uint8_t*) ptr, len, HAL_MAX_DELAY);
 8002c28:	687b      	ldr	r3, [r7, #4]
 8002c2a:	b29a      	uxth	r2, r3
 8002c2c:	f04f 33ff 	mov.w	r3, #4294967295
 8002c30:	68b9      	ldr	r1, [r7, #8]
 8002c32:	4804      	ldr	r0, [pc, #16]	@ (8002c44 <_write+0x28>)
 8002c34:	f004 fb28 	bl	8007288 <HAL_UART_Transmit>
	return len;
 8002c38:	687b      	ldr	r3, [r7, #4]
}
 8002c3a:	4618      	mov	r0, r3
 8002c3c:	3710      	adds	r7, #16
 8002c3e:	46bd      	mov	sp, r7
 8002c40:	bd80      	pop	{r7, pc}
 8002c42:	bf00      	nop
 8002c44:	20000540 	.word	0x20000540

08002c48 <Error_Handler>:

/**
 * @brief  This function is executed in case of error occurrence.
 * @retval None
 */
void Error_Handler(void) {
 8002c48:	b480      	push	{r7}
 8002c4a:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting special-purpose register PRIMASK.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 8002c4c:	b672      	cpsid	i
}
 8002c4e:	bf00      	nop
	/* USER CODE BEGIN Error_Handler_Debug */
	/* User can add his own implementation to report the HAL error return state */
	__disable_irq();
	while (1) {
 8002c50:	bf00      	nop
 8002c52:	e7fd      	b.n	8002c50 <Error_Handler+0x8>

08002c54 <HAL_MspInit>:
void HAL_TIM_MspPostInit(TIM_HandleTypeDef *htim);
                                                                                                    /**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8002c54:	b580      	push	{r7, lr}
 8002c56:	b082      	sub	sp, #8
 8002c58:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 8002c5a:	2300      	movs	r3, #0
 8002c5c:	607b      	str	r3, [r7, #4]
 8002c5e:	4b10      	ldr	r3, [pc, #64]	@ (8002ca0 <HAL_MspInit+0x4c>)
 8002c60:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8002c62:	4a0f      	ldr	r2, [pc, #60]	@ (8002ca0 <HAL_MspInit+0x4c>)
 8002c64:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 8002c68:	6453      	str	r3, [r2, #68]	@ 0x44
 8002c6a:	4b0d      	ldr	r3, [pc, #52]	@ (8002ca0 <HAL_MspInit+0x4c>)
 8002c6c:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8002c6e:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 8002c72:	607b      	str	r3, [r7, #4]
 8002c74:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_PWR_CLK_ENABLE();
 8002c76:	2300      	movs	r3, #0
 8002c78:	603b      	str	r3, [r7, #0]
 8002c7a:	4b09      	ldr	r3, [pc, #36]	@ (8002ca0 <HAL_MspInit+0x4c>)
 8002c7c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002c7e:	4a08      	ldr	r2, [pc, #32]	@ (8002ca0 <HAL_MspInit+0x4c>)
 8002c80:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8002c84:	6413      	str	r3, [r2, #64]	@ 0x40
 8002c86:	4b06      	ldr	r3, [pc, #24]	@ (8002ca0 <HAL_MspInit+0x4c>)
 8002c88:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002c8a:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8002c8e:	603b      	str	r3, [r7, #0]
 8002c90:	683b      	ldr	r3, [r7, #0]

  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_0);
 8002c92:	2007      	movs	r0, #7
 8002c94:	f000 fe0c 	bl	80038b0 <HAL_NVIC_SetPriorityGrouping>
  /* System interrupt init*/

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 8002c98:	bf00      	nop
 8002c9a:	3708      	adds	r7, #8
 8002c9c:	46bd      	mov	sp, r7
 8002c9e:	bd80      	pop	{r7, pc}
 8002ca0:	40023800 	.word	0x40023800

08002ca4 <HAL_I2C_MspInit>:
* This function configures the hardware resources used in this example
* @param hi2c: I2C handle pointer
* @retval None
*/
void HAL_I2C_MspInit(I2C_HandleTypeDef* hi2c)
{
 8002ca4:	b580      	push	{r7, lr}
 8002ca6:	b08a      	sub	sp, #40	@ 0x28
 8002ca8:	af00      	add	r7, sp, #0
 8002caa:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8002cac:	f107 0314 	add.w	r3, r7, #20
 8002cb0:	2200      	movs	r2, #0
 8002cb2:	601a      	str	r2, [r3, #0]
 8002cb4:	605a      	str	r2, [r3, #4]
 8002cb6:	609a      	str	r2, [r3, #8]
 8002cb8:	60da      	str	r2, [r3, #12]
 8002cba:	611a      	str	r2, [r3, #16]
  if(hi2c->Instance==I2C1)
 8002cbc:	687b      	ldr	r3, [r7, #4]
 8002cbe:	681b      	ldr	r3, [r3, #0]
 8002cc0:	4a19      	ldr	r2, [pc, #100]	@ (8002d28 <HAL_I2C_MspInit+0x84>)
 8002cc2:	4293      	cmp	r3, r2
 8002cc4:	d12b      	bne.n	8002d1e <HAL_I2C_MspInit+0x7a>
  {
  /* USER CODE BEGIN I2C1_MspInit 0 */

  /* USER CODE END I2C1_MspInit 0 */

    __HAL_RCC_GPIOB_CLK_ENABLE();
 8002cc6:	2300      	movs	r3, #0
 8002cc8:	613b      	str	r3, [r7, #16]
 8002cca:	4b18      	ldr	r3, [pc, #96]	@ (8002d2c <HAL_I2C_MspInit+0x88>)
 8002ccc:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002cce:	4a17      	ldr	r2, [pc, #92]	@ (8002d2c <HAL_I2C_MspInit+0x88>)
 8002cd0:	f043 0302 	orr.w	r3, r3, #2
 8002cd4:	6313      	str	r3, [r2, #48]	@ 0x30
 8002cd6:	4b15      	ldr	r3, [pc, #84]	@ (8002d2c <HAL_I2C_MspInit+0x88>)
 8002cd8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002cda:	f003 0302 	and.w	r3, r3, #2
 8002cde:	613b      	str	r3, [r7, #16]
 8002ce0:	693b      	ldr	r3, [r7, #16]
    /**I2C1 GPIO Configuration
    PB6     ------> I2C1_SCL
    PB7     ------> I2C1_SDA
    */
    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
 8002ce2:	23c0      	movs	r3, #192	@ 0xc0
 8002ce4:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8002ce6:	2312      	movs	r3, #18
 8002ce8:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002cea:	2300      	movs	r3, #0
 8002cec:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8002cee:	2303      	movs	r3, #3
 8002cf0:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C1;
 8002cf2:	2304      	movs	r3, #4
 8002cf4:	627b      	str	r3, [r7, #36]	@ 0x24
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002cf6:	f107 0314 	add.w	r3, r7, #20
 8002cfa:	4619      	mov	r1, r3
 8002cfc:	480c      	ldr	r0, [pc, #48]	@ (8002d30 <HAL_I2C_MspInit+0x8c>)
 8002cfe:	f001 fa1b 	bl	8004138 <HAL_GPIO_Init>

    /* Peripheral clock enable */
    __HAL_RCC_I2C1_CLK_ENABLE();
 8002d02:	2300      	movs	r3, #0
 8002d04:	60fb      	str	r3, [r7, #12]
 8002d06:	4b09      	ldr	r3, [pc, #36]	@ (8002d2c <HAL_I2C_MspInit+0x88>)
 8002d08:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002d0a:	4a08      	ldr	r2, [pc, #32]	@ (8002d2c <HAL_I2C_MspInit+0x88>)
 8002d0c:	f443 1300 	orr.w	r3, r3, #2097152	@ 0x200000
 8002d10:	6413      	str	r3, [r2, #64]	@ 0x40
 8002d12:	4b06      	ldr	r3, [pc, #24]	@ (8002d2c <HAL_I2C_MspInit+0x88>)
 8002d14:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002d16:	f403 1300 	and.w	r3, r3, #2097152	@ 0x200000
 8002d1a:	60fb      	str	r3, [r7, #12]
 8002d1c:	68fb      	ldr	r3, [r7, #12]

  /* USER CODE END I2C1_MspInit 1 */

  }

}
 8002d1e:	bf00      	nop
 8002d20:	3728      	adds	r7, #40	@ 0x28
 8002d22:	46bd      	mov	sp, r7
 8002d24:	bd80      	pop	{r7, pc}
 8002d26:	bf00      	nop
 8002d28:	40005400 	.word	0x40005400
 8002d2c:	40023800 	.word	0x40023800
 8002d30:	40020400 	.word	0x40020400

08002d34 <HAL_TIM_Encoder_MspInit>:
* This function configures the hardware resources used in this example
* @param htim_encoder: TIM_Encoder handle pointer
* @retval None
*/
void HAL_TIM_Encoder_MspInit(TIM_HandleTypeDef* htim_encoder)
{
 8002d34:	b580      	push	{r7, lr}
 8002d36:	b092      	sub	sp, #72	@ 0x48
 8002d38:	af00      	add	r7, sp, #0
 8002d3a:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8002d3c:	f107 0334 	add.w	r3, r7, #52	@ 0x34
 8002d40:	2200      	movs	r2, #0
 8002d42:	601a      	str	r2, [r3, #0]
 8002d44:	605a      	str	r2, [r3, #4]
 8002d46:	609a      	str	r2, [r3, #8]
 8002d48:	60da      	str	r2, [r3, #12]
 8002d4a:	611a      	str	r2, [r3, #16]
  if(htim_encoder->Instance==TIM1)
 8002d4c:	687b      	ldr	r3, [r7, #4]
 8002d4e:	681b      	ldr	r3, [r3, #0]
 8002d50:	4a83      	ldr	r2, [pc, #524]	@ (8002f60 <HAL_TIM_Encoder_MspInit+0x22c>)
 8002d52:	4293      	cmp	r3, r2
 8002d54:	d12d      	bne.n	8002db2 <HAL_TIM_Encoder_MspInit+0x7e>
  {
  /* USER CODE BEGIN TIM1_MspInit 0 */

  /* USER CODE END TIM1_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_TIM1_CLK_ENABLE();
 8002d56:	2300      	movs	r3, #0
 8002d58:	633b      	str	r3, [r7, #48]	@ 0x30
 8002d5a:	4b82      	ldr	r3, [pc, #520]	@ (8002f64 <HAL_TIM_Encoder_MspInit+0x230>)
 8002d5c:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8002d5e:	4a81      	ldr	r2, [pc, #516]	@ (8002f64 <HAL_TIM_Encoder_MspInit+0x230>)
 8002d60:	f043 0301 	orr.w	r3, r3, #1
 8002d64:	6453      	str	r3, [r2, #68]	@ 0x44
 8002d66:	4b7f      	ldr	r3, [pc, #508]	@ (8002f64 <HAL_TIM_Encoder_MspInit+0x230>)
 8002d68:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8002d6a:	f003 0301 	and.w	r3, r3, #1
 8002d6e:	633b      	str	r3, [r7, #48]	@ 0x30
 8002d70:	6b3b      	ldr	r3, [r7, #48]	@ 0x30

    __HAL_RCC_GPIOA_CLK_ENABLE();
 8002d72:	2300      	movs	r3, #0
 8002d74:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8002d76:	4b7b      	ldr	r3, [pc, #492]	@ (8002f64 <HAL_TIM_Encoder_MspInit+0x230>)
 8002d78:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002d7a:	4a7a      	ldr	r2, [pc, #488]	@ (8002f64 <HAL_TIM_Encoder_MspInit+0x230>)
 8002d7c:	f043 0301 	orr.w	r3, r3, #1
 8002d80:	6313      	str	r3, [r2, #48]	@ 0x30
 8002d82:	4b78      	ldr	r3, [pc, #480]	@ (8002f64 <HAL_TIM_Encoder_MspInit+0x230>)
 8002d84:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002d86:	f003 0301 	and.w	r3, r3, #1
 8002d8a:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8002d8c:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
    /**TIM1 GPIO Configuration
    PA8     ------> TIM1_CH1
    PA9     ------> TIM1_CH2
    */
    GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9;
 8002d8e:	f44f 7340 	mov.w	r3, #768	@ 0x300
 8002d92:	637b      	str	r3, [r7, #52]	@ 0x34
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002d94:	2302      	movs	r3, #2
 8002d96:	63bb      	str	r3, [r7, #56]	@ 0x38
    GPIO_InitStruct.Pull = GPIO_PULLUP;
 8002d98:	2301      	movs	r3, #1
 8002d9a:	63fb      	str	r3, [r7, #60]	@ 0x3c
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8002d9c:	2300      	movs	r3, #0
 8002d9e:	643b      	str	r3, [r7, #64]	@ 0x40
    GPIO_InitStruct.Alternate = GPIO_AF1_TIM1;
 8002da0:	2301      	movs	r3, #1
 8002da2:	647b      	str	r3, [r7, #68]	@ 0x44
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8002da4:	f107 0334 	add.w	r3, r7, #52	@ 0x34
 8002da8:	4619      	mov	r1, r3
 8002daa:	486f      	ldr	r0, [pc, #444]	@ (8002f68 <HAL_TIM_Encoder_MspInit+0x234>)
 8002dac:	f001 f9c4 	bl	8004138 <HAL_GPIO_Init>
  /* USER CODE BEGIN TIM8_MspInit 1 */

  /* USER CODE END TIM8_MspInit 1 */
  }

}
 8002db0:	e0d1      	b.n	8002f56 <HAL_TIM_Encoder_MspInit+0x222>
  else if(htim_encoder->Instance==TIM2)
 8002db2:	687b      	ldr	r3, [r7, #4]
 8002db4:	681b      	ldr	r3, [r3, #0]
 8002db6:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8002dba:	d14b      	bne.n	8002e54 <HAL_TIM_Encoder_MspInit+0x120>
    __HAL_RCC_TIM2_CLK_ENABLE();
 8002dbc:	2300      	movs	r3, #0
 8002dbe:	62bb      	str	r3, [r7, #40]	@ 0x28
 8002dc0:	4b68      	ldr	r3, [pc, #416]	@ (8002f64 <HAL_TIM_Encoder_MspInit+0x230>)
 8002dc2:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002dc4:	4a67      	ldr	r2, [pc, #412]	@ (8002f64 <HAL_TIM_Encoder_MspInit+0x230>)
 8002dc6:	f043 0301 	orr.w	r3, r3, #1
 8002dca:	6413      	str	r3, [r2, #64]	@ 0x40
 8002dcc:	4b65      	ldr	r3, [pc, #404]	@ (8002f64 <HAL_TIM_Encoder_MspInit+0x230>)
 8002dce:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002dd0:	f003 0301 	and.w	r3, r3, #1
 8002dd4:	62bb      	str	r3, [r7, #40]	@ 0x28
 8002dd6:	6abb      	ldr	r3, [r7, #40]	@ 0x28
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8002dd8:	2300      	movs	r3, #0
 8002dda:	627b      	str	r3, [r7, #36]	@ 0x24
 8002ddc:	4b61      	ldr	r3, [pc, #388]	@ (8002f64 <HAL_TIM_Encoder_MspInit+0x230>)
 8002dde:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002de0:	4a60      	ldr	r2, [pc, #384]	@ (8002f64 <HAL_TIM_Encoder_MspInit+0x230>)
 8002de2:	f043 0301 	orr.w	r3, r3, #1
 8002de6:	6313      	str	r3, [r2, #48]	@ 0x30
 8002de8:	4b5e      	ldr	r3, [pc, #376]	@ (8002f64 <HAL_TIM_Encoder_MspInit+0x230>)
 8002dea:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002dec:	f003 0301 	and.w	r3, r3, #1
 8002df0:	627b      	str	r3, [r7, #36]	@ 0x24
 8002df2:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8002df4:	2300      	movs	r3, #0
 8002df6:	623b      	str	r3, [r7, #32]
 8002df8:	4b5a      	ldr	r3, [pc, #360]	@ (8002f64 <HAL_TIM_Encoder_MspInit+0x230>)
 8002dfa:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002dfc:	4a59      	ldr	r2, [pc, #356]	@ (8002f64 <HAL_TIM_Encoder_MspInit+0x230>)
 8002dfe:	f043 0302 	orr.w	r3, r3, #2
 8002e02:	6313      	str	r3, [r2, #48]	@ 0x30
 8002e04:	4b57      	ldr	r3, [pc, #348]	@ (8002f64 <HAL_TIM_Encoder_MspInit+0x230>)
 8002e06:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002e08:	f003 0302 	and.w	r3, r3, #2
 8002e0c:	623b      	str	r3, [r7, #32]
 8002e0e:	6a3b      	ldr	r3, [r7, #32]
    GPIO_InitStruct.Pin = GPIO_PIN_15;
 8002e10:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 8002e14:	637b      	str	r3, [r7, #52]	@ 0x34
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002e16:	2302      	movs	r3, #2
 8002e18:	63bb      	str	r3, [r7, #56]	@ 0x38
    GPIO_InitStruct.Pull = GPIO_PULLUP;
 8002e1a:	2301      	movs	r3, #1
 8002e1c:	63fb      	str	r3, [r7, #60]	@ 0x3c
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8002e1e:	2300      	movs	r3, #0
 8002e20:	643b      	str	r3, [r7, #64]	@ 0x40
    GPIO_InitStruct.Alternate = GPIO_AF1_TIM2;
 8002e22:	2301      	movs	r3, #1
 8002e24:	647b      	str	r3, [r7, #68]	@ 0x44
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8002e26:	f107 0334 	add.w	r3, r7, #52	@ 0x34
 8002e2a:	4619      	mov	r1, r3
 8002e2c:	484e      	ldr	r0, [pc, #312]	@ (8002f68 <HAL_TIM_Encoder_MspInit+0x234>)
 8002e2e:	f001 f983 	bl	8004138 <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_3;
 8002e32:	2308      	movs	r3, #8
 8002e34:	637b      	str	r3, [r7, #52]	@ 0x34
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002e36:	2302      	movs	r3, #2
 8002e38:	63bb      	str	r3, [r7, #56]	@ 0x38
    GPIO_InitStruct.Pull = GPIO_PULLUP;
 8002e3a:	2301      	movs	r3, #1
 8002e3c:	63fb      	str	r3, [r7, #60]	@ 0x3c
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8002e3e:	2300      	movs	r3, #0
 8002e40:	643b      	str	r3, [r7, #64]	@ 0x40
    GPIO_InitStruct.Alternate = GPIO_AF1_TIM2;
 8002e42:	2301      	movs	r3, #1
 8002e44:	647b      	str	r3, [r7, #68]	@ 0x44
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002e46:	f107 0334 	add.w	r3, r7, #52	@ 0x34
 8002e4a:	4619      	mov	r1, r3
 8002e4c:	4847      	ldr	r0, [pc, #284]	@ (8002f6c <HAL_TIM_Encoder_MspInit+0x238>)
 8002e4e:	f001 f973 	bl	8004138 <HAL_GPIO_Init>
}
 8002e52:	e080      	b.n	8002f56 <HAL_TIM_Encoder_MspInit+0x222>
  else if(htim_encoder->Instance==TIM3)
 8002e54:	687b      	ldr	r3, [r7, #4]
 8002e56:	681b      	ldr	r3, [r3, #0]
 8002e58:	4a45      	ldr	r2, [pc, #276]	@ (8002f70 <HAL_TIM_Encoder_MspInit+0x23c>)
 8002e5a:	4293      	cmp	r3, r2
 8002e5c:	d14a      	bne.n	8002ef4 <HAL_TIM_Encoder_MspInit+0x1c0>
    __HAL_RCC_TIM3_CLK_ENABLE();
 8002e5e:	2300      	movs	r3, #0
 8002e60:	61fb      	str	r3, [r7, #28]
 8002e62:	4b40      	ldr	r3, [pc, #256]	@ (8002f64 <HAL_TIM_Encoder_MspInit+0x230>)
 8002e64:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002e66:	4a3f      	ldr	r2, [pc, #252]	@ (8002f64 <HAL_TIM_Encoder_MspInit+0x230>)
 8002e68:	f043 0302 	orr.w	r3, r3, #2
 8002e6c:	6413      	str	r3, [r2, #64]	@ 0x40
 8002e6e:	4b3d      	ldr	r3, [pc, #244]	@ (8002f64 <HAL_TIM_Encoder_MspInit+0x230>)
 8002e70:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002e72:	f003 0302 	and.w	r3, r3, #2
 8002e76:	61fb      	str	r3, [r7, #28]
 8002e78:	69fb      	ldr	r3, [r7, #28]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8002e7a:	2300      	movs	r3, #0
 8002e7c:	61bb      	str	r3, [r7, #24]
 8002e7e:	4b39      	ldr	r3, [pc, #228]	@ (8002f64 <HAL_TIM_Encoder_MspInit+0x230>)
 8002e80:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002e82:	4a38      	ldr	r2, [pc, #224]	@ (8002f64 <HAL_TIM_Encoder_MspInit+0x230>)
 8002e84:	f043 0301 	orr.w	r3, r3, #1
 8002e88:	6313      	str	r3, [r2, #48]	@ 0x30
 8002e8a:	4b36      	ldr	r3, [pc, #216]	@ (8002f64 <HAL_TIM_Encoder_MspInit+0x230>)
 8002e8c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002e8e:	f003 0301 	and.w	r3, r3, #1
 8002e92:	61bb      	str	r3, [r7, #24]
 8002e94:	69bb      	ldr	r3, [r7, #24]
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8002e96:	2300      	movs	r3, #0
 8002e98:	617b      	str	r3, [r7, #20]
 8002e9a:	4b32      	ldr	r3, [pc, #200]	@ (8002f64 <HAL_TIM_Encoder_MspInit+0x230>)
 8002e9c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002e9e:	4a31      	ldr	r2, [pc, #196]	@ (8002f64 <HAL_TIM_Encoder_MspInit+0x230>)
 8002ea0:	f043 0302 	orr.w	r3, r3, #2
 8002ea4:	6313      	str	r3, [r2, #48]	@ 0x30
 8002ea6:	4b2f      	ldr	r3, [pc, #188]	@ (8002f64 <HAL_TIM_Encoder_MspInit+0x230>)
 8002ea8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002eaa:	f003 0302 	and.w	r3, r3, #2
 8002eae:	617b      	str	r3, [r7, #20]
 8002eb0:	697b      	ldr	r3, [r7, #20]
    GPIO_InitStruct.Pin = GPIO_PIN_7;
 8002eb2:	2380      	movs	r3, #128	@ 0x80
 8002eb4:	637b      	str	r3, [r7, #52]	@ 0x34
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002eb6:	2302      	movs	r3, #2
 8002eb8:	63bb      	str	r3, [r7, #56]	@ 0x38
    GPIO_InitStruct.Pull = GPIO_PULLUP;
 8002eba:	2301      	movs	r3, #1
 8002ebc:	63fb      	str	r3, [r7, #60]	@ 0x3c
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8002ebe:	2300      	movs	r3, #0
 8002ec0:	643b      	str	r3, [r7, #64]	@ 0x40
    GPIO_InitStruct.Alternate = GPIO_AF2_TIM3;
 8002ec2:	2302      	movs	r3, #2
 8002ec4:	647b      	str	r3, [r7, #68]	@ 0x44
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8002ec6:	f107 0334 	add.w	r3, r7, #52	@ 0x34
 8002eca:	4619      	mov	r1, r3
 8002ecc:	4826      	ldr	r0, [pc, #152]	@ (8002f68 <HAL_TIM_Encoder_MspInit+0x234>)
 8002ece:	f001 f933 	bl	8004138 <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_4;
 8002ed2:	2310      	movs	r3, #16
 8002ed4:	637b      	str	r3, [r7, #52]	@ 0x34
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002ed6:	2302      	movs	r3, #2
 8002ed8:	63bb      	str	r3, [r7, #56]	@ 0x38
    GPIO_InitStruct.Pull = GPIO_PULLUP;
 8002eda:	2301      	movs	r3, #1
 8002edc:	63fb      	str	r3, [r7, #60]	@ 0x3c
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8002ede:	2300      	movs	r3, #0
 8002ee0:	643b      	str	r3, [r7, #64]	@ 0x40
    GPIO_InitStruct.Alternate = GPIO_AF2_TIM3;
 8002ee2:	2302      	movs	r3, #2
 8002ee4:	647b      	str	r3, [r7, #68]	@ 0x44
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002ee6:	f107 0334 	add.w	r3, r7, #52	@ 0x34
 8002eea:	4619      	mov	r1, r3
 8002eec:	481f      	ldr	r0, [pc, #124]	@ (8002f6c <HAL_TIM_Encoder_MspInit+0x238>)
 8002eee:	f001 f923 	bl	8004138 <HAL_GPIO_Init>
}
 8002ef2:	e030      	b.n	8002f56 <HAL_TIM_Encoder_MspInit+0x222>
  else if(htim_encoder->Instance==TIM8)
 8002ef4:	687b      	ldr	r3, [r7, #4]
 8002ef6:	681b      	ldr	r3, [r3, #0]
 8002ef8:	4a1e      	ldr	r2, [pc, #120]	@ (8002f74 <HAL_TIM_Encoder_MspInit+0x240>)
 8002efa:	4293      	cmp	r3, r2
 8002efc:	d12b      	bne.n	8002f56 <HAL_TIM_Encoder_MspInit+0x222>
    __HAL_RCC_TIM8_CLK_ENABLE();
 8002efe:	2300      	movs	r3, #0
 8002f00:	613b      	str	r3, [r7, #16]
 8002f02:	4b18      	ldr	r3, [pc, #96]	@ (8002f64 <HAL_TIM_Encoder_MspInit+0x230>)
 8002f04:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8002f06:	4a17      	ldr	r2, [pc, #92]	@ (8002f64 <HAL_TIM_Encoder_MspInit+0x230>)
 8002f08:	f043 0302 	orr.w	r3, r3, #2
 8002f0c:	6453      	str	r3, [r2, #68]	@ 0x44
 8002f0e:	4b15      	ldr	r3, [pc, #84]	@ (8002f64 <HAL_TIM_Encoder_MspInit+0x230>)
 8002f10:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8002f12:	f003 0302 	and.w	r3, r3, #2
 8002f16:	613b      	str	r3, [r7, #16]
 8002f18:	693b      	ldr	r3, [r7, #16]
    __HAL_RCC_GPIOC_CLK_ENABLE();
 8002f1a:	2300      	movs	r3, #0
 8002f1c:	60fb      	str	r3, [r7, #12]
 8002f1e:	4b11      	ldr	r3, [pc, #68]	@ (8002f64 <HAL_TIM_Encoder_MspInit+0x230>)
 8002f20:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002f22:	4a10      	ldr	r2, [pc, #64]	@ (8002f64 <HAL_TIM_Encoder_MspInit+0x230>)
 8002f24:	f043 0304 	orr.w	r3, r3, #4
 8002f28:	6313      	str	r3, [r2, #48]	@ 0x30
 8002f2a:	4b0e      	ldr	r3, [pc, #56]	@ (8002f64 <HAL_TIM_Encoder_MspInit+0x230>)
 8002f2c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002f2e:	f003 0304 	and.w	r3, r3, #4
 8002f32:	60fb      	str	r3, [r7, #12]
 8002f34:	68fb      	ldr	r3, [r7, #12]
    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
 8002f36:	23c0      	movs	r3, #192	@ 0xc0
 8002f38:	637b      	str	r3, [r7, #52]	@ 0x34
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002f3a:	2302      	movs	r3, #2
 8002f3c:	63bb      	str	r3, [r7, #56]	@ 0x38
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002f3e:	2300      	movs	r3, #0
 8002f40:	63fb      	str	r3, [r7, #60]	@ 0x3c
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8002f42:	2300      	movs	r3, #0
 8002f44:	643b      	str	r3, [r7, #64]	@ 0x40
    GPIO_InitStruct.Alternate = GPIO_AF3_TIM8;
 8002f46:	2303      	movs	r3, #3
 8002f48:	647b      	str	r3, [r7, #68]	@ 0x44
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8002f4a:	f107 0334 	add.w	r3, r7, #52	@ 0x34
 8002f4e:	4619      	mov	r1, r3
 8002f50:	4809      	ldr	r0, [pc, #36]	@ (8002f78 <HAL_TIM_Encoder_MspInit+0x244>)
 8002f52:	f001 f8f1 	bl	8004138 <HAL_GPIO_Init>
}
 8002f56:	bf00      	nop
 8002f58:	3748      	adds	r7, #72	@ 0x48
 8002f5a:	46bd      	mov	sp, r7
 8002f5c:	bd80      	pop	{r7, pc}
 8002f5e:	bf00      	nop
 8002f60:	40010000 	.word	0x40010000
 8002f64:	40023800 	.word	0x40023800
 8002f68:	40020000 	.word	0x40020000
 8002f6c:	40020400 	.word	0x40020400
 8002f70:	40000400 	.word	0x40000400
 8002f74:	40010400 	.word	0x40010400
 8002f78:	40020800 	.word	0x40020800

08002f7c <HAL_TIM_Base_MspInit>:
* This function configures the hardware resources used in this example
* @param htim_base: TIM_Base handle pointer
* @retval None
*/
void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* htim_base)
{
 8002f7c:	b480      	push	{r7}
 8002f7e:	b089      	sub	sp, #36	@ 0x24
 8002f80:	af00      	add	r7, sp, #0
 8002f82:	6078      	str	r0, [r7, #4]
  if(htim_base->Instance==TIM5)
 8002f84:	687b      	ldr	r3, [r7, #4]
 8002f86:	681b      	ldr	r3, [r3, #0]
 8002f88:	4a33      	ldr	r2, [pc, #204]	@ (8003058 <HAL_TIM_Base_MspInit+0xdc>)
 8002f8a:	4293      	cmp	r3, r2
 8002f8c:	d10e      	bne.n	8002fac <HAL_TIM_Base_MspInit+0x30>
  {
  /* USER CODE BEGIN TIM5_MspInit 0 */

  /* USER CODE END TIM5_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_TIM5_CLK_ENABLE();
 8002f8e:	2300      	movs	r3, #0
 8002f90:	61fb      	str	r3, [r7, #28]
 8002f92:	4b32      	ldr	r3, [pc, #200]	@ (800305c <HAL_TIM_Base_MspInit+0xe0>)
 8002f94:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002f96:	4a31      	ldr	r2, [pc, #196]	@ (800305c <HAL_TIM_Base_MspInit+0xe0>)
 8002f98:	f043 0308 	orr.w	r3, r3, #8
 8002f9c:	6413      	str	r3, [r2, #64]	@ 0x40
 8002f9e:	4b2f      	ldr	r3, [pc, #188]	@ (800305c <HAL_TIM_Base_MspInit+0xe0>)
 8002fa0:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002fa2:	f003 0308 	and.w	r3, r3, #8
 8002fa6:	61fb      	str	r3, [r7, #28]
 8002fa8:	69fb      	ldr	r3, [r7, #28]
  /* USER CODE BEGIN TIM13_MspInit 1 */

  /* USER CODE END TIM13_MspInit 1 */
  }

}
 8002faa:	e04e      	b.n	800304a <HAL_TIM_Base_MspInit+0xce>
  else if(htim_base->Instance==TIM10)
 8002fac:	687b      	ldr	r3, [r7, #4]
 8002fae:	681b      	ldr	r3, [r3, #0]
 8002fb0:	4a2b      	ldr	r2, [pc, #172]	@ (8003060 <HAL_TIM_Base_MspInit+0xe4>)
 8002fb2:	4293      	cmp	r3, r2
 8002fb4:	d10e      	bne.n	8002fd4 <HAL_TIM_Base_MspInit+0x58>
    __HAL_RCC_TIM10_CLK_ENABLE();
 8002fb6:	2300      	movs	r3, #0
 8002fb8:	61bb      	str	r3, [r7, #24]
 8002fba:	4b28      	ldr	r3, [pc, #160]	@ (800305c <HAL_TIM_Base_MspInit+0xe0>)
 8002fbc:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8002fbe:	4a27      	ldr	r2, [pc, #156]	@ (800305c <HAL_TIM_Base_MspInit+0xe0>)
 8002fc0:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 8002fc4:	6453      	str	r3, [r2, #68]	@ 0x44
 8002fc6:	4b25      	ldr	r3, [pc, #148]	@ (800305c <HAL_TIM_Base_MspInit+0xe0>)
 8002fc8:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8002fca:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8002fce:	61bb      	str	r3, [r7, #24]
 8002fd0:	69bb      	ldr	r3, [r7, #24]
}
 8002fd2:	e03a      	b.n	800304a <HAL_TIM_Base_MspInit+0xce>
  else if(htim_base->Instance==TIM11)
 8002fd4:	687b      	ldr	r3, [r7, #4]
 8002fd6:	681b      	ldr	r3, [r3, #0]
 8002fd8:	4a22      	ldr	r2, [pc, #136]	@ (8003064 <HAL_TIM_Base_MspInit+0xe8>)
 8002fda:	4293      	cmp	r3, r2
 8002fdc:	d10e      	bne.n	8002ffc <HAL_TIM_Base_MspInit+0x80>
    __HAL_RCC_TIM11_CLK_ENABLE();
 8002fde:	2300      	movs	r3, #0
 8002fe0:	617b      	str	r3, [r7, #20]
 8002fe2:	4b1e      	ldr	r3, [pc, #120]	@ (800305c <HAL_TIM_Base_MspInit+0xe0>)
 8002fe4:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8002fe6:	4a1d      	ldr	r2, [pc, #116]	@ (800305c <HAL_TIM_Base_MspInit+0xe0>)
 8002fe8:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
 8002fec:	6453      	str	r3, [r2, #68]	@ 0x44
 8002fee:	4b1b      	ldr	r3, [pc, #108]	@ (800305c <HAL_TIM_Base_MspInit+0xe0>)
 8002ff0:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8002ff2:	f403 2380 	and.w	r3, r3, #262144	@ 0x40000
 8002ff6:	617b      	str	r3, [r7, #20]
 8002ff8:	697b      	ldr	r3, [r7, #20]
}
 8002ffa:	e026      	b.n	800304a <HAL_TIM_Base_MspInit+0xce>
  else if(htim_base->Instance==TIM12)
 8002ffc:	687b      	ldr	r3, [r7, #4]
 8002ffe:	681b      	ldr	r3, [r3, #0]
 8003000:	4a19      	ldr	r2, [pc, #100]	@ (8003068 <HAL_TIM_Base_MspInit+0xec>)
 8003002:	4293      	cmp	r3, r2
 8003004:	d10e      	bne.n	8003024 <HAL_TIM_Base_MspInit+0xa8>
    __HAL_RCC_TIM12_CLK_ENABLE();
 8003006:	2300      	movs	r3, #0
 8003008:	613b      	str	r3, [r7, #16]
 800300a:	4b14      	ldr	r3, [pc, #80]	@ (800305c <HAL_TIM_Base_MspInit+0xe0>)
 800300c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800300e:	4a13      	ldr	r2, [pc, #76]	@ (800305c <HAL_TIM_Base_MspInit+0xe0>)
 8003010:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8003014:	6413      	str	r3, [r2, #64]	@ 0x40
 8003016:	4b11      	ldr	r3, [pc, #68]	@ (800305c <HAL_TIM_Base_MspInit+0xe0>)
 8003018:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800301a:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 800301e:	613b      	str	r3, [r7, #16]
 8003020:	693b      	ldr	r3, [r7, #16]
}
 8003022:	e012      	b.n	800304a <HAL_TIM_Base_MspInit+0xce>
  else if(htim_base->Instance==TIM13)
 8003024:	687b      	ldr	r3, [r7, #4]
 8003026:	681b      	ldr	r3, [r3, #0]
 8003028:	4a10      	ldr	r2, [pc, #64]	@ (800306c <HAL_TIM_Base_MspInit+0xf0>)
 800302a:	4293      	cmp	r3, r2
 800302c:	d10d      	bne.n	800304a <HAL_TIM_Base_MspInit+0xce>
    __HAL_RCC_TIM13_CLK_ENABLE();
 800302e:	2300      	movs	r3, #0
 8003030:	60fb      	str	r3, [r7, #12]
 8003032:	4b0a      	ldr	r3, [pc, #40]	@ (800305c <HAL_TIM_Base_MspInit+0xe0>)
 8003034:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003036:	4a09      	ldr	r2, [pc, #36]	@ (800305c <HAL_TIM_Base_MspInit+0xe0>)
 8003038:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 800303c:	6413      	str	r3, [r2, #64]	@ 0x40
 800303e:	4b07      	ldr	r3, [pc, #28]	@ (800305c <HAL_TIM_Base_MspInit+0xe0>)
 8003040:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003042:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8003046:	60fb      	str	r3, [r7, #12]
 8003048:	68fb      	ldr	r3, [r7, #12]
}
 800304a:	bf00      	nop
 800304c:	3724      	adds	r7, #36	@ 0x24
 800304e:	46bd      	mov	sp, r7
 8003050:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003054:	4770      	bx	lr
 8003056:	bf00      	nop
 8003058:	40000c00 	.word	0x40000c00
 800305c:	40023800 	.word	0x40023800
 8003060:	40014400 	.word	0x40014400
 8003064:	40014800 	.word	0x40014800
 8003068:	40001800 	.word	0x40001800
 800306c:	40001c00 	.word	0x40001c00

08003070 <HAL_TIM_MspPostInit>:

void HAL_TIM_MspPostInit(TIM_HandleTypeDef* htim)
{
 8003070:	b580      	push	{r7, lr}
 8003072:	b08c      	sub	sp, #48	@ 0x30
 8003074:	af00      	add	r7, sp, #0
 8003076:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8003078:	f107 031c 	add.w	r3, r7, #28
 800307c:	2200      	movs	r2, #0
 800307e:	601a      	str	r2, [r3, #0]
 8003080:	605a      	str	r2, [r3, #4]
 8003082:	609a      	str	r2, [r3, #8]
 8003084:	60da      	str	r2, [r3, #12]
 8003086:	611a      	str	r2, [r3, #16]
  if(htim->Instance==TIM5)
 8003088:	687b      	ldr	r3, [r7, #4]
 800308a:	681b      	ldr	r3, [r3, #0]
 800308c:	4a5b      	ldr	r2, [pc, #364]	@ (80031fc <HAL_TIM_MspPostInit+0x18c>)
 800308e:	4293      	cmp	r3, r2
 8003090:	d11e      	bne.n	80030d0 <HAL_TIM_MspPostInit+0x60>
  {
  /* USER CODE BEGIN TIM5_MspPostInit 0 */

  /* USER CODE END TIM5_MspPostInit 0 */
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8003092:	2300      	movs	r3, #0
 8003094:	61bb      	str	r3, [r7, #24]
 8003096:	4b5a      	ldr	r3, [pc, #360]	@ (8003200 <HAL_TIM_MspPostInit+0x190>)
 8003098:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800309a:	4a59      	ldr	r2, [pc, #356]	@ (8003200 <HAL_TIM_MspPostInit+0x190>)
 800309c:	f043 0301 	orr.w	r3, r3, #1
 80030a0:	6313      	str	r3, [r2, #48]	@ 0x30
 80030a2:	4b57      	ldr	r3, [pc, #348]	@ (8003200 <HAL_TIM_MspPostInit+0x190>)
 80030a4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80030a6:	f003 0301 	and.w	r3, r3, #1
 80030aa:	61bb      	str	r3, [r7, #24]
 80030ac:	69bb      	ldr	r3, [r7, #24]
    /**TIM5 GPIO Configuration
    PA0-WKUP     ------> TIM5_CH1
    PA1     ------> TIM5_CH2
    */
    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
 80030ae:	2303      	movs	r3, #3
 80030b0:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80030b2:	2302      	movs	r3, #2
 80030b4:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 80030b6:	2300      	movs	r3, #0
 80030b8:	627b      	str	r3, [r7, #36]	@ 0x24
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80030ba:	2300      	movs	r3, #0
 80030bc:	62bb      	str	r3, [r7, #40]	@ 0x28
    GPIO_InitStruct.Alternate = GPIO_AF2_TIM5;
 80030be:	2302      	movs	r3, #2
 80030c0:	62fb      	str	r3, [r7, #44]	@ 0x2c
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80030c2:	f107 031c 	add.w	r3, r7, #28
 80030c6:	4619      	mov	r1, r3
 80030c8:	484e      	ldr	r0, [pc, #312]	@ (8003204 <HAL_TIM_MspPostInit+0x194>)
 80030ca:	f001 f835 	bl	8004138 <HAL_GPIO_Init>
  /* USER CODE BEGIN TIM13_MspPostInit 1 */

  /* USER CODE END TIM13_MspPostInit 1 */
  }

}
 80030ce:	e091      	b.n	80031f4 <HAL_TIM_MspPostInit+0x184>
  else if(htim->Instance==TIM10)
 80030d0:	687b      	ldr	r3, [r7, #4]
 80030d2:	681b      	ldr	r3, [r3, #0]
 80030d4:	4a4c      	ldr	r2, [pc, #304]	@ (8003208 <HAL_TIM_MspPostInit+0x198>)
 80030d6:	4293      	cmp	r3, r2
 80030d8:	d11f      	bne.n	800311a <HAL_TIM_MspPostInit+0xaa>
    __HAL_RCC_GPIOB_CLK_ENABLE();
 80030da:	2300      	movs	r3, #0
 80030dc:	617b      	str	r3, [r7, #20]
 80030de:	4b48      	ldr	r3, [pc, #288]	@ (8003200 <HAL_TIM_MspPostInit+0x190>)
 80030e0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80030e2:	4a47      	ldr	r2, [pc, #284]	@ (8003200 <HAL_TIM_MspPostInit+0x190>)
 80030e4:	f043 0302 	orr.w	r3, r3, #2
 80030e8:	6313      	str	r3, [r2, #48]	@ 0x30
 80030ea:	4b45      	ldr	r3, [pc, #276]	@ (8003200 <HAL_TIM_MspPostInit+0x190>)
 80030ec:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80030ee:	f003 0302 	and.w	r3, r3, #2
 80030f2:	617b      	str	r3, [r7, #20]
 80030f4:	697b      	ldr	r3, [r7, #20]
    GPIO_InitStruct.Pin = GPIO_PIN_8;
 80030f6:	f44f 7380 	mov.w	r3, #256	@ 0x100
 80030fa:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80030fc:	2302      	movs	r3, #2
 80030fe:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8003100:	2300      	movs	r3, #0
 8003102:	627b      	str	r3, [r7, #36]	@ 0x24
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8003104:	2300      	movs	r3, #0
 8003106:	62bb      	str	r3, [r7, #40]	@ 0x28
    GPIO_InitStruct.Alternate = GPIO_AF3_TIM10;
 8003108:	2303      	movs	r3, #3
 800310a:	62fb      	str	r3, [r7, #44]	@ 0x2c
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800310c:	f107 031c 	add.w	r3, r7, #28
 8003110:	4619      	mov	r1, r3
 8003112:	483e      	ldr	r0, [pc, #248]	@ (800320c <HAL_TIM_MspPostInit+0x19c>)
 8003114:	f001 f810 	bl	8004138 <HAL_GPIO_Init>
}
 8003118:	e06c      	b.n	80031f4 <HAL_TIM_MspPostInit+0x184>
  else if(htim->Instance==TIM11)
 800311a:	687b      	ldr	r3, [r7, #4]
 800311c:	681b      	ldr	r3, [r3, #0]
 800311e:	4a3c      	ldr	r2, [pc, #240]	@ (8003210 <HAL_TIM_MspPostInit+0x1a0>)
 8003120:	4293      	cmp	r3, r2
 8003122:	d11f      	bne.n	8003164 <HAL_TIM_MspPostInit+0xf4>
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8003124:	2300      	movs	r3, #0
 8003126:	613b      	str	r3, [r7, #16]
 8003128:	4b35      	ldr	r3, [pc, #212]	@ (8003200 <HAL_TIM_MspPostInit+0x190>)
 800312a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800312c:	4a34      	ldr	r2, [pc, #208]	@ (8003200 <HAL_TIM_MspPostInit+0x190>)
 800312e:	f043 0302 	orr.w	r3, r3, #2
 8003132:	6313      	str	r3, [r2, #48]	@ 0x30
 8003134:	4b32      	ldr	r3, [pc, #200]	@ (8003200 <HAL_TIM_MspPostInit+0x190>)
 8003136:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8003138:	f003 0302 	and.w	r3, r3, #2
 800313c:	613b      	str	r3, [r7, #16]
 800313e:	693b      	ldr	r3, [r7, #16]
    GPIO_InitStruct.Pin = GPIO_PIN_9;
 8003140:	f44f 7300 	mov.w	r3, #512	@ 0x200
 8003144:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8003146:	2302      	movs	r3, #2
 8003148:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 800314a:	2300      	movs	r3, #0
 800314c:	627b      	str	r3, [r7, #36]	@ 0x24
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 800314e:	2300      	movs	r3, #0
 8003150:	62bb      	str	r3, [r7, #40]	@ 0x28
    GPIO_InitStruct.Alternate = GPIO_AF3_TIM11;
 8003152:	2303      	movs	r3, #3
 8003154:	62fb      	str	r3, [r7, #44]	@ 0x2c
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8003156:	f107 031c 	add.w	r3, r7, #28
 800315a:	4619      	mov	r1, r3
 800315c:	482b      	ldr	r0, [pc, #172]	@ (800320c <HAL_TIM_MspPostInit+0x19c>)
 800315e:	f000 ffeb 	bl	8004138 <HAL_GPIO_Init>
}
 8003162:	e047      	b.n	80031f4 <HAL_TIM_MspPostInit+0x184>
  else if(htim->Instance==TIM12)
 8003164:	687b      	ldr	r3, [r7, #4]
 8003166:	681b      	ldr	r3, [r3, #0]
 8003168:	4a2a      	ldr	r2, [pc, #168]	@ (8003214 <HAL_TIM_MspPostInit+0x1a4>)
 800316a:	4293      	cmp	r3, r2
 800316c:	d11f      	bne.n	80031ae <HAL_TIM_MspPostInit+0x13e>
    __HAL_RCC_GPIOB_CLK_ENABLE();
 800316e:	2300      	movs	r3, #0
 8003170:	60fb      	str	r3, [r7, #12]
 8003172:	4b23      	ldr	r3, [pc, #140]	@ (8003200 <HAL_TIM_MspPostInit+0x190>)
 8003174:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8003176:	4a22      	ldr	r2, [pc, #136]	@ (8003200 <HAL_TIM_MspPostInit+0x190>)
 8003178:	f043 0302 	orr.w	r3, r3, #2
 800317c:	6313      	str	r3, [r2, #48]	@ 0x30
 800317e:	4b20      	ldr	r3, [pc, #128]	@ (8003200 <HAL_TIM_MspPostInit+0x190>)
 8003180:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8003182:	f003 0302 	and.w	r3, r3, #2
 8003186:	60fb      	str	r3, [r7, #12]
 8003188:	68fb      	ldr	r3, [r7, #12]
    GPIO_InitStruct.Pin = GPIO_PIN_14;
 800318a:	f44f 4380 	mov.w	r3, #16384	@ 0x4000
 800318e:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8003190:	2302      	movs	r3, #2
 8003192:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8003194:	2300      	movs	r3, #0
 8003196:	627b      	str	r3, [r7, #36]	@ 0x24
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8003198:	2300      	movs	r3, #0
 800319a:	62bb      	str	r3, [r7, #40]	@ 0x28
    GPIO_InitStruct.Alternate = GPIO_AF9_TIM12;
 800319c:	2309      	movs	r3, #9
 800319e:	62fb      	str	r3, [r7, #44]	@ 0x2c
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80031a0:	f107 031c 	add.w	r3, r7, #28
 80031a4:	4619      	mov	r1, r3
 80031a6:	4819      	ldr	r0, [pc, #100]	@ (800320c <HAL_TIM_MspPostInit+0x19c>)
 80031a8:	f000 ffc6 	bl	8004138 <HAL_GPIO_Init>
}
 80031ac:	e022      	b.n	80031f4 <HAL_TIM_MspPostInit+0x184>
  else if(htim->Instance==TIM13)
 80031ae:	687b      	ldr	r3, [r7, #4]
 80031b0:	681b      	ldr	r3, [r3, #0]
 80031b2:	4a19      	ldr	r2, [pc, #100]	@ (8003218 <HAL_TIM_MspPostInit+0x1a8>)
 80031b4:	4293      	cmp	r3, r2
 80031b6:	d11d      	bne.n	80031f4 <HAL_TIM_MspPostInit+0x184>
    __HAL_RCC_GPIOA_CLK_ENABLE();
 80031b8:	2300      	movs	r3, #0
 80031ba:	60bb      	str	r3, [r7, #8]
 80031bc:	4b10      	ldr	r3, [pc, #64]	@ (8003200 <HAL_TIM_MspPostInit+0x190>)
 80031be:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80031c0:	4a0f      	ldr	r2, [pc, #60]	@ (8003200 <HAL_TIM_MspPostInit+0x190>)
 80031c2:	f043 0301 	orr.w	r3, r3, #1
 80031c6:	6313      	str	r3, [r2, #48]	@ 0x30
 80031c8:	4b0d      	ldr	r3, [pc, #52]	@ (8003200 <HAL_TIM_MspPostInit+0x190>)
 80031ca:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80031cc:	f003 0301 	and.w	r3, r3, #1
 80031d0:	60bb      	str	r3, [r7, #8]
 80031d2:	68bb      	ldr	r3, [r7, #8]
    GPIO_InitStruct.Pin = GPIO_PIN_6;
 80031d4:	2340      	movs	r3, #64	@ 0x40
 80031d6:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80031d8:	2302      	movs	r3, #2
 80031da:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 80031dc:	2300      	movs	r3, #0
 80031de:	627b      	str	r3, [r7, #36]	@ 0x24
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80031e0:	2300      	movs	r3, #0
 80031e2:	62bb      	str	r3, [r7, #40]	@ 0x28
    GPIO_InitStruct.Alternate = GPIO_AF9_TIM13;
 80031e4:	2309      	movs	r3, #9
 80031e6:	62fb      	str	r3, [r7, #44]	@ 0x2c
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80031e8:	f107 031c 	add.w	r3, r7, #28
 80031ec:	4619      	mov	r1, r3
 80031ee:	4805      	ldr	r0, [pc, #20]	@ (8003204 <HAL_TIM_MspPostInit+0x194>)
 80031f0:	f000 ffa2 	bl	8004138 <HAL_GPIO_Init>
}
 80031f4:	bf00      	nop
 80031f6:	3730      	adds	r7, #48	@ 0x30
 80031f8:	46bd      	mov	sp, r7
 80031fa:	bd80      	pop	{r7, pc}
 80031fc:	40000c00 	.word	0x40000c00
 8003200:	40023800 	.word	0x40023800
 8003204:	40020000 	.word	0x40020000
 8003208:	40014400 	.word	0x40014400
 800320c:	40020400 	.word	0x40020400
 8003210:	40014800 	.word	0x40014800
 8003214:	40001800 	.word	0x40001800
 8003218:	40001c00 	.word	0x40001c00

0800321c <HAL_UART_MspInit>:
* This function configures the hardware resources used in this example
* @param huart: UART handle pointer
* @retval None
*/
void HAL_UART_MspInit(UART_HandleTypeDef* huart)
{
 800321c:	b580      	push	{r7, lr}
 800321e:	b08c      	sub	sp, #48	@ 0x30
 8003220:	af00      	add	r7, sp, #0
 8003222:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8003224:	f107 031c 	add.w	r3, r7, #28
 8003228:	2200      	movs	r2, #0
 800322a:	601a      	str	r2, [r3, #0]
 800322c:	605a      	str	r2, [r3, #4]
 800322e:	609a      	str	r2, [r3, #8]
 8003230:	60da      	str	r2, [r3, #12]
 8003232:	611a      	str	r2, [r3, #16]
  if(huart->Instance==UART4)
 8003234:	687b      	ldr	r3, [r7, #4]
 8003236:	681b      	ldr	r3, [r3, #0]
 8003238:	4a4e      	ldr	r2, [pc, #312]	@ (8003374 <HAL_UART_MspInit+0x158>)
 800323a:	4293      	cmp	r3, r2
 800323c:	d164      	bne.n	8003308 <HAL_UART_MspInit+0xec>
  {
  /* USER CODE BEGIN UART4_MspInit 0 */

  /* USER CODE END UART4_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_UART4_CLK_ENABLE();
 800323e:	2300      	movs	r3, #0
 8003240:	61bb      	str	r3, [r7, #24]
 8003242:	4b4d      	ldr	r3, [pc, #308]	@ (8003378 <HAL_UART_MspInit+0x15c>)
 8003244:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003246:	4a4c      	ldr	r2, [pc, #304]	@ (8003378 <HAL_UART_MspInit+0x15c>)
 8003248:	f443 2300 	orr.w	r3, r3, #524288	@ 0x80000
 800324c:	6413      	str	r3, [r2, #64]	@ 0x40
 800324e:	4b4a      	ldr	r3, [pc, #296]	@ (8003378 <HAL_UART_MspInit+0x15c>)
 8003250:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003252:	f403 2300 	and.w	r3, r3, #524288	@ 0x80000
 8003256:	61bb      	str	r3, [r7, #24]
 8003258:	69bb      	ldr	r3, [r7, #24]

    __HAL_RCC_GPIOC_CLK_ENABLE();
 800325a:	2300      	movs	r3, #0
 800325c:	617b      	str	r3, [r7, #20]
 800325e:	4b46      	ldr	r3, [pc, #280]	@ (8003378 <HAL_UART_MspInit+0x15c>)
 8003260:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8003262:	4a45      	ldr	r2, [pc, #276]	@ (8003378 <HAL_UART_MspInit+0x15c>)
 8003264:	f043 0304 	orr.w	r3, r3, #4
 8003268:	6313      	str	r3, [r2, #48]	@ 0x30
 800326a:	4b43      	ldr	r3, [pc, #268]	@ (8003378 <HAL_UART_MspInit+0x15c>)
 800326c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800326e:	f003 0304 	and.w	r3, r3, #4
 8003272:	617b      	str	r3, [r7, #20]
 8003274:	697b      	ldr	r3, [r7, #20]
    /**UART4 GPIO Configuration
    PC10     ------> UART4_TX
    PC11     ------> UART4_RX
    */
    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_11;
 8003276:	f44f 6340 	mov.w	r3, #3072	@ 0xc00
 800327a:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800327c:	2302      	movs	r3, #2
 800327e:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8003280:	2300      	movs	r3, #0
 8003282:	627b      	str	r3, [r7, #36]	@ 0x24
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8003284:	2303      	movs	r3, #3
 8003286:	62bb      	str	r3, [r7, #40]	@ 0x28
    GPIO_InitStruct.Alternate = GPIO_AF8_UART4;
 8003288:	2308      	movs	r3, #8
 800328a:	62fb      	str	r3, [r7, #44]	@ 0x2c
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 800328c:	f107 031c 	add.w	r3, r7, #28
 8003290:	4619      	mov	r1, r3
 8003292:	483a      	ldr	r0, [pc, #232]	@ (800337c <HAL_UART_MspInit+0x160>)
 8003294:	f000 ff50 	bl	8004138 <HAL_GPIO_Init>

    /* UART4 DMA Init */
    /* UART4_RX Init */
    hdma_uart4_rx.Instance = DMA1_Stream2;
 8003298:	4b39      	ldr	r3, [pc, #228]	@ (8003380 <HAL_UART_MspInit+0x164>)
 800329a:	4a3a      	ldr	r2, [pc, #232]	@ (8003384 <HAL_UART_MspInit+0x168>)
 800329c:	601a      	str	r2, [r3, #0]
    hdma_uart4_rx.Init.Channel = DMA_CHANNEL_4;
 800329e:	4b38      	ldr	r3, [pc, #224]	@ (8003380 <HAL_UART_MspInit+0x164>)
 80032a0:	f04f 6200 	mov.w	r2, #134217728	@ 0x8000000
 80032a4:	605a      	str	r2, [r3, #4]
    hdma_uart4_rx.Init.Direction = DMA_PERIPH_TO_MEMORY;
 80032a6:	4b36      	ldr	r3, [pc, #216]	@ (8003380 <HAL_UART_MspInit+0x164>)
 80032a8:	2200      	movs	r2, #0
 80032aa:	609a      	str	r2, [r3, #8]
    hdma_uart4_rx.Init.PeriphInc = DMA_PINC_DISABLE;
 80032ac:	4b34      	ldr	r3, [pc, #208]	@ (8003380 <HAL_UART_MspInit+0x164>)
 80032ae:	2200      	movs	r2, #0
 80032b0:	60da      	str	r2, [r3, #12]
    hdma_uart4_rx.Init.MemInc = DMA_MINC_ENABLE;
 80032b2:	4b33      	ldr	r3, [pc, #204]	@ (8003380 <HAL_UART_MspInit+0x164>)
 80032b4:	f44f 6280 	mov.w	r2, #1024	@ 0x400
 80032b8:	611a      	str	r2, [r3, #16]
    hdma_uart4_rx.Init.PeriphDataAlignment = DMA_PDATAALIGN_BYTE;
 80032ba:	4b31      	ldr	r3, [pc, #196]	@ (8003380 <HAL_UART_MspInit+0x164>)
 80032bc:	2200      	movs	r2, #0
 80032be:	615a      	str	r2, [r3, #20]
    hdma_uart4_rx.Init.MemDataAlignment = DMA_MDATAALIGN_BYTE;
 80032c0:	4b2f      	ldr	r3, [pc, #188]	@ (8003380 <HAL_UART_MspInit+0x164>)
 80032c2:	2200      	movs	r2, #0
 80032c4:	619a      	str	r2, [r3, #24]
    hdma_uart4_rx.Init.Mode = DMA_CIRCULAR;
 80032c6:	4b2e      	ldr	r3, [pc, #184]	@ (8003380 <HAL_UART_MspInit+0x164>)
 80032c8:	f44f 7280 	mov.w	r2, #256	@ 0x100
 80032cc:	61da      	str	r2, [r3, #28]
    hdma_uart4_rx.Init.Priority = DMA_PRIORITY_LOW;
 80032ce:	4b2c      	ldr	r3, [pc, #176]	@ (8003380 <HAL_UART_MspInit+0x164>)
 80032d0:	2200      	movs	r2, #0
 80032d2:	621a      	str	r2, [r3, #32]
    hdma_uart4_rx.Init.FIFOMode = DMA_FIFOMODE_DISABLE;
 80032d4:	4b2a      	ldr	r3, [pc, #168]	@ (8003380 <HAL_UART_MspInit+0x164>)
 80032d6:	2200      	movs	r2, #0
 80032d8:	625a      	str	r2, [r3, #36]	@ 0x24
    if (HAL_DMA_Init(&hdma_uart4_rx) != HAL_OK)
 80032da:	4829      	ldr	r0, [pc, #164]	@ (8003380 <HAL_UART_MspInit+0x164>)
 80032dc:	f000 fb2a 	bl	8003934 <HAL_DMA_Init>
 80032e0:	4603      	mov	r3, r0
 80032e2:	2b00      	cmp	r3, #0
 80032e4:	d001      	beq.n	80032ea <HAL_UART_MspInit+0xce>
    {
      Error_Handler();
 80032e6:	f7ff fcaf 	bl	8002c48 <Error_Handler>
    }

    __HAL_LINKDMA(huart,hdmarx,hdma_uart4_rx);
 80032ea:	687b      	ldr	r3, [r7, #4]
 80032ec:	4a24      	ldr	r2, [pc, #144]	@ (8003380 <HAL_UART_MspInit+0x164>)
 80032ee:	63da      	str	r2, [r3, #60]	@ 0x3c
 80032f0:	4a23      	ldr	r2, [pc, #140]	@ (8003380 <HAL_UART_MspInit+0x164>)
 80032f2:	687b      	ldr	r3, [r7, #4]
 80032f4:	6393      	str	r3, [r2, #56]	@ 0x38

    /* UART4 interrupt Init */
    HAL_NVIC_SetPriority(UART4_IRQn, 0, 0);
 80032f6:	2200      	movs	r2, #0
 80032f8:	2100      	movs	r1, #0
 80032fa:	2034      	movs	r0, #52	@ 0x34
 80032fc:	f000 fae3 	bl	80038c6 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(UART4_IRQn);
 8003300:	2034      	movs	r0, #52	@ 0x34
 8003302:	f000 fafc 	bl	80038fe <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN USART2_MspInit 1 */

  /* USER CODE END USART2_MspInit 1 */
  }

}
 8003306:	e030      	b.n	800336a <HAL_UART_MspInit+0x14e>
  else if(huart->Instance==USART2)
 8003308:	687b      	ldr	r3, [r7, #4]
 800330a:	681b      	ldr	r3, [r3, #0]
 800330c:	4a1e      	ldr	r2, [pc, #120]	@ (8003388 <HAL_UART_MspInit+0x16c>)
 800330e:	4293      	cmp	r3, r2
 8003310:	d12b      	bne.n	800336a <HAL_UART_MspInit+0x14e>
    __HAL_RCC_USART2_CLK_ENABLE();
 8003312:	2300      	movs	r3, #0
 8003314:	613b      	str	r3, [r7, #16]
 8003316:	4b18      	ldr	r3, [pc, #96]	@ (8003378 <HAL_UART_MspInit+0x15c>)
 8003318:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800331a:	4a17      	ldr	r2, [pc, #92]	@ (8003378 <HAL_UART_MspInit+0x15c>)
 800331c:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 8003320:	6413      	str	r3, [r2, #64]	@ 0x40
 8003322:	4b15      	ldr	r3, [pc, #84]	@ (8003378 <HAL_UART_MspInit+0x15c>)
 8003324:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003326:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 800332a:	613b      	str	r3, [r7, #16]
 800332c:	693b      	ldr	r3, [r7, #16]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 800332e:	2300      	movs	r3, #0
 8003330:	60fb      	str	r3, [r7, #12]
 8003332:	4b11      	ldr	r3, [pc, #68]	@ (8003378 <HAL_UART_MspInit+0x15c>)
 8003334:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8003336:	4a10      	ldr	r2, [pc, #64]	@ (8003378 <HAL_UART_MspInit+0x15c>)
 8003338:	f043 0301 	orr.w	r3, r3, #1
 800333c:	6313      	str	r3, [r2, #48]	@ 0x30
 800333e:	4b0e      	ldr	r3, [pc, #56]	@ (8003378 <HAL_UART_MspInit+0x15c>)
 8003340:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8003342:	f003 0301 	and.w	r3, r3, #1
 8003346:	60fb      	str	r3, [r7, #12]
 8003348:	68fb      	ldr	r3, [r7, #12]
    GPIO_InitStruct.Pin = USART_TX_Pin|USART_RX_Pin;
 800334a:	230c      	movs	r3, #12
 800334c:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800334e:	2302      	movs	r3, #2
 8003350:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8003352:	2300      	movs	r3, #0
 8003354:	627b      	str	r3, [r7, #36]	@ 0x24
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8003356:	2303      	movs	r3, #3
 8003358:	62bb      	str	r3, [r7, #40]	@ 0x28
    GPIO_InitStruct.Alternate = GPIO_AF7_USART2;
 800335a:	2307      	movs	r3, #7
 800335c:	62fb      	str	r3, [r7, #44]	@ 0x2c
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 800335e:	f107 031c 	add.w	r3, r7, #28
 8003362:	4619      	mov	r1, r3
 8003364:	4809      	ldr	r0, [pc, #36]	@ (800338c <HAL_UART_MspInit+0x170>)
 8003366:	f000 fee7 	bl	8004138 <HAL_GPIO_Init>
}
 800336a:	bf00      	nop
 800336c:	3730      	adds	r7, #48	@ 0x30
 800336e:	46bd      	mov	sp, r7
 8003370:	bd80      	pop	{r7, pc}
 8003372:	bf00      	nop
 8003374:	40004c00 	.word	0x40004c00
 8003378:	40023800 	.word	0x40023800
 800337c:	40020800 	.word	0x40020800
 8003380:	20000588 	.word	0x20000588
 8003384:	40026040 	.word	0x40026040
 8003388:	40004400 	.word	0x40004400
 800338c:	40020000 	.word	0x40020000

08003390 <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 8003390:	b480      	push	{r7}
 8003392:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
   while (1)
 8003394:	bf00      	nop
 8003396:	e7fd      	b.n	8003394 <NMI_Handler+0x4>

08003398 <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 8003398:	b480      	push	{r7}
 800339a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 800339c:	bf00      	nop
 800339e:	e7fd      	b.n	800339c <HardFault_Handler+0x4>

080033a0 <MemManage_Handler>:

/**
  * @brief This function handles Memory management fault.
  */
void MemManage_Handler(void)
{
 80033a0:	b480      	push	{r7}
 80033a2:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 80033a4:	bf00      	nop
 80033a6:	e7fd      	b.n	80033a4 <MemManage_Handler+0x4>

080033a8 <BusFault_Handler>:

/**
  * @brief This function handles Pre-fetch fault, memory access fault.
  */
void BusFault_Handler(void)
{
 80033a8:	b480      	push	{r7}
 80033aa:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 80033ac:	bf00      	nop
 80033ae:	e7fd      	b.n	80033ac <BusFault_Handler+0x4>

080033b0 <UsageFault_Handler>:

/**
  * @brief This function handles Undefined instruction or illegal state.
  */
void UsageFault_Handler(void)
{
 80033b0:	b480      	push	{r7}
 80033b2:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 80033b4:	bf00      	nop
 80033b6:	e7fd      	b.n	80033b4 <UsageFault_Handler+0x4>

080033b8 <SVC_Handler>:

/**
  * @brief This function handles System service call via SWI instruction.
  */
void SVC_Handler(void)
{
 80033b8:	b480      	push	{r7}
 80033ba:	af00      	add	r7, sp, #0

  /* USER CODE END SVCall_IRQn 0 */
  /* USER CODE BEGIN SVCall_IRQn 1 */

  /* USER CODE END SVCall_IRQn 1 */
}
 80033bc:	bf00      	nop
 80033be:	46bd      	mov	sp, r7
 80033c0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80033c4:	4770      	bx	lr

080033c6 <DebugMon_Handler>:

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
{
 80033c6:	b480      	push	{r7}
 80033c8:	af00      	add	r7, sp, #0

  /* USER CODE END DebugMonitor_IRQn 0 */
  /* USER CODE BEGIN DebugMonitor_IRQn 1 */

  /* USER CODE END DebugMonitor_IRQn 1 */
}
 80033ca:	bf00      	nop
 80033cc:	46bd      	mov	sp, r7
 80033ce:	f85d 7b04 	ldr.w	r7, [sp], #4
 80033d2:	4770      	bx	lr

080033d4 <PendSV_Handler>:

/**
  * @brief This function handles Pendable request for system service.
  */
void PendSV_Handler(void)
{
 80033d4:	b480      	push	{r7}
 80033d6:	af00      	add	r7, sp, #0

  /* USER CODE END PendSV_IRQn 0 */
  /* USER CODE BEGIN PendSV_IRQn 1 */

  /* USER CODE END PendSV_IRQn 1 */
}
 80033d8:	bf00      	nop
 80033da:	46bd      	mov	sp, r7
 80033dc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80033e0:	4770      	bx	lr

080033e2 <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 80033e2:	b580      	push	{r7, lr}
 80033e4:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 80033e6:	f000 f94f 	bl	8003688 <HAL_IncTick>
  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
 80033ea:	bf00      	nop
 80033ec:	bd80      	pop	{r7, pc}
	...

080033f0 <DMA1_Stream2_IRQHandler>:

/**
  * @brief This function handles DMA1 stream2 global interrupt.
  */
void DMA1_Stream2_IRQHandler(void)
{
 80033f0:	b580      	push	{r7, lr}
 80033f2:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN DMA1_Stream2_IRQn 0 */

  /* USER CODE END DMA1_Stream2_IRQn 0 */
  HAL_DMA_IRQHandler(&hdma_uart4_rx);
 80033f4:	4802      	ldr	r0, [pc, #8]	@ (8003400 <DMA1_Stream2_IRQHandler+0x10>)
 80033f6:	f000 fc35 	bl	8003c64 <HAL_DMA_IRQHandler>
  /* USER CODE BEGIN DMA1_Stream2_IRQn 1 */

  /* USER CODE END DMA1_Stream2_IRQn 1 */
}
 80033fa:	bf00      	nop
 80033fc:	bd80      	pop	{r7, pc}
 80033fe:	bf00      	nop
 8003400:	20000588 	.word	0x20000588

08003404 <UART4_IRQHandler>:

/**
  * @brief This function handles UART4 global interrupt.
  */
void UART4_IRQHandler(void)
{
 8003404:	b580      	push	{r7, lr}
 8003406:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN UART4_IRQn 0 */

  /* USER CODE END UART4_IRQn 0 */
  HAL_UART_IRQHandler(&huart4);
 8003408:	4802      	ldr	r0, [pc, #8]	@ (8003414 <UART4_IRQHandler+0x10>)
 800340a:	f003 ffed 	bl	80073e8 <HAL_UART_IRQHandler>
  /* USER CODE BEGIN UART4_IRQn 1 */

  /* USER CODE END UART4_IRQn 1 */
}
 800340e:	bf00      	nop
 8003410:	bd80      	pop	{r7, pc}
 8003412:	bf00      	nop
 8003414:	200004f8 	.word	0x200004f8

08003418 <_getpid>:
 8003418:	b480      	push	{r7}
 800341a:	af00      	add	r7, sp, #0
 800341c:	2301      	movs	r3, #1
 800341e:	4618      	mov	r0, r3
 8003420:	46bd      	mov	sp, r7
 8003422:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003426:	4770      	bx	lr

08003428 <_kill>:
 8003428:	b580      	push	{r7, lr}
 800342a:	b082      	sub	sp, #8
 800342c:	af00      	add	r7, sp, #0
 800342e:	6078      	str	r0, [r7, #4]
 8003430:	6039      	str	r1, [r7, #0]
 8003432:	f006 f9a9 	bl	8009788 <__errno>
 8003436:	4603      	mov	r3, r0
 8003438:	2216      	movs	r2, #22
 800343a:	601a      	str	r2, [r3, #0]
 800343c:	f04f 33ff 	mov.w	r3, #4294967295
 8003440:	4618      	mov	r0, r3
 8003442:	3708      	adds	r7, #8
 8003444:	46bd      	mov	sp, r7
 8003446:	bd80      	pop	{r7, pc}

08003448 <_exit>:
 8003448:	b580      	push	{r7, lr}
 800344a:	b082      	sub	sp, #8
 800344c:	af00      	add	r7, sp, #0
 800344e:	6078      	str	r0, [r7, #4]
 8003450:	f04f 31ff 	mov.w	r1, #4294967295
 8003454:	6878      	ldr	r0, [r7, #4]
 8003456:	f7ff ffe7 	bl	8003428 <_kill>
 800345a:	bf00      	nop
 800345c:	e7fd      	b.n	800345a <_exit+0x12>

0800345e <_read>:
 800345e:	b580      	push	{r7, lr}
 8003460:	b086      	sub	sp, #24
 8003462:	af00      	add	r7, sp, #0
 8003464:	60f8      	str	r0, [r7, #12]
 8003466:	60b9      	str	r1, [r7, #8]
 8003468:	607a      	str	r2, [r7, #4]
 800346a:	2300      	movs	r3, #0
 800346c:	617b      	str	r3, [r7, #20]
 800346e:	e00a      	b.n	8003486 <_read+0x28>
 8003470:	f3af 8000 	nop.w
 8003474:	4601      	mov	r1, r0
 8003476:	68bb      	ldr	r3, [r7, #8]
 8003478:	1c5a      	adds	r2, r3, #1
 800347a:	60ba      	str	r2, [r7, #8]
 800347c:	b2ca      	uxtb	r2, r1
 800347e:	701a      	strb	r2, [r3, #0]
 8003480:	697b      	ldr	r3, [r7, #20]
 8003482:	3301      	adds	r3, #1
 8003484:	617b      	str	r3, [r7, #20]
 8003486:	697a      	ldr	r2, [r7, #20]
 8003488:	687b      	ldr	r3, [r7, #4]
 800348a:	429a      	cmp	r2, r3
 800348c:	dbf0      	blt.n	8003470 <_read+0x12>
 800348e:	687b      	ldr	r3, [r7, #4]
 8003490:	4618      	mov	r0, r3
 8003492:	3718      	adds	r7, #24
 8003494:	46bd      	mov	sp, r7
 8003496:	bd80      	pop	{r7, pc}

08003498 <_close>:
 8003498:	b480      	push	{r7}
 800349a:	b083      	sub	sp, #12
 800349c:	af00      	add	r7, sp, #0
 800349e:	6078      	str	r0, [r7, #4]
 80034a0:	f04f 33ff 	mov.w	r3, #4294967295
 80034a4:	4618      	mov	r0, r3
 80034a6:	370c      	adds	r7, #12
 80034a8:	46bd      	mov	sp, r7
 80034aa:	f85d 7b04 	ldr.w	r7, [sp], #4
 80034ae:	4770      	bx	lr

080034b0 <_fstat>:
 80034b0:	b480      	push	{r7}
 80034b2:	b083      	sub	sp, #12
 80034b4:	af00      	add	r7, sp, #0
 80034b6:	6078      	str	r0, [r7, #4]
 80034b8:	6039      	str	r1, [r7, #0]
 80034ba:	683b      	ldr	r3, [r7, #0]
 80034bc:	f44f 5200 	mov.w	r2, #8192	@ 0x2000
 80034c0:	605a      	str	r2, [r3, #4]
 80034c2:	2300      	movs	r3, #0
 80034c4:	4618      	mov	r0, r3
 80034c6:	370c      	adds	r7, #12
 80034c8:	46bd      	mov	sp, r7
 80034ca:	f85d 7b04 	ldr.w	r7, [sp], #4
 80034ce:	4770      	bx	lr

080034d0 <_isatty>:
 80034d0:	b480      	push	{r7}
 80034d2:	b083      	sub	sp, #12
 80034d4:	af00      	add	r7, sp, #0
 80034d6:	6078      	str	r0, [r7, #4]
 80034d8:	2301      	movs	r3, #1
 80034da:	4618      	mov	r0, r3
 80034dc:	370c      	adds	r7, #12
 80034de:	46bd      	mov	sp, r7
 80034e0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80034e4:	4770      	bx	lr

080034e6 <_lseek>:
 80034e6:	b480      	push	{r7}
 80034e8:	b085      	sub	sp, #20
 80034ea:	af00      	add	r7, sp, #0
 80034ec:	60f8      	str	r0, [r7, #12]
 80034ee:	60b9      	str	r1, [r7, #8]
 80034f0:	607a      	str	r2, [r7, #4]
 80034f2:	2300      	movs	r3, #0
 80034f4:	4618      	mov	r0, r3
 80034f6:	3714      	adds	r7, #20
 80034f8:	46bd      	mov	sp, r7
 80034fa:	f85d 7b04 	ldr.w	r7, [sp], #4
 80034fe:	4770      	bx	lr

08003500 <_sbrk>:
 8003500:	b580      	push	{r7, lr}
 8003502:	b086      	sub	sp, #24
 8003504:	af00      	add	r7, sp, #0
 8003506:	6078      	str	r0, [r7, #4]
 8003508:	4a14      	ldr	r2, [pc, #80]	@ (800355c <_sbrk+0x5c>)
 800350a:	4b15      	ldr	r3, [pc, #84]	@ (8003560 <_sbrk+0x60>)
 800350c:	1ad3      	subs	r3, r2, r3
 800350e:	617b      	str	r3, [r7, #20]
 8003510:	697b      	ldr	r3, [r7, #20]
 8003512:	613b      	str	r3, [r7, #16]
 8003514:	4b13      	ldr	r3, [pc, #76]	@ (8003564 <_sbrk+0x64>)
 8003516:	681b      	ldr	r3, [r3, #0]
 8003518:	2b00      	cmp	r3, #0
 800351a:	d102      	bne.n	8003522 <_sbrk+0x22>
 800351c:	4b11      	ldr	r3, [pc, #68]	@ (8003564 <_sbrk+0x64>)
 800351e:	4a12      	ldr	r2, [pc, #72]	@ (8003568 <_sbrk+0x68>)
 8003520:	601a      	str	r2, [r3, #0]
 8003522:	4b10      	ldr	r3, [pc, #64]	@ (8003564 <_sbrk+0x64>)
 8003524:	681a      	ldr	r2, [r3, #0]
 8003526:	687b      	ldr	r3, [r7, #4]
 8003528:	4413      	add	r3, r2
 800352a:	693a      	ldr	r2, [r7, #16]
 800352c:	429a      	cmp	r2, r3
 800352e:	d207      	bcs.n	8003540 <_sbrk+0x40>
 8003530:	f006 f92a 	bl	8009788 <__errno>
 8003534:	4603      	mov	r3, r0
 8003536:	220c      	movs	r2, #12
 8003538:	601a      	str	r2, [r3, #0]
 800353a:	f04f 33ff 	mov.w	r3, #4294967295
 800353e:	e009      	b.n	8003554 <_sbrk+0x54>
 8003540:	4b08      	ldr	r3, [pc, #32]	@ (8003564 <_sbrk+0x64>)
 8003542:	681b      	ldr	r3, [r3, #0]
 8003544:	60fb      	str	r3, [r7, #12]
 8003546:	4b07      	ldr	r3, [pc, #28]	@ (8003564 <_sbrk+0x64>)
 8003548:	681a      	ldr	r2, [r3, #0]
 800354a:	687b      	ldr	r3, [r7, #4]
 800354c:	4413      	add	r3, r2
 800354e:	4a05      	ldr	r2, [pc, #20]	@ (8003564 <_sbrk+0x64>)
 8003550:	6013      	str	r3, [r2, #0]
 8003552:	68fb      	ldr	r3, [r7, #12]
 8003554:	4618      	mov	r0, r3
 8003556:	3718      	adds	r7, #24
 8003558:	46bd      	mov	sp, r7
 800355a:	bd80      	pop	{r7, pc}
 800355c:	20020000 	.word	0x20020000
 8003560:	00000400 	.word	0x00000400
 8003564:	200006ac 	.word	0x200006ac
 8003568:	20000800 	.word	0x20000800

0800356c <SystemInit>:
 800356c:	b480      	push	{r7}
 800356e:	af00      	add	r7, sp, #0
 8003570:	4b06      	ldr	r3, [pc, #24]	@ (800358c <SystemInit+0x20>)
 8003572:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8003576:	4a05      	ldr	r2, [pc, #20]	@ (800358c <SystemInit+0x20>)
 8003578:	f443 0370 	orr.w	r3, r3, #15728640	@ 0xf00000
 800357c:	f8c2 3088 	str.w	r3, [r2, #136]	@ 0x88
 8003580:	bf00      	nop
 8003582:	46bd      	mov	sp, r7
 8003584:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003588:	4770      	bx	lr
 800358a:	bf00      	nop
 800358c:	e000ed00 	.word	0xe000ed00

08003590 <Reset_Handler>:
 8003590:	f8df d034 	ldr.w	sp, [pc, #52]	@ 80035c8 <LoopFillZerobss+0xe>
 8003594:	f7ff ffea 	bl	800356c <SystemInit>
 8003598:	480c      	ldr	r0, [pc, #48]	@ (80035cc <LoopFillZerobss+0x12>)
 800359a:	490d      	ldr	r1, [pc, #52]	@ (80035d0 <LoopFillZerobss+0x16>)
 800359c:	4a0d      	ldr	r2, [pc, #52]	@ (80035d4 <LoopFillZerobss+0x1a>)
 800359e:	2300      	movs	r3, #0
 80035a0:	e002      	b.n	80035a8 <LoopCopyDataInit>

080035a2 <CopyDataInit>:
 80035a2:	58d4      	ldr	r4, [r2, r3]
 80035a4:	50c4      	str	r4, [r0, r3]
 80035a6:	3304      	adds	r3, #4

080035a8 <LoopCopyDataInit>:
 80035a8:	18c4      	adds	r4, r0, r3
 80035aa:	428c      	cmp	r4, r1
 80035ac:	d3f9      	bcc.n	80035a2 <CopyDataInit>
 80035ae:	4a0a      	ldr	r2, [pc, #40]	@ (80035d8 <LoopFillZerobss+0x1e>)
 80035b0:	4c0a      	ldr	r4, [pc, #40]	@ (80035dc <LoopFillZerobss+0x22>)
 80035b2:	2300      	movs	r3, #0
 80035b4:	e001      	b.n	80035ba <LoopFillZerobss>

080035b6 <FillZerobss>:
 80035b6:	6013      	str	r3, [r2, #0]
 80035b8:	3204      	adds	r2, #4

080035ba <LoopFillZerobss>:
 80035ba:	42a2      	cmp	r2, r4
 80035bc:	d3fb      	bcc.n	80035b6 <FillZerobss>
 80035be:	f006 f8e9 	bl	8009794 <__libc_init_array>
 80035c2:	f7fe f863 	bl	800168c <main>
 80035c6:	4770      	bx	lr
 80035c8:	20020000 	.word	0x20020000
 80035cc:	20000000 	.word	0x20000000
 80035d0:	200001fc 	.word	0x200001fc
 80035d4:	0800d470 	.word	0x0800d470
 80035d8:	200001fc 	.word	0x200001fc
 80035dc:	20000800 	.word	0x20000800

080035e0 <ADC_IRQHandler>:
 80035e0:	e7fe      	b.n	80035e0 <ADC_IRQHandler>
	...

080035e4 <HAL_Init>:
 80035e4:	b580      	push	{r7, lr}
 80035e6:	af00      	add	r7, sp, #0
 80035e8:	4b0e      	ldr	r3, [pc, #56]	@ (8003624 <HAL_Init+0x40>)
 80035ea:	681b      	ldr	r3, [r3, #0]
 80035ec:	4a0d      	ldr	r2, [pc, #52]	@ (8003624 <HAL_Init+0x40>)
 80035ee:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 80035f2:	6013      	str	r3, [r2, #0]
 80035f4:	4b0b      	ldr	r3, [pc, #44]	@ (8003624 <HAL_Init+0x40>)
 80035f6:	681b      	ldr	r3, [r3, #0]
 80035f8:	4a0a      	ldr	r2, [pc, #40]	@ (8003624 <HAL_Init+0x40>)
 80035fa:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
 80035fe:	6013      	str	r3, [r2, #0]
 8003600:	4b08      	ldr	r3, [pc, #32]	@ (8003624 <HAL_Init+0x40>)
 8003602:	681b      	ldr	r3, [r3, #0]
 8003604:	4a07      	ldr	r2, [pc, #28]	@ (8003624 <HAL_Init+0x40>)
 8003606:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 800360a:	6013      	str	r3, [r2, #0]
 800360c:	2003      	movs	r0, #3
 800360e:	f000 f94f 	bl	80038b0 <HAL_NVIC_SetPriorityGrouping>
 8003612:	2000      	movs	r0, #0
 8003614:	f000 f808 	bl	8003628 <HAL_InitTick>
 8003618:	f7ff fb1c 	bl	8002c54 <HAL_MspInit>
 800361c:	2300      	movs	r3, #0
 800361e:	4618      	mov	r0, r3
 8003620:	bd80      	pop	{r7, pc}
 8003622:	bf00      	nop
 8003624:	40023c00 	.word	0x40023c00

08003628 <HAL_InitTick>:
 8003628:	b580      	push	{r7, lr}
 800362a:	b082      	sub	sp, #8
 800362c:	af00      	add	r7, sp, #0
 800362e:	6078      	str	r0, [r7, #4]
 8003630:	4b12      	ldr	r3, [pc, #72]	@ (800367c <HAL_InitTick+0x54>)
 8003632:	681a      	ldr	r2, [r3, #0]
 8003634:	4b12      	ldr	r3, [pc, #72]	@ (8003680 <HAL_InitTick+0x58>)
 8003636:	781b      	ldrb	r3, [r3, #0]
 8003638:	4619      	mov	r1, r3
 800363a:	f44f 737a 	mov.w	r3, #1000	@ 0x3e8
 800363e:	fbb3 f3f1 	udiv	r3, r3, r1
 8003642:	fbb2 f3f3 	udiv	r3, r2, r3
 8003646:	4618      	mov	r0, r3
 8003648:	f000 f967 	bl	800391a <HAL_SYSTICK_Config>
 800364c:	4603      	mov	r3, r0
 800364e:	2b00      	cmp	r3, #0
 8003650:	d001      	beq.n	8003656 <HAL_InitTick+0x2e>
 8003652:	2301      	movs	r3, #1
 8003654:	e00e      	b.n	8003674 <HAL_InitTick+0x4c>
 8003656:	687b      	ldr	r3, [r7, #4]
 8003658:	2b0f      	cmp	r3, #15
 800365a:	d80a      	bhi.n	8003672 <HAL_InitTick+0x4a>
 800365c:	2200      	movs	r2, #0
 800365e:	6879      	ldr	r1, [r7, #4]
 8003660:	f04f 30ff 	mov.w	r0, #4294967295
 8003664:	f000 f92f 	bl	80038c6 <HAL_NVIC_SetPriority>
 8003668:	4a06      	ldr	r2, [pc, #24]	@ (8003684 <HAL_InitTick+0x5c>)
 800366a:	687b      	ldr	r3, [r7, #4]
 800366c:	6013      	str	r3, [r2, #0]
 800366e:	2300      	movs	r3, #0
 8003670:	e000      	b.n	8003674 <HAL_InitTick+0x4c>
 8003672:	2301      	movs	r3, #1
 8003674:	4618      	mov	r0, r3
 8003676:	3708      	adds	r7, #8
 8003678:	46bd      	mov	sp, r7
 800367a:	bd80      	pop	{r7, pc}
 800367c:	20000028 	.word	0x20000028
 8003680:	20000030 	.word	0x20000030
 8003684:	2000002c 	.word	0x2000002c

08003688 <HAL_IncTick>:
 8003688:	b480      	push	{r7}
 800368a:	af00      	add	r7, sp, #0
 800368c:	4b06      	ldr	r3, [pc, #24]	@ (80036a8 <HAL_IncTick+0x20>)
 800368e:	781b      	ldrb	r3, [r3, #0]
 8003690:	461a      	mov	r2, r3
 8003692:	4b06      	ldr	r3, [pc, #24]	@ (80036ac <HAL_IncTick+0x24>)
 8003694:	681b      	ldr	r3, [r3, #0]
 8003696:	4413      	add	r3, r2
 8003698:	4a04      	ldr	r2, [pc, #16]	@ (80036ac <HAL_IncTick+0x24>)
 800369a:	6013      	str	r3, [r2, #0]
 800369c:	bf00      	nop
 800369e:	46bd      	mov	sp, r7
 80036a0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80036a4:	4770      	bx	lr
 80036a6:	bf00      	nop
 80036a8:	20000030 	.word	0x20000030
 80036ac:	200006b0 	.word	0x200006b0

080036b0 <HAL_GetTick>:
 80036b0:	b480      	push	{r7}
 80036b2:	af00      	add	r7, sp, #0
 80036b4:	4b03      	ldr	r3, [pc, #12]	@ (80036c4 <HAL_GetTick+0x14>)
 80036b6:	681b      	ldr	r3, [r3, #0]
 80036b8:	4618      	mov	r0, r3
 80036ba:	46bd      	mov	sp, r7
 80036bc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80036c0:	4770      	bx	lr
 80036c2:	bf00      	nop
 80036c4:	200006b0 	.word	0x200006b0

080036c8 <HAL_Delay>:
 80036c8:	b580      	push	{r7, lr}
 80036ca:	b084      	sub	sp, #16
 80036cc:	af00      	add	r7, sp, #0
 80036ce:	6078      	str	r0, [r7, #4]
 80036d0:	f7ff ffee 	bl	80036b0 <HAL_GetTick>
 80036d4:	60b8      	str	r0, [r7, #8]
 80036d6:	687b      	ldr	r3, [r7, #4]
 80036d8:	60fb      	str	r3, [r7, #12]
 80036da:	68fb      	ldr	r3, [r7, #12]
 80036dc:	f1b3 3fff 	cmp.w	r3, #4294967295
 80036e0:	d005      	beq.n	80036ee <HAL_Delay+0x26>
 80036e2:	4b0a      	ldr	r3, [pc, #40]	@ (800370c <HAL_Delay+0x44>)
 80036e4:	781b      	ldrb	r3, [r3, #0]
 80036e6:	461a      	mov	r2, r3
 80036e8:	68fb      	ldr	r3, [r7, #12]
 80036ea:	4413      	add	r3, r2
 80036ec:	60fb      	str	r3, [r7, #12]
 80036ee:	bf00      	nop
 80036f0:	f7ff ffde 	bl	80036b0 <HAL_GetTick>
 80036f4:	4602      	mov	r2, r0
 80036f6:	68bb      	ldr	r3, [r7, #8]
 80036f8:	1ad3      	subs	r3, r2, r3
 80036fa:	68fa      	ldr	r2, [r7, #12]
 80036fc:	429a      	cmp	r2, r3
 80036fe:	d8f7      	bhi.n	80036f0 <HAL_Delay+0x28>
 8003700:	bf00      	nop
 8003702:	bf00      	nop
 8003704:	3710      	adds	r7, #16
 8003706:	46bd      	mov	sp, r7
 8003708:	bd80      	pop	{r7, pc}
 800370a:	bf00      	nop
 800370c:	20000030 	.word	0x20000030

08003710 <__NVIC_SetPriorityGrouping>:
 8003710:	b480      	push	{r7}
 8003712:	b085      	sub	sp, #20
 8003714:	af00      	add	r7, sp, #0
 8003716:	6078      	str	r0, [r7, #4]
 8003718:	687b      	ldr	r3, [r7, #4]
 800371a:	f003 0307 	and.w	r3, r3, #7
 800371e:	60fb      	str	r3, [r7, #12]
 8003720:	4b0c      	ldr	r3, [pc, #48]	@ (8003754 <__NVIC_SetPriorityGrouping+0x44>)
 8003722:	68db      	ldr	r3, [r3, #12]
 8003724:	60bb      	str	r3, [r7, #8]
 8003726:	68ba      	ldr	r2, [r7, #8]
 8003728:	f64f 03ff 	movw	r3, #63743	@ 0xf8ff
 800372c:	4013      	ands	r3, r2
 800372e:	60bb      	str	r3, [r7, #8]
 8003730:	68fb      	ldr	r3, [r7, #12]
 8003732:	021a      	lsls	r2, r3, #8
 8003734:	68bb      	ldr	r3, [r7, #8]
 8003736:	4313      	orrs	r3, r2
 8003738:	f043 63bf 	orr.w	r3, r3, #100139008	@ 0x5f80000
 800373c:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 8003740:	60bb      	str	r3, [r7, #8]
 8003742:	4a04      	ldr	r2, [pc, #16]	@ (8003754 <__NVIC_SetPriorityGrouping+0x44>)
 8003744:	68bb      	ldr	r3, [r7, #8]
 8003746:	60d3      	str	r3, [r2, #12]
 8003748:	bf00      	nop
 800374a:	3714      	adds	r7, #20
 800374c:	46bd      	mov	sp, r7
 800374e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003752:	4770      	bx	lr
 8003754:	e000ed00 	.word	0xe000ed00

08003758 <__NVIC_GetPriorityGrouping>:
 8003758:	b480      	push	{r7}
 800375a:	af00      	add	r7, sp, #0
 800375c:	4b04      	ldr	r3, [pc, #16]	@ (8003770 <__NVIC_GetPriorityGrouping+0x18>)
 800375e:	68db      	ldr	r3, [r3, #12]
 8003760:	0a1b      	lsrs	r3, r3, #8
 8003762:	f003 0307 	and.w	r3, r3, #7
 8003766:	4618      	mov	r0, r3
 8003768:	46bd      	mov	sp, r7
 800376a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800376e:	4770      	bx	lr
 8003770:	e000ed00 	.word	0xe000ed00

08003774 <__NVIC_EnableIRQ>:
 8003774:	b480      	push	{r7}
 8003776:	b083      	sub	sp, #12
 8003778:	af00      	add	r7, sp, #0
 800377a:	4603      	mov	r3, r0
 800377c:	71fb      	strb	r3, [r7, #7]
 800377e:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8003782:	2b00      	cmp	r3, #0
 8003784:	db0b      	blt.n	800379e <__NVIC_EnableIRQ+0x2a>
 8003786:	79fb      	ldrb	r3, [r7, #7]
 8003788:	f003 021f 	and.w	r2, r3, #31
 800378c:	4907      	ldr	r1, [pc, #28]	@ (80037ac <__NVIC_EnableIRQ+0x38>)
 800378e:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8003792:	095b      	lsrs	r3, r3, #5
 8003794:	2001      	movs	r0, #1
 8003796:	fa00 f202 	lsl.w	r2, r0, r2
 800379a:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 800379e:	bf00      	nop
 80037a0:	370c      	adds	r7, #12
 80037a2:	46bd      	mov	sp, r7
 80037a4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80037a8:	4770      	bx	lr
 80037aa:	bf00      	nop
 80037ac:	e000e100 	.word	0xe000e100

080037b0 <__NVIC_SetPriority>:
 80037b0:	b480      	push	{r7}
 80037b2:	b083      	sub	sp, #12
 80037b4:	af00      	add	r7, sp, #0
 80037b6:	4603      	mov	r3, r0
 80037b8:	6039      	str	r1, [r7, #0]
 80037ba:	71fb      	strb	r3, [r7, #7]
 80037bc:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80037c0:	2b00      	cmp	r3, #0
 80037c2:	db0a      	blt.n	80037da <__NVIC_SetPriority+0x2a>
 80037c4:	683b      	ldr	r3, [r7, #0]
 80037c6:	b2da      	uxtb	r2, r3
 80037c8:	490c      	ldr	r1, [pc, #48]	@ (80037fc <__NVIC_SetPriority+0x4c>)
 80037ca:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80037ce:	0112      	lsls	r2, r2, #4
 80037d0:	b2d2      	uxtb	r2, r2
 80037d2:	440b      	add	r3, r1
 80037d4:	f883 2300 	strb.w	r2, [r3, #768]	@ 0x300
 80037d8:	e00a      	b.n	80037f0 <__NVIC_SetPriority+0x40>
 80037da:	683b      	ldr	r3, [r7, #0]
 80037dc:	b2da      	uxtb	r2, r3
 80037de:	4908      	ldr	r1, [pc, #32]	@ (8003800 <__NVIC_SetPriority+0x50>)
 80037e0:	79fb      	ldrb	r3, [r7, #7]
 80037e2:	f003 030f 	and.w	r3, r3, #15
 80037e6:	3b04      	subs	r3, #4
 80037e8:	0112      	lsls	r2, r2, #4
 80037ea:	b2d2      	uxtb	r2, r2
 80037ec:	440b      	add	r3, r1
 80037ee:	761a      	strb	r2, [r3, #24]
 80037f0:	bf00      	nop
 80037f2:	370c      	adds	r7, #12
 80037f4:	46bd      	mov	sp, r7
 80037f6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80037fa:	4770      	bx	lr
 80037fc:	e000e100 	.word	0xe000e100
 8003800:	e000ed00 	.word	0xe000ed00

08003804 <NVIC_EncodePriority>:
 8003804:	b480      	push	{r7}
 8003806:	b089      	sub	sp, #36	@ 0x24
 8003808:	af00      	add	r7, sp, #0
 800380a:	60f8      	str	r0, [r7, #12]
 800380c:	60b9      	str	r1, [r7, #8]
 800380e:	607a      	str	r2, [r7, #4]
 8003810:	68fb      	ldr	r3, [r7, #12]
 8003812:	f003 0307 	and.w	r3, r3, #7
 8003816:	61fb      	str	r3, [r7, #28]
 8003818:	69fb      	ldr	r3, [r7, #28]
 800381a:	f1c3 0307 	rsb	r3, r3, #7
 800381e:	2b04      	cmp	r3, #4
 8003820:	bf28      	it	cs
 8003822:	2304      	movcs	r3, #4
 8003824:	61bb      	str	r3, [r7, #24]
 8003826:	69fb      	ldr	r3, [r7, #28]
 8003828:	3304      	adds	r3, #4
 800382a:	2b06      	cmp	r3, #6
 800382c:	d902      	bls.n	8003834 <NVIC_EncodePriority+0x30>
 800382e:	69fb      	ldr	r3, [r7, #28]
 8003830:	3b03      	subs	r3, #3
 8003832:	e000      	b.n	8003836 <NVIC_EncodePriority+0x32>
 8003834:	2300      	movs	r3, #0
 8003836:	617b      	str	r3, [r7, #20]
 8003838:	f04f 32ff 	mov.w	r2, #4294967295
 800383c:	69bb      	ldr	r3, [r7, #24]
 800383e:	fa02 f303 	lsl.w	r3, r2, r3
 8003842:	43da      	mvns	r2, r3
 8003844:	68bb      	ldr	r3, [r7, #8]
 8003846:	401a      	ands	r2, r3
 8003848:	697b      	ldr	r3, [r7, #20]
 800384a:	409a      	lsls	r2, r3
 800384c:	f04f 31ff 	mov.w	r1, #4294967295
 8003850:	697b      	ldr	r3, [r7, #20]
 8003852:	fa01 f303 	lsl.w	r3, r1, r3
 8003856:	43d9      	mvns	r1, r3
 8003858:	687b      	ldr	r3, [r7, #4]
 800385a:	400b      	ands	r3, r1
 800385c:	4313      	orrs	r3, r2
 800385e:	4618      	mov	r0, r3
 8003860:	3724      	adds	r7, #36	@ 0x24
 8003862:	46bd      	mov	sp, r7
 8003864:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003868:	4770      	bx	lr
	...

0800386c <SysTick_Config>:
 800386c:	b580      	push	{r7, lr}
 800386e:	b082      	sub	sp, #8
 8003870:	af00      	add	r7, sp, #0
 8003872:	6078      	str	r0, [r7, #4]
 8003874:	687b      	ldr	r3, [r7, #4]
 8003876:	3b01      	subs	r3, #1
 8003878:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 800387c:	d301      	bcc.n	8003882 <SysTick_Config+0x16>
 800387e:	2301      	movs	r3, #1
 8003880:	e00f      	b.n	80038a2 <SysTick_Config+0x36>
 8003882:	4a0a      	ldr	r2, [pc, #40]	@ (80038ac <SysTick_Config+0x40>)
 8003884:	687b      	ldr	r3, [r7, #4]
 8003886:	3b01      	subs	r3, #1
 8003888:	6053      	str	r3, [r2, #4]
 800388a:	210f      	movs	r1, #15
 800388c:	f04f 30ff 	mov.w	r0, #4294967295
 8003890:	f7ff ff8e 	bl	80037b0 <__NVIC_SetPriority>
 8003894:	4b05      	ldr	r3, [pc, #20]	@ (80038ac <SysTick_Config+0x40>)
 8003896:	2200      	movs	r2, #0
 8003898:	609a      	str	r2, [r3, #8]
 800389a:	4b04      	ldr	r3, [pc, #16]	@ (80038ac <SysTick_Config+0x40>)
 800389c:	2207      	movs	r2, #7
 800389e:	601a      	str	r2, [r3, #0]
 80038a0:	2300      	movs	r3, #0
 80038a2:	4618      	mov	r0, r3
 80038a4:	3708      	adds	r7, #8
 80038a6:	46bd      	mov	sp, r7
 80038a8:	bd80      	pop	{r7, pc}
 80038aa:	bf00      	nop
 80038ac:	e000e010 	.word	0xe000e010

080038b0 <HAL_NVIC_SetPriorityGrouping>:
 80038b0:	b580      	push	{r7, lr}
 80038b2:	b082      	sub	sp, #8
 80038b4:	af00      	add	r7, sp, #0
 80038b6:	6078      	str	r0, [r7, #4]
 80038b8:	6878      	ldr	r0, [r7, #4]
 80038ba:	f7ff ff29 	bl	8003710 <__NVIC_SetPriorityGrouping>
 80038be:	bf00      	nop
 80038c0:	3708      	adds	r7, #8
 80038c2:	46bd      	mov	sp, r7
 80038c4:	bd80      	pop	{r7, pc}

080038c6 <HAL_NVIC_SetPriority>:
 80038c6:	b580      	push	{r7, lr}
 80038c8:	b086      	sub	sp, #24
 80038ca:	af00      	add	r7, sp, #0
 80038cc:	4603      	mov	r3, r0
 80038ce:	60b9      	str	r1, [r7, #8]
 80038d0:	607a      	str	r2, [r7, #4]
 80038d2:	73fb      	strb	r3, [r7, #15]
 80038d4:	2300      	movs	r3, #0
 80038d6:	617b      	str	r3, [r7, #20]
 80038d8:	f7ff ff3e 	bl	8003758 <__NVIC_GetPriorityGrouping>
 80038dc:	6178      	str	r0, [r7, #20]
 80038de:	687a      	ldr	r2, [r7, #4]
 80038e0:	68b9      	ldr	r1, [r7, #8]
 80038e2:	6978      	ldr	r0, [r7, #20]
 80038e4:	f7ff ff8e 	bl	8003804 <NVIC_EncodePriority>
 80038e8:	4602      	mov	r2, r0
 80038ea:	f997 300f 	ldrsb.w	r3, [r7, #15]
 80038ee:	4611      	mov	r1, r2
 80038f0:	4618      	mov	r0, r3
 80038f2:	f7ff ff5d 	bl	80037b0 <__NVIC_SetPriority>
 80038f6:	bf00      	nop
 80038f8:	3718      	adds	r7, #24
 80038fa:	46bd      	mov	sp, r7
 80038fc:	bd80      	pop	{r7, pc}

080038fe <HAL_NVIC_EnableIRQ>:
 80038fe:	b580      	push	{r7, lr}
 8003900:	b082      	sub	sp, #8
 8003902:	af00      	add	r7, sp, #0
 8003904:	4603      	mov	r3, r0
 8003906:	71fb      	strb	r3, [r7, #7]
 8003908:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800390c:	4618      	mov	r0, r3
 800390e:	f7ff ff31 	bl	8003774 <__NVIC_EnableIRQ>
 8003912:	bf00      	nop
 8003914:	3708      	adds	r7, #8
 8003916:	46bd      	mov	sp, r7
 8003918:	bd80      	pop	{r7, pc}

0800391a <HAL_SYSTICK_Config>:
 800391a:	b580      	push	{r7, lr}
 800391c:	b082      	sub	sp, #8
 800391e:	af00      	add	r7, sp, #0
 8003920:	6078      	str	r0, [r7, #4]
 8003922:	6878      	ldr	r0, [r7, #4]
 8003924:	f7ff ffa2 	bl	800386c <SysTick_Config>
 8003928:	4603      	mov	r3, r0
 800392a:	4618      	mov	r0, r3
 800392c:	3708      	adds	r7, #8
 800392e:	46bd      	mov	sp, r7
 8003930:	bd80      	pop	{r7, pc}
	...

08003934 <HAL_DMA_Init>:
 8003934:	b580      	push	{r7, lr}
 8003936:	b086      	sub	sp, #24
 8003938:	af00      	add	r7, sp, #0
 800393a:	6078      	str	r0, [r7, #4]
 800393c:	2300      	movs	r3, #0
 800393e:	617b      	str	r3, [r7, #20]
 8003940:	f7ff feb6 	bl	80036b0 <HAL_GetTick>
 8003944:	6138      	str	r0, [r7, #16]
 8003946:	687b      	ldr	r3, [r7, #4]
 8003948:	2b00      	cmp	r3, #0
 800394a:	d101      	bne.n	8003950 <HAL_DMA_Init+0x1c>
 800394c:	2301      	movs	r3, #1
 800394e:	e099      	b.n	8003a84 <HAL_DMA_Init+0x150>
 8003950:	687b      	ldr	r3, [r7, #4]
 8003952:	2202      	movs	r2, #2
 8003954:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 8003958:	687b      	ldr	r3, [r7, #4]
 800395a:	2200      	movs	r2, #0
 800395c:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 8003960:	687b      	ldr	r3, [r7, #4]
 8003962:	681b      	ldr	r3, [r3, #0]
 8003964:	681a      	ldr	r2, [r3, #0]
 8003966:	687b      	ldr	r3, [r7, #4]
 8003968:	681b      	ldr	r3, [r3, #0]
 800396a:	f022 0201 	bic.w	r2, r2, #1
 800396e:	601a      	str	r2, [r3, #0]
 8003970:	e00f      	b.n	8003992 <HAL_DMA_Init+0x5e>
 8003972:	f7ff fe9d 	bl	80036b0 <HAL_GetTick>
 8003976:	4602      	mov	r2, r0
 8003978:	693b      	ldr	r3, [r7, #16]
 800397a:	1ad3      	subs	r3, r2, r3
 800397c:	2b05      	cmp	r3, #5
 800397e:	d908      	bls.n	8003992 <HAL_DMA_Init+0x5e>
 8003980:	687b      	ldr	r3, [r7, #4]
 8003982:	2220      	movs	r2, #32
 8003984:	655a      	str	r2, [r3, #84]	@ 0x54
 8003986:	687b      	ldr	r3, [r7, #4]
 8003988:	2203      	movs	r2, #3
 800398a:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 800398e:	2303      	movs	r3, #3
 8003990:	e078      	b.n	8003a84 <HAL_DMA_Init+0x150>
 8003992:	687b      	ldr	r3, [r7, #4]
 8003994:	681b      	ldr	r3, [r3, #0]
 8003996:	681b      	ldr	r3, [r3, #0]
 8003998:	f003 0301 	and.w	r3, r3, #1
 800399c:	2b00      	cmp	r3, #0
 800399e:	d1e8      	bne.n	8003972 <HAL_DMA_Init+0x3e>
 80039a0:	687b      	ldr	r3, [r7, #4]
 80039a2:	681b      	ldr	r3, [r3, #0]
 80039a4:	681b      	ldr	r3, [r3, #0]
 80039a6:	617b      	str	r3, [r7, #20]
 80039a8:	697a      	ldr	r2, [r7, #20]
 80039aa:	4b38      	ldr	r3, [pc, #224]	@ (8003a8c <HAL_DMA_Init+0x158>)
 80039ac:	4013      	ands	r3, r2
 80039ae:	617b      	str	r3, [r7, #20]
 80039b0:	687b      	ldr	r3, [r7, #4]
 80039b2:	685a      	ldr	r2, [r3, #4]
 80039b4:	687b      	ldr	r3, [r7, #4]
 80039b6:	689b      	ldr	r3, [r3, #8]
 80039b8:	431a      	orrs	r2, r3
 80039ba:	687b      	ldr	r3, [r7, #4]
 80039bc:	68db      	ldr	r3, [r3, #12]
 80039be:	431a      	orrs	r2, r3
 80039c0:	687b      	ldr	r3, [r7, #4]
 80039c2:	691b      	ldr	r3, [r3, #16]
 80039c4:	431a      	orrs	r2, r3
 80039c6:	687b      	ldr	r3, [r7, #4]
 80039c8:	695b      	ldr	r3, [r3, #20]
 80039ca:	431a      	orrs	r2, r3
 80039cc:	687b      	ldr	r3, [r7, #4]
 80039ce:	699b      	ldr	r3, [r3, #24]
 80039d0:	431a      	orrs	r2, r3
 80039d2:	687b      	ldr	r3, [r7, #4]
 80039d4:	69db      	ldr	r3, [r3, #28]
 80039d6:	431a      	orrs	r2, r3
 80039d8:	687b      	ldr	r3, [r7, #4]
 80039da:	6a1b      	ldr	r3, [r3, #32]
 80039dc:	4313      	orrs	r3, r2
 80039de:	697a      	ldr	r2, [r7, #20]
 80039e0:	4313      	orrs	r3, r2
 80039e2:	617b      	str	r3, [r7, #20]
 80039e4:	687b      	ldr	r3, [r7, #4]
 80039e6:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80039e8:	2b04      	cmp	r3, #4
 80039ea:	d107      	bne.n	80039fc <HAL_DMA_Init+0xc8>
 80039ec:	687b      	ldr	r3, [r7, #4]
 80039ee:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 80039f0:	687b      	ldr	r3, [r7, #4]
 80039f2:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80039f4:	4313      	orrs	r3, r2
 80039f6:	697a      	ldr	r2, [r7, #20]
 80039f8:	4313      	orrs	r3, r2
 80039fa:	617b      	str	r3, [r7, #20]
 80039fc:	687b      	ldr	r3, [r7, #4]
 80039fe:	681b      	ldr	r3, [r3, #0]
 8003a00:	697a      	ldr	r2, [r7, #20]
 8003a02:	601a      	str	r2, [r3, #0]
 8003a04:	687b      	ldr	r3, [r7, #4]
 8003a06:	681b      	ldr	r3, [r3, #0]
 8003a08:	695b      	ldr	r3, [r3, #20]
 8003a0a:	617b      	str	r3, [r7, #20]
 8003a0c:	697b      	ldr	r3, [r7, #20]
 8003a0e:	f023 0307 	bic.w	r3, r3, #7
 8003a12:	617b      	str	r3, [r7, #20]
 8003a14:	687b      	ldr	r3, [r7, #4]
 8003a16:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003a18:	697a      	ldr	r2, [r7, #20]
 8003a1a:	4313      	orrs	r3, r2
 8003a1c:	617b      	str	r3, [r7, #20]
 8003a1e:	687b      	ldr	r3, [r7, #4]
 8003a20:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003a22:	2b04      	cmp	r3, #4
 8003a24:	d117      	bne.n	8003a56 <HAL_DMA_Init+0x122>
 8003a26:	687b      	ldr	r3, [r7, #4]
 8003a28:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8003a2a:	697a      	ldr	r2, [r7, #20]
 8003a2c:	4313      	orrs	r3, r2
 8003a2e:	617b      	str	r3, [r7, #20]
 8003a30:	687b      	ldr	r3, [r7, #4]
 8003a32:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8003a34:	2b00      	cmp	r3, #0
 8003a36:	d00e      	beq.n	8003a56 <HAL_DMA_Init+0x122>
 8003a38:	6878      	ldr	r0, [r7, #4]
 8003a3a:	f000 fb01 	bl	8004040 <DMA_CheckFifoParam>
 8003a3e:	4603      	mov	r3, r0
 8003a40:	2b00      	cmp	r3, #0
 8003a42:	d008      	beq.n	8003a56 <HAL_DMA_Init+0x122>
 8003a44:	687b      	ldr	r3, [r7, #4]
 8003a46:	2240      	movs	r2, #64	@ 0x40
 8003a48:	655a      	str	r2, [r3, #84]	@ 0x54
 8003a4a:	687b      	ldr	r3, [r7, #4]
 8003a4c:	2201      	movs	r2, #1
 8003a4e:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 8003a52:	2301      	movs	r3, #1
 8003a54:	e016      	b.n	8003a84 <HAL_DMA_Init+0x150>
 8003a56:	687b      	ldr	r3, [r7, #4]
 8003a58:	681b      	ldr	r3, [r3, #0]
 8003a5a:	697a      	ldr	r2, [r7, #20]
 8003a5c:	615a      	str	r2, [r3, #20]
 8003a5e:	6878      	ldr	r0, [r7, #4]
 8003a60:	f000 fab8 	bl	8003fd4 <DMA_CalcBaseAndBitshift>
 8003a64:	4603      	mov	r3, r0
 8003a66:	60fb      	str	r3, [r7, #12]
 8003a68:	687b      	ldr	r3, [r7, #4]
 8003a6a:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8003a6c:	223f      	movs	r2, #63	@ 0x3f
 8003a6e:	409a      	lsls	r2, r3
 8003a70:	68fb      	ldr	r3, [r7, #12]
 8003a72:	609a      	str	r2, [r3, #8]
 8003a74:	687b      	ldr	r3, [r7, #4]
 8003a76:	2200      	movs	r2, #0
 8003a78:	655a      	str	r2, [r3, #84]	@ 0x54
 8003a7a:	687b      	ldr	r3, [r7, #4]
 8003a7c:	2201      	movs	r2, #1
 8003a7e:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 8003a82:	2300      	movs	r3, #0
 8003a84:	4618      	mov	r0, r3
 8003a86:	3718      	adds	r7, #24
 8003a88:	46bd      	mov	sp, r7
 8003a8a:	bd80      	pop	{r7, pc}
 8003a8c:	f010803f 	.word	0xf010803f

08003a90 <HAL_DMA_Start_IT>:
 8003a90:	b580      	push	{r7, lr}
 8003a92:	b086      	sub	sp, #24
 8003a94:	af00      	add	r7, sp, #0
 8003a96:	60f8      	str	r0, [r7, #12]
 8003a98:	60b9      	str	r1, [r7, #8]
 8003a9a:	607a      	str	r2, [r7, #4]
 8003a9c:	603b      	str	r3, [r7, #0]
 8003a9e:	2300      	movs	r3, #0
 8003aa0:	75fb      	strb	r3, [r7, #23]
 8003aa2:	68fb      	ldr	r3, [r7, #12]
 8003aa4:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8003aa6:	613b      	str	r3, [r7, #16]
 8003aa8:	68fb      	ldr	r3, [r7, #12]
 8003aaa:	f893 3034 	ldrb.w	r3, [r3, #52]	@ 0x34
 8003aae:	2b01      	cmp	r3, #1
 8003ab0:	d101      	bne.n	8003ab6 <HAL_DMA_Start_IT+0x26>
 8003ab2:	2302      	movs	r3, #2
 8003ab4:	e040      	b.n	8003b38 <HAL_DMA_Start_IT+0xa8>
 8003ab6:	68fb      	ldr	r3, [r7, #12]
 8003ab8:	2201      	movs	r2, #1
 8003aba:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 8003abe:	68fb      	ldr	r3, [r7, #12]
 8003ac0:	f893 3035 	ldrb.w	r3, [r3, #53]	@ 0x35
 8003ac4:	b2db      	uxtb	r3, r3
 8003ac6:	2b01      	cmp	r3, #1
 8003ac8:	d12f      	bne.n	8003b2a <HAL_DMA_Start_IT+0x9a>
 8003aca:	68fb      	ldr	r3, [r7, #12]
 8003acc:	2202      	movs	r2, #2
 8003ace:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 8003ad2:	68fb      	ldr	r3, [r7, #12]
 8003ad4:	2200      	movs	r2, #0
 8003ad6:	655a      	str	r2, [r3, #84]	@ 0x54
 8003ad8:	683b      	ldr	r3, [r7, #0]
 8003ada:	687a      	ldr	r2, [r7, #4]
 8003adc:	68b9      	ldr	r1, [r7, #8]
 8003ade:	68f8      	ldr	r0, [r7, #12]
 8003ae0:	f000 fa4a 	bl	8003f78 <DMA_SetConfig>
 8003ae4:	68fb      	ldr	r3, [r7, #12]
 8003ae6:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8003ae8:	223f      	movs	r2, #63	@ 0x3f
 8003aea:	409a      	lsls	r2, r3
 8003aec:	693b      	ldr	r3, [r7, #16]
 8003aee:	609a      	str	r2, [r3, #8]
 8003af0:	68fb      	ldr	r3, [r7, #12]
 8003af2:	681b      	ldr	r3, [r3, #0]
 8003af4:	681a      	ldr	r2, [r3, #0]
 8003af6:	68fb      	ldr	r3, [r7, #12]
 8003af8:	681b      	ldr	r3, [r3, #0]
 8003afa:	f042 0216 	orr.w	r2, r2, #22
 8003afe:	601a      	str	r2, [r3, #0]
 8003b00:	68fb      	ldr	r3, [r7, #12]
 8003b02:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003b04:	2b00      	cmp	r3, #0
 8003b06:	d007      	beq.n	8003b18 <HAL_DMA_Start_IT+0x88>
 8003b08:	68fb      	ldr	r3, [r7, #12]
 8003b0a:	681b      	ldr	r3, [r3, #0]
 8003b0c:	681a      	ldr	r2, [r3, #0]
 8003b0e:	68fb      	ldr	r3, [r7, #12]
 8003b10:	681b      	ldr	r3, [r3, #0]
 8003b12:	f042 0208 	orr.w	r2, r2, #8
 8003b16:	601a      	str	r2, [r3, #0]
 8003b18:	68fb      	ldr	r3, [r7, #12]
 8003b1a:	681b      	ldr	r3, [r3, #0]
 8003b1c:	681a      	ldr	r2, [r3, #0]
 8003b1e:	68fb      	ldr	r3, [r7, #12]
 8003b20:	681b      	ldr	r3, [r3, #0]
 8003b22:	f042 0201 	orr.w	r2, r2, #1
 8003b26:	601a      	str	r2, [r3, #0]
 8003b28:	e005      	b.n	8003b36 <HAL_DMA_Start_IT+0xa6>
 8003b2a:	68fb      	ldr	r3, [r7, #12]
 8003b2c:	2200      	movs	r2, #0
 8003b2e:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 8003b32:	2302      	movs	r3, #2
 8003b34:	75fb      	strb	r3, [r7, #23]
 8003b36:	7dfb      	ldrb	r3, [r7, #23]
 8003b38:	4618      	mov	r0, r3
 8003b3a:	3718      	adds	r7, #24
 8003b3c:	46bd      	mov	sp, r7
 8003b3e:	bd80      	pop	{r7, pc}

08003b40 <HAL_DMA_Abort>:
 8003b40:	b580      	push	{r7, lr}
 8003b42:	b084      	sub	sp, #16
 8003b44:	af00      	add	r7, sp, #0
 8003b46:	6078      	str	r0, [r7, #4]
 8003b48:	687b      	ldr	r3, [r7, #4]
 8003b4a:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8003b4c:	60fb      	str	r3, [r7, #12]
 8003b4e:	f7ff fdaf 	bl	80036b0 <HAL_GetTick>
 8003b52:	60b8      	str	r0, [r7, #8]
 8003b54:	687b      	ldr	r3, [r7, #4]
 8003b56:	f893 3035 	ldrb.w	r3, [r3, #53]	@ 0x35
 8003b5a:	b2db      	uxtb	r3, r3
 8003b5c:	2b02      	cmp	r3, #2
 8003b5e:	d008      	beq.n	8003b72 <HAL_DMA_Abort+0x32>
 8003b60:	687b      	ldr	r3, [r7, #4]
 8003b62:	2280      	movs	r2, #128	@ 0x80
 8003b64:	655a      	str	r2, [r3, #84]	@ 0x54
 8003b66:	687b      	ldr	r3, [r7, #4]
 8003b68:	2200      	movs	r2, #0
 8003b6a:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 8003b6e:	2301      	movs	r3, #1
 8003b70:	e052      	b.n	8003c18 <HAL_DMA_Abort+0xd8>
 8003b72:	687b      	ldr	r3, [r7, #4]
 8003b74:	681b      	ldr	r3, [r3, #0]
 8003b76:	681a      	ldr	r2, [r3, #0]
 8003b78:	687b      	ldr	r3, [r7, #4]
 8003b7a:	681b      	ldr	r3, [r3, #0]
 8003b7c:	f022 0216 	bic.w	r2, r2, #22
 8003b80:	601a      	str	r2, [r3, #0]
 8003b82:	687b      	ldr	r3, [r7, #4]
 8003b84:	681b      	ldr	r3, [r3, #0]
 8003b86:	695a      	ldr	r2, [r3, #20]
 8003b88:	687b      	ldr	r3, [r7, #4]
 8003b8a:	681b      	ldr	r3, [r3, #0]
 8003b8c:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
 8003b90:	615a      	str	r2, [r3, #20]
 8003b92:	687b      	ldr	r3, [r7, #4]
 8003b94:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003b96:	2b00      	cmp	r3, #0
 8003b98:	d103      	bne.n	8003ba2 <HAL_DMA_Abort+0x62>
 8003b9a:	687b      	ldr	r3, [r7, #4]
 8003b9c:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8003b9e:	2b00      	cmp	r3, #0
 8003ba0:	d007      	beq.n	8003bb2 <HAL_DMA_Abort+0x72>
 8003ba2:	687b      	ldr	r3, [r7, #4]
 8003ba4:	681b      	ldr	r3, [r3, #0]
 8003ba6:	681a      	ldr	r2, [r3, #0]
 8003ba8:	687b      	ldr	r3, [r7, #4]
 8003baa:	681b      	ldr	r3, [r3, #0]
 8003bac:	f022 0208 	bic.w	r2, r2, #8
 8003bb0:	601a      	str	r2, [r3, #0]
 8003bb2:	687b      	ldr	r3, [r7, #4]
 8003bb4:	681b      	ldr	r3, [r3, #0]
 8003bb6:	681a      	ldr	r2, [r3, #0]
 8003bb8:	687b      	ldr	r3, [r7, #4]
 8003bba:	681b      	ldr	r3, [r3, #0]
 8003bbc:	f022 0201 	bic.w	r2, r2, #1
 8003bc0:	601a      	str	r2, [r3, #0]
 8003bc2:	e013      	b.n	8003bec <HAL_DMA_Abort+0xac>
 8003bc4:	f7ff fd74 	bl	80036b0 <HAL_GetTick>
 8003bc8:	4602      	mov	r2, r0
 8003bca:	68bb      	ldr	r3, [r7, #8]
 8003bcc:	1ad3      	subs	r3, r2, r3
 8003bce:	2b05      	cmp	r3, #5
 8003bd0:	d90c      	bls.n	8003bec <HAL_DMA_Abort+0xac>
 8003bd2:	687b      	ldr	r3, [r7, #4]
 8003bd4:	2220      	movs	r2, #32
 8003bd6:	655a      	str	r2, [r3, #84]	@ 0x54
 8003bd8:	687b      	ldr	r3, [r7, #4]
 8003bda:	2203      	movs	r2, #3
 8003bdc:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 8003be0:	687b      	ldr	r3, [r7, #4]
 8003be2:	2200      	movs	r2, #0
 8003be4:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 8003be8:	2303      	movs	r3, #3
 8003bea:	e015      	b.n	8003c18 <HAL_DMA_Abort+0xd8>
 8003bec:	687b      	ldr	r3, [r7, #4]
 8003bee:	681b      	ldr	r3, [r3, #0]
 8003bf0:	681b      	ldr	r3, [r3, #0]
 8003bf2:	f003 0301 	and.w	r3, r3, #1
 8003bf6:	2b00      	cmp	r3, #0
 8003bf8:	d1e4      	bne.n	8003bc4 <HAL_DMA_Abort+0x84>
 8003bfa:	687b      	ldr	r3, [r7, #4]
 8003bfc:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8003bfe:	223f      	movs	r2, #63	@ 0x3f
 8003c00:	409a      	lsls	r2, r3
 8003c02:	68fb      	ldr	r3, [r7, #12]
 8003c04:	609a      	str	r2, [r3, #8]
 8003c06:	687b      	ldr	r3, [r7, #4]
 8003c08:	2201      	movs	r2, #1
 8003c0a:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 8003c0e:	687b      	ldr	r3, [r7, #4]
 8003c10:	2200      	movs	r2, #0
 8003c12:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 8003c16:	2300      	movs	r3, #0
 8003c18:	4618      	mov	r0, r3
 8003c1a:	3710      	adds	r7, #16
 8003c1c:	46bd      	mov	sp, r7
 8003c1e:	bd80      	pop	{r7, pc}

08003c20 <HAL_DMA_Abort_IT>:
 8003c20:	b480      	push	{r7}
 8003c22:	b083      	sub	sp, #12
 8003c24:	af00      	add	r7, sp, #0
 8003c26:	6078      	str	r0, [r7, #4]
 8003c28:	687b      	ldr	r3, [r7, #4]
 8003c2a:	f893 3035 	ldrb.w	r3, [r3, #53]	@ 0x35
 8003c2e:	b2db      	uxtb	r3, r3
 8003c30:	2b02      	cmp	r3, #2
 8003c32:	d004      	beq.n	8003c3e <HAL_DMA_Abort_IT+0x1e>
 8003c34:	687b      	ldr	r3, [r7, #4]
 8003c36:	2280      	movs	r2, #128	@ 0x80
 8003c38:	655a      	str	r2, [r3, #84]	@ 0x54
 8003c3a:	2301      	movs	r3, #1
 8003c3c:	e00c      	b.n	8003c58 <HAL_DMA_Abort_IT+0x38>
 8003c3e:	687b      	ldr	r3, [r7, #4]
 8003c40:	2205      	movs	r2, #5
 8003c42:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 8003c46:	687b      	ldr	r3, [r7, #4]
 8003c48:	681b      	ldr	r3, [r3, #0]
 8003c4a:	681a      	ldr	r2, [r3, #0]
 8003c4c:	687b      	ldr	r3, [r7, #4]
 8003c4e:	681b      	ldr	r3, [r3, #0]
 8003c50:	f022 0201 	bic.w	r2, r2, #1
 8003c54:	601a      	str	r2, [r3, #0]
 8003c56:	2300      	movs	r3, #0
 8003c58:	4618      	mov	r0, r3
 8003c5a:	370c      	adds	r7, #12
 8003c5c:	46bd      	mov	sp, r7
 8003c5e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003c62:	4770      	bx	lr

08003c64 <HAL_DMA_IRQHandler>:
 8003c64:	b580      	push	{r7, lr}
 8003c66:	b086      	sub	sp, #24
 8003c68:	af00      	add	r7, sp, #0
 8003c6a:	6078      	str	r0, [r7, #4]
 8003c6c:	2300      	movs	r3, #0
 8003c6e:	60bb      	str	r3, [r7, #8]
 8003c70:	4b8e      	ldr	r3, [pc, #568]	@ (8003eac <HAL_DMA_IRQHandler+0x248>)
 8003c72:	681b      	ldr	r3, [r3, #0]
 8003c74:	4a8e      	ldr	r2, [pc, #568]	@ (8003eb0 <HAL_DMA_IRQHandler+0x24c>)
 8003c76:	fba2 2303 	umull	r2, r3, r2, r3
 8003c7a:	0a9b      	lsrs	r3, r3, #10
 8003c7c:	617b      	str	r3, [r7, #20]
 8003c7e:	687b      	ldr	r3, [r7, #4]
 8003c80:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8003c82:	613b      	str	r3, [r7, #16]
 8003c84:	693b      	ldr	r3, [r7, #16]
 8003c86:	681b      	ldr	r3, [r3, #0]
 8003c88:	60fb      	str	r3, [r7, #12]
 8003c8a:	687b      	ldr	r3, [r7, #4]
 8003c8c:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8003c8e:	2208      	movs	r2, #8
 8003c90:	409a      	lsls	r2, r3
 8003c92:	68fb      	ldr	r3, [r7, #12]
 8003c94:	4013      	ands	r3, r2
 8003c96:	2b00      	cmp	r3, #0
 8003c98:	d01a      	beq.n	8003cd0 <HAL_DMA_IRQHandler+0x6c>
 8003c9a:	687b      	ldr	r3, [r7, #4]
 8003c9c:	681b      	ldr	r3, [r3, #0]
 8003c9e:	681b      	ldr	r3, [r3, #0]
 8003ca0:	f003 0304 	and.w	r3, r3, #4
 8003ca4:	2b00      	cmp	r3, #0
 8003ca6:	d013      	beq.n	8003cd0 <HAL_DMA_IRQHandler+0x6c>
 8003ca8:	687b      	ldr	r3, [r7, #4]
 8003caa:	681b      	ldr	r3, [r3, #0]
 8003cac:	681a      	ldr	r2, [r3, #0]
 8003cae:	687b      	ldr	r3, [r7, #4]
 8003cb0:	681b      	ldr	r3, [r3, #0]
 8003cb2:	f022 0204 	bic.w	r2, r2, #4
 8003cb6:	601a      	str	r2, [r3, #0]
 8003cb8:	687b      	ldr	r3, [r7, #4]
 8003cba:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8003cbc:	2208      	movs	r2, #8
 8003cbe:	409a      	lsls	r2, r3
 8003cc0:	693b      	ldr	r3, [r7, #16]
 8003cc2:	609a      	str	r2, [r3, #8]
 8003cc4:	687b      	ldr	r3, [r7, #4]
 8003cc6:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8003cc8:	f043 0201 	orr.w	r2, r3, #1
 8003ccc:	687b      	ldr	r3, [r7, #4]
 8003cce:	655a      	str	r2, [r3, #84]	@ 0x54
 8003cd0:	687b      	ldr	r3, [r7, #4]
 8003cd2:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8003cd4:	2201      	movs	r2, #1
 8003cd6:	409a      	lsls	r2, r3
 8003cd8:	68fb      	ldr	r3, [r7, #12]
 8003cda:	4013      	ands	r3, r2
 8003cdc:	2b00      	cmp	r3, #0
 8003cde:	d012      	beq.n	8003d06 <HAL_DMA_IRQHandler+0xa2>
 8003ce0:	687b      	ldr	r3, [r7, #4]
 8003ce2:	681b      	ldr	r3, [r3, #0]
 8003ce4:	695b      	ldr	r3, [r3, #20]
 8003ce6:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8003cea:	2b00      	cmp	r3, #0
 8003cec:	d00b      	beq.n	8003d06 <HAL_DMA_IRQHandler+0xa2>
 8003cee:	687b      	ldr	r3, [r7, #4]
 8003cf0:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8003cf2:	2201      	movs	r2, #1
 8003cf4:	409a      	lsls	r2, r3
 8003cf6:	693b      	ldr	r3, [r7, #16]
 8003cf8:	609a      	str	r2, [r3, #8]
 8003cfa:	687b      	ldr	r3, [r7, #4]
 8003cfc:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8003cfe:	f043 0202 	orr.w	r2, r3, #2
 8003d02:	687b      	ldr	r3, [r7, #4]
 8003d04:	655a      	str	r2, [r3, #84]	@ 0x54
 8003d06:	687b      	ldr	r3, [r7, #4]
 8003d08:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8003d0a:	2204      	movs	r2, #4
 8003d0c:	409a      	lsls	r2, r3
 8003d0e:	68fb      	ldr	r3, [r7, #12]
 8003d10:	4013      	ands	r3, r2
 8003d12:	2b00      	cmp	r3, #0
 8003d14:	d012      	beq.n	8003d3c <HAL_DMA_IRQHandler+0xd8>
 8003d16:	687b      	ldr	r3, [r7, #4]
 8003d18:	681b      	ldr	r3, [r3, #0]
 8003d1a:	681b      	ldr	r3, [r3, #0]
 8003d1c:	f003 0302 	and.w	r3, r3, #2
 8003d20:	2b00      	cmp	r3, #0
 8003d22:	d00b      	beq.n	8003d3c <HAL_DMA_IRQHandler+0xd8>
 8003d24:	687b      	ldr	r3, [r7, #4]
 8003d26:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8003d28:	2204      	movs	r2, #4
 8003d2a:	409a      	lsls	r2, r3
 8003d2c:	693b      	ldr	r3, [r7, #16]
 8003d2e:	609a      	str	r2, [r3, #8]
 8003d30:	687b      	ldr	r3, [r7, #4]
 8003d32:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8003d34:	f043 0204 	orr.w	r2, r3, #4
 8003d38:	687b      	ldr	r3, [r7, #4]
 8003d3a:	655a      	str	r2, [r3, #84]	@ 0x54
 8003d3c:	687b      	ldr	r3, [r7, #4]
 8003d3e:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8003d40:	2210      	movs	r2, #16
 8003d42:	409a      	lsls	r2, r3
 8003d44:	68fb      	ldr	r3, [r7, #12]
 8003d46:	4013      	ands	r3, r2
 8003d48:	2b00      	cmp	r3, #0
 8003d4a:	d043      	beq.n	8003dd4 <HAL_DMA_IRQHandler+0x170>
 8003d4c:	687b      	ldr	r3, [r7, #4]
 8003d4e:	681b      	ldr	r3, [r3, #0]
 8003d50:	681b      	ldr	r3, [r3, #0]
 8003d52:	f003 0308 	and.w	r3, r3, #8
 8003d56:	2b00      	cmp	r3, #0
 8003d58:	d03c      	beq.n	8003dd4 <HAL_DMA_IRQHandler+0x170>
 8003d5a:	687b      	ldr	r3, [r7, #4]
 8003d5c:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8003d5e:	2210      	movs	r2, #16
 8003d60:	409a      	lsls	r2, r3
 8003d62:	693b      	ldr	r3, [r7, #16]
 8003d64:	609a      	str	r2, [r3, #8]
 8003d66:	687b      	ldr	r3, [r7, #4]
 8003d68:	681b      	ldr	r3, [r3, #0]
 8003d6a:	681b      	ldr	r3, [r3, #0]
 8003d6c:	f403 2380 	and.w	r3, r3, #262144	@ 0x40000
 8003d70:	2b00      	cmp	r3, #0
 8003d72:	d018      	beq.n	8003da6 <HAL_DMA_IRQHandler+0x142>
 8003d74:	687b      	ldr	r3, [r7, #4]
 8003d76:	681b      	ldr	r3, [r3, #0]
 8003d78:	681b      	ldr	r3, [r3, #0]
 8003d7a:	f403 2300 	and.w	r3, r3, #524288	@ 0x80000
 8003d7e:	2b00      	cmp	r3, #0
 8003d80:	d108      	bne.n	8003d94 <HAL_DMA_IRQHandler+0x130>
 8003d82:	687b      	ldr	r3, [r7, #4]
 8003d84:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003d86:	2b00      	cmp	r3, #0
 8003d88:	d024      	beq.n	8003dd4 <HAL_DMA_IRQHandler+0x170>
 8003d8a:	687b      	ldr	r3, [r7, #4]
 8003d8c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003d8e:	6878      	ldr	r0, [r7, #4]
 8003d90:	4798      	blx	r3
 8003d92:	e01f      	b.n	8003dd4 <HAL_DMA_IRQHandler+0x170>
 8003d94:	687b      	ldr	r3, [r7, #4]
 8003d96:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8003d98:	2b00      	cmp	r3, #0
 8003d9a:	d01b      	beq.n	8003dd4 <HAL_DMA_IRQHandler+0x170>
 8003d9c:	687b      	ldr	r3, [r7, #4]
 8003d9e:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8003da0:	6878      	ldr	r0, [r7, #4]
 8003da2:	4798      	blx	r3
 8003da4:	e016      	b.n	8003dd4 <HAL_DMA_IRQHandler+0x170>
 8003da6:	687b      	ldr	r3, [r7, #4]
 8003da8:	681b      	ldr	r3, [r3, #0]
 8003daa:	681b      	ldr	r3, [r3, #0]
 8003dac:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8003db0:	2b00      	cmp	r3, #0
 8003db2:	d107      	bne.n	8003dc4 <HAL_DMA_IRQHandler+0x160>
 8003db4:	687b      	ldr	r3, [r7, #4]
 8003db6:	681b      	ldr	r3, [r3, #0]
 8003db8:	681a      	ldr	r2, [r3, #0]
 8003dba:	687b      	ldr	r3, [r7, #4]
 8003dbc:	681b      	ldr	r3, [r3, #0]
 8003dbe:	f022 0208 	bic.w	r2, r2, #8
 8003dc2:	601a      	str	r2, [r3, #0]
 8003dc4:	687b      	ldr	r3, [r7, #4]
 8003dc6:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003dc8:	2b00      	cmp	r3, #0
 8003dca:	d003      	beq.n	8003dd4 <HAL_DMA_IRQHandler+0x170>
 8003dcc:	687b      	ldr	r3, [r7, #4]
 8003dce:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003dd0:	6878      	ldr	r0, [r7, #4]
 8003dd2:	4798      	blx	r3
 8003dd4:	687b      	ldr	r3, [r7, #4]
 8003dd6:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8003dd8:	2220      	movs	r2, #32
 8003dda:	409a      	lsls	r2, r3
 8003ddc:	68fb      	ldr	r3, [r7, #12]
 8003dde:	4013      	ands	r3, r2
 8003de0:	2b00      	cmp	r3, #0
 8003de2:	f000 808f 	beq.w	8003f04 <HAL_DMA_IRQHandler+0x2a0>
 8003de6:	687b      	ldr	r3, [r7, #4]
 8003de8:	681b      	ldr	r3, [r3, #0]
 8003dea:	681b      	ldr	r3, [r3, #0]
 8003dec:	f003 0310 	and.w	r3, r3, #16
 8003df0:	2b00      	cmp	r3, #0
 8003df2:	f000 8087 	beq.w	8003f04 <HAL_DMA_IRQHandler+0x2a0>
 8003df6:	687b      	ldr	r3, [r7, #4]
 8003df8:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8003dfa:	2220      	movs	r2, #32
 8003dfc:	409a      	lsls	r2, r3
 8003dfe:	693b      	ldr	r3, [r7, #16]
 8003e00:	609a      	str	r2, [r3, #8]
 8003e02:	687b      	ldr	r3, [r7, #4]
 8003e04:	f893 3035 	ldrb.w	r3, [r3, #53]	@ 0x35
 8003e08:	b2db      	uxtb	r3, r3
 8003e0a:	2b05      	cmp	r3, #5
 8003e0c:	d136      	bne.n	8003e7c <HAL_DMA_IRQHandler+0x218>
 8003e0e:	687b      	ldr	r3, [r7, #4]
 8003e10:	681b      	ldr	r3, [r3, #0]
 8003e12:	681a      	ldr	r2, [r3, #0]
 8003e14:	687b      	ldr	r3, [r7, #4]
 8003e16:	681b      	ldr	r3, [r3, #0]
 8003e18:	f022 0216 	bic.w	r2, r2, #22
 8003e1c:	601a      	str	r2, [r3, #0]
 8003e1e:	687b      	ldr	r3, [r7, #4]
 8003e20:	681b      	ldr	r3, [r3, #0]
 8003e22:	695a      	ldr	r2, [r3, #20]
 8003e24:	687b      	ldr	r3, [r7, #4]
 8003e26:	681b      	ldr	r3, [r3, #0]
 8003e28:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
 8003e2c:	615a      	str	r2, [r3, #20]
 8003e2e:	687b      	ldr	r3, [r7, #4]
 8003e30:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003e32:	2b00      	cmp	r3, #0
 8003e34:	d103      	bne.n	8003e3e <HAL_DMA_IRQHandler+0x1da>
 8003e36:	687b      	ldr	r3, [r7, #4]
 8003e38:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8003e3a:	2b00      	cmp	r3, #0
 8003e3c:	d007      	beq.n	8003e4e <HAL_DMA_IRQHandler+0x1ea>
 8003e3e:	687b      	ldr	r3, [r7, #4]
 8003e40:	681b      	ldr	r3, [r3, #0]
 8003e42:	681a      	ldr	r2, [r3, #0]
 8003e44:	687b      	ldr	r3, [r7, #4]
 8003e46:	681b      	ldr	r3, [r3, #0]
 8003e48:	f022 0208 	bic.w	r2, r2, #8
 8003e4c:	601a      	str	r2, [r3, #0]
 8003e4e:	687b      	ldr	r3, [r7, #4]
 8003e50:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8003e52:	223f      	movs	r2, #63	@ 0x3f
 8003e54:	409a      	lsls	r2, r3
 8003e56:	693b      	ldr	r3, [r7, #16]
 8003e58:	609a      	str	r2, [r3, #8]
 8003e5a:	687b      	ldr	r3, [r7, #4]
 8003e5c:	2201      	movs	r2, #1
 8003e5e:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 8003e62:	687b      	ldr	r3, [r7, #4]
 8003e64:	2200      	movs	r2, #0
 8003e66:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 8003e6a:	687b      	ldr	r3, [r7, #4]
 8003e6c:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8003e6e:	2b00      	cmp	r3, #0
 8003e70:	d07e      	beq.n	8003f70 <HAL_DMA_IRQHandler+0x30c>
 8003e72:	687b      	ldr	r3, [r7, #4]
 8003e74:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8003e76:	6878      	ldr	r0, [r7, #4]
 8003e78:	4798      	blx	r3
 8003e7a:	e079      	b.n	8003f70 <HAL_DMA_IRQHandler+0x30c>
 8003e7c:	687b      	ldr	r3, [r7, #4]
 8003e7e:	681b      	ldr	r3, [r3, #0]
 8003e80:	681b      	ldr	r3, [r3, #0]
 8003e82:	f403 2380 	and.w	r3, r3, #262144	@ 0x40000
 8003e86:	2b00      	cmp	r3, #0
 8003e88:	d01d      	beq.n	8003ec6 <HAL_DMA_IRQHandler+0x262>
 8003e8a:	687b      	ldr	r3, [r7, #4]
 8003e8c:	681b      	ldr	r3, [r3, #0]
 8003e8e:	681b      	ldr	r3, [r3, #0]
 8003e90:	f403 2300 	and.w	r3, r3, #524288	@ 0x80000
 8003e94:	2b00      	cmp	r3, #0
 8003e96:	d10d      	bne.n	8003eb4 <HAL_DMA_IRQHandler+0x250>
 8003e98:	687b      	ldr	r3, [r7, #4]
 8003e9a:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8003e9c:	2b00      	cmp	r3, #0
 8003e9e:	d031      	beq.n	8003f04 <HAL_DMA_IRQHandler+0x2a0>
 8003ea0:	687b      	ldr	r3, [r7, #4]
 8003ea2:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8003ea4:	6878      	ldr	r0, [r7, #4]
 8003ea6:	4798      	blx	r3
 8003ea8:	e02c      	b.n	8003f04 <HAL_DMA_IRQHandler+0x2a0>
 8003eaa:	bf00      	nop
 8003eac:	20000028 	.word	0x20000028
 8003eb0:	1b4e81b5 	.word	0x1b4e81b5
 8003eb4:	687b      	ldr	r3, [r7, #4]
 8003eb6:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8003eb8:	2b00      	cmp	r3, #0
 8003eba:	d023      	beq.n	8003f04 <HAL_DMA_IRQHandler+0x2a0>
 8003ebc:	687b      	ldr	r3, [r7, #4]
 8003ebe:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8003ec0:	6878      	ldr	r0, [r7, #4]
 8003ec2:	4798      	blx	r3
 8003ec4:	e01e      	b.n	8003f04 <HAL_DMA_IRQHandler+0x2a0>
 8003ec6:	687b      	ldr	r3, [r7, #4]
 8003ec8:	681b      	ldr	r3, [r3, #0]
 8003eca:	681b      	ldr	r3, [r3, #0]
 8003ecc:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8003ed0:	2b00      	cmp	r3, #0
 8003ed2:	d10f      	bne.n	8003ef4 <HAL_DMA_IRQHandler+0x290>
 8003ed4:	687b      	ldr	r3, [r7, #4]
 8003ed6:	681b      	ldr	r3, [r3, #0]
 8003ed8:	681a      	ldr	r2, [r3, #0]
 8003eda:	687b      	ldr	r3, [r7, #4]
 8003edc:	681b      	ldr	r3, [r3, #0]
 8003ede:	f022 0210 	bic.w	r2, r2, #16
 8003ee2:	601a      	str	r2, [r3, #0]
 8003ee4:	687b      	ldr	r3, [r7, #4]
 8003ee6:	2201      	movs	r2, #1
 8003ee8:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 8003eec:	687b      	ldr	r3, [r7, #4]
 8003eee:	2200      	movs	r2, #0
 8003ef0:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 8003ef4:	687b      	ldr	r3, [r7, #4]
 8003ef6:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8003ef8:	2b00      	cmp	r3, #0
 8003efa:	d003      	beq.n	8003f04 <HAL_DMA_IRQHandler+0x2a0>
 8003efc:	687b      	ldr	r3, [r7, #4]
 8003efe:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8003f00:	6878      	ldr	r0, [r7, #4]
 8003f02:	4798      	blx	r3
 8003f04:	687b      	ldr	r3, [r7, #4]
 8003f06:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8003f08:	2b00      	cmp	r3, #0
 8003f0a:	d032      	beq.n	8003f72 <HAL_DMA_IRQHandler+0x30e>
 8003f0c:	687b      	ldr	r3, [r7, #4]
 8003f0e:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8003f10:	f003 0301 	and.w	r3, r3, #1
 8003f14:	2b00      	cmp	r3, #0
 8003f16:	d022      	beq.n	8003f5e <HAL_DMA_IRQHandler+0x2fa>
 8003f18:	687b      	ldr	r3, [r7, #4]
 8003f1a:	2205      	movs	r2, #5
 8003f1c:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 8003f20:	687b      	ldr	r3, [r7, #4]
 8003f22:	681b      	ldr	r3, [r3, #0]
 8003f24:	681a      	ldr	r2, [r3, #0]
 8003f26:	687b      	ldr	r3, [r7, #4]
 8003f28:	681b      	ldr	r3, [r3, #0]
 8003f2a:	f022 0201 	bic.w	r2, r2, #1
 8003f2e:	601a      	str	r2, [r3, #0]
 8003f30:	68bb      	ldr	r3, [r7, #8]
 8003f32:	3301      	adds	r3, #1
 8003f34:	60bb      	str	r3, [r7, #8]
 8003f36:	697a      	ldr	r2, [r7, #20]
 8003f38:	429a      	cmp	r2, r3
 8003f3a:	d307      	bcc.n	8003f4c <HAL_DMA_IRQHandler+0x2e8>
 8003f3c:	687b      	ldr	r3, [r7, #4]
 8003f3e:	681b      	ldr	r3, [r3, #0]
 8003f40:	681b      	ldr	r3, [r3, #0]
 8003f42:	f003 0301 	and.w	r3, r3, #1
 8003f46:	2b00      	cmp	r3, #0
 8003f48:	d1f2      	bne.n	8003f30 <HAL_DMA_IRQHandler+0x2cc>
 8003f4a:	e000      	b.n	8003f4e <HAL_DMA_IRQHandler+0x2ea>
 8003f4c:	bf00      	nop
 8003f4e:	687b      	ldr	r3, [r7, #4]
 8003f50:	2201      	movs	r2, #1
 8003f52:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 8003f56:	687b      	ldr	r3, [r7, #4]
 8003f58:	2200      	movs	r2, #0
 8003f5a:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 8003f5e:	687b      	ldr	r3, [r7, #4]
 8003f60:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8003f62:	2b00      	cmp	r3, #0
 8003f64:	d005      	beq.n	8003f72 <HAL_DMA_IRQHandler+0x30e>
 8003f66:	687b      	ldr	r3, [r7, #4]
 8003f68:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8003f6a:	6878      	ldr	r0, [r7, #4]
 8003f6c:	4798      	blx	r3
 8003f6e:	e000      	b.n	8003f72 <HAL_DMA_IRQHandler+0x30e>
 8003f70:	bf00      	nop
 8003f72:	3718      	adds	r7, #24
 8003f74:	46bd      	mov	sp, r7
 8003f76:	bd80      	pop	{r7, pc}

08003f78 <DMA_SetConfig>:
 8003f78:	b480      	push	{r7}
 8003f7a:	b085      	sub	sp, #20
 8003f7c:	af00      	add	r7, sp, #0
 8003f7e:	60f8      	str	r0, [r7, #12]
 8003f80:	60b9      	str	r1, [r7, #8]
 8003f82:	607a      	str	r2, [r7, #4]
 8003f84:	603b      	str	r3, [r7, #0]
 8003f86:	68fb      	ldr	r3, [r7, #12]
 8003f88:	681b      	ldr	r3, [r3, #0]
 8003f8a:	681a      	ldr	r2, [r3, #0]
 8003f8c:	68fb      	ldr	r3, [r7, #12]
 8003f8e:	681b      	ldr	r3, [r3, #0]
 8003f90:	f422 2280 	bic.w	r2, r2, #262144	@ 0x40000
 8003f94:	601a      	str	r2, [r3, #0]
 8003f96:	68fb      	ldr	r3, [r7, #12]
 8003f98:	681b      	ldr	r3, [r3, #0]
 8003f9a:	683a      	ldr	r2, [r7, #0]
 8003f9c:	605a      	str	r2, [r3, #4]
 8003f9e:	68fb      	ldr	r3, [r7, #12]
 8003fa0:	689b      	ldr	r3, [r3, #8]
 8003fa2:	2b40      	cmp	r3, #64	@ 0x40
 8003fa4:	d108      	bne.n	8003fb8 <DMA_SetConfig+0x40>
 8003fa6:	68fb      	ldr	r3, [r7, #12]
 8003fa8:	681b      	ldr	r3, [r3, #0]
 8003faa:	687a      	ldr	r2, [r7, #4]
 8003fac:	609a      	str	r2, [r3, #8]
 8003fae:	68fb      	ldr	r3, [r7, #12]
 8003fb0:	681b      	ldr	r3, [r3, #0]
 8003fb2:	68ba      	ldr	r2, [r7, #8]
 8003fb4:	60da      	str	r2, [r3, #12]
 8003fb6:	e007      	b.n	8003fc8 <DMA_SetConfig+0x50>
 8003fb8:	68fb      	ldr	r3, [r7, #12]
 8003fba:	681b      	ldr	r3, [r3, #0]
 8003fbc:	68ba      	ldr	r2, [r7, #8]
 8003fbe:	609a      	str	r2, [r3, #8]
 8003fc0:	68fb      	ldr	r3, [r7, #12]
 8003fc2:	681b      	ldr	r3, [r3, #0]
 8003fc4:	687a      	ldr	r2, [r7, #4]
 8003fc6:	60da      	str	r2, [r3, #12]
 8003fc8:	bf00      	nop
 8003fca:	3714      	adds	r7, #20
 8003fcc:	46bd      	mov	sp, r7
 8003fce:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003fd2:	4770      	bx	lr

08003fd4 <DMA_CalcBaseAndBitshift>:
 8003fd4:	b480      	push	{r7}
 8003fd6:	b085      	sub	sp, #20
 8003fd8:	af00      	add	r7, sp, #0
 8003fda:	6078      	str	r0, [r7, #4]
 8003fdc:	687b      	ldr	r3, [r7, #4]
 8003fde:	681b      	ldr	r3, [r3, #0]
 8003fe0:	b2db      	uxtb	r3, r3
 8003fe2:	3b10      	subs	r3, #16
 8003fe4:	4a14      	ldr	r2, [pc, #80]	@ (8004038 <DMA_CalcBaseAndBitshift+0x64>)
 8003fe6:	fba2 2303 	umull	r2, r3, r2, r3
 8003fea:	091b      	lsrs	r3, r3, #4
 8003fec:	60fb      	str	r3, [r7, #12]
 8003fee:	4a13      	ldr	r2, [pc, #76]	@ (800403c <DMA_CalcBaseAndBitshift+0x68>)
 8003ff0:	68fb      	ldr	r3, [r7, #12]
 8003ff2:	4413      	add	r3, r2
 8003ff4:	781b      	ldrb	r3, [r3, #0]
 8003ff6:	461a      	mov	r2, r3
 8003ff8:	687b      	ldr	r3, [r7, #4]
 8003ffa:	65da      	str	r2, [r3, #92]	@ 0x5c
 8003ffc:	68fb      	ldr	r3, [r7, #12]
 8003ffe:	2b03      	cmp	r3, #3
 8004000:	d909      	bls.n	8004016 <DMA_CalcBaseAndBitshift+0x42>
 8004002:	687b      	ldr	r3, [r7, #4]
 8004004:	681b      	ldr	r3, [r3, #0]
 8004006:	f423 737f 	bic.w	r3, r3, #1020	@ 0x3fc
 800400a:	f023 0303 	bic.w	r3, r3, #3
 800400e:	1d1a      	adds	r2, r3, #4
 8004010:	687b      	ldr	r3, [r7, #4]
 8004012:	659a      	str	r2, [r3, #88]	@ 0x58
 8004014:	e007      	b.n	8004026 <DMA_CalcBaseAndBitshift+0x52>
 8004016:	687b      	ldr	r3, [r7, #4]
 8004018:	681b      	ldr	r3, [r3, #0]
 800401a:	f423 737f 	bic.w	r3, r3, #1020	@ 0x3fc
 800401e:	f023 0303 	bic.w	r3, r3, #3
 8004022:	687a      	ldr	r2, [r7, #4]
 8004024:	6593      	str	r3, [r2, #88]	@ 0x58
 8004026:	687b      	ldr	r3, [r7, #4]
 8004028:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 800402a:	4618      	mov	r0, r3
 800402c:	3714      	adds	r7, #20
 800402e:	46bd      	mov	sp, r7
 8004030:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004034:	4770      	bx	lr
 8004036:	bf00      	nop
 8004038:	aaaaaaab 	.word	0xaaaaaaab
 800403c:	0800d028 	.word	0x0800d028

08004040 <DMA_CheckFifoParam>:
 8004040:	b480      	push	{r7}
 8004042:	b085      	sub	sp, #20
 8004044:	af00      	add	r7, sp, #0
 8004046:	6078      	str	r0, [r7, #4]
 8004048:	2300      	movs	r3, #0
 800404a:	73fb      	strb	r3, [r7, #15]
 800404c:	687b      	ldr	r3, [r7, #4]
 800404e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8004050:	60bb      	str	r3, [r7, #8]
 8004052:	687b      	ldr	r3, [r7, #4]
 8004054:	699b      	ldr	r3, [r3, #24]
 8004056:	2b00      	cmp	r3, #0
 8004058:	d11f      	bne.n	800409a <DMA_CheckFifoParam+0x5a>
 800405a:	68bb      	ldr	r3, [r7, #8]
 800405c:	2b03      	cmp	r3, #3
 800405e:	d856      	bhi.n	800410e <DMA_CheckFifoParam+0xce>
 8004060:	a201      	add	r2, pc, #4	@ (adr r2, 8004068 <DMA_CheckFifoParam+0x28>)
 8004062:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8004066:	bf00      	nop
 8004068:	08004079 	.word	0x08004079
 800406c:	0800408b 	.word	0x0800408b
 8004070:	08004079 	.word	0x08004079
 8004074:	0800410f 	.word	0x0800410f
 8004078:	687b      	ldr	r3, [r7, #4]
 800407a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800407c:	f003 7380 	and.w	r3, r3, #16777216	@ 0x1000000
 8004080:	2b00      	cmp	r3, #0
 8004082:	d046      	beq.n	8004112 <DMA_CheckFifoParam+0xd2>
 8004084:	2301      	movs	r3, #1
 8004086:	73fb      	strb	r3, [r7, #15]
 8004088:	e043      	b.n	8004112 <DMA_CheckFifoParam+0xd2>
 800408a:	687b      	ldr	r3, [r7, #4]
 800408c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800408e:	f1b3 7fc0 	cmp.w	r3, #25165824	@ 0x1800000
 8004092:	d140      	bne.n	8004116 <DMA_CheckFifoParam+0xd6>
 8004094:	2301      	movs	r3, #1
 8004096:	73fb      	strb	r3, [r7, #15]
 8004098:	e03d      	b.n	8004116 <DMA_CheckFifoParam+0xd6>
 800409a:	687b      	ldr	r3, [r7, #4]
 800409c:	699b      	ldr	r3, [r3, #24]
 800409e:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 80040a2:	d121      	bne.n	80040e8 <DMA_CheckFifoParam+0xa8>
 80040a4:	68bb      	ldr	r3, [r7, #8]
 80040a6:	2b03      	cmp	r3, #3
 80040a8:	d837      	bhi.n	800411a <DMA_CheckFifoParam+0xda>
 80040aa:	a201      	add	r2, pc, #4	@ (adr r2, 80040b0 <DMA_CheckFifoParam+0x70>)
 80040ac:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80040b0:	080040c1 	.word	0x080040c1
 80040b4:	080040c7 	.word	0x080040c7
 80040b8:	080040c1 	.word	0x080040c1
 80040bc:	080040d9 	.word	0x080040d9
 80040c0:	2301      	movs	r3, #1
 80040c2:	73fb      	strb	r3, [r7, #15]
 80040c4:	e030      	b.n	8004128 <DMA_CheckFifoParam+0xe8>
 80040c6:	687b      	ldr	r3, [r7, #4]
 80040c8:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80040ca:	f003 7380 	and.w	r3, r3, #16777216	@ 0x1000000
 80040ce:	2b00      	cmp	r3, #0
 80040d0:	d025      	beq.n	800411e <DMA_CheckFifoParam+0xde>
 80040d2:	2301      	movs	r3, #1
 80040d4:	73fb      	strb	r3, [r7, #15]
 80040d6:	e022      	b.n	800411e <DMA_CheckFifoParam+0xde>
 80040d8:	687b      	ldr	r3, [r7, #4]
 80040da:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80040dc:	f1b3 7fc0 	cmp.w	r3, #25165824	@ 0x1800000
 80040e0:	d11f      	bne.n	8004122 <DMA_CheckFifoParam+0xe2>
 80040e2:	2301      	movs	r3, #1
 80040e4:	73fb      	strb	r3, [r7, #15]
 80040e6:	e01c      	b.n	8004122 <DMA_CheckFifoParam+0xe2>
 80040e8:	68bb      	ldr	r3, [r7, #8]
 80040ea:	2b02      	cmp	r3, #2
 80040ec:	d903      	bls.n	80040f6 <DMA_CheckFifoParam+0xb6>
 80040ee:	68bb      	ldr	r3, [r7, #8]
 80040f0:	2b03      	cmp	r3, #3
 80040f2:	d003      	beq.n	80040fc <DMA_CheckFifoParam+0xbc>
 80040f4:	e018      	b.n	8004128 <DMA_CheckFifoParam+0xe8>
 80040f6:	2301      	movs	r3, #1
 80040f8:	73fb      	strb	r3, [r7, #15]
 80040fa:	e015      	b.n	8004128 <DMA_CheckFifoParam+0xe8>
 80040fc:	687b      	ldr	r3, [r7, #4]
 80040fe:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8004100:	f003 7380 	and.w	r3, r3, #16777216	@ 0x1000000
 8004104:	2b00      	cmp	r3, #0
 8004106:	d00e      	beq.n	8004126 <DMA_CheckFifoParam+0xe6>
 8004108:	2301      	movs	r3, #1
 800410a:	73fb      	strb	r3, [r7, #15]
 800410c:	e00b      	b.n	8004126 <DMA_CheckFifoParam+0xe6>
 800410e:	bf00      	nop
 8004110:	e00a      	b.n	8004128 <DMA_CheckFifoParam+0xe8>
 8004112:	bf00      	nop
 8004114:	e008      	b.n	8004128 <DMA_CheckFifoParam+0xe8>
 8004116:	bf00      	nop
 8004118:	e006      	b.n	8004128 <DMA_CheckFifoParam+0xe8>
 800411a:	bf00      	nop
 800411c:	e004      	b.n	8004128 <DMA_CheckFifoParam+0xe8>
 800411e:	bf00      	nop
 8004120:	e002      	b.n	8004128 <DMA_CheckFifoParam+0xe8>
 8004122:	bf00      	nop
 8004124:	e000      	b.n	8004128 <DMA_CheckFifoParam+0xe8>
 8004126:	bf00      	nop
 8004128:	7bfb      	ldrb	r3, [r7, #15]
 800412a:	4618      	mov	r0, r3
 800412c:	3714      	adds	r7, #20
 800412e:	46bd      	mov	sp, r7
 8004130:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004134:	4770      	bx	lr
 8004136:	bf00      	nop

08004138 <HAL_GPIO_Init>:
 8004138:	b480      	push	{r7}
 800413a:	b089      	sub	sp, #36	@ 0x24
 800413c:	af00      	add	r7, sp, #0
 800413e:	6078      	str	r0, [r7, #4]
 8004140:	6039      	str	r1, [r7, #0]
 8004142:	2300      	movs	r3, #0
 8004144:	617b      	str	r3, [r7, #20]
 8004146:	2300      	movs	r3, #0
 8004148:	613b      	str	r3, [r7, #16]
 800414a:	2300      	movs	r3, #0
 800414c:	61bb      	str	r3, [r7, #24]
 800414e:	2300      	movs	r3, #0
 8004150:	61fb      	str	r3, [r7, #28]
 8004152:	e165      	b.n	8004420 <HAL_GPIO_Init+0x2e8>
 8004154:	2201      	movs	r2, #1
 8004156:	69fb      	ldr	r3, [r7, #28]
 8004158:	fa02 f303 	lsl.w	r3, r2, r3
 800415c:	617b      	str	r3, [r7, #20]
 800415e:	683b      	ldr	r3, [r7, #0]
 8004160:	681b      	ldr	r3, [r3, #0]
 8004162:	697a      	ldr	r2, [r7, #20]
 8004164:	4013      	ands	r3, r2
 8004166:	613b      	str	r3, [r7, #16]
 8004168:	693a      	ldr	r2, [r7, #16]
 800416a:	697b      	ldr	r3, [r7, #20]
 800416c:	429a      	cmp	r2, r3
 800416e:	f040 8154 	bne.w	800441a <HAL_GPIO_Init+0x2e2>
 8004172:	683b      	ldr	r3, [r7, #0]
 8004174:	685b      	ldr	r3, [r3, #4]
 8004176:	f003 0303 	and.w	r3, r3, #3
 800417a:	2b01      	cmp	r3, #1
 800417c:	d005      	beq.n	800418a <HAL_GPIO_Init+0x52>
 800417e:	683b      	ldr	r3, [r7, #0]
 8004180:	685b      	ldr	r3, [r3, #4]
 8004182:	f003 0303 	and.w	r3, r3, #3
 8004186:	2b02      	cmp	r3, #2
 8004188:	d130      	bne.n	80041ec <HAL_GPIO_Init+0xb4>
 800418a:	687b      	ldr	r3, [r7, #4]
 800418c:	689b      	ldr	r3, [r3, #8]
 800418e:	61bb      	str	r3, [r7, #24]
 8004190:	69fb      	ldr	r3, [r7, #28]
 8004192:	005b      	lsls	r3, r3, #1
 8004194:	2203      	movs	r2, #3
 8004196:	fa02 f303 	lsl.w	r3, r2, r3
 800419a:	43db      	mvns	r3, r3
 800419c:	69ba      	ldr	r2, [r7, #24]
 800419e:	4013      	ands	r3, r2
 80041a0:	61bb      	str	r3, [r7, #24]
 80041a2:	683b      	ldr	r3, [r7, #0]
 80041a4:	68da      	ldr	r2, [r3, #12]
 80041a6:	69fb      	ldr	r3, [r7, #28]
 80041a8:	005b      	lsls	r3, r3, #1
 80041aa:	fa02 f303 	lsl.w	r3, r2, r3
 80041ae:	69ba      	ldr	r2, [r7, #24]
 80041b0:	4313      	orrs	r3, r2
 80041b2:	61bb      	str	r3, [r7, #24]
 80041b4:	687b      	ldr	r3, [r7, #4]
 80041b6:	69ba      	ldr	r2, [r7, #24]
 80041b8:	609a      	str	r2, [r3, #8]
 80041ba:	687b      	ldr	r3, [r7, #4]
 80041bc:	685b      	ldr	r3, [r3, #4]
 80041be:	61bb      	str	r3, [r7, #24]
 80041c0:	2201      	movs	r2, #1
 80041c2:	69fb      	ldr	r3, [r7, #28]
 80041c4:	fa02 f303 	lsl.w	r3, r2, r3
 80041c8:	43db      	mvns	r3, r3
 80041ca:	69ba      	ldr	r2, [r7, #24]
 80041cc:	4013      	ands	r3, r2
 80041ce:	61bb      	str	r3, [r7, #24]
 80041d0:	683b      	ldr	r3, [r7, #0]
 80041d2:	685b      	ldr	r3, [r3, #4]
 80041d4:	091b      	lsrs	r3, r3, #4
 80041d6:	f003 0201 	and.w	r2, r3, #1
 80041da:	69fb      	ldr	r3, [r7, #28]
 80041dc:	fa02 f303 	lsl.w	r3, r2, r3
 80041e0:	69ba      	ldr	r2, [r7, #24]
 80041e2:	4313      	orrs	r3, r2
 80041e4:	61bb      	str	r3, [r7, #24]
 80041e6:	687b      	ldr	r3, [r7, #4]
 80041e8:	69ba      	ldr	r2, [r7, #24]
 80041ea:	605a      	str	r2, [r3, #4]
 80041ec:	683b      	ldr	r3, [r7, #0]
 80041ee:	685b      	ldr	r3, [r3, #4]
 80041f0:	f003 0303 	and.w	r3, r3, #3
 80041f4:	2b03      	cmp	r3, #3
 80041f6:	d017      	beq.n	8004228 <HAL_GPIO_Init+0xf0>
 80041f8:	687b      	ldr	r3, [r7, #4]
 80041fa:	68db      	ldr	r3, [r3, #12]
 80041fc:	61bb      	str	r3, [r7, #24]
 80041fe:	69fb      	ldr	r3, [r7, #28]
 8004200:	005b      	lsls	r3, r3, #1
 8004202:	2203      	movs	r2, #3
 8004204:	fa02 f303 	lsl.w	r3, r2, r3
 8004208:	43db      	mvns	r3, r3
 800420a:	69ba      	ldr	r2, [r7, #24]
 800420c:	4013      	ands	r3, r2
 800420e:	61bb      	str	r3, [r7, #24]
 8004210:	683b      	ldr	r3, [r7, #0]
 8004212:	689a      	ldr	r2, [r3, #8]
 8004214:	69fb      	ldr	r3, [r7, #28]
 8004216:	005b      	lsls	r3, r3, #1
 8004218:	fa02 f303 	lsl.w	r3, r2, r3
 800421c:	69ba      	ldr	r2, [r7, #24]
 800421e:	4313      	orrs	r3, r2
 8004220:	61bb      	str	r3, [r7, #24]
 8004222:	687b      	ldr	r3, [r7, #4]
 8004224:	69ba      	ldr	r2, [r7, #24]
 8004226:	60da      	str	r2, [r3, #12]
 8004228:	683b      	ldr	r3, [r7, #0]
 800422a:	685b      	ldr	r3, [r3, #4]
 800422c:	f003 0303 	and.w	r3, r3, #3
 8004230:	2b02      	cmp	r3, #2
 8004232:	d123      	bne.n	800427c <HAL_GPIO_Init+0x144>
 8004234:	69fb      	ldr	r3, [r7, #28]
 8004236:	08da      	lsrs	r2, r3, #3
 8004238:	687b      	ldr	r3, [r7, #4]
 800423a:	3208      	adds	r2, #8
 800423c:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8004240:	61bb      	str	r3, [r7, #24]
 8004242:	69fb      	ldr	r3, [r7, #28]
 8004244:	f003 0307 	and.w	r3, r3, #7
 8004248:	009b      	lsls	r3, r3, #2
 800424a:	220f      	movs	r2, #15
 800424c:	fa02 f303 	lsl.w	r3, r2, r3
 8004250:	43db      	mvns	r3, r3
 8004252:	69ba      	ldr	r2, [r7, #24]
 8004254:	4013      	ands	r3, r2
 8004256:	61bb      	str	r3, [r7, #24]
 8004258:	683b      	ldr	r3, [r7, #0]
 800425a:	691a      	ldr	r2, [r3, #16]
 800425c:	69fb      	ldr	r3, [r7, #28]
 800425e:	f003 0307 	and.w	r3, r3, #7
 8004262:	009b      	lsls	r3, r3, #2
 8004264:	fa02 f303 	lsl.w	r3, r2, r3
 8004268:	69ba      	ldr	r2, [r7, #24]
 800426a:	4313      	orrs	r3, r2
 800426c:	61bb      	str	r3, [r7, #24]
 800426e:	69fb      	ldr	r3, [r7, #28]
 8004270:	08da      	lsrs	r2, r3, #3
 8004272:	687b      	ldr	r3, [r7, #4]
 8004274:	3208      	adds	r2, #8
 8004276:	69b9      	ldr	r1, [r7, #24]
 8004278:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 800427c:	687b      	ldr	r3, [r7, #4]
 800427e:	681b      	ldr	r3, [r3, #0]
 8004280:	61bb      	str	r3, [r7, #24]
 8004282:	69fb      	ldr	r3, [r7, #28]
 8004284:	005b      	lsls	r3, r3, #1
 8004286:	2203      	movs	r2, #3
 8004288:	fa02 f303 	lsl.w	r3, r2, r3
 800428c:	43db      	mvns	r3, r3
 800428e:	69ba      	ldr	r2, [r7, #24]
 8004290:	4013      	ands	r3, r2
 8004292:	61bb      	str	r3, [r7, #24]
 8004294:	683b      	ldr	r3, [r7, #0]
 8004296:	685b      	ldr	r3, [r3, #4]
 8004298:	f003 0203 	and.w	r2, r3, #3
 800429c:	69fb      	ldr	r3, [r7, #28]
 800429e:	005b      	lsls	r3, r3, #1
 80042a0:	fa02 f303 	lsl.w	r3, r2, r3
 80042a4:	69ba      	ldr	r2, [r7, #24]
 80042a6:	4313      	orrs	r3, r2
 80042a8:	61bb      	str	r3, [r7, #24]
 80042aa:	687b      	ldr	r3, [r7, #4]
 80042ac:	69ba      	ldr	r2, [r7, #24]
 80042ae:	601a      	str	r2, [r3, #0]
 80042b0:	683b      	ldr	r3, [r7, #0]
 80042b2:	685b      	ldr	r3, [r3, #4]
 80042b4:	f403 3340 	and.w	r3, r3, #196608	@ 0x30000
 80042b8:	2b00      	cmp	r3, #0
 80042ba:	f000 80ae 	beq.w	800441a <HAL_GPIO_Init+0x2e2>
 80042be:	2300      	movs	r3, #0
 80042c0:	60fb      	str	r3, [r7, #12]
 80042c2:	4b5d      	ldr	r3, [pc, #372]	@ (8004438 <HAL_GPIO_Init+0x300>)
 80042c4:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80042c6:	4a5c      	ldr	r2, [pc, #368]	@ (8004438 <HAL_GPIO_Init+0x300>)
 80042c8:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 80042cc:	6453      	str	r3, [r2, #68]	@ 0x44
 80042ce:	4b5a      	ldr	r3, [pc, #360]	@ (8004438 <HAL_GPIO_Init+0x300>)
 80042d0:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80042d2:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 80042d6:	60fb      	str	r3, [r7, #12]
 80042d8:	68fb      	ldr	r3, [r7, #12]
 80042da:	4a58      	ldr	r2, [pc, #352]	@ (800443c <HAL_GPIO_Init+0x304>)
 80042dc:	69fb      	ldr	r3, [r7, #28]
 80042de:	089b      	lsrs	r3, r3, #2
 80042e0:	3302      	adds	r3, #2
 80042e2:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 80042e6:	61bb      	str	r3, [r7, #24]
 80042e8:	69fb      	ldr	r3, [r7, #28]
 80042ea:	f003 0303 	and.w	r3, r3, #3
 80042ee:	009b      	lsls	r3, r3, #2
 80042f0:	220f      	movs	r2, #15
 80042f2:	fa02 f303 	lsl.w	r3, r2, r3
 80042f6:	43db      	mvns	r3, r3
 80042f8:	69ba      	ldr	r2, [r7, #24]
 80042fa:	4013      	ands	r3, r2
 80042fc:	61bb      	str	r3, [r7, #24]
 80042fe:	687b      	ldr	r3, [r7, #4]
 8004300:	4a4f      	ldr	r2, [pc, #316]	@ (8004440 <HAL_GPIO_Init+0x308>)
 8004302:	4293      	cmp	r3, r2
 8004304:	d025      	beq.n	8004352 <HAL_GPIO_Init+0x21a>
 8004306:	687b      	ldr	r3, [r7, #4]
 8004308:	4a4e      	ldr	r2, [pc, #312]	@ (8004444 <HAL_GPIO_Init+0x30c>)
 800430a:	4293      	cmp	r3, r2
 800430c:	d01f      	beq.n	800434e <HAL_GPIO_Init+0x216>
 800430e:	687b      	ldr	r3, [r7, #4]
 8004310:	4a4d      	ldr	r2, [pc, #308]	@ (8004448 <HAL_GPIO_Init+0x310>)
 8004312:	4293      	cmp	r3, r2
 8004314:	d019      	beq.n	800434a <HAL_GPIO_Init+0x212>
 8004316:	687b      	ldr	r3, [r7, #4]
 8004318:	4a4c      	ldr	r2, [pc, #304]	@ (800444c <HAL_GPIO_Init+0x314>)
 800431a:	4293      	cmp	r3, r2
 800431c:	d013      	beq.n	8004346 <HAL_GPIO_Init+0x20e>
 800431e:	687b      	ldr	r3, [r7, #4]
 8004320:	4a4b      	ldr	r2, [pc, #300]	@ (8004450 <HAL_GPIO_Init+0x318>)
 8004322:	4293      	cmp	r3, r2
 8004324:	d00d      	beq.n	8004342 <HAL_GPIO_Init+0x20a>
 8004326:	687b      	ldr	r3, [r7, #4]
 8004328:	4a4a      	ldr	r2, [pc, #296]	@ (8004454 <HAL_GPIO_Init+0x31c>)
 800432a:	4293      	cmp	r3, r2
 800432c:	d007      	beq.n	800433e <HAL_GPIO_Init+0x206>
 800432e:	687b      	ldr	r3, [r7, #4]
 8004330:	4a49      	ldr	r2, [pc, #292]	@ (8004458 <HAL_GPIO_Init+0x320>)
 8004332:	4293      	cmp	r3, r2
 8004334:	d101      	bne.n	800433a <HAL_GPIO_Init+0x202>
 8004336:	2306      	movs	r3, #6
 8004338:	e00c      	b.n	8004354 <HAL_GPIO_Init+0x21c>
 800433a:	2307      	movs	r3, #7
 800433c:	e00a      	b.n	8004354 <HAL_GPIO_Init+0x21c>
 800433e:	2305      	movs	r3, #5
 8004340:	e008      	b.n	8004354 <HAL_GPIO_Init+0x21c>
 8004342:	2304      	movs	r3, #4
 8004344:	e006      	b.n	8004354 <HAL_GPIO_Init+0x21c>
 8004346:	2303      	movs	r3, #3
 8004348:	e004      	b.n	8004354 <HAL_GPIO_Init+0x21c>
 800434a:	2302      	movs	r3, #2
 800434c:	e002      	b.n	8004354 <HAL_GPIO_Init+0x21c>
 800434e:	2301      	movs	r3, #1
 8004350:	e000      	b.n	8004354 <HAL_GPIO_Init+0x21c>
 8004352:	2300      	movs	r3, #0
 8004354:	69fa      	ldr	r2, [r7, #28]
 8004356:	f002 0203 	and.w	r2, r2, #3
 800435a:	0092      	lsls	r2, r2, #2
 800435c:	4093      	lsls	r3, r2
 800435e:	69ba      	ldr	r2, [r7, #24]
 8004360:	4313      	orrs	r3, r2
 8004362:	61bb      	str	r3, [r7, #24]
 8004364:	4935      	ldr	r1, [pc, #212]	@ (800443c <HAL_GPIO_Init+0x304>)
 8004366:	69fb      	ldr	r3, [r7, #28]
 8004368:	089b      	lsrs	r3, r3, #2
 800436a:	3302      	adds	r3, #2
 800436c:	69ba      	ldr	r2, [r7, #24]
 800436e:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8004372:	4b3a      	ldr	r3, [pc, #232]	@ (800445c <HAL_GPIO_Init+0x324>)
 8004374:	689b      	ldr	r3, [r3, #8]
 8004376:	61bb      	str	r3, [r7, #24]
 8004378:	693b      	ldr	r3, [r7, #16]
 800437a:	43db      	mvns	r3, r3
 800437c:	69ba      	ldr	r2, [r7, #24]
 800437e:	4013      	ands	r3, r2
 8004380:	61bb      	str	r3, [r7, #24]
 8004382:	683b      	ldr	r3, [r7, #0]
 8004384:	685b      	ldr	r3, [r3, #4]
 8004386:	f403 1380 	and.w	r3, r3, #1048576	@ 0x100000
 800438a:	2b00      	cmp	r3, #0
 800438c:	d003      	beq.n	8004396 <HAL_GPIO_Init+0x25e>
 800438e:	69ba      	ldr	r2, [r7, #24]
 8004390:	693b      	ldr	r3, [r7, #16]
 8004392:	4313      	orrs	r3, r2
 8004394:	61bb      	str	r3, [r7, #24]
 8004396:	4a31      	ldr	r2, [pc, #196]	@ (800445c <HAL_GPIO_Init+0x324>)
 8004398:	69bb      	ldr	r3, [r7, #24]
 800439a:	6093      	str	r3, [r2, #8]
 800439c:	4b2f      	ldr	r3, [pc, #188]	@ (800445c <HAL_GPIO_Init+0x324>)
 800439e:	68db      	ldr	r3, [r3, #12]
 80043a0:	61bb      	str	r3, [r7, #24]
 80043a2:	693b      	ldr	r3, [r7, #16]
 80043a4:	43db      	mvns	r3, r3
 80043a6:	69ba      	ldr	r2, [r7, #24]
 80043a8:	4013      	ands	r3, r2
 80043aa:	61bb      	str	r3, [r7, #24]
 80043ac:	683b      	ldr	r3, [r7, #0]
 80043ae:	685b      	ldr	r3, [r3, #4]
 80043b0:	f403 1300 	and.w	r3, r3, #2097152	@ 0x200000
 80043b4:	2b00      	cmp	r3, #0
 80043b6:	d003      	beq.n	80043c0 <HAL_GPIO_Init+0x288>
 80043b8:	69ba      	ldr	r2, [r7, #24]
 80043ba:	693b      	ldr	r3, [r7, #16]
 80043bc:	4313      	orrs	r3, r2
 80043be:	61bb      	str	r3, [r7, #24]
 80043c0:	4a26      	ldr	r2, [pc, #152]	@ (800445c <HAL_GPIO_Init+0x324>)
 80043c2:	69bb      	ldr	r3, [r7, #24]
 80043c4:	60d3      	str	r3, [r2, #12]
 80043c6:	4b25      	ldr	r3, [pc, #148]	@ (800445c <HAL_GPIO_Init+0x324>)
 80043c8:	685b      	ldr	r3, [r3, #4]
 80043ca:	61bb      	str	r3, [r7, #24]
 80043cc:	693b      	ldr	r3, [r7, #16]
 80043ce:	43db      	mvns	r3, r3
 80043d0:	69ba      	ldr	r2, [r7, #24]
 80043d2:	4013      	ands	r3, r2
 80043d4:	61bb      	str	r3, [r7, #24]
 80043d6:	683b      	ldr	r3, [r7, #0]
 80043d8:	685b      	ldr	r3, [r3, #4]
 80043da:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 80043de:	2b00      	cmp	r3, #0
 80043e0:	d003      	beq.n	80043ea <HAL_GPIO_Init+0x2b2>
 80043e2:	69ba      	ldr	r2, [r7, #24]
 80043e4:	693b      	ldr	r3, [r7, #16]
 80043e6:	4313      	orrs	r3, r2
 80043e8:	61bb      	str	r3, [r7, #24]
 80043ea:	4a1c      	ldr	r2, [pc, #112]	@ (800445c <HAL_GPIO_Init+0x324>)
 80043ec:	69bb      	ldr	r3, [r7, #24]
 80043ee:	6053      	str	r3, [r2, #4]
 80043f0:	4b1a      	ldr	r3, [pc, #104]	@ (800445c <HAL_GPIO_Init+0x324>)
 80043f2:	681b      	ldr	r3, [r3, #0]
 80043f4:	61bb      	str	r3, [r7, #24]
 80043f6:	693b      	ldr	r3, [r7, #16]
 80043f8:	43db      	mvns	r3, r3
 80043fa:	69ba      	ldr	r2, [r7, #24]
 80043fc:	4013      	ands	r3, r2
 80043fe:	61bb      	str	r3, [r7, #24]
 8004400:	683b      	ldr	r3, [r7, #0]
 8004402:	685b      	ldr	r3, [r3, #4]
 8004404:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 8004408:	2b00      	cmp	r3, #0
 800440a:	d003      	beq.n	8004414 <HAL_GPIO_Init+0x2dc>
 800440c:	69ba      	ldr	r2, [r7, #24]
 800440e:	693b      	ldr	r3, [r7, #16]
 8004410:	4313      	orrs	r3, r2
 8004412:	61bb      	str	r3, [r7, #24]
 8004414:	4a11      	ldr	r2, [pc, #68]	@ (800445c <HAL_GPIO_Init+0x324>)
 8004416:	69bb      	ldr	r3, [r7, #24]
 8004418:	6013      	str	r3, [r2, #0]
 800441a:	69fb      	ldr	r3, [r7, #28]
 800441c:	3301      	adds	r3, #1
 800441e:	61fb      	str	r3, [r7, #28]
 8004420:	69fb      	ldr	r3, [r7, #28]
 8004422:	2b0f      	cmp	r3, #15
 8004424:	f67f ae96 	bls.w	8004154 <HAL_GPIO_Init+0x1c>
 8004428:	bf00      	nop
 800442a:	bf00      	nop
 800442c:	3724      	adds	r7, #36	@ 0x24
 800442e:	46bd      	mov	sp, r7
 8004430:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004434:	4770      	bx	lr
 8004436:	bf00      	nop
 8004438:	40023800 	.word	0x40023800
 800443c:	40013800 	.word	0x40013800
 8004440:	40020000 	.word	0x40020000
 8004444:	40020400 	.word	0x40020400
 8004448:	40020800 	.word	0x40020800
 800444c:	40020c00 	.word	0x40020c00
 8004450:	40021000 	.word	0x40021000
 8004454:	40021400 	.word	0x40021400
 8004458:	40021800 	.word	0x40021800
 800445c:	40013c00 	.word	0x40013c00

08004460 <HAL_GPIO_WritePin>:
 8004460:	b480      	push	{r7}
 8004462:	b083      	sub	sp, #12
 8004464:	af00      	add	r7, sp, #0
 8004466:	6078      	str	r0, [r7, #4]
 8004468:	460b      	mov	r3, r1
 800446a:	807b      	strh	r3, [r7, #2]
 800446c:	4613      	mov	r3, r2
 800446e:	707b      	strb	r3, [r7, #1]
 8004470:	787b      	ldrb	r3, [r7, #1]
 8004472:	2b00      	cmp	r3, #0
 8004474:	d003      	beq.n	800447e <HAL_GPIO_WritePin+0x1e>
 8004476:	887a      	ldrh	r2, [r7, #2]
 8004478:	687b      	ldr	r3, [r7, #4]
 800447a:	619a      	str	r2, [r3, #24]
 800447c:	e003      	b.n	8004486 <HAL_GPIO_WritePin+0x26>
 800447e:	887b      	ldrh	r3, [r7, #2]
 8004480:	041a      	lsls	r2, r3, #16
 8004482:	687b      	ldr	r3, [r7, #4]
 8004484:	619a      	str	r2, [r3, #24]
 8004486:	bf00      	nop
 8004488:	370c      	adds	r7, #12
 800448a:	46bd      	mov	sp, r7
 800448c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004490:	4770      	bx	lr
	...

08004494 <HAL_I2C_Init>:
 8004494:	b580      	push	{r7, lr}
 8004496:	b084      	sub	sp, #16
 8004498:	af00      	add	r7, sp, #0
 800449a:	6078      	str	r0, [r7, #4]
 800449c:	687b      	ldr	r3, [r7, #4]
 800449e:	2b00      	cmp	r3, #0
 80044a0:	d101      	bne.n	80044a6 <HAL_I2C_Init+0x12>
 80044a2:	2301      	movs	r3, #1
 80044a4:	e12b      	b.n	80046fe <HAL_I2C_Init+0x26a>
 80044a6:	687b      	ldr	r3, [r7, #4]
 80044a8:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 80044ac:	b2db      	uxtb	r3, r3
 80044ae:	2b00      	cmp	r3, #0
 80044b0:	d106      	bne.n	80044c0 <HAL_I2C_Init+0x2c>
 80044b2:	687b      	ldr	r3, [r7, #4]
 80044b4:	2200      	movs	r2, #0
 80044b6:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 80044ba:	6878      	ldr	r0, [r7, #4]
 80044bc:	f7fe fbf2 	bl	8002ca4 <HAL_I2C_MspInit>
 80044c0:	687b      	ldr	r3, [r7, #4]
 80044c2:	2224      	movs	r2, #36	@ 0x24
 80044c4:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 80044c8:	687b      	ldr	r3, [r7, #4]
 80044ca:	681b      	ldr	r3, [r3, #0]
 80044cc:	681a      	ldr	r2, [r3, #0]
 80044ce:	687b      	ldr	r3, [r7, #4]
 80044d0:	681b      	ldr	r3, [r3, #0]
 80044d2:	f022 0201 	bic.w	r2, r2, #1
 80044d6:	601a      	str	r2, [r3, #0]
 80044d8:	687b      	ldr	r3, [r7, #4]
 80044da:	681b      	ldr	r3, [r3, #0]
 80044dc:	681a      	ldr	r2, [r3, #0]
 80044de:	687b      	ldr	r3, [r7, #4]
 80044e0:	681b      	ldr	r3, [r3, #0]
 80044e2:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
 80044e6:	601a      	str	r2, [r3, #0]
 80044e8:	687b      	ldr	r3, [r7, #4]
 80044ea:	681b      	ldr	r3, [r3, #0]
 80044ec:	681a      	ldr	r2, [r3, #0]
 80044ee:	687b      	ldr	r3, [r7, #4]
 80044f0:	681b      	ldr	r3, [r3, #0]
 80044f2:	f422 4200 	bic.w	r2, r2, #32768	@ 0x8000
 80044f6:	601a      	str	r2, [r3, #0]
 80044f8:	f001 f922 	bl	8005740 <HAL_RCC_GetPCLK1Freq>
 80044fc:	60f8      	str	r0, [r7, #12]
 80044fe:	687b      	ldr	r3, [r7, #4]
 8004500:	685b      	ldr	r3, [r3, #4]
 8004502:	4a81      	ldr	r2, [pc, #516]	@ (8004708 <HAL_I2C_Init+0x274>)
 8004504:	4293      	cmp	r3, r2
 8004506:	d807      	bhi.n	8004518 <HAL_I2C_Init+0x84>
 8004508:	68fb      	ldr	r3, [r7, #12]
 800450a:	4a80      	ldr	r2, [pc, #512]	@ (800470c <HAL_I2C_Init+0x278>)
 800450c:	4293      	cmp	r3, r2
 800450e:	bf94      	ite	ls
 8004510:	2301      	movls	r3, #1
 8004512:	2300      	movhi	r3, #0
 8004514:	b2db      	uxtb	r3, r3
 8004516:	e006      	b.n	8004526 <HAL_I2C_Init+0x92>
 8004518:	68fb      	ldr	r3, [r7, #12]
 800451a:	4a7d      	ldr	r2, [pc, #500]	@ (8004710 <HAL_I2C_Init+0x27c>)
 800451c:	4293      	cmp	r3, r2
 800451e:	bf94      	ite	ls
 8004520:	2301      	movls	r3, #1
 8004522:	2300      	movhi	r3, #0
 8004524:	b2db      	uxtb	r3, r3
 8004526:	2b00      	cmp	r3, #0
 8004528:	d001      	beq.n	800452e <HAL_I2C_Init+0x9a>
 800452a:	2301      	movs	r3, #1
 800452c:	e0e7      	b.n	80046fe <HAL_I2C_Init+0x26a>
 800452e:	68fb      	ldr	r3, [r7, #12]
 8004530:	4a78      	ldr	r2, [pc, #480]	@ (8004714 <HAL_I2C_Init+0x280>)
 8004532:	fba2 2303 	umull	r2, r3, r2, r3
 8004536:	0c9b      	lsrs	r3, r3, #18
 8004538:	60bb      	str	r3, [r7, #8]
 800453a:	687b      	ldr	r3, [r7, #4]
 800453c:	681b      	ldr	r3, [r3, #0]
 800453e:	685b      	ldr	r3, [r3, #4]
 8004540:	f023 013f 	bic.w	r1, r3, #63	@ 0x3f
 8004544:	687b      	ldr	r3, [r7, #4]
 8004546:	681b      	ldr	r3, [r3, #0]
 8004548:	68ba      	ldr	r2, [r7, #8]
 800454a:	430a      	orrs	r2, r1
 800454c:	605a      	str	r2, [r3, #4]
 800454e:	687b      	ldr	r3, [r7, #4]
 8004550:	681b      	ldr	r3, [r3, #0]
 8004552:	6a1b      	ldr	r3, [r3, #32]
 8004554:	f023 013f 	bic.w	r1, r3, #63	@ 0x3f
 8004558:	687b      	ldr	r3, [r7, #4]
 800455a:	685b      	ldr	r3, [r3, #4]
 800455c:	4a6a      	ldr	r2, [pc, #424]	@ (8004708 <HAL_I2C_Init+0x274>)
 800455e:	4293      	cmp	r3, r2
 8004560:	d802      	bhi.n	8004568 <HAL_I2C_Init+0xd4>
 8004562:	68bb      	ldr	r3, [r7, #8]
 8004564:	3301      	adds	r3, #1
 8004566:	e009      	b.n	800457c <HAL_I2C_Init+0xe8>
 8004568:	68bb      	ldr	r3, [r7, #8]
 800456a:	f44f 7296 	mov.w	r2, #300	@ 0x12c
 800456e:	fb02 f303 	mul.w	r3, r2, r3
 8004572:	4a69      	ldr	r2, [pc, #420]	@ (8004718 <HAL_I2C_Init+0x284>)
 8004574:	fba2 2303 	umull	r2, r3, r2, r3
 8004578:	099b      	lsrs	r3, r3, #6
 800457a:	3301      	adds	r3, #1
 800457c:	687a      	ldr	r2, [r7, #4]
 800457e:	6812      	ldr	r2, [r2, #0]
 8004580:	430b      	orrs	r3, r1
 8004582:	6213      	str	r3, [r2, #32]
 8004584:	687b      	ldr	r3, [r7, #4]
 8004586:	681b      	ldr	r3, [r3, #0]
 8004588:	69db      	ldr	r3, [r3, #28]
 800458a:	f423 424f 	bic.w	r2, r3, #52992	@ 0xcf00
 800458e:	f022 02ff 	bic.w	r2, r2, #255	@ 0xff
 8004592:	687b      	ldr	r3, [r7, #4]
 8004594:	685b      	ldr	r3, [r3, #4]
 8004596:	495c      	ldr	r1, [pc, #368]	@ (8004708 <HAL_I2C_Init+0x274>)
 8004598:	428b      	cmp	r3, r1
 800459a:	d819      	bhi.n	80045d0 <HAL_I2C_Init+0x13c>
 800459c:	68fb      	ldr	r3, [r7, #12]
 800459e:	1e59      	subs	r1, r3, #1
 80045a0:	687b      	ldr	r3, [r7, #4]
 80045a2:	685b      	ldr	r3, [r3, #4]
 80045a4:	005b      	lsls	r3, r3, #1
 80045a6:	fbb1 f3f3 	udiv	r3, r1, r3
 80045aa:	1c59      	adds	r1, r3, #1
 80045ac:	f640 73fc 	movw	r3, #4092	@ 0xffc
 80045b0:	400b      	ands	r3, r1
 80045b2:	2b00      	cmp	r3, #0
 80045b4:	d00a      	beq.n	80045cc <HAL_I2C_Init+0x138>
 80045b6:	68fb      	ldr	r3, [r7, #12]
 80045b8:	1e59      	subs	r1, r3, #1
 80045ba:	687b      	ldr	r3, [r7, #4]
 80045bc:	685b      	ldr	r3, [r3, #4]
 80045be:	005b      	lsls	r3, r3, #1
 80045c0:	fbb1 f3f3 	udiv	r3, r1, r3
 80045c4:	3301      	adds	r3, #1
 80045c6:	f3c3 030b 	ubfx	r3, r3, #0, #12
 80045ca:	e051      	b.n	8004670 <HAL_I2C_Init+0x1dc>
 80045cc:	2304      	movs	r3, #4
 80045ce:	e04f      	b.n	8004670 <HAL_I2C_Init+0x1dc>
 80045d0:	687b      	ldr	r3, [r7, #4]
 80045d2:	689b      	ldr	r3, [r3, #8]
 80045d4:	2b00      	cmp	r3, #0
 80045d6:	d111      	bne.n	80045fc <HAL_I2C_Init+0x168>
 80045d8:	68fb      	ldr	r3, [r7, #12]
 80045da:	1e58      	subs	r0, r3, #1
 80045dc:	687b      	ldr	r3, [r7, #4]
 80045de:	6859      	ldr	r1, [r3, #4]
 80045e0:	460b      	mov	r3, r1
 80045e2:	005b      	lsls	r3, r3, #1
 80045e4:	440b      	add	r3, r1
 80045e6:	fbb0 f3f3 	udiv	r3, r0, r3
 80045ea:	3301      	adds	r3, #1
 80045ec:	f3c3 030b 	ubfx	r3, r3, #0, #12
 80045f0:	2b00      	cmp	r3, #0
 80045f2:	bf0c      	ite	eq
 80045f4:	2301      	moveq	r3, #1
 80045f6:	2300      	movne	r3, #0
 80045f8:	b2db      	uxtb	r3, r3
 80045fa:	e012      	b.n	8004622 <HAL_I2C_Init+0x18e>
 80045fc:	68fb      	ldr	r3, [r7, #12]
 80045fe:	1e58      	subs	r0, r3, #1
 8004600:	687b      	ldr	r3, [r7, #4]
 8004602:	6859      	ldr	r1, [r3, #4]
 8004604:	460b      	mov	r3, r1
 8004606:	009b      	lsls	r3, r3, #2
 8004608:	440b      	add	r3, r1
 800460a:	0099      	lsls	r1, r3, #2
 800460c:	440b      	add	r3, r1
 800460e:	fbb0 f3f3 	udiv	r3, r0, r3
 8004612:	3301      	adds	r3, #1
 8004614:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8004618:	2b00      	cmp	r3, #0
 800461a:	bf0c      	ite	eq
 800461c:	2301      	moveq	r3, #1
 800461e:	2300      	movne	r3, #0
 8004620:	b2db      	uxtb	r3, r3
 8004622:	2b00      	cmp	r3, #0
 8004624:	d001      	beq.n	800462a <HAL_I2C_Init+0x196>
 8004626:	2301      	movs	r3, #1
 8004628:	e022      	b.n	8004670 <HAL_I2C_Init+0x1dc>
 800462a:	687b      	ldr	r3, [r7, #4]
 800462c:	689b      	ldr	r3, [r3, #8]
 800462e:	2b00      	cmp	r3, #0
 8004630:	d10e      	bne.n	8004650 <HAL_I2C_Init+0x1bc>
 8004632:	68fb      	ldr	r3, [r7, #12]
 8004634:	1e58      	subs	r0, r3, #1
 8004636:	687b      	ldr	r3, [r7, #4]
 8004638:	6859      	ldr	r1, [r3, #4]
 800463a:	460b      	mov	r3, r1
 800463c:	005b      	lsls	r3, r3, #1
 800463e:	440b      	add	r3, r1
 8004640:	fbb0 f3f3 	udiv	r3, r0, r3
 8004644:	3301      	adds	r3, #1
 8004646:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800464a:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 800464e:	e00f      	b.n	8004670 <HAL_I2C_Init+0x1dc>
 8004650:	68fb      	ldr	r3, [r7, #12]
 8004652:	1e58      	subs	r0, r3, #1
 8004654:	687b      	ldr	r3, [r7, #4]
 8004656:	6859      	ldr	r1, [r3, #4]
 8004658:	460b      	mov	r3, r1
 800465a:	009b      	lsls	r3, r3, #2
 800465c:	440b      	add	r3, r1
 800465e:	0099      	lsls	r1, r3, #2
 8004660:	440b      	add	r3, r1
 8004662:	fbb0 f3f3 	udiv	r3, r0, r3
 8004666:	3301      	adds	r3, #1
 8004668:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800466c:	f443 4340 	orr.w	r3, r3, #49152	@ 0xc000
 8004670:	6879      	ldr	r1, [r7, #4]
 8004672:	6809      	ldr	r1, [r1, #0]
 8004674:	4313      	orrs	r3, r2
 8004676:	61cb      	str	r3, [r1, #28]
 8004678:	687b      	ldr	r3, [r7, #4]
 800467a:	681b      	ldr	r3, [r3, #0]
 800467c:	681b      	ldr	r3, [r3, #0]
 800467e:	f023 01c0 	bic.w	r1, r3, #192	@ 0xc0
 8004682:	687b      	ldr	r3, [r7, #4]
 8004684:	69da      	ldr	r2, [r3, #28]
 8004686:	687b      	ldr	r3, [r7, #4]
 8004688:	6a1b      	ldr	r3, [r3, #32]
 800468a:	431a      	orrs	r2, r3
 800468c:	687b      	ldr	r3, [r7, #4]
 800468e:	681b      	ldr	r3, [r3, #0]
 8004690:	430a      	orrs	r2, r1
 8004692:	601a      	str	r2, [r3, #0]
 8004694:	687b      	ldr	r3, [r7, #4]
 8004696:	681b      	ldr	r3, [r3, #0]
 8004698:	689b      	ldr	r3, [r3, #8]
 800469a:	f423 4303 	bic.w	r3, r3, #33536	@ 0x8300
 800469e:	f023 03ff 	bic.w	r3, r3, #255	@ 0xff
 80046a2:	687a      	ldr	r2, [r7, #4]
 80046a4:	6911      	ldr	r1, [r2, #16]
 80046a6:	687a      	ldr	r2, [r7, #4]
 80046a8:	68d2      	ldr	r2, [r2, #12]
 80046aa:	4311      	orrs	r1, r2
 80046ac:	687a      	ldr	r2, [r7, #4]
 80046ae:	6812      	ldr	r2, [r2, #0]
 80046b0:	430b      	orrs	r3, r1
 80046b2:	6093      	str	r3, [r2, #8]
 80046b4:	687b      	ldr	r3, [r7, #4]
 80046b6:	681b      	ldr	r3, [r3, #0]
 80046b8:	68db      	ldr	r3, [r3, #12]
 80046ba:	f023 01ff 	bic.w	r1, r3, #255	@ 0xff
 80046be:	687b      	ldr	r3, [r7, #4]
 80046c0:	695a      	ldr	r2, [r3, #20]
 80046c2:	687b      	ldr	r3, [r7, #4]
 80046c4:	699b      	ldr	r3, [r3, #24]
 80046c6:	431a      	orrs	r2, r3
 80046c8:	687b      	ldr	r3, [r7, #4]
 80046ca:	681b      	ldr	r3, [r3, #0]
 80046cc:	430a      	orrs	r2, r1
 80046ce:	60da      	str	r2, [r3, #12]
 80046d0:	687b      	ldr	r3, [r7, #4]
 80046d2:	681b      	ldr	r3, [r3, #0]
 80046d4:	681a      	ldr	r2, [r3, #0]
 80046d6:	687b      	ldr	r3, [r7, #4]
 80046d8:	681b      	ldr	r3, [r3, #0]
 80046da:	f042 0201 	orr.w	r2, r2, #1
 80046de:	601a      	str	r2, [r3, #0]
 80046e0:	687b      	ldr	r3, [r7, #4]
 80046e2:	2200      	movs	r2, #0
 80046e4:	641a      	str	r2, [r3, #64]	@ 0x40
 80046e6:	687b      	ldr	r3, [r7, #4]
 80046e8:	2220      	movs	r2, #32
 80046ea:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 80046ee:	687b      	ldr	r3, [r7, #4]
 80046f0:	2200      	movs	r2, #0
 80046f2:	631a      	str	r2, [r3, #48]	@ 0x30
 80046f4:	687b      	ldr	r3, [r7, #4]
 80046f6:	2200      	movs	r2, #0
 80046f8:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 80046fc:	2300      	movs	r3, #0
 80046fe:	4618      	mov	r0, r3
 8004700:	3710      	adds	r7, #16
 8004702:	46bd      	mov	sp, r7
 8004704:	bd80      	pop	{r7, pc}
 8004706:	bf00      	nop
 8004708:	000186a0 	.word	0x000186a0
 800470c:	001e847f 	.word	0x001e847f
 8004710:	003d08ff 	.word	0x003d08ff
 8004714:	431bde83 	.word	0x431bde83
 8004718:	10624dd3 	.word	0x10624dd3

0800471c <HAL_I2C_Master_Transmit>:
 800471c:	b580      	push	{r7, lr}
 800471e:	b088      	sub	sp, #32
 8004720:	af02      	add	r7, sp, #8
 8004722:	60f8      	str	r0, [r7, #12]
 8004724:	607a      	str	r2, [r7, #4]
 8004726:	461a      	mov	r2, r3
 8004728:	460b      	mov	r3, r1
 800472a:	817b      	strh	r3, [r7, #10]
 800472c:	4613      	mov	r3, r2
 800472e:	813b      	strh	r3, [r7, #8]
 8004730:	f7fe ffbe 	bl	80036b0 <HAL_GetTick>
 8004734:	6178      	str	r0, [r7, #20]
 8004736:	68fb      	ldr	r3, [r7, #12]
 8004738:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 800473c:	b2db      	uxtb	r3, r3
 800473e:	2b20      	cmp	r3, #32
 8004740:	f040 80e0 	bne.w	8004904 <HAL_I2C_Master_Transmit+0x1e8>
 8004744:	697b      	ldr	r3, [r7, #20]
 8004746:	9300      	str	r3, [sp, #0]
 8004748:	2319      	movs	r3, #25
 800474a:	2201      	movs	r2, #1
 800474c:	4970      	ldr	r1, [pc, #448]	@ (8004910 <HAL_I2C_Master_Transmit+0x1f4>)
 800474e:	68f8      	ldr	r0, [r7, #12]
 8004750:	f000 fc7e 	bl	8005050 <I2C_WaitOnFlagUntilTimeout>
 8004754:	4603      	mov	r3, r0
 8004756:	2b00      	cmp	r3, #0
 8004758:	d001      	beq.n	800475e <HAL_I2C_Master_Transmit+0x42>
 800475a:	2302      	movs	r3, #2
 800475c:	e0d3      	b.n	8004906 <HAL_I2C_Master_Transmit+0x1ea>
 800475e:	68fb      	ldr	r3, [r7, #12]
 8004760:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 8004764:	2b01      	cmp	r3, #1
 8004766:	d101      	bne.n	800476c <HAL_I2C_Master_Transmit+0x50>
 8004768:	2302      	movs	r3, #2
 800476a:	e0cc      	b.n	8004906 <HAL_I2C_Master_Transmit+0x1ea>
 800476c:	68fb      	ldr	r3, [r7, #12]
 800476e:	2201      	movs	r2, #1
 8004770:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8004774:	68fb      	ldr	r3, [r7, #12]
 8004776:	681b      	ldr	r3, [r3, #0]
 8004778:	681b      	ldr	r3, [r3, #0]
 800477a:	f003 0301 	and.w	r3, r3, #1
 800477e:	2b01      	cmp	r3, #1
 8004780:	d007      	beq.n	8004792 <HAL_I2C_Master_Transmit+0x76>
 8004782:	68fb      	ldr	r3, [r7, #12]
 8004784:	681b      	ldr	r3, [r3, #0]
 8004786:	681a      	ldr	r2, [r3, #0]
 8004788:	68fb      	ldr	r3, [r7, #12]
 800478a:	681b      	ldr	r3, [r3, #0]
 800478c:	f042 0201 	orr.w	r2, r2, #1
 8004790:	601a      	str	r2, [r3, #0]
 8004792:	68fb      	ldr	r3, [r7, #12]
 8004794:	681b      	ldr	r3, [r3, #0]
 8004796:	681a      	ldr	r2, [r3, #0]
 8004798:	68fb      	ldr	r3, [r7, #12]
 800479a:	681b      	ldr	r3, [r3, #0]
 800479c:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 80047a0:	601a      	str	r2, [r3, #0]
 80047a2:	68fb      	ldr	r3, [r7, #12]
 80047a4:	2221      	movs	r2, #33	@ 0x21
 80047a6:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 80047aa:	68fb      	ldr	r3, [r7, #12]
 80047ac:	2210      	movs	r2, #16
 80047ae:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 80047b2:	68fb      	ldr	r3, [r7, #12]
 80047b4:	2200      	movs	r2, #0
 80047b6:	641a      	str	r2, [r3, #64]	@ 0x40
 80047b8:	68fb      	ldr	r3, [r7, #12]
 80047ba:	687a      	ldr	r2, [r7, #4]
 80047bc:	625a      	str	r2, [r3, #36]	@ 0x24
 80047be:	68fb      	ldr	r3, [r7, #12]
 80047c0:	893a      	ldrh	r2, [r7, #8]
 80047c2:	855a      	strh	r2, [r3, #42]	@ 0x2a
 80047c4:	68fb      	ldr	r3, [r7, #12]
 80047c6:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 80047c8:	b29a      	uxth	r2, r3
 80047ca:	68fb      	ldr	r3, [r7, #12]
 80047cc:	851a      	strh	r2, [r3, #40]	@ 0x28
 80047ce:	68fb      	ldr	r3, [r7, #12]
 80047d0:	4a50      	ldr	r2, [pc, #320]	@ (8004914 <HAL_I2C_Master_Transmit+0x1f8>)
 80047d2:	62da      	str	r2, [r3, #44]	@ 0x2c
 80047d4:	8979      	ldrh	r1, [r7, #10]
 80047d6:	697b      	ldr	r3, [r7, #20]
 80047d8:	6a3a      	ldr	r2, [r7, #32]
 80047da:	68f8      	ldr	r0, [r7, #12]
 80047dc:	f000 fae8 	bl	8004db0 <I2C_MasterRequestWrite>
 80047e0:	4603      	mov	r3, r0
 80047e2:	2b00      	cmp	r3, #0
 80047e4:	d001      	beq.n	80047ea <HAL_I2C_Master_Transmit+0xce>
 80047e6:	2301      	movs	r3, #1
 80047e8:	e08d      	b.n	8004906 <HAL_I2C_Master_Transmit+0x1ea>
 80047ea:	2300      	movs	r3, #0
 80047ec:	613b      	str	r3, [r7, #16]
 80047ee:	68fb      	ldr	r3, [r7, #12]
 80047f0:	681b      	ldr	r3, [r3, #0]
 80047f2:	695b      	ldr	r3, [r3, #20]
 80047f4:	613b      	str	r3, [r7, #16]
 80047f6:	68fb      	ldr	r3, [r7, #12]
 80047f8:	681b      	ldr	r3, [r3, #0]
 80047fa:	699b      	ldr	r3, [r3, #24]
 80047fc:	613b      	str	r3, [r7, #16]
 80047fe:	693b      	ldr	r3, [r7, #16]
 8004800:	e066      	b.n	80048d0 <HAL_I2C_Master_Transmit+0x1b4>
 8004802:	697a      	ldr	r2, [r7, #20]
 8004804:	6a39      	ldr	r1, [r7, #32]
 8004806:	68f8      	ldr	r0, [r7, #12]
 8004808:	f000 fd3c 	bl	8005284 <I2C_WaitOnTXEFlagUntilTimeout>
 800480c:	4603      	mov	r3, r0
 800480e:	2b00      	cmp	r3, #0
 8004810:	d00d      	beq.n	800482e <HAL_I2C_Master_Transmit+0x112>
 8004812:	68fb      	ldr	r3, [r7, #12]
 8004814:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8004816:	2b04      	cmp	r3, #4
 8004818:	d107      	bne.n	800482a <HAL_I2C_Master_Transmit+0x10e>
 800481a:	68fb      	ldr	r3, [r7, #12]
 800481c:	681b      	ldr	r3, [r3, #0]
 800481e:	681a      	ldr	r2, [r3, #0]
 8004820:	68fb      	ldr	r3, [r7, #12]
 8004822:	681b      	ldr	r3, [r3, #0]
 8004824:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 8004828:	601a      	str	r2, [r3, #0]
 800482a:	2301      	movs	r3, #1
 800482c:	e06b      	b.n	8004906 <HAL_I2C_Master_Transmit+0x1ea>
 800482e:	68fb      	ldr	r3, [r7, #12]
 8004830:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004832:	781a      	ldrb	r2, [r3, #0]
 8004834:	68fb      	ldr	r3, [r7, #12]
 8004836:	681b      	ldr	r3, [r3, #0]
 8004838:	611a      	str	r2, [r3, #16]
 800483a:	68fb      	ldr	r3, [r7, #12]
 800483c:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800483e:	1c5a      	adds	r2, r3, #1
 8004840:	68fb      	ldr	r3, [r7, #12]
 8004842:	625a      	str	r2, [r3, #36]	@ 0x24
 8004844:	68fb      	ldr	r3, [r7, #12]
 8004846:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8004848:	b29b      	uxth	r3, r3
 800484a:	3b01      	subs	r3, #1
 800484c:	b29a      	uxth	r2, r3
 800484e:	68fb      	ldr	r3, [r7, #12]
 8004850:	855a      	strh	r2, [r3, #42]	@ 0x2a
 8004852:	68fb      	ldr	r3, [r7, #12]
 8004854:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8004856:	3b01      	subs	r3, #1
 8004858:	b29a      	uxth	r2, r3
 800485a:	68fb      	ldr	r3, [r7, #12]
 800485c:	851a      	strh	r2, [r3, #40]	@ 0x28
 800485e:	68fb      	ldr	r3, [r7, #12]
 8004860:	681b      	ldr	r3, [r3, #0]
 8004862:	695b      	ldr	r3, [r3, #20]
 8004864:	f003 0304 	and.w	r3, r3, #4
 8004868:	2b04      	cmp	r3, #4
 800486a:	d11b      	bne.n	80048a4 <HAL_I2C_Master_Transmit+0x188>
 800486c:	68fb      	ldr	r3, [r7, #12]
 800486e:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8004870:	2b00      	cmp	r3, #0
 8004872:	d017      	beq.n	80048a4 <HAL_I2C_Master_Transmit+0x188>
 8004874:	68fb      	ldr	r3, [r7, #12]
 8004876:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004878:	781a      	ldrb	r2, [r3, #0]
 800487a:	68fb      	ldr	r3, [r7, #12]
 800487c:	681b      	ldr	r3, [r3, #0]
 800487e:	611a      	str	r2, [r3, #16]
 8004880:	68fb      	ldr	r3, [r7, #12]
 8004882:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004884:	1c5a      	adds	r2, r3, #1
 8004886:	68fb      	ldr	r3, [r7, #12]
 8004888:	625a      	str	r2, [r3, #36]	@ 0x24
 800488a:	68fb      	ldr	r3, [r7, #12]
 800488c:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 800488e:	b29b      	uxth	r3, r3
 8004890:	3b01      	subs	r3, #1
 8004892:	b29a      	uxth	r2, r3
 8004894:	68fb      	ldr	r3, [r7, #12]
 8004896:	855a      	strh	r2, [r3, #42]	@ 0x2a
 8004898:	68fb      	ldr	r3, [r7, #12]
 800489a:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 800489c:	3b01      	subs	r3, #1
 800489e:	b29a      	uxth	r2, r3
 80048a0:	68fb      	ldr	r3, [r7, #12]
 80048a2:	851a      	strh	r2, [r3, #40]	@ 0x28
 80048a4:	697a      	ldr	r2, [r7, #20]
 80048a6:	6a39      	ldr	r1, [r7, #32]
 80048a8:	68f8      	ldr	r0, [r7, #12]
 80048aa:	f000 fd33 	bl	8005314 <I2C_WaitOnBTFFlagUntilTimeout>
 80048ae:	4603      	mov	r3, r0
 80048b0:	2b00      	cmp	r3, #0
 80048b2:	d00d      	beq.n	80048d0 <HAL_I2C_Master_Transmit+0x1b4>
 80048b4:	68fb      	ldr	r3, [r7, #12]
 80048b6:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80048b8:	2b04      	cmp	r3, #4
 80048ba:	d107      	bne.n	80048cc <HAL_I2C_Master_Transmit+0x1b0>
 80048bc:	68fb      	ldr	r3, [r7, #12]
 80048be:	681b      	ldr	r3, [r3, #0]
 80048c0:	681a      	ldr	r2, [r3, #0]
 80048c2:	68fb      	ldr	r3, [r7, #12]
 80048c4:	681b      	ldr	r3, [r3, #0]
 80048c6:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 80048ca:	601a      	str	r2, [r3, #0]
 80048cc:	2301      	movs	r3, #1
 80048ce:	e01a      	b.n	8004906 <HAL_I2C_Master_Transmit+0x1ea>
 80048d0:	68fb      	ldr	r3, [r7, #12]
 80048d2:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 80048d4:	2b00      	cmp	r3, #0
 80048d6:	d194      	bne.n	8004802 <HAL_I2C_Master_Transmit+0xe6>
 80048d8:	68fb      	ldr	r3, [r7, #12]
 80048da:	681b      	ldr	r3, [r3, #0]
 80048dc:	681a      	ldr	r2, [r3, #0]
 80048de:	68fb      	ldr	r3, [r7, #12]
 80048e0:	681b      	ldr	r3, [r3, #0]
 80048e2:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 80048e6:	601a      	str	r2, [r3, #0]
 80048e8:	68fb      	ldr	r3, [r7, #12]
 80048ea:	2220      	movs	r2, #32
 80048ec:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 80048f0:	68fb      	ldr	r3, [r7, #12]
 80048f2:	2200      	movs	r2, #0
 80048f4:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 80048f8:	68fb      	ldr	r3, [r7, #12]
 80048fa:	2200      	movs	r2, #0
 80048fc:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8004900:	2300      	movs	r3, #0
 8004902:	e000      	b.n	8004906 <HAL_I2C_Master_Transmit+0x1ea>
 8004904:	2302      	movs	r3, #2
 8004906:	4618      	mov	r0, r3
 8004908:	3718      	adds	r7, #24
 800490a:	46bd      	mov	sp, r7
 800490c:	bd80      	pop	{r7, pc}
 800490e:	bf00      	nop
 8004910:	00100002 	.word	0x00100002
 8004914:	ffff0000 	.word	0xffff0000

08004918 <HAL_I2C_Master_Receive>:
 8004918:	b580      	push	{r7, lr}
 800491a:	b08c      	sub	sp, #48	@ 0x30
 800491c:	af02      	add	r7, sp, #8
 800491e:	60f8      	str	r0, [r7, #12]
 8004920:	607a      	str	r2, [r7, #4]
 8004922:	461a      	mov	r2, r3
 8004924:	460b      	mov	r3, r1
 8004926:	817b      	strh	r3, [r7, #10]
 8004928:	4613      	mov	r3, r2
 800492a:	813b      	strh	r3, [r7, #8]
 800492c:	f7fe fec0 	bl	80036b0 <HAL_GetTick>
 8004930:	6278      	str	r0, [r7, #36]	@ 0x24
 8004932:	68fb      	ldr	r3, [r7, #12]
 8004934:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 8004938:	b2db      	uxtb	r3, r3
 800493a:	2b20      	cmp	r3, #32
 800493c:	f040 8217 	bne.w	8004d6e <HAL_I2C_Master_Receive+0x456>
 8004940:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8004942:	9300      	str	r3, [sp, #0]
 8004944:	2319      	movs	r3, #25
 8004946:	2201      	movs	r2, #1
 8004948:	497c      	ldr	r1, [pc, #496]	@ (8004b3c <HAL_I2C_Master_Receive+0x224>)
 800494a:	68f8      	ldr	r0, [r7, #12]
 800494c:	f000 fb80 	bl	8005050 <I2C_WaitOnFlagUntilTimeout>
 8004950:	4603      	mov	r3, r0
 8004952:	2b00      	cmp	r3, #0
 8004954:	d001      	beq.n	800495a <HAL_I2C_Master_Receive+0x42>
 8004956:	2302      	movs	r3, #2
 8004958:	e20a      	b.n	8004d70 <HAL_I2C_Master_Receive+0x458>
 800495a:	68fb      	ldr	r3, [r7, #12]
 800495c:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 8004960:	2b01      	cmp	r3, #1
 8004962:	d101      	bne.n	8004968 <HAL_I2C_Master_Receive+0x50>
 8004964:	2302      	movs	r3, #2
 8004966:	e203      	b.n	8004d70 <HAL_I2C_Master_Receive+0x458>
 8004968:	68fb      	ldr	r3, [r7, #12]
 800496a:	2201      	movs	r2, #1
 800496c:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8004970:	68fb      	ldr	r3, [r7, #12]
 8004972:	681b      	ldr	r3, [r3, #0]
 8004974:	681b      	ldr	r3, [r3, #0]
 8004976:	f003 0301 	and.w	r3, r3, #1
 800497a:	2b01      	cmp	r3, #1
 800497c:	d007      	beq.n	800498e <HAL_I2C_Master_Receive+0x76>
 800497e:	68fb      	ldr	r3, [r7, #12]
 8004980:	681b      	ldr	r3, [r3, #0]
 8004982:	681a      	ldr	r2, [r3, #0]
 8004984:	68fb      	ldr	r3, [r7, #12]
 8004986:	681b      	ldr	r3, [r3, #0]
 8004988:	f042 0201 	orr.w	r2, r2, #1
 800498c:	601a      	str	r2, [r3, #0]
 800498e:	68fb      	ldr	r3, [r7, #12]
 8004990:	681b      	ldr	r3, [r3, #0]
 8004992:	681a      	ldr	r2, [r3, #0]
 8004994:	68fb      	ldr	r3, [r7, #12]
 8004996:	681b      	ldr	r3, [r3, #0]
 8004998:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 800499c:	601a      	str	r2, [r3, #0]
 800499e:	68fb      	ldr	r3, [r7, #12]
 80049a0:	2222      	movs	r2, #34	@ 0x22
 80049a2:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 80049a6:	68fb      	ldr	r3, [r7, #12]
 80049a8:	2210      	movs	r2, #16
 80049aa:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 80049ae:	68fb      	ldr	r3, [r7, #12]
 80049b0:	2200      	movs	r2, #0
 80049b2:	641a      	str	r2, [r3, #64]	@ 0x40
 80049b4:	68fb      	ldr	r3, [r7, #12]
 80049b6:	687a      	ldr	r2, [r7, #4]
 80049b8:	625a      	str	r2, [r3, #36]	@ 0x24
 80049ba:	68fb      	ldr	r3, [r7, #12]
 80049bc:	893a      	ldrh	r2, [r7, #8]
 80049be:	855a      	strh	r2, [r3, #42]	@ 0x2a
 80049c0:	68fb      	ldr	r3, [r7, #12]
 80049c2:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 80049c4:	b29a      	uxth	r2, r3
 80049c6:	68fb      	ldr	r3, [r7, #12]
 80049c8:	851a      	strh	r2, [r3, #40]	@ 0x28
 80049ca:	68fb      	ldr	r3, [r7, #12]
 80049cc:	4a5c      	ldr	r2, [pc, #368]	@ (8004b40 <HAL_I2C_Master_Receive+0x228>)
 80049ce:	62da      	str	r2, [r3, #44]	@ 0x2c
 80049d0:	8979      	ldrh	r1, [r7, #10]
 80049d2:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80049d4:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 80049d6:	68f8      	ldr	r0, [r7, #12]
 80049d8:	f000 fa6c 	bl	8004eb4 <I2C_MasterRequestRead>
 80049dc:	4603      	mov	r3, r0
 80049de:	2b00      	cmp	r3, #0
 80049e0:	d001      	beq.n	80049e6 <HAL_I2C_Master_Receive+0xce>
 80049e2:	2301      	movs	r3, #1
 80049e4:	e1c4      	b.n	8004d70 <HAL_I2C_Master_Receive+0x458>
 80049e6:	68fb      	ldr	r3, [r7, #12]
 80049e8:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 80049ea:	2b00      	cmp	r3, #0
 80049ec:	d113      	bne.n	8004a16 <HAL_I2C_Master_Receive+0xfe>
 80049ee:	2300      	movs	r3, #0
 80049f0:	623b      	str	r3, [r7, #32]
 80049f2:	68fb      	ldr	r3, [r7, #12]
 80049f4:	681b      	ldr	r3, [r3, #0]
 80049f6:	695b      	ldr	r3, [r3, #20]
 80049f8:	623b      	str	r3, [r7, #32]
 80049fa:	68fb      	ldr	r3, [r7, #12]
 80049fc:	681b      	ldr	r3, [r3, #0]
 80049fe:	699b      	ldr	r3, [r3, #24]
 8004a00:	623b      	str	r3, [r7, #32]
 8004a02:	6a3b      	ldr	r3, [r7, #32]
 8004a04:	68fb      	ldr	r3, [r7, #12]
 8004a06:	681b      	ldr	r3, [r3, #0]
 8004a08:	681a      	ldr	r2, [r3, #0]
 8004a0a:	68fb      	ldr	r3, [r7, #12]
 8004a0c:	681b      	ldr	r3, [r3, #0]
 8004a0e:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 8004a12:	601a      	str	r2, [r3, #0]
 8004a14:	e198      	b.n	8004d48 <HAL_I2C_Master_Receive+0x430>
 8004a16:	68fb      	ldr	r3, [r7, #12]
 8004a18:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8004a1a:	2b01      	cmp	r3, #1
 8004a1c:	d11b      	bne.n	8004a56 <HAL_I2C_Master_Receive+0x13e>
 8004a1e:	68fb      	ldr	r3, [r7, #12]
 8004a20:	681b      	ldr	r3, [r3, #0]
 8004a22:	681a      	ldr	r2, [r3, #0]
 8004a24:	68fb      	ldr	r3, [r7, #12]
 8004a26:	681b      	ldr	r3, [r3, #0]
 8004a28:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 8004a2c:	601a      	str	r2, [r3, #0]
 8004a2e:	2300      	movs	r3, #0
 8004a30:	61fb      	str	r3, [r7, #28]
 8004a32:	68fb      	ldr	r3, [r7, #12]
 8004a34:	681b      	ldr	r3, [r3, #0]
 8004a36:	695b      	ldr	r3, [r3, #20]
 8004a38:	61fb      	str	r3, [r7, #28]
 8004a3a:	68fb      	ldr	r3, [r7, #12]
 8004a3c:	681b      	ldr	r3, [r3, #0]
 8004a3e:	699b      	ldr	r3, [r3, #24]
 8004a40:	61fb      	str	r3, [r7, #28]
 8004a42:	69fb      	ldr	r3, [r7, #28]
 8004a44:	68fb      	ldr	r3, [r7, #12]
 8004a46:	681b      	ldr	r3, [r3, #0]
 8004a48:	681a      	ldr	r2, [r3, #0]
 8004a4a:	68fb      	ldr	r3, [r7, #12]
 8004a4c:	681b      	ldr	r3, [r3, #0]
 8004a4e:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 8004a52:	601a      	str	r2, [r3, #0]
 8004a54:	e178      	b.n	8004d48 <HAL_I2C_Master_Receive+0x430>
 8004a56:	68fb      	ldr	r3, [r7, #12]
 8004a58:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8004a5a:	2b02      	cmp	r3, #2
 8004a5c:	d11b      	bne.n	8004a96 <HAL_I2C_Master_Receive+0x17e>
 8004a5e:	68fb      	ldr	r3, [r7, #12]
 8004a60:	681b      	ldr	r3, [r3, #0]
 8004a62:	681a      	ldr	r2, [r3, #0]
 8004a64:	68fb      	ldr	r3, [r7, #12]
 8004a66:	681b      	ldr	r3, [r3, #0]
 8004a68:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 8004a6c:	601a      	str	r2, [r3, #0]
 8004a6e:	68fb      	ldr	r3, [r7, #12]
 8004a70:	681b      	ldr	r3, [r3, #0]
 8004a72:	681a      	ldr	r2, [r3, #0]
 8004a74:	68fb      	ldr	r3, [r7, #12]
 8004a76:	681b      	ldr	r3, [r3, #0]
 8004a78:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 8004a7c:	601a      	str	r2, [r3, #0]
 8004a7e:	2300      	movs	r3, #0
 8004a80:	61bb      	str	r3, [r7, #24]
 8004a82:	68fb      	ldr	r3, [r7, #12]
 8004a84:	681b      	ldr	r3, [r3, #0]
 8004a86:	695b      	ldr	r3, [r3, #20]
 8004a88:	61bb      	str	r3, [r7, #24]
 8004a8a:	68fb      	ldr	r3, [r7, #12]
 8004a8c:	681b      	ldr	r3, [r3, #0]
 8004a8e:	699b      	ldr	r3, [r3, #24]
 8004a90:	61bb      	str	r3, [r7, #24]
 8004a92:	69bb      	ldr	r3, [r7, #24]
 8004a94:	e158      	b.n	8004d48 <HAL_I2C_Master_Receive+0x430>
 8004a96:	68fb      	ldr	r3, [r7, #12]
 8004a98:	681b      	ldr	r3, [r3, #0]
 8004a9a:	681a      	ldr	r2, [r3, #0]
 8004a9c:	68fb      	ldr	r3, [r7, #12]
 8004a9e:	681b      	ldr	r3, [r3, #0]
 8004aa0:	f442 6280 	orr.w	r2, r2, #1024	@ 0x400
 8004aa4:	601a      	str	r2, [r3, #0]
 8004aa6:	2300      	movs	r3, #0
 8004aa8:	617b      	str	r3, [r7, #20]
 8004aaa:	68fb      	ldr	r3, [r7, #12]
 8004aac:	681b      	ldr	r3, [r3, #0]
 8004aae:	695b      	ldr	r3, [r3, #20]
 8004ab0:	617b      	str	r3, [r7, #20]
 8004ab2:	68fb      	ldr	r3, [r7, #12]
 8004ab4:	681b      	ldr	r3, [r3, #0]
 8004ab6:	699b      	ldr	r3, [r3, #24]
 8004ab8:	617b      	str	r3, [r7, #20]
 8004aba:	697b      	ldr	r3, [r7, #20]
 8004abc:	e144      	b.n	8004d48 <HAL_I2C_Master_Receive+0x430>
 8004abe:	68fb      	ldr	r3, [r7, #12]
 8004ac0:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8004ac2:	2b03      	cmp	r3, #3
 8004ac4:	f200 80f1 	bhi.w	8004caa <HAL_I2C_Master_Receive+0x392>
 8004ac8:	68fb      	ldr	r3, [r7, #12]
 8004aca:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8004acc:	2b01      	cmp	r3, #1
 8004ace:	d123      	bne.n	8004b18 <HAL_I2C_Master_Receive+0x200>
 8004ad0:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8004ad2:	6b39      	ldr	r1, [r7, #48]	@ 0x30
 8004ad4:	68f8      	ldr	r0, [r7, #12]
 8004ad6:	f000 fc65 	bl	80053a4 <I2C_WaitOnRXNEFlagUntilTimeout>
 8004ada:	4603      	mov	r3, r0
 8004adc:	2b00      	cmp	r3, #0
 8004ade:	d001      	beq.n	8004ae4 <HAL_I2C_Master_Receive+0x1cc>
 8004ae0:	2301      	movs	r3, #1
 8004ae2:	e145      	b.n	8004d70 <HAL_I2C_Master_Receive+0x458>
 8004ae4:	68fb      	ldr	r3, [r7, #12]
 8004ae6:	681b      	ldr	r3, [r3, #0]
 8004ae8:	691a      	ldr	r2, [r3, #16]
 8004aea:	68fb      	ldr	r3, [r7, #12]
 8004aec:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004aee:	b2d2      	uxtb	r2, r2
 8004af0:	701a      	strb	r2, [r3, #0]
 8004af2:	68fb      	ldr	r3, [r7, #12]
 8004af4:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004af6:	1c5a      	adds	r2, r3, #1
 8004af8:	68fb      	ldr	r3, [r7, #12]
 8004afa:	625a      	str	r2, [r3, #36]	@ 0x24
 8004afc:	68fb      	ldr	r3, [r7, #12]
 8004afe:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8004b00:	3b01      	subs	r3, #1
 8004b02:	b29a      	uxth	r2, r3
 8004b04:	68fb      	ldr	r3, [r7, #12]
 8004b06:	851a      	strh	r2, [r3, #40]	@ 0x28
 8004b08:	68fb      	ldr	r3, [r7, #12]
 8004b0a:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8004b0c:	b29b      	uxth	r3, r3
 8004b0e:	3b01      	subs	r3, #1
 8004b10:	b29a      	uxth	r2, r3
 8004b12:	68fb      	ldr	r3, [r7, #12]
 8004b14:	855a      	strh	r2, [r3, #42]	@ 0x2a
 8004b16:	e117      	b.n	8004d48 <HAL_I2C_Master_Receive+0x430>
 8004b18:	68fb      	ldr	r3, [r7, #12]
 8004b1a:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8004b1c:	2b02      	cmp	r3, #2
 8004b1e:	d14e      	bne.n	8004bbe <HAL_I2C_Master_Receive+0x2a6>
 8004b20:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8004b22:	9300      	str	r3, [sp, #0]
 8004b24:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8004b26:	2200      	movs	r2, #0
 8004b28:	4906      	ldr	r1, [pc, #24]	@ (8004b44 <HAL_I2C_Master_Receive+0x22c>)
 8004b2a:	68f8      	ldr	r0, [r7, #12]
 8004b2c:	f000 fa90 	bl	8005050 <I2C_WaitOnFlagUntilTimeout>
 8004b30:	4603      	mov	r3, r0
 8004b32:	2b00      	cmp	r3, #0
 8004b34:	d008      	beq.n	8004b48 <HAL_I2C_Master_Receive+0x230>
 8004b36:	2301      	movs	r3, #1
 8004b38:	e11a      	b.n	8004d70 <HAL_I2C_Master_Receive+0x458>
 8004b3a:	bf00      	nop
 8004b3c:	00100002 	.word	0x00100002
 8004b40:	ffff0000 	.word	0xffff0000
 8004b44:	00010004 	.word	0x00010004
 8004b48:	68fb      	ldr	r3, [r7, #12]
 8004b4a:	681b      	ldr	r3, [r3, #0]
 8004b4c:	681a      	ldr	r2, [r3, #0]
 8004b4e:	68fb      	ldr	r3, [r7, #12]
 8004b50:	681b      	ldr	r3, [r3, #0]
 8004b52:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 8004b56:	601a      	str	r2, [r3, #0]
 8004b58:	68fb      	ldr	r3, [r7, #12]
 8004b5a:	681b      	ldr	r3, [r3, #0]
 8004b5c:	691a      	ldr	r2, [r3, #16]
 8004b5e:	68fb      	ldr	r3, [r7, #12]
 8004b60:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004b62:	b2d2      	uxtb	r2, r2
 8004b64:	701a      	strb	r2, [r3, #0]
 8004b66:	68fb      	ldr	r3, [r7, #12]
 8004b68:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004b6a:	1c5a      	adds	r2, r3, #1
 8004b6c:	68fb      	ldr	r3, [r7, #12]
 8004b6e:	625a      	str	r2, [r3, #36]	@ 0x24
 8004b70:	68fb      	ldr	r3, [r7, #12]
 8004b72:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8004b74:	3b01      	subs	r3, #1
 8004b76:	b29a      	uxth	r2, r3
 8004b78:	68fb      	ldr	r3, [r7, #12]
 8004b7a:	851a      	strh	r2, [r3, #40]	@ 0x28
 8004b7c:	68fb      	ldr	r3, [r7, #12]
 8004b7e:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8004b80:	b29b      	uxth	r3, r3
 8004b82:	3b01      	subs	r3, #1
 8004b84:	b29a      	uxth	r2, r3
 8004b86:	68fb      	ldr	r3, [r7, #12]
 8004b88:	855a      	strh	r2, [r3, #42]	@ 0x2a
 8004b8a:	68fb      	ldr	r3, [r7, #12]
 8004b8c:	681b      	ldr	r3, [r3, #0]
 8004b8e:	691a      	ldr	r2, [r3, #16]
 8004b90:	68fb      	ldr	r3, [r7, #12]
 8004b92:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004b94:	b2d2      	uxtb	r2, r2
 8004b96:	701a      	strb	r2, [r3, #0]
 8004b98:	68fb      	ldr	r3, [r7, #12]
 8004b9a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004b9c:	1c5a      	adds	r2, r3, #1
 8004b9e:	68fb      	ldr	r3, [r7, #12]
 8004ba0:	625a      	str	r2, [r3, #36]	@ 0x24
 8004ba2:	68fb      	ldr	r3, [r7, #12]
 8004ba4:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8004ba6:	3b01      	subs	r3, #1
 8004ba8:	b29a      	uxth	r2, r3
 8004baa:	68fb      	ldr	r3, [r7, #12]
 8004bac:	851a      	strh	r2, [r3, #40]	@ 0x28
 8004bae:	68fb      	ldr	r3, [r7, #12]
 8004bb0:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8004bb2:	b29b      	uxth	r3, r3
 8004bb4:	3b01      	subs	r3, #1
 8004bb6:	b29a      	uxth	r2, r3
 8004bb8:	68fb      	ldr	r3, [r7, #12]
 8004bba:	855a      	strh	r2, [r3, #42]	@ 0x2a
 8004bbc:	e0c4      	b.n	8004d48 <HAL_I2C_Master_Receive+0x430>
 8004bbe:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8004bc0:	9300      	str	r3, [sp, #0]
 8004bc2:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8004bc4:	2200      	movs	r2, #0
 8004bc6:	496c      	ldr	r1, [pc, #432]	@ (8004d78 <HAL_I2C_Master_Receive+0x460>)
 8004bc8:	68f8      	ldr	r0, [r7, #12]
 8004bca:	f000 fa41 	bl	8005050 <I2C_WaitOnFlagUntilTimeout>
 8004bce:	4603      	mov	r3, r0
 8004bd0:	2b00      	cmp	r3, #0
 8004bd2:	d001      	beq.n	8004bd8 <HAL_I2C_Master_Receive+0x2c0>
 8004bd4:	2301      	movs	r3, #1
 8004bd6:	e0cb      	b.n	8004d70 <HAL_I2C_Master_Receive+0x458>
 8004bd8:	68fb      	ldr	r3, [r7, #12]
 8004bda:	681b      	ldr	r3, [r3, #0]
 8004bdc:	681a      	ldr	r2, [r3, #0]
 8004bde:	68fb      	ldr	r3, [r7, #12]
 8004be0:	681b      	ldr	r3, [r3, #0]
 8004be2:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 8004be6:	601a      	str	r2, [r3, #0]
 8004be8:	68fb      	ldr	r3, [r7, #12]
 8004bea:	681b      	ldr	r3, [r3, #0]
 8004bec:	691a      	ldr	r2, [r3, #16]
 8004bee:	68fb      	ldr	r3, [r7, #12]
 8004bf0:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004bf2:	b2d2      	uxtb	r2, r2
 8004bf4:	701a      	strb	r2, [r3, #0]
 8004bf6:	68fb      	ldr	r3, [r7, #12]
 8004bf8:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004bfa:	1c5a      	adds	r2, r3, #1
 8004bfc:	68fb      	ldr	r3, [r7, #12]
 8004bfe:	625a      	str	r2, [r3, #36]	@ 0x24
 8004c00:	68fb      	ldr	r3, [r7, #12]
 8004c02:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8004c04:	3b01      	subs	r3, #1
 8004c06:	b29a      	uxth	r2, r3
 8004c08:	68fb      	ldr	r3, [r7, #12]
 8004c0a:	851a      	strh	r2, [r3, #40]	@ 0x28
 8004c0c:	68fb      	ldr	r3, [r7, #12]
 8004c0e:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8004c10:	b29b      	uxth	r3, r3
 8004c12:	3b01      	subs	r3, #1
 8004c14:	b29a      	uxth	r2, r3
 8004c16:	68fb      	ldr	r3, [r7, #12]
 8004c18:	855a      	strh	r2, [r3, #42]	@ 0x2a
 8004c1a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8004c1c:	9300      	str	r3, [sp, #0]
 8004c1e:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8004c20:	2200      	movs	r2, #0
 8004c22:	4955      	ldr	r1, [pc, #340]	@ (8004d78 <HAL_I2C_Master_Receive+0x460>)
 8004c24:	68f8      	ldr	r0, [r7, #12]
 8004c26:	f000 fa13 	bl	8005050 <I2C_WaitOnFlagUntilTimeout>
 8004c2a:	4603      	mov	r3, r0
 8004c2c:	2b00      	cmp	r3, #0
 8004c2e:	d001      	beq.n	8004c34 <HAL_I2C_Master_Receive+0x31c>
 8004c30:	2301      	movs	r3, #1
 8004c32:	e09d      	b.n	8004d70 <HAL_I2C_Master_Receive+0x458>
 8004c34:	68fb      	ldr	r3, [r7, #12]
 8004c36:	681b      	ldr	r3, [r3, #0]
 8004c38:	681a      	ldr	r2, [r3, #0]
 8004c3a:	68fb      	ldr	r3, [r7, #12]
 8004c3c:	681b      	ldr	r3, [r3, #0]
 8004c3e:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 8004c42:	601a      	str	r2, [r3, #0]
 8004c44:	68fb      	ldr	r3, [r7, #12]
 8004c46:	681b      	ldr	r3, [r3, #0]
 8004c48:	691a      	ldr	r2, [r3, #16]
 8004c4a:	68fb      	ldr	r3, [r7, #12]
 8004c4c:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004c4e:	b2d2      	uxtb	r2, r2
 8004c50:	701a      	strb	r2, [r3, #0]
 8004c52:	68fb      	ldr	r3, [r7, #12]
 8004c54:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004c56:	1c5a      	adds	r2, r3, #1
 8004c58:	68fb      	ldr	r3, [r7, #12]
 8004c5a:	625a      	str	r2, [r3, #36]	@ 0x24
 8004c5c:	68fb      	ldr	r3, [r7, #12]
 8004c5e:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8004c60:	3b01      	subs	r3, #1
 8004c62:	b29a      	uxth	r2, r3
 8004c64:	68fb      	ldr	r3, [r7, #12]
 8004c66:	851a      	strh	r2, [r3, #40]	@ 0x28
 8004c68:	68fb      	ldr	r3, [r7, #12]
 8004c6a:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8004c6c:	b29b      	uxth	r3, r3
 8004c6e:	3b01      	subs	r3, #1
 8004c70:	b29a      	uxth	r2, r3
 8004c72:	68fb      	ldr	r3, [r7, #12]
 8004c74:	855a      	strh	r2, [r3, #42]	@ 0x2a
 8004c76:	68fb      	ldr	r3, [r7, #12]
 8004c78:	681b      	ldr	r3, [r3, #0]
 8004c7a:	691a      	ldr	r2, [r3, #16]
 8004c7c:	68fb      	ldr	r3, [r7, #12]
 8004c7e:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004c80:	b2d2      	uxtb	r2, r2
 8004c82:	701a      	strb	r2, [r3, #0]
 8004c84:	68fb      	ldr	r3, [r7, #12]
 8004c86:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004c88:	1c5a      	adds	r2, r3, #1
 8004c8a:	68fb      	ldr	r3, [r7, #12]
 8004c8c:	625a      	str	r2, [r3, #36]	@ 0x24
 8004c8e:	68fb      	ldr	r3, [r7, #12]
 8004c90:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8004c92:	3b01      	subs	r3, #1
 8004c94:	b29a      	uxth	r2, r3
 8004c96:	68fb      	ldr	r3, [r7, #12]
 8004c98:	851a      	strh	r2, [r3, #40]	@ 0x28
 8004c9a:	68fb      	ldr	r3, [r7, #12]
 8004c9c:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8004c9e:	b29b      	uxth	r3, r3
 8004ca0:	3b01      	subs	r3, #1
 8004ca2:	b29a      	uxth	r2, r3
 8004ca4:	68fb      	ldr	r3, [r7, #12]
 8004ca6:	855a      	strh	r2, [r3, #42]	@ 0x2a
 8004ca8:	e04e      	b.n	8004d48 <HAL_I2C_Master_Receive+0x430>
 8004caa:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8004cac:	6b39      	ldr	r1, [r7, #48]	@ 0x30
 8004cae:	68f8      	ldr	r0, [r7, #12]
 8004cb0:	f000 fb78 	bl	80053a4 <I2C_WaitOnRXNEFlagUntilTimeout>
 8004cb4:	4603      	mov	r3, r0
 8004cb6:	2b00      	cmp	r3, #0
 8004cb8:	d001      	beq.n	8004cbe <HAL_I2C_Master_Receive+0x3a6>
 8004cba:	2301      	movs	r3, #1
 8004cbc:	e058      	b.n	8004d70 <HAL_I2C_Master_Receive+0x458>
 8004cbe:	68fb      	ldr	r3, [r7, #12]
 8004cc0:	681b      	ldr	r3, [r3, #0]
 8004cc2:	691a      	ldr	r2, [r3, #16]
 8004cc4:	68fb      	ldr	r3, [r7, #12]
 8004cc6:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004cc8:	b2d2      	uxtb	r2, r2
 8004cca:	701a      	strb	r2, [r3, #0]
 8004ccc:	68fb      	ldr	r3, [r7, #12]
 8004cce:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004cd0:	1c5a      	adds	r2, r3, #1
 8004cd2:	68fb      	ldr	r3, [r7, #12]
 8004cd4:	625a      	str	r2, [r3, #36]	@ 0x24
 8004cd6:	68fb      	ldr	r3, [r7, #12]
 8004cd8:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8004cda:	3b01      	subs	r3, #1
 8004cdc:	b29a      	uxth	r2, r3
 8004cde:	68fb      	ldr	r3, [r7, #12]
 8004ce0:	851a      	strh	r2, [r3, #40]	@ 0x28
 8004ce2:	68fb      	ldr	r3, [r7, #12]
 8004ce4:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8004ce6:	b29b      	uxth	r3, r3
 8004ce8:	3b01      	subs	r3, #1
 8004cea:	b29a      	uxth	r2, r3
 8004cec:	68fb      	ldr	r3, [r7, #12]
 8004cee:	855a      	strh	r2, [r3, #42]	@ 0x2a
 8004cf0:	68fb      	ldr	r3, [r7, #12]
 8004cf2:	681b      	ldr	r3, [r3, #0]
 8004cf4:	695b      	ldr	r3, [r3, #20]
 8004cf6:	f003 0304 	and.w	r3, r3, #4
 8004cfa:	2b04      	cmp	r3, #4
 8004cfc:	d124      	bne.n	8004d48 <HAL_I2C_Master_Receive+0x430>
 8004cfe:	68fb      	ldr	r3, [r7, #12]
 8004d00:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8004d02:	2b03      	cmp	r3, #3
 8004d04:	d107      	bne.n	8004d16 <HAL_I2C_Master_Receive+0x3fe>
 8004d06:	68fb      	ldr	r3, [r7, #12]
 8004d08:	681b      	ldr	r3, [r3, #0]
 8004d0a:	681a      	ldr	r2, [r3, #0]
 8004d0c:	68fb      	ldr	r3, [r7, #12]
 8004d0e:	681b      	ldr	r3, [r3, #0]
 8004d10:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 8004d14:	601a      	str	r2, [r3, #0]
 8004d16:	68fb      	ldr	r3, [r7, #12]
 8004d18:	681b      	ldr	r3, [r3, #0]
 8004d1a:	691a      	ldr	r2, [r3, #16]
 8004d1c:	68fb      	ldr	r3, [r7, #12]
 8004d1e:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004d20:	b2d2      	uxtb	r2, r2
 8004d22:	701a      	strb	r2, [r3, #0]
 8004d24:	68fb      	ldr	r3, [r7, #12]
 8004d26:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004d28:	1c5a      	adds	r2, r3, #1
 8004d2a:	68fb      	ldr	r3, [r7, #12]
 8004d2c:	625a      	str	r2, [r3, #36]	@ 0x24
 8004d2e:	68fb      	ldr	r3, [r7, #12]
 8004d30:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8004d32:	3b01      	subs	r3, #1
 8004d34:	b29a      	uxth	r2, r3
 8004d36:	68fb      	ldr	r3, [r7, #12]
 8004d38:	851a      	strh	r2, [r3, #40]	@ 0x28
 8004d3a:	68fb      	ldr	r3, [r7, #12]
 8004d3c:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8004d3e:	b29b      	uxth	r3, r3
 8004d40:	3b01      	subs	r3, #1
 8004d42:	b29a      	uxth	r2, r3
 8004d44:	68fb      	ldr	r3, [r7, #12]
 8004d46:	855a      	strh	r2, [r3, #42]	@ 0x2a
 8004d48:	68fb      	ldr	r3, [r7, #12]
 8004d4a:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8004d4c:	2b00      	cmp	r3, #0
 8004d4e:	f47f aeb6 	bne.w	8004abe <HAL_I2C_Master_Receive+0x1a6>
 8004d52:	68fb      	ldr	r3, [r7, #12]
 8004d54:	2220      	movs	r2, #32
 8004d56:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8004d5a:	68fb      	ldr	r3, [r7, #12]
 8004d5c:	2200      	movs	r2, #0
 8004d5e:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8004d62:	68fb      	ldr	r3, [r7, #12]
 8004d64:	2200      	movs	r2, #0
 8004d66:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8004d6a:	2300      	movs	r3, #0
 8004d6c:	e000      	b.n	8004d70 <HAL_I2C_Master_Receive+0x458>
 8004d6e:	2302      	movs	r3, #2
 8004d70:	4618      	mov	r0, r3
 8004d72:	3728      	adds	r7, #40	@ 0x28
 8004d74:	46bd      	mov	sp, r7
 8004d76:	bd80      	pop	{r7, pc}
 8004d78:	00010004 	.word	0x00010004

08004d7c <HAL_I2C_GetState>:
 8004d7c:	b480      	push	{r7}
 8004d7e:	b083      	sub	sp, #12
 8004d80:	af00      	add	r7, sp, #0
 8004d82:	6078      	str	r0, [r7, #4]
 8004d84:	687b      	ldr	r3, [r7, #4]
 8004d86:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 8004d8a:	b2db      	uxtb	r3, r3
 8004d8c:	4618      	mov	r0, r3
 8004d8e:	370c      	adds	r7, #12
 8004d90:	46bd      	mov	sp, r7
 8004d92:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004d96:	4770      	bx	lr

08004d98 <HAL_I2C_GetError>:
 8004d98:	b480      	push	{r7}
 8004d9a:	b083      	sub	sp, #12
 8004d9c:	af00      	add	r7, sp, #0
 8004d9e:	6078      	str	r0, [r7, #4]
 8004da0:	687b      	ldr	r3, [r7, #4]
 8004da2:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8004da4:	4618      	mov	r0, r3
 8004da6:	370c      	adds	r7, #12
 8004da8:	46bd      	mov	sp, r7
 8004daa:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004dae:	4770      	bx	lr

08004db0 <I2C_MasterRequestWrite>:
 8004db0:	b580      	push	{r7, lr}
 8004db2:	b088      	sub	sp, #32
 8004db4:	af02      	add	r7, sp, #8
 8004db6:	60f8      	str	r0, [r7, #12]
 8004db8:	607a      	str	r2, [r7, #4]
 8004dba:	603b      	str	r3, [r7, #0]
 8004dbc:	460b      	mov	r3, r1
 8004dbe:	817b      	strh	r3, [r7, #10]
 8004dc0:	68fb      	ldr	r3, [r7, #12]
 8004dc2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8004dc4:	617b      	str	r3, [r7, #20]
 8004dc6:	697b      	ldr	r3, [r7, #20]
 8004dc8:	2b08      	cmp	r3, #8
 8004dca:	d006      	beq.n	8004dda <I2C_MasterRequestWrite+0x2a>
 8004dcc:	697b      	ldr	r3, [r7, #20]
 8004dce:	2b01      	cmp	r3, #1
 8004dd0:	d003      	beq.n	8004dda <I2C_MasterRequestWrite+0x2a>
 8004dd2:	697b      	ldr	r3, [r7, #20]
 8004dd4:	f513 3f80 	cmn.w	r3, #65536	@ 0x10000
 8004dd8:	d108      	bne.n	8004dec <I2C_MasterRequestWrite+0x3c>
 8004dda:	68fb      	ldr	r3, [r7, #12]
 8004ddc:	681b      	ldr	r3, [r3, #0]
 8004dde:	681a      	ldr	r2, [r3, #0]
 8004de0:	68fb      	ldr	r3, [r7, #12]
 8004de2:	681b      	ldr	r3, [r3, #0]
 8004de4:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 8004de8:	601a      	str	r2, [r3, #0]
 8004dea:	e00b      	b.n	8004e04 <I2C_MasterRequestWrite+0x54>
 8004dec:	68fb      	ldr	r3, [r7, #12]
 8004dee:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8004df0:	2b12      	cmp	r3, #18
 8004df2:	d107      	bne.n	8004e04 <I2C_MasterRequestWrite+0x54>
 8004df4:	68fb      	ldr	r3, [r7, #12]
 8004df6:	681b      	ldr	r3, [r3, #0]
 8004df8:	681a      	ldr	r2, [r3, #0]
 8004dfa:	68fb      	ldr	r3, [r7, #12]
 8004dfc:	681b      	ldr	r3, [r3, #0]
 8004dfe:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 8004e02:	601a      	str	r2, [r3, #0]
 8004e04:	683b      	ldr	r3, [r7, #0]
 8004e06:	9300      	str	r3, [sp, #0]
 8004e08:	687b      	ldr	r3, [r7, #4]
 8004e0a:	2200      	movs	r2, #0
 8004e0c:	f04f 1101 	mov.w	r1, #65537	@ 0x10001
 8004e10:	68f8      	ldr	r0, [r7, #12]
 8004e12:	f000 f91d 	bl	8005050 <I2C_WaitOnFlagUntilTimeout>
 8004e16:	4603      	mov	r3, r0
 8004e18:	2b00      	cmp	r3, #0
 8004e1a:	d00d      	beq.n	8004e38 <I2C_MasterRequestWrite+0x88>
 8004e1c:	68fb      	ldr	r3, [r7, #12]
 8004e1e:	681b      	ldr	r3, [r3, #0]
 8004e20:	681b      	ldr	r3, [r3, #0]
 8004e22:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8004e26:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 8004e2a:	d103      	bne.n	8004e34 <I2C_MasterRequestWrite+0x84>
 8004e2c:	68fb      	ldr	r3, [r7, #12]
 8004e2e:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8004e32:	641a      	str	r2, [r3, #64]	@ 0x40
 8004e34:	2303      	movs	r3, #3
 8004e36:	e035      	b.n	8004ea4 <I2C_MasterRequestWrite+0xf4>
 8004e38:	68fb      	ldr	r3, [r7, #12]
 8004e3a:	691b      	ldr	r3, [r3, #16]
 8004e3c:	f5b3 4f80 	cmp.w	r3, #16384	@ 0x4000
 8004e40:	d108      	bne.n	8004e54 <I2C_MasterRequestWrite+0xa4>
 8004e42:	897b      	ldrh	r3, [r7, #10]
 8004e44:	b2db      	uxtb	r3, r3
 8004e46:	461a      	mov	r2, r3
 8004e48:	68fb      	ldr	r3, [r7, #12]
 8004e4a:	681b      	ldr	r3, [r3, #0]
 8004e4c:	f002 02fe 	and.w	r2, r2, #254	@ 0xfe
 8004e50:	611a      	str	r2, [r3, #16]
 8004e52:	e01b      	b.n	8004e8c <I2C_MasterRequestWrite+0xdc>
 8004e54:	897b      	ldrh	r3, [r7, #10]
 8004e56:	11db      	asrs	r3, r3, #7
 8004e58:	b2db      	uxtb	r3, r3
 8004e5a:	f003 0306 	and.w	r3, r3, #6
 8004e5e:	b2db      	uxtb	r3, r3
 8004e60:	f063 030f 	orn	r3, r3, #15
 8004e64:	b2da      	uxtb	r2, r3
 8004e66:	68fb      	ldr	r3, [r7, #12]
 8004e68:	681b      	ldr	r3, [r3, #0]
 8004e6a:	611a      	str	r2, [r3, #16]
 8004e6c:	683b      	ldr	r3, [r7, #0]
 8004e6e:	687a      	ldr	r2, [r7, #4]
 8004e70:	490e      	ldr	r1, [pc, #56]	@ (8004eac <I2C_MasterRequestWrite+0xfc>)
 8004e72:	68f8      	ldr	r0, [r7, #12]
 8004e74:	f000 f966 	bl	8005144 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8004e78:	4603      	mov	r3, r0
 8004e7a:	2b00      	cmp	r3, #0
 8004e7c:	d001      	beq.n	8004e82 <I2C_MasterRequestWrite+0xd2>
 8004e7e:	2301      	movs	r3, #1
 8004e80:	e010      	b.n	8004ea4 <I2C_MasterRequestWrite+0xf4>
 8004e82:	897b      	ldrh	r3, [r7, #10]
 8004e84:	b2da      	uxtb	r2, r3
 8004e86:	68fb      	ldr	r3, [r7, #12]
 8004e88:	681b      	ldr	r3, [r3, #0]
 8004e8a:	611a      	str	r2, [r3, #16]
 8004e8c:	683b      	ldr	r3, [r7, #0]
 8004e8e:	687a      	ldr	r2, [r7, #4]
 8004e90:	4907      	ldr	r1, [pc, #28]	@ (8004eb0 <I2C_MasterRequestWrite+0x100>)
 8004e92:	68f8      	ldr	r0, [r7, #12]
 8004e94:	f000 f956 	bl	8005144 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8004e98:	4603      	mov	r3, r0
 8004e9a:	2b00      	cmp	r3, #0
 8004e9c:	d001      	beq.n	8004ea2 <I2C_MasterRequestWrite+0xf2>
 8004e9e:	2301      	movs	r3, #1
 8004ea0:	e000      	b.n	8004ea4 <I2C_MasterRequestWrite+0xf4>
 8004ea2:	2300      	movs	r3, #0
 8004ea4:	4618      	mov	r0, r3
 8004ea6:	3718      	adds	r7, #24
 8004ea8:	46bd      	mov	sp, r7
 8004eaa:	bd80      	pop	{r7, pc}
 8004eac:	00010008 	.word	0x00010008
 8004eb0:	00010002 	.word	0x00010002

08004eb4 <I2C_MasterRequestRead>:
 8004eb4:	b580      	push	{r7, lr}
 8004eb6:	b088      	sub	sp, #32
 8004eb8:	af02      	add	r7, sp, #8
 8004eba:	60f8      	str	r0, [r7, #12]
 8004ebc:	607a      	str	r2, [r7, #4]
 8004ebe:	603b      	str	r3, [r7, #0]
 8004ec0:	460b      	mov	r3, r1
 8004ec2:	817b      	strh	r3, [r7, #10]
 8004ec4:	68fb      	ldr	r3, [r7, #12]
 8004ec6:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8004ec8:	617b      	str	r3, [r7, #20]
 8004eca:	68fb      	ldr	r3, [r7, #12]
 8004ecc:	681b      	ldr	r3, [r3, #0]
 8004ece:	681a      	ldr	r2, [r3, #0]
 8004ed0:	68fb      	ldr	r3, [r7, #12]
 8004ed2:	681b      	ldr	r3, [r3, #0]
 8004ed4:	f442 6280 	orr.w	r2, r2, #1024	@ 0x400
 8004ed8:	601a      	str	r2, [r3, #0]
 8004eda:	697b      	ldr	r3, [r7, #20]
 8004edc:	2b08      	cmp	r3, #8
 8004ede:	d006      	beq.n	8004eee <I2C_MasterRequestRead+0x3a>
 8004ee0:	697b      	ldr	r3, [r7, #20]
 8004ee2:	2b01      	cmp	r3, #1
 8004ee4:	d003      	beq.n	8004eee <I2C_MasterRequestRead+0x3a>
 8004ee6:	697b      	ldr	r3, [r7, #20]
 8004ee8:	f513 3f80 	cmn.w	r3, #65536	@ 0x10000
 8004eec:	d108      	bne.n	8004f00 <I2C_MasterRequestRead+0x4c>
 8004eee:	68fb      	ldr	r3, [r7, #12]
 8004ef0:	681b      	ldr	r3, [r3, #0]
 8004ef2:	681a      	ldr	r2, [r3, #0]
 8004ef4:	68fb      	ldr	r3, [r7, #12]
 8004ef6:	681b      	ldr	r3, [r3, #0]
 8004ef8:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 8004efc:	601a      	str	r2, [r3, #0]
 8004efe:	e00b      	b.n	8004f18 <I2C_MasterRequestRead+0x64>
 8004f00:	68fb      	ldr	r3, [r7, #12]
 8004f02:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8004f04:	2b11      	cmp	r3, #17
 8004f06:	d107      	bne.n	8004f18 <I2C_MasterRequestRead+0x64>
 8004f08:	68fb      	ldr	r3, [r7, #12]
 8004f0a:	681b      	ldr	r3, [r3, #0]
 8004f0c:	681a      	ldr	r2, [r3, #0]
 8004f0e:	68fb      	ldr	r3, [r7, #12]
 8004f10:	681b      	ldr	r3, [r3, #0]
 8004f12:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 8004f16:	601a      	str	r2, [r3, #0]
 8004f18:	683b      	ldr	r3, [r7, #0]
 8004f1a:	9300      	str	r3, [sp, #0]
 8004f1c:	687b      	ldr	r3, [r7, #4]
 8004f1e:	2200      	movs	r2, #0
 8004f20:	f04f 1101 	mov.w	r1, #65537	@ 0x10001
 8004f24:	68f8      	ldr	r0, [r7, #12]
 8004f26:	f000 f893 	bl	8005050 <I2C_WaitOnFlagUntilTimeout>
 8004f2a:	4603      	mov	r3, r0
 8004f2c:	2b00      	cmp	r3, #0
 8004f2e:	d00d      	beq.n	8004f4c <I2C_MasterRequestRead+0x98>
 8004f30:	68fb      	ldr	r3, [r7, #12]
 8004f32:	681b      	ldr	r3, [r3, #0]
 8004f34:	681b      	ldr	r3, [r3, #0]
 8004f36:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8004f3a:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 8004f3e:	d103      	bne.n	8004f48 <I2C_MasterRequestRead+0x94>
 8004f40:	68fb      	ldr	r3, [r7, #12]
 8004f42:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8004f46:	641a      	str	r2, [r3, #64]	@ 0x40
 8004f48:	2303      	movs	r3, #3
 8004f4a:	e079      	b.n	8005040 <I2C_MasterRequestRead+0x18c>
 8004f4c:	68fb      	ldr	r3, [r7, #12]
 8004f4e:	691b      	ldr	r3, [r3, #16]
 8004f50:	f5b3 4f80 	cmp.w	r3, #16384	@ 0x4000
 8004f54:	d108      	bne.n	8004f68 <I2C_MasterRequestRead+0xb4>
 8004f56:	897b      	ldrh	r3, [r7, #10]
 8004f58:	b2db      	uxtb	r3, r3
 8004f5a:	f043 0301 	orr.w	r3, r3, #1
 8004f5e:	b2da      	uxtb	r2, r3
 8004f60:	68fb      	ldr	r3, [r7, #12]
 8004f62:	681b      	ldr	r3, [r3, #0]
 8004f64:	611a      	str	r2, [r3, #16]
 8004f66:	e05f      	b.n	8005028 <I2C_MasterRequestRead+0x174>
 8004f68:	897b      	ldrh	r3, [r7, #10]
 8004f6a:	11db      	asrs	r3, r3, #7
 8004f6c:	b2db      	uxtb	r3, r3
 8004f6e:	f003 0306 	and.w	r3, r3, #6
 8004f72:	b2db      	uxtb	r3, r3
 8004f74:	f063 030f 	orn	r3, r3, #15
 8004f78:	b2da      	uxtb	r2, r3
 8004f7a:	68fb      	ldr	r3, [r7, #12]
 8004f7c:	681b      	ldr	r3, [r3, #0]
 8004f7e:	611a      	str	r2, [r3, #16]
 8004f80:	683b      	ldr	r3, [r7, #0]
 8004f82:	687a      	ldr	r2, [r7, #4]
 8004f84:	4930      	ldr	r1, [pc, #192]	@ (8005048 <I2C_MasterRequestRead+0x194>)
 8004f86:	68f8      	ldr	r0, [r7, #12]
 8004f88:	f000 f8dc 	bl	8005144 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8004f8c:	4603      	mov	r3, r0
 8004f8e:	2b00      	cmp	r3, #0
 8004f90:	d001      	beq.n	8004f96 <I2C_MasterRequestRead+0xe2>
 8004f92:	2301      	movs	r3, #1
 8004f94:	e054      	b.n	8005040 <I2C_MasterRequestRead+0x18c>
 8004f96:	897b      	ldrh	r3, [r7, #10]
 8004f98:	b2da      	uxtb	r2, r3
 8004f9a:	68fb      	ldr	r3, [r7, #12]
 8004f9c:	681b      	ldr	r3, [r3, #0]
 8004f9e:	611a      	str	r2, [r3, #16]
 8004fa0:	683b      	ldr	r3, [r7, #0]
 8004fa2:	687a      	ldr	r2, [r7, #4]
 8004fa4:	4929      	ldr	r1, [pc, #164]	@ (800504c <I2C_MasterRequestRead+0x198>)
 8004fa6:	68f8      	ldr	r0, [r7, #12]
 8004fa8:	f000 f8cc 	bl	8005144 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8004fac:	4603      	mov	r3, r0
 8004fae:	2b00      	cmp	r3, #0
 8004fb0:	d001      	beq.n	8004fb6 <I2C_MasterRequestRead+0x102>
 8004fb2:	2301      	movs	r3, #1
 8004fb4:	e044      	b.n	8005040 <I2C_MasterRequestRead+0x18c>
 8004fb6:	2300      	movs	r3, #0
 8004fb8:	613b      	str	r3, [r7, #16]
 8004fba:	68fb      	ldr	r3, [r7, #12]
 8004fbc:	681b      	ldr	r3, [r3, #0]
 8004fbe:	695b      	ldr	r3, [r3, #20]
 8004fc0:	613b      	str	r3, [r7, #16]
 8004fc2:	68fb      	ldr	r3, [r7, #12]
 8004fc4:	681b      	ldr	r3, [r3, #0]
 8004fc6:	699b      	ldr	r3, [r3, #24]
 8004fc8:	613b      	str	r3, [r7, #16]
 8004fca:	693b      	ldr	r3, [r7, #16]
 8004fcc:	68fb      	ldr	r3, [r7, #12]
 8004fce:	681b      	ldr	r3, [r3, #0]
 8004fd0:	681a      	ldr	r2, [r3, #0]
 8004fd2:	68fb      	ldr	r3, [r7, #12]
 8004fd4:	681b      	ldr	r3, [r3, #0]
 8004fd6:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 8004fda:	601a      	str	r2, [r3, #0]
 8004fdc:	683b      	ldr	r3, [r7, #0]
 8004fde:	9300      	str	r3, [sp, #0]
 8004fe0:	687b      	ldr	r3, [r7, #4]
 8004fe2:	2200      	movs	r2, #0
 8004fe4:	f04f 1101 	mov.w	r1, #65537	@ 0x10001
 8004fe8:	68f8      	ldr	r0, [r7, #12]
 8004fea:	f000 f831 	bl	8005050 <I2C_WaitOnFlagUntilTimeout>
 8004fee:	4603      	mov	r3, r0
 8004ff0:	2b00      	cmp	r3, #0
 8004ff2:	d00d      	beq.n	8005010 <I2C_MasterRequestRead+0x15c>
 8004ff4:	68fb      	ldr	r3, [r7, #12]
 8004ff6:	681b      	ldr	r3, [r3, #0]
 8004ff8:	681b      	ldr	r3, [r3, #0]
 8004ffa:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8004ffe:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 8005002:	d103      	bne.n	800500c <I2C_MasterRequestRead+0x158>
 8005004:	68fb      	ldr	r3, [r7, #12]
 8005006:	f44f 7200 	mov.w	r2, #512	@ 0x200
 800500a:	641a      	str	r2, [r3, #64]	@ 0x40
 800500c:	2303      	movs	r3, #3
 800500e:	e017      	b.n	8005040 <I2C_MasterRequestRead+0x18c>
 8005010:	897b      	ldrh	r3, [r7, #10]
 8005012:	11db      	asrs	r3, r3, #7
 8005014:	b2db      	uxtb	r3, r3
 8005016:	f003 0306 	and.w	r3, r3, #6
 800501a:	b2db      	uxtb	r3, r3
 800501c:	f063 030e 	orn	r3, r3, #14
 8005020:	b2da      	uxtb	r2, r3
 8005022:	68fb      	ldr	r3, [r7, #12]
 8005024:	681b      	ldr	r3, [r3, #0]
 8005026:	611a      	str	r2, [r3, #16]
 8005028:	683b      	ldr	r3, [r7, #0]
 800502a:	687a      	ldr	r2, [r7, #4]
 800502c:	4907      	ldr	r1, [pc, #28]	@ (800504c <I2C_MasterRequestRead+0x198>)
 800502e:	68f8      	ldr	r0, [r7, #12]
 8005030:	f000 f888 	bl	8005144 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8005034:	4603      	mov	r3, r0
 8005036:	2b00      	cmp	r3, #0
 8005038:	d001      	beq.n	800503e <I2C_MasterRequestRead+0x18a>
 800503a:	2301      	movs	r3, #1
 800503c:	e000      	b.n	8005040 <I2C_MasterRequestRead+0x18c>
 800503e:	2300      	movs	r3, #0
 8005040:	4618      	mov	r0, r3
 8005042:	3718      	adds	r7, #24
 8005044:	46bd      	mov	sp, r7
 8005046:	bd80      	pop	{r7, pc}
 8005048:	00010008 	.word	0x00010008
 800504c:	00010002 	.word	0x00010002

08005050 <I2C_WaitOnFlagUntilTimeout>:
 8005050:	b580      	push	{r7, lr}
 8005052:	b084      	sub	sp, #16
 8005054:	af00      	add	r7, sp, #0
 8005056:	60f8      	str	r0, [r7, #12]
 8005058:	60b9      	str	r1, [r7, #8]
 800505a:	603b      	str	r3, [r7, #0]
 800505c:	4613      	mov	r3, r2
 800505e:	71fb      	strb	r3, [r7, #7]
 8005060:	e048      	b.n	80050f4 <I2C_WaitOnFlagUntilTimeout+0xa4>
 8005062:	683b      	ldr	r3, [r7, #0]
 8005064:	f1b3 3fff 	cmp.w	r3, #4294967295
 8005068:	d044      	beq.n	80050f4 <I2C_WaitOnFlagUntilTimeout+0xa4>
 800506a:	f7fe fb21 	bl	80036b0 <HAL_GetTick>
 800506e:	4602      	mov	r2, r0
 8005070:	69bb      	ldr	r3, [r7, #24]
 8005072:	1ad3      	subs	r3, r2, r3
 8005074:	683a      	ldr	r2, [r7, #0]
 8005076:	429a      	cmp	r2, r3
 8005078:	d302      	bcc.n	8005080 <I2C_WaitOnFlagUntilTimeout+0x30>
 800507a:	683b      	ldr	r3, [r7, #0]
 800507c:	2b00      	cmp	r3, #0
 800507e:	d139      	bne.n	80050f4 <I2C_WaitOnFlagUntilTimeout+0xa4>
 8005080:	68bb      	ldr	r3, [r7, #8]
 8005082:	0c1b      	lsrs	r3, r3, #16
 8005084:	b2db      	uxtb	r3, r3
 8005086:	2b01      	cmp	r3, #1
 8005088:	d10d      	bne.n	80050a6 <I2C_WaitOnFlagUntilTimeout+0x56>
 800508a:	68fb      	ldr	r3, [r7, #12]
 800508c:	681b      	ldr	r3, [r3, #0]
 800508e:	695b      	ldr	r3, [r3, #20]
 8005090:	43da      	mvns	r2, r3
 8005092:	68bb      	ldr	r3, [r7, #8]
 8005094:	4013      	ands	r3, r2
 8005096:	b29b      	uxth	r3, r3
 8005098:	2b00      	cmp	r3, #0
 800509a:	bf0c      	ite	eq
 800509c:	2301      	moveq	r3, #1
 800509e:	2300      	movne	r3, #0
 80050a0:	b2db      	uxtb	r3, r3
 80050a2:	461a      	mov	r2, r3
 80050a4:	e00c      	b.n	80050c0 <I2C_WaitOnFlagUntilTimeout+0x70>
 80050a6:	68fb      	ldr	r3, [r7, #12]
 80050a8:	681b      	ldr	r3, [r3, #0]
 80050aa:	699b      	ldr	r3, [r3, #24]
 80050ac:	43da      	mvns	r2, r3
 80050ae:	68bb      	ldr	r3, [r7, #8]
 80050b0:	4013      	ands	r3, r2
 80050b2:	b29b      	uxth	r3, r3
 80050b4:	2b00      	cmp	r3, #0
 80050b6:	bf0c      	ite	eq
 80050b8:	2301      	moveq	r3, #1
 80050ba:	2300      	movne	r3, #0
 80050bc:	b2db      	uxtb	r3, r3
 80050be:	461a      	mov	r2, r3
 80050c0:	79fb      	ldrb	r3, [r7, #7]
 80050c2:	429a      	cmp	r2, r3
 80050c4:	d116      	bne.n	80050f4 <I2C_WaitOnFlagUntilTimeout+0xa4>
 80050c6:	68fb      	ldr	r3, [r7, #12]
 80050c8:	2200      	movs	r2, #0
 80050ca:	631a      	str	r2, [r3, #48]	@ 0x30
 80050cc:	68fb      	ldr	r3, [r7, #12]
 80050ce:	2220      	movs	r2, #32
 80050d0:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 80050d4:	68fb      	ldr	r3, [r7, #12]
 80050d6:	2200      	movs	r2, #0
 80050d8:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 80050dc:	68fb      	ldr	r3, [r7, #12]
 80050de:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80050e0:	f043 0220 	orr.w	r2, r3, #32
 80050e4:	68fb      	ldr	r3, [r7, #12]
 80050e6:	641a      	str	r2, [r3, #64]	@ 0x40
 80050e8:	68fb      	ldr	r3, [r7, #12]
 80050ea:	2200      	movs	r2, #0
 80050ec:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 80050f0:	2301      	movs	r3, #1
 80050f2:	e023      	b.n	800513c <I2C_WaitOnFlagUntilTimeout+0xec>
 80050f4:	68bb      	ldr	r3, [r7, #8]
 80050f6:	0c1b      	lsrs	r3, r3, #16
 80050f8:	b2db      	uxtb	r3, r3
 80050fa:	2b01      	cmp	r3, #1
 80050fc:	d10d      	bne.n	800511a <I2C_WaitOnFlagUntilTimeout+0xca>
 80050fe:	68fb      	ldr	r3, [r7, #12]
 8005100:	681b      	ldr	r3, [r3, #0]
 8005102:	695b      	ldr	r3, [r3, #20]
 8005104:	43da      	mvns	r2, r3
 8005106:	68bb      	ldr	r3, [r7, #8]
 8005108:	4013      	ands	r3, r2
 800510a:	b29b      	uxth	r3, r3
 800510c:	2b00      	cmp	r3, #0
 800510e:	bf0c      	ite	eq
 8005110:	2301      	moveq	r3, #1
 8005112:	2300      	movne	r3, #0
 8005114:	b2db      	uxtb	r3, r3
 8005116:	461a      	mov	r2, r3
 8005118:	e00c      	b.n	8005134 <I2C_WaitOnFlagUntilTimeout+0xe4>
 800511a:	68fb      	ldr	r3, [r7, #12]
 800511c:	681b      	ldr	r3, [r3, #0]
 800511e:	699b      	ldr	r3, [r3, #24]
 8005120:	43da      	mvns	r2, r3
 8005122:	68bb      	ldr	r3, [r7, #8]
 8005124:	4013      	ands	r3, r2
 8005126:	b29b      	uxth	r3, r3
 8005128:	2b00      	cmp	r3, #0
 800512a:	bf0c      	ite	eq
 800512c:	2301      	moveq	r3, #1
 800512e:	2300      	movne	r3, #0
 8005130:	b2db      	uxtb	r3, r3
 8005132:	461a      	mov	r2, r3
 8005134:	79fb      	ldrb	r3, [r7, #7]
 8005136:	429a      	cmp	r2, r3
 8005138:	d093      	beq.n	8005062 <I2C_WaitOnFlagUntilTimeout+0x12>
 800513a:	2300      	movs	r3, #0
 800513c:	4618      	mov	r0, r3
 800513e:	3710      	adds	r7, #16
 8005140:	46bd      	mov	sp, r7
 8005142:	bd80      	pop	{r7, pc}

08005144 <I2C_WaitOnMasterAddressFlagUntilTimeout>:
 8005144:	b580      	push	{r7, lr}
 8005146:	b084      	sub	sp, #16
 8005148:	af00      	add	r7, sp, #0
 800514a:	60f8      	str	r0, [r7, #12]
 800514c:	60b9      	str	r1, [r7, #8]
 800514e:	607a      	str	r2, [r7, #4]
 8005150:	603b      	str	r3, [r7, #0]
 8005152:	e071      	b.n	8005238 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xf4>
 8005154:	68fb      	ldr	r3, [r7, #12]
 8005156:	681b      	ldr	r3, [r3, #0]
 8005158:	695b      	ldr	r3, [r3, #20]
 800515a:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 800515e:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8005162:	d123      	bne.n	80051ac <I2C_WaitOnMasterAddressFlagUntilTimeout+0x68>
 8005164:	68fb      	ldr	r3, [r7, #12]
 8005166:	681b      	ldr	r3, [r3, #0]
 8005168:	681a      	ldr	r2, [r3, #0]
 800516a:	68fb      	ldr	r3, [r7, #12]
 800516c:	681b      	ldr	r3, [r3, #0]
 800516e:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 8005172:	601a      	str	r2, [r3, #0]
 8005174:	68fb      	ldr	r3, [r7, #12]
 8005176:	681b      	ldr	r3, [r3, #0]
 8005178:	f46f 6280 	mvn.w	r2, #1024	@ 0x400
 800517c:	615a      	str	r2, [r3, #20]
 800517e:	68fb      	ldr	r3, [r7, #12]
 8005180:	2200      	movs	r2, #0
 8005182:	631a      	str	r2, [r3, #48]	@ 0x30
 8005184:	68fb      	ldr	r3, [r7, #12]
 8005186:	2220      	movs	r2, #32
 8005188:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 800518c:	68fb      	ldr	r3, [r7, #12]
 800518e:	2200      	movs	r2, #0
 8005190:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8005194:	68fb      	ldr	r3, [r7, #12]
 8005196:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8005198:	f043 0204 	orr.w	r2, r3, #4
 800519c:	68fb      	ldr	r3, [r7, #12]
 800519e:	641a      	str	r2, [r3, #64]	@ 0x40
 80051a0:	68fb      	ldr	r3, [r7, #12]
 80051a2:	2200      	movs	r2, #0
 80051a4:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 80051a8:	2301      	movs	r3, #1
 80051aa:	e067      	b.n	800527c <I2C_WaitOnMasterAddressFlagUntilTimeout+0x138>
 80051ac:	687b      	ldr	r3, [r7, #4]
 80051ae:	f1b3 3fff 	cmp.w	r3, #4294967295
 80051b2:	d041      	beq.n	8005238 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xf4>
 80051b4:	f7fe fa7c 	bl	80036b0 <HAL_GetTick>
 80051b8:	4602      	mov	r2, r0
 80051ba:	683b      	ldr	r3, [r7, #0]
 80051bc:	1ad3      	subs	r3, r2, r3
 80051be:	687a      	ldr	r2, [r7, #4]
 80051c0:	429a      	cmp	r2, r3
 80051c2:	d302      	bcc.n	80051ca <I2C_WaitOnMasterAddressFlagUntilTimeout+0x86>
 80051c4:	687b      	ldr	r3, [r7, #4]
 80051c6:	2b00      	cmp	r3, #0
 80051c8:	d136      	bne.n	8005238 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xf4>
 80051ca:	68bb      	ldr	r3, [r7, #8]
 80051cc:	0c1b      	lsrs	r3, r3, #16
 80051ce:	b2db      	uxtb	r3, r3
 80051d0:	2b01      	cmp	r3, #1
 80051d2:	d10c      	bne.n	80051ee <I2C_WaitOnMasterAddressFlagUntilTimeout+0xaa>
 80051d4:	68fb      	ldr	r3, [r7, #12]
 80051d6:	681b      	ldr	r3, [r3, #0]
 80051d8:	695b      	ldr	r3, [r3, #20]
 80051da:	43da      	mvns	r2, r3
 80051dc:	68bb      	ldr	r3, [r7, #8]
 80051de:	4013      	ands	r3, r2
 80051e0:	b29b      	uxth	r3, r3
 80051e2:	2b00      	cmp	r3, #0
 80051e4:	bf14      	ite	ne
 80051e6:	2301      	movne	r3, #1
 80051e8:	2300      	moveq	r3, #0
 80051ea:	b2db      	uxtb	r3, r3
 80051ec:	e00b      	b.n	8005206 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xc2>
 80051ee:	68fb      	ldr	r3, [r7, #12]
 80051f0:	681b      	ldr	r3, [r3, #0]
 80051f2:	699b      	ldr	r3, [r3, #24]
 80051f4:	43da      	mvns	r2, r3
 80051f6:	68bb      	ldr	r3, [r7, #8]
 80051f8:	4013      	ands	r3, r2
 80051fa:	b29b      	uxth	r3, r3
 80051fc:	2b00      	cmp	r3, #0
 80051fe:	bf14      	ite	ne
 8005200:	2301      	movne	r3, #1
 8005202:	2300      	moveq	r3, #0
 8005204:	b2db      	uxtb	r3, r3
 8005206:	2b00      	cmp	r3, #0
 8005208:	d016      	beq.n	8005238 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xf4>
 800520a:	68fb      	ldr	r3, [r7, #12]
 800520c:	2200      	movs	r2, #0
 800520e:	631a      	str	r2, [r3, #48]	@ 0x30
 8005210:	68fb      	ldr	r3, [r7, #12]
 8005212:	2220      	movs	r2, #32
 8005214:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8005218:	68fb      	ldr	r3, [r7, #12]
 800521a:	2200      	movs	r2, #0
 800521c:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8005220:	68fb      	ldr	r3, [r7, #12]
 8005222:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8005224:	f043 0220 	orr.w	r2, r3, #32
 8005228:	68fb      	ldr	r3, [r7, #12]
 800522a:	641a      	str	r2, [r3, #64]	@ 0x40
 800522c:	68fb      	ldr	r3, [r7, #12]
 800522e:	2200      	movs	r2, #0
 8005230:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8005234:	2301      	movs	r3, #1
 8005236:	e021      	b.n	800527c <I2C_WaitOnMasterAddressFlagUntilTimeout+0x138>
 8005238:	68bb      	ldr	r3, [r7, #8]
 800523a:	0c1b      	lsrs	r3, r3, #16
 800523c:	b2db      	uxtb	r3, r3
 800523e:	2b01      	cmp	r3, #1
 8005240:	d10c      	bne.n	800525c <I2C_WaitOnMasterAddressFlagUntilTimeout+0x118>
 8005242:	68fb      	ldr	r3, [r7, #12]
 8005244:	681b      	ldr	r3, [r3, #0]
 8005246:	695b      	ldr	r3, [r3, #20]
 8005248:	43da      	mvns	r2, r3
 800524a:	68bb      	ldr	r3, [r7, #8]
 800524c:	4013      	ands	r3, r2
 800524e:	b29b      	uxth	r3, r3
 8005250:	2b00      	cmp	r3, #0
 8005252:	bf14      	ite	ne
 8005254:	2301      	movne	r3, #1
 8005256:	2300      	moveq	r3, #0
 8005258:	b2db      	uxtb	r3, r3
 800525a:	e00b      	b.n	8005274 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x130>
 800525c:	68fb      	ldr	r3, [r7, #12]
 800525e:	681b      	ldr	r3, [r3, #0]
 8005260:	699b      	ldr	r3, [r3, #24]
 8005262:	43da      	mvns	r2, r3
 8005264:	68bb      	ldr	r3, [r7, #8]
 8005266:	4013      	ands	r3, r2
 8005268:	b29b      	uxth	r3, r3
 800526a:	2b00      	cmp	r3, #0
 800526c:	bf14      	ite	ne
 800526e:	2301      	movne	r3, #1
 8005270:	2300      	moveq	r3, #0
 8005272:	b2db      	uxtb	r3, r3
 8005274:	2b00      	cmp	r3, #0
 8005276:	f47f af6d 	bne.w	8005154 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x10>
 800527a:	2300      	movs	r3, #0
 800527c:	4618      	mov	r0, r3
 800527e:	3710      	adds	r7, #16
 8005280:	46bd      	mov	sp, r7
 8005282:	bd80      	pop	{r7, pc}

08005284 <I2C_WaitOnTXEFlagUntilTimeout>:
 8005284:	b580      	push	{r7, lr}
 8005286:	b084      	sub	sp, #16
 8005288:	af00      	add	r7, sp, #0
 800528a:	60f8      	str	r0, [r7, #12]
 800528c:	60b9      	str	r1, [r7, #8]
 800528e:	607a      	str	r2, [r7, #4]
 8005290:	e034      	b.n	80052fc <I2C_WaitOnTXEFlagUntilTimeout+0x78>
 8005292:	68f8      	ldr	r0, [r7, #12]
 8005294:	f000 f8e3 	bl	800545e <I2C_IsAcknowledgeFailed>
 8005298:	4603      	mov	r3, r0
 800529a:	2b00      	cmp	r3, #0
 800529c:	d001      	beq.n	80052a2 <I2C_WaitOnTXEFlagUntilTimeout+0x1e>
 800529e:	2301      	movs	r3, #1
 80052a0:	e034      	b.n	800530c <I2C_WaitOnTXEFlagUntilTimeout+0x88>
 80052a2:	68bb      	ldr	r3, [r7, #8]
 80052a4:	f1b3 3fff 	cmp.w	r3, #4294967295
 80052a8:	d028      	beq.n	80052fc <I2C_WaitOnTXEFlagUntilTimeout+0x78>
 80052aa:	f7fe fa01 	bl	80036b0 <HAL_GetTick>
 80052ae:	4602      	mov	r2, r0
 80052b0:	687b      	ldr	r3, [r7, #4]
 80052b2:	1ad3      	subs	r3, r2, r3
 80052b4:	68ba      	ldr	r2, [r7, #8]
 80052b6:	429a      	cmp	r2, r3
 80052b8:	d302      	bcc.n	80052c0 <I2C_WaitOnTXEFlagUntilTimeout+0x3c>
 80052ba:	68bb      	ldr	r3, [r7, #8]
 80052bc:	2b00      	cmp	r3, #0
 80052be:	d11d      	bne.n	80052fc <I2C_WaitOnTXEFlagUntilTimeout+0x78>
 80052c0:	68fb      	ldr	r3, [r7, #12]
 80052c2:	681b      	ldr	r3, [r3, #0]
 80052c4:	695b      	ldr	r3, [r3, #20]
 80052c6:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 80052ca:	2b80      	cmp	r3, #128	@ 0x80
 80052cc:	d016      	beq.n	80052fc <I2C_WaitOnTXEFlagUntilTimeout+0x78>
 80052ce:	68fb      	ldr	r3, [r7, #12]
 80052d0:	2200      	movs	r2, #0
 80052d2:	631a      	str	r2, [r3, #48]	@ 0x30
 80052d4:	68fb      	ldr	r3, [r7, #12]
 80052d6:	2220      	movs	r2, #32
 80052d8:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 80052dc:	68fb      	ldr	r3, [r7, #12]
 80052de:	2200      	movs	r2, #0
 80052e0:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 80052e4:	68fb      	ldr	r3, [r7, #12]
 80052e6:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80052e8:	f043 0220 	orr.w	r2, r3, #32
 80052ec:	68fb      	ldr	r3, [r7, #12]
 80052ee:	641a      	str	r2, [r3, #64]	@ 0x40
 80052f0:	68fb      	ldr	r3, [r7, #12]
 80052f2:	2200      	movs	r2, #0
 80052f4:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 80052f8:	2301      	movs	r3, #1
 80052fa:	e007      	b.n	800530c <I2C_WaitOnTXEFlagUntilTimeout+0x88>
 80052fc:	68fb      	ldr	r3, [r7, #12]
 80052fe:	681b      	ldr	r3, [r3, #0]
 8005300:	695b      	ldr	r3, [r3, #20]
 8005302:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8005306:	2b80      	cmp	r3, #128	@ 0x80
 8005308:	d1c3      	bne.n	8005292 <I2C_WaitOnTXEFlagUntilTimeout+0xe>
 800530a:	2300      	movs	r3, #0
 800530c:	4618      	mov	r0, r3
 800530e:	3710      	adds	r7, #16
 8005310:	46bd      	mov	sp, r7
 8005312:	bd80      	pop	{r7, pc}

08005314 <I2C_WaitOnBTFFlagUntilTimeout>:
 8005314:	b580      	push	{r7, lr}
 8005316:	b084      	sub	sp, #16
 8005318:	af00      	add	r7, sp, #0
 800531a:	60f8      	str	r0, [r7, #12]
 800531c:	60b9      	str	r1, [r7, #8]
 800531e:	607a      	str	r2, [r7, #4]
 8005320:	e034      	b.n	800538c <I2C_WaitOnBTFFlagUntilTimeout+0x78>
 8005322:	68f8      	ldr	r0, [r7, #12]
 8005324:	f000 f89b 	bl	800545e <I2C_IsAcknowledgeFailed>
 8005328:	4603      	mov	r3, r0
 800532a:	2b00      	cmp	r3, #0
 800532c:	d001      	beq.n	8005332 <I2C_WaitOnBTFFlagUntilTimeout+0x1e>
 800532e:	2301      	movs	r3, #1
 8005330:	e034      	b.n	800539c <I2C_WaitOnBTFFlagUntilTimeout+0x88>
 8005332:	68bb      	ldr	r3, [r7, #8]
 8005334:	f1b3 3fff 	cmp.w	r3, #4294967295
 8005338:	d028      	beq.n	800538c <I2C_WaitOnBTFFlagUntilTimeout+0x78>
 800533a:	f7fe f9b9 	bl	80036b0 <HAL_GetTick>
 800533e:	4602      	mov	r2, r0
 8005340:	687b      	ldr	r3, [r7, #4]
 8005342:	1ad3      	subs	r3, r2, r3
 8005344:	68ba      	ldr	r2, [r7, #8]
 8005346:	429a      	cmp	r2, r3
 8005348:	d302      	bcc.n	8005350 <I2C_WaitOnBTFFlagUntilTimeout+0x3c>
 800534a:	68bb      	ldr	r3, [r7, #8]
 800534c:	2b00      	cmp	r3, #0
 800534e:	d11d      	bne.n	800538c <I2C_WaitOnBTFFlagUntilTimeout+0x78>
 8005350:	68fb      	ldr	r3, [r7, #12]
 8005352:	681b      	ldr	r3, [r3, #0]
 8005354:	695b      	ldr	r3, [r3, #20]
 8005356:	f003 0304 	and.w	r3, r3, #4
 800535a:	2b04      	cmp	r3, #4
 800535c:	d016      	beq.n	800538c <I2C_WaitOnBTFFlagUntilTimeout+0x78>
 800535e:	68fb      	ldr	r3, [r7, #12]
 8005360:	2200      	movs	r2, #0
 8005362:	631a      	str	r2, [r3, #48]	@ 0x30
 8005364:	68fb      	ldr	r3, [r7, #12]
 8005366:	2220      	movs	r2, #32
 8005368:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 800536c:	68fb      	ldr	r3, [r7, #12]
 800536e:	2200      	movs	r2, #0
 8005370:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8005374:	68fb      	ldr	r3, [r7, #12]
 8005376:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8005378:	f043 0220 	orr.w	r2, r3, #32
 800537c:	68fb      	ldr	r3, [r7, #12]
 800537e:	641a      	str	r2, [r3, #64]	@ 0x40
 8005380:	68fb      	ldr	r3, [r7, #12]
 8005382:	2200      	movs	r2, #0
 8005384:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8005388:	2301      	movs	r3, #1
 800538a:	e007      	b.n	800539c <I2C_WaitOnBTFFlagUntilTimeout+0x88>
 800538c:	68fb      	ldr	r3, [r7, #12]
 800538e:	681b      	ldr	r3, [r3, #0]
 8005390:	695b      	ldr	r3, [r3, #20]
 8005392:	f003 0304 	and.w	r3, r3, #4
 8005396:	2b04      	cmp	r3, #4
 8005398:	d1c3      	bne.n	8005322 <I2C_WaitOnBTFFlagUntilTimeout+0xe>
 800539a:	2300      	movs	r3, #0
 800539c:	4618      	mov	r0, r3
 800539e:	3710      	adds	r7, #16
 80053a0:	46bd      	mov	sp, r7
 80053a2:	bd80      	pop	{r7, pc}

080053a4 <I2C_WaitOnRXNEFlagUntilTimeout>:
 80053a4:	b580      	push	{r7, lr}
 80053a6:	b084      	sub	sp, #16
 80053a8:	af00      	add	r7, sp, #0
 80053aa:	60f8      	str	r0, [r7, #12]
 80053ac:	60b9      	str	r1, [r7, #8]
 80053ae:	607a      	str	r2, [r7, #4]
 80053b0:	e049      	b.n	8005446 <I2C_WaitOnRXNEFlagUntilTimeout+0xa2>
 80053b2:	68fb      	ldr	r3, [r7, #12]
 80053b4:	681b      	ldr	r3, [r3, #0]
 80053b6:	695b      	ldr	r3, [r3, #20]
 80053b8:	f003 0310 	and.w	r3, r3, #16
 80053bc:	2b10      	cmp	r3, #16
 80053be:	d119      	bne.n	80053f4 <I2C_WaitOnRXNEFlagUntilTimeout+0x50>
 80053c0:	68fb      	ldr	r3, [r7, #12]
 80053c2:	681b      	ldr	r3, [r3, #0]
 80053c4:	f06f 0210 	mvn.w	r2, #16
 80053c8:	615a      	str	r2, [r3, #20]
 80053ca:	68fb      	ldr	r3, [r7, #12]
 80053cc:	2200      	movs	r2, #0
 80053ce:	631a      	str	r2, [r3, #48]	@ 0x30
 80053d0:	68fb      	ldr	r3, [r7, #12]
 80053d2:	2220      	movs	r2, #32
 80053d4:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 80053d8:	68fb      	ldr	r3, [r7, #12]
 80053da:	2200      	movs	r2, #0
 80053dc:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 80053e0:	68fb      	ldr	r3, [r7, #12]
 80053e2:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 80053e4:	68fb      	ldr	r3, [r7, #12]
 80053e6:	641a      	str	r2, [r3, #64]	@ 0x40
 80053e8:	68fb      	ldr	r3, [r7, #12]
 80053ea:	2200      	movs	r2, #0
 80053ec:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 80053f0:	2301      	movs	r3, #1
 80053f2:	e030      	b.n	8005456 <I2C_WaitOnRXNEFlagUntilTimeout+0xb2>
 80053f4:	f7fe f95c 	bl	80036b0 <HAL_GetTick>
 80053f8:	4602      	mov	r2, r0
 80053fa:	687b      	ldr	r3, [r7, #4]
 80053fc:	1ad3      	subs	r3, r2, r3
 80053fe:	68ba      	ldr	r2, [r7, #8]
 8005400:	429a      	cmp	r2, r3
 8005402:	d302      	bcc.n	800540a <I2C_WaitOnRXNEFlagUntilTimeout+0x66>
 8005404:	68bb      	ldr	r3, [r7, #8]
 8005406:	2b00      	cmp	r3, #0
 8005408:	d11d      	bne.n	8005446 <I2C_WaitOnRXNEFlagUntilTimeout+0xa2>
 800540a:	68fb      	ldr	r3, [r7, #12]
 800540c:	681b      	ldr	r3, [r3, #0]
 800540e:	695b      	ldr	r3, [r3, #20]
 8005410:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8005414:	2b40      	cmp	r3, #64	@ 0x40
 8005416:	d016      	beq.n	8005446 <I2C_WaitOnRXNEFlagUntilTimeout+0xa2>
 8005418:	68fb      	ldr	r3, [r7, #12]
 800541a:	2200      	movs	r2, #0
 800541c:	631a      	str	r2, [r3, #48]	@ 0x30
 800541e:	68fb      	ldr	r3, [r7, #12]
 8005420:	2220      	movs	r2, #32
 8005422:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8005426:	68fb      	ldr	r3, [r7, #12]
 8005428:	2200      	movs	r2, #0
 800542a:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 800542e:	68fb      	ldr	r3, [r7, #12]
 8005430:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8005432:	f043 0220 	orr.w	r2, r3, #32
 8005436:	68fb      	ldr	r3, [r7, #12]
 8005438:	641a      	str	r2, [r3, #64]	@ 0x40
 800543a:	68fb      	ldr	r3, [r7, #12]
 800543c:	2200      	movs	r2, #0
 800543e:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8005442:	2301      	movs	r3, #1
 8005444:	e007      	b.n	8005456 <I2C_WaitOnRXNEFlagUntilTimeout+0xb2>
 8005446:	68fb      	ldr	r3, [r7, #12]
 8005448:	681b      	ldr	r3, [r3, #0]
 800544a:	695b      	ldr	r3, [r3, #20]
 800544c:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8005450:	2b40      	cmp	r3, #64	@ 0x40
 8005452:	d1ae      	bne.n	80053b2 <I2C_WaitOnRXNEFlagUntilTimeout+0xe>
 8005454:	2300      	movs	r3, #0
 8005456:	4618      	mov	r0, r3
 8005458:	3710      	adds	r7, #16
 800545a:	46bd      	mov	sp, r7
 800545c:	bd80      	pop	{r7, pc}

0800545e <I2C_IsAcknowledgeFailed>:
 800545e:	b480      	push	{r7}
 8005460:	b083      	sub	sp, #12
 8005462:	af00      	add	r7, sp, #0
 8005464:	6078      	str	r0, [r7, #4]
 8005466:	687b      	ldr	r3, [r7, #4]
 8005468:	681b      	ldr	r3, [r3, #0]
 800546a:	695b      	ldr	r3, [r3, #20]
 800546c:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8005470:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8005474:	d11b      	bne.n	80054ae <I2C_IsAcknowledgeFailed+0x50>
 8005476:	687b      	ldr	r3, [r7, #4]
 8005478:	681b      	ldr	r3, [r3, #0]
 800547a:	f46f 6280 	mvn.w	r2, #1024	@ 0x400
 800547e:	615a      	str	r2, [r3, #20]
 8005480:	687b      	ldr	r3, [r7, #4]
 8005482:	2200      	movs	r2, #0
 8005484:	631a      	str	r2, [r3, #48]	@ 0x30
 8005486:	687b      	ldr	r3, [r7, #4]
 8005488:	2220      	movs	r2, #32
 800548a:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 800548e:	687b      	ldr	r3, [r7, #4]
 8005490:	2200      	movs	r2, #0
 8005492:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8005496:	687b      	ldr	r3, [r7, #4]
 8005498:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800549a:	f043 0204 	orr.w	r2, r3, #4
 800549e:	687b      	ldr	r3, [r7, #4]
 80054a0:	641a      	str	r2, [r3, #64]	@ 0x40
 80054a2:	687b      	ldr	r3, [r7, #4]
 80054a4:	2200      	movs	r2, #0
 80054a6:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 80054aa:	2301      	movs	r3, #1
 80054ac:	e000      	b.n	80054b0 <I2C_IsAcknowledgeFailed+0x52>
 80054ae:	2300      	movs	r3, #0
 80054b0:	4618      	mov	r0, r3
 80054b2:	370c      	adds	r7, #12
 80054b4:	46bd      	mov	sp, r7
 80054b6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80054ba:	4770      	bx	lr

080054bc <HAL_PWREx_EnableOverDrive>:
 80054bc:	b580      	push	{r7, lr}
 80054be:	b082      	sub	sp, #8
 80054c0:	af00      	add	r7, sp, #0
 80054c2:	2300      	movs	r3, #0
 80054c4:	607b      	str	r3, [r7, #4]
 80054c6:	2300      	movs	r3, #0
 80054c8:	603b      	str	r3, [r7, #0]
 80054ca:	4b20      	ldr	r3, [pc, #128]	@ (800554c <HAL_PWREx_EnableOverDrive+0x90>)
 80054cc:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80054ce:	4a1f      	ldr	r2, [pc, #124]	@ (800554c <HAL_PWREx_EnableOverDrive+0x90>)
 80054d0:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 80054d4:	6413      	str	r3, [r2, #64]	@ 0x40
 80054d6:	4b1d      	ldr	r3, [pc, #116]	@ (800554c <HAL_PWREx_EnableOverDrive+0x90>)
 80054d8:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80054da:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 80054de:	603b      	str	r3, [r7, #0]
 80054e0:	683b      	ldr	r3, [r7, #0]
 80054e2:	4b1b      	ldr	r3, [pc, #108]	@ (8005550 <HAL_PWREx_EnableOverDrive+0x94>)
 80054e4:	2201      	movs	r2, #1
 80054e6:	601a      	str	r2, [r3, #0]
 80054e8:	f7fe f8e2 	bl	80036b0 <HAL_GetTick>
 80054ec:	6078      	str	r0, [r7, #4]
 80054ee:	e009      	b.n	8005504 <HAL_PWREx_EnableOverDrive+0x48>
 80054f0:	f7fe f8de 	bl	80036b0 <HAL_GetTick>
 80054f4:	4602      	mov	r2, r0
 80054f6:	687b      	ldr	r3, [r7, #4]
 80054f8:	1ad3      	subs	r3, r2, r3
 80054fa:	f5b3 7f7a 	cmp.w	r3, #1000	@ 0x3e8
 80054fe:	d901      	bls.n	8005504 <HAL_PWREx_EnableOverDrive+0x48>
 8005500:	2303      	movs	r3, #3
 8005502:	e01f      	b.n	8005544 <HAL_PWREx_EnableOverDrive+0x88>
 8005504:	4b13      	ldr	r3, [pc, #76]	@ (8005554 <HAL_PWREx_EnableOverDrive+0x98>)
 8005506:	685b      	ldr	r3, [r3, #4]
 8005508:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 800550c:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 8005510:	d1ee      	bne.n	80054f0 <HAL_PWREx_EnableOverDrive+0x34>
 8005512:	4b11      	ldr	r3, [pc, #68]	@ (8005558 <HAL_PWREx_EnableOverDrive+0x9c>)
 8005514:	2201      	movs	r2, #1
 8005516:	601a      	str	r2, [r3, #0]
 8005518:	f7fe f8ca 	bl	80036b0 <HAL_GetTick>
 800551c:	6078      	str	r0, [r7, #4]
 800551e:	e009      	b.n	8005534 <HAL_PWREx_EnableOverDrive+0x78>
 8005520:	f7fe f8c6 	bl	80036b0 <HAL_GetTick>
 8005524:	4602      	mov	r2, r0
 8005526:	687b      	ldr	r3, [r7, #4]
 8005528:	1ad3      	subs	r3, r2, r3
 800552a:	f5b3 7f7a 	cmp.w	r3, #1000	@ 0x3e8
 800552e:	d901      	bls.n	8005534 <HAL_PWREx_EnableOverDrive+0x78>
 8005530:	2303      	movs	r3, #3
 8005532:	e007      	b.n	8005544 <HAL_PWREx_EnableOverDrive+0x88>
 8005534:	4b07      	ldr	r3, [pc, #28]	@ (8005554 <HAL_PWREx_EnableOverDrive+0x98>)
 8005536:	685b      	ldr	r3, [r3, #4]
 8005538:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 800553c:	f5b3 3f00 	cmp.w	r3, #131072	@ 0x20000
 8005540:	d1ee      	bne.n	8005520 <HAL_PWREx_EnableOverDrive+0x64>
 8005542:	2300      	movs	r3, #0
 8005544:	4618      	mov	r0, r3
 8005546:	3708      	adds	r7, #8
 8005548:	46bd      	mov	sp, r7
 800554a:	bd80      	pop	{r7, pc}
 800554c:	40023800 	.word	0x40023800
 8005550:	420e0040 	.word	0x420e0040
 8005554:	40007000 	.word	0x40007000
 8005558:	420e0044 	.word	0x420e0044

0800555c <HAL_RCC_ClockConfig>:
 800555c:	b580      	push	{r7, lr}
 800555e:	b084      	sub	sp, #16
 8005560:	af00      	add	r7, sp, #0
 8005562:	6078      	str	r0, [r7, #4]
 8005564:	6039      	str	r1, [r7, #0]
 8005566:	687b      	ldr	r3, [r7, #4]
 8005568:	2b00      	cmp	r3, #0
 800556a:	d101      	bne.n	8005570 <HAL_RCC_ClockConfig+0x14>
 800556c:	2301      	movs	r3, #1
 800556e:	e0cc      	b.n	800570a <HAL_RCC_ClockConfig+0x1ae>
 8005570:	4b68      	ldr	r3, [pc, #416]	@ (8005714 <HAL_RCC_ClockConfig+0x1b8>)
 8005572:	681b      	ldr	r3, [r3, #0]
 8005574:	f003 030f 	and.w	r3, r3, #15
 8005578:	683a      	ldr	r2, [r7, #0]
 800557a:	429a      	cmp	r2, r3
 800557c:	d90c      	bls.n	8005598 <HAL_RCC_ClockConfig+0x3c>
 800557e:	4b65      	ldr	r3, [pc, #404]	@ (8005714 <HAL_RCC_ClockConfig+0x1b8>)
 8005580:	683a      	ldr	r2, [r7, #0]
 8005582:	b2d2      	uxtb	r2, r2
 8005584:	701a      	strb	r2, [r3, #0]
 8005586:	4b63      	ldr	r3, [pc, #396]	@ (8005714 <HAL_RCC_ClockConfig+0x1b8>)
 8005588:	681b      	ldr	r3, [r3, #0]
 800558a:	f003 030f 	and.w	r3, r3, #15
 800558e:	683a      	ldr	r2, [r7, #0]
 8005590:	429a      	cmp	r2, r3
 8005592:	d001      	beq.n	8005598 <HAL_RCC_ClockConfig+0x3c>
 8005594:	2301      	movs	r3, #1
 8005596:	e0b8      	b.n	800570a <HAL_RCC_ClockConfig+0x1ae>
 8005598:	687b      	ldr	r3, [r7, #4]
 800559a:	681b      	ldr	r3, [r3, #0]
 800559c:	f003 0302 	and.w	r3, r3, #2
 80055a0:	2b00      	cmp	r3, #0
 80055a2:	d020      	beq.n	80055e6 <HAL_RCC_ClockConfig+0x8a>
 80055a4:	687b      	ldr	r3, [r7, #4]
 80055a6:	681b      	ldr	r3, [r3, #0]
 80055a8:	f003 0304 	and.w	r3, r3, #4
 80055ac:	2b00      	cmp	r3, #0
 80055ae:	d005      	beq.n	80055bc <HAL_RCC_ClockConfig+0x60>
 80055b0:	4b59      	ldr	r3, [pc, #356]	@ (8005718 <HAL_RCC_ClockConfig+0x1bc>)
 80055b2:	689b      	ldr	r3, [r3, #8]
 80055b4:	4a58      	ldr	r2, [pc, #352]	@ (8005718 <HAL_RCC_ClockConfig+0x1bc>)
 80055b6:	f443 53e0 	orr.w	r3, r3, #7168	@ 0x1c00
 80055ba:	6093      	str	r3, [r2, #8]
 80055bc:	687b      	ldr	r3, [r7, #4]
 80055be:	681b      	ldr	r3, [r3, #0]
 80055c0:	f003 0308 	and.w	r3, r3, #8
 80055c4:	2b00      	cmp	r3, #0
 80055c6:	d005      	beq.n	80055d4 <HAL_RCC_ClockConfig+0x78>
 80055c8:	4b53      	ldr	r3, [pc, #332]	@ (8005718 <HAL_RCC_ClockConfig+0x1bc>)
 80055ca:	689b      	ldr	r3, [r3, #8]
 80055cc:	4a52      	ldr	r2, [pc, #328]	@ (8005718 <HAL_RCC_ClockConfig+0x1bc>)
 80055ce:	f443 4360 	orr.w	r3, r3, #57344	@ 0xe000
 80055d2:	6093      	str	r3, [r2, #8]
 80055d4:	4b50      	ldr	r3, [pc, #320]	@ (8005718 <HAL_RCC_ClockConfig+0x1bc>)
 80055d6:	689b      	ldr	r3, [r3, #8]
 80055d8:	f023 02f0 	bic.w	r2, r3, #240	@ 0xf0
 80055dc:	687b      	ldr	r3, [r7, #4]
 80055de:	689b      	ldr	r3, [r3, #8]
 80055e0:	494d      	ldr	r1, [pc, #308]	@ (8005718 <HAL_RCC_ClockConfig+0x1bc>)
 80055e2:	4313      	orrs	r3, r2
 80055e4:	608b      	str	r3, [r1, #8]
 80055e6:	687b      	ldr	r3, [r7, #4]
 80055e8:	681b      	ldr	r3, [r3, #0]
 80055ea:	f003 0301 	and.w	r3, r3, #1
 80055ee:	2b00      	cmp	r3, #0
 80055f0:	d044      	beq.n	800567c <HAL_RCC_ClockConfig+0x120>
 80055f2:	687b      	ldr	r3, [r7, #4]
 80055f4:	685b      	ldr	r3, [r3, #4]
 80055f6:	2b01      	cmp	r3, #1
 80055f8:	d107      	bne.n	800560a <HAL_RCC_ClockConfig+0xae>
 80055fa:	4b47      	ldr	r3, [pc, #284]	@ (8005718 <HAL_RCC_ClockConfig+0x1bc>)
 80055fc:	681b      	ldr	r3, [r3, #0]
 80055fe:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8005602:	2b00      	cmp	r3, #0
 8005604:	d119      	bne.n	800563a <HAL_RCC_ClockConfig+0xde>
 8005606:	2301      	movs	r3, #1
 8005608:	e07f      	b.n	800570a <HAL_RCC_ClockConfig+0x1ae>
 800560a:	687b      	ldr	r3, [r7, #4]
 800560c:	685b      	ldr	r3, [r3, #4]
 800560e:	2b02      	cmp	r3, #2
 8005610:	d003      	beq.n	800561a <HAL_RCC_ClockConfig+0xbe>
 8005612:	687b      	ldr	r3, [r7, #4]
 8005614:	685b      	ldr	r3, [r3, #4]
 8005616:	2b03      	cmp	r3, #3
 8005618:	d107      	bne.n	800562a <HAL_RCC_ClockConfig+0xce>
 800561a:	4b3f      	ldr	r3, [pc, #252]	@ (8005718 <HAL_RCC_ClockConfig+0x1bc>)
 800561c:	681b      	ldr	r3, [r3, #0]
 800561e:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8005622:	2b00      	cmp	r3, #0
 8005624:	d109      	bne.n	800563a <HAL_RCC_ClockConfig+0xde>
 8005626:	2301      	movs	r3, #1
 8005628:	e06f      	b.n	800570a <HAL_RCC_ClockConfig+0x1ae>
 800562a:	4b3b      	ldr	r3, [pc, #236]	@ (8005718 <HAL_RCC_ClockConfig+0x1bc>)
 800562c:	681b      	ldr	r3, [r3, #0]
 800562e:	f003 0302 	and.w	r3, r3, #2
 8005632:	2b00      	cmp	r3, #0
 8005634:	d101      	bne.n	800563a <HAL_RCC_ClockConfig+0xde>
 8005636:	2301      	movs	r3, #1
 8005638:	e067      	b.n	800570a <HAL_RCC_ClockConfig+0x1ae>
 800563a:	4b37      	ldr	r3, [pc, #220]	@ (8005718 <HAL_RCC_ClockConfig+0x1bc>)
 800563c:	689b      	ldr	r3, [r3, #8]
 800563e:	f023 0203 	bic.w	r2, r3, #3
 8005642:	687b      	ldr	r3, [r7, #4]
 8005644:	685b      	ldr	r3, [r3, #4]
 8005646:	4934      	ldr	r1, [pc, #208]	@ (8005718 <HAL_RCC_ClockConfig+0x1bc>)
 8005648:	4313      	orrs	r3, r2
 800564a:	608b      	str	r3, [r1, #8]
 800564c:	f7fe f830 	bl	80036b0 <HAL_GetTick>
 8005650:	60f8      	str	r0, [r7, #12]
 8005652:	e00a      	b.n	800566a <HAL_RCC_ClockConfig+0x10e>
 8005654:	f7fe f82c 	bl	80036b0 <HAL_GetTick>
 8005658:	4602      	mov	r2, r0
 800565a:	68fb      	ldr	r3, [r7, #12]
 800565c:	1ad3      	subs	r3, r2, r3
 800565e:	f241 3288 	movw	r2, #5000	@ 0x1388
 8005662:	4293      	cmp	r3, r2
 8005664:	d901      	bls.n	800566a <HAL_RCC_ClockConfig+0x10e>
 8005666:	2303      	movs	r3, #3
 8005668:	e04f      	b.n	800570a <HAL_RCC_ClockConfig+0x1ae>
 800566a:	4b2b      	ldr	r3, [pc, #172]	@ (8005718 <HAL_RCC_ClockConfig+0x1bc>)
 800566c:	689b      	ldr	r3, [r3, #8]
 800566e:	f003 020c 	and.w	r2, r3, #12
 8005672:	687b      	ldr	r3, [r7, #4]
 8005674:	685b      	ldr	r3, [r3, #4]
 8005676:	009b      	lsls	r3, r3, #2
 8005678:	429a      	cmp	r2, r3
 800567a:	d1eb      	bne.n	8005654 <HAL_RCC_ClockConfig+0xf8>
 800567c:	4b25      	ldr	r3, [pc, #148]	@ (8005714 <HAL_RCC_ClockConfig+0x1b8>)
 800567e:	681b      	ldr	r3, [r3, #0]
 8005680:	f003 030f 	and.w	r3, r3, #15
 8005684:	683a      	ldr	r2, [r7, #0]
 8005686:	429a      	cmp	r2, r3
 8005688:	d20c      	bcs.n	80056a4 <HAL_RCC_ClockConfig+0x148>
 800568a:	4b22      	ldr	r3, [pc, #136]	@ (8005714 <HAL_RCC_ClockConfig+0x1b8>)
 800568c:	683a      	ldr	r2, [r7, #0]
 800568e:	b2d2      	uxtb	r2, r2
 8005690:	701a      	strb	r2, [r3, #0]
 8005692:	4b20      	ldr	r3, [pc, #128]	@ (8005714 <HAL_RCC_ClockConfig+0x1b8>)
 8005694:	681b      	ldr	r3, [r3, #0]
 8005696:	f003 030f 	and.w	r3, r3, #15
 800569a:	683a      	ldr	r2, [r7, #0]
 800569c:	429a      	cmp	r2, r3
 800569e:	d001      	beq.n	80056a4 <HAL_RCC_ClockConfig+0x148>
 80056a0:	2301      	movs	r3, #1
 80056a2:	e032      	b.n	800570a <HAL_RCC_ClockConfig+0x1ae>
 80056a4:	687b      	ldr	r3, [r7, #4]
 80056a6:	681b      	ldr	r3, [r3, #0]
 80056a8:	f003 0304 	and.w	r3, r3, #4
 80056ac:	2b00      	cmp	r3, #0
 80056ae:	d008      	beq.n	80056c2 <HAL_RCC_ClockConfig+0x166>
 80056b0:	4b19      	ldr	r3, [pc, #100]	@ (8005718 <HAL_RCC_ClockConfig+0x1bc>)
 80056b2:	689b      	ldr	r3, [r3, #8]
 80056b4:	f423 52e0 	bic.w	r2, r3, #7168	@ 0x1c00
 80056b8:	687b      	ldr	r3, [r7, #4]
 80056ba:	68db      	ldr	r3, [r3, #12]
 80056bc:	4916      	ldr	r1, [pc, #88]	@ (8005718 <HAL_RCC_ClockConfig+0x1bc>)
 80056be:	4313      	orrs	r3, r2
 80056c0:	608b      	str	r3, [r1, #8]
 80056c2:	687b      	ldr	r3, [r7, #4]
 80056c4:	681b      	ldr	r3, [r3, #0]
 80056c6:	f003 0308 	and.w	r3, r3, #8
 80056ca:	2b00      	cmp	r3, #0
 80056cc:	d009      	beq.n	80056e2 <HAL_RCC_ClockConfig+0x186>
 80056ce:	4b12      	ldr	r3, [pc, #72]	@ (8005718 <HAL_RCC_ClockConfig+0x1bc>)
 80056d0:	689b      	ldr	r3, [r3, #8]
 80056d2:	f423 4260 	bic.w	r2, r3, #57344	@ 0xe000
 80056d6:	687b      	ldr	r3, [r7, #4]
 80056d8:	691b      	ldr	r3, [r3, #16]
 80056da:	00db      	lsls	r3, r3, #3
 80056dc:	490e      	ldr	r1, [pc, #56]	@ (8005718 <HAL_RCC_ClockConfig+0x1bc>)
 80056de:	4313      	orrs	r3, r2
 80056e0:	608b      	str	r3, [r1, #8]
 80056e2:	f000 f855 	bl	8005790 <HAL_RCC_GetSysClockFreq>
 80056e6:	4602      	mov	r2, r0
 80056e8:	4b0b      	ldr	r3, [pc, #44]	@ (8005718 <HAL_RCC_ClockConfig+0x1bc>)
 80056ea:	689b      	ldr	r3, [r3, #8]
 80056ec:	091b      	lsrs	r3, r3, #4
 80056ee:	f003 030f 	and.w	r3, r3, #15
 80056f2:	490a      	ldr	r1, [pc, #40]	@ (800571c <HAL_RCC_ClockConfig+0x1c0>)
 80056f4:	5ccb      	ldrb	r3, [r1, r3]
 80056f6:	fa22 f303 	lsr.w	r3, r2, r3
 80056fa:	4a09      	ldr	r2, [pc, #36]	@ (8005720 <HAL_RCC_ClockConfig+0x1c4>)
 80056fc:	6013      	str	r3, [r2, #0]
 80056fe:	4b09      	ldr	r3, [pc, #36]	@ (8005724 <HAL_RCC_ClockConfig+0x1c8>)
 8005700:	681b      	ldr	r3, [r3, #0]
 8005702:	4618      	mov	r0, r3
 8005704:	f7fd ff90 	bl	8003628 <HAL_InitTick>
 8005708:	2300      	movs	r3, #0
 800570a:	4618      	mov	r0, r3
 800570c:	3710      	adds	r7, #16
 800570e:	46bd      	mov	sp, r7
 8005710:	bd80      	pop	{r7, pc}
 8005712:	bf00      	nop
 8005714:	40023c00 	.word	0x40023c00
 8005718:	40023800 	.word	0x40023800
 800571c:	0800d010 	.word	0x0800d010
 8005720:	20000028 	.word	0x20000028
 8005724:	2000002c 	.word	0x2000002c

08005728 <HAL_RCC_GetHCLKFreq>:
 8005728:	b480      	push	{r7}
 800572a:	af00      	add	r7, sp, #0
 800572c:	4b03      	ldr	r3, [pc, #12]	@ (800573c <HAL_RCC_GetHCLKFreq+0x14>)
 800572e:	681b      	ldr	r3, [r3, #0]
 8005730:	4618      	mov	r0, r3
 8005732:	46bd      	mov	sp, r7
 8005734:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005738:	4770      	bx	lr
 800573a:	bf00      	nop
 800573c:	20000028 	.word	0x20000028

08005740 <HAL_RCC_GetPCLK1Freq>:
 8005740:	b580      	push	{r7, lr}
 8005742:	af00      	add	r7, sp, #0
 8005744:	f7ff fff0 	bl	8005728 <HAL_RCC_GetHCLKFreq>
 8005748:	4602      	mov	r2, r0
 800574a:	4b05      	ldr	r3, [pc, #20]	@ (8005760 <HAL_RCC_GetPCLK1Freq+0x20>)
 800574c:	689b      	ldr	r3, [r3, #8]
 800574e:	0a9b      	lsrs	r3, r3, #10
 8005750:	f003 0307 	and.w	r3, r3, #7
 8005754:	4903      	ldr	r1, [pc, #12]	@ (8005764 <HAL_RCC_GetPCLK1Freq+0x24>)
 8005756:	5ccb      	ldrb	r3, [r1, r3]
 8005758:	fa22 f303 	lsr.w	r3, r2, r3
 800575c:	4618      	mov	r0, r3
 800575e:	bd80      	pop	{r7, pc}
 8005760:	40023800 	.word	0x40023800
 8005764:	0800d020 	.word	0x0800d020

08005768 <HAL_RCC_GetPCLK2Freq>:
 8005768:	b580      	push	{r7, lr}
 800576a:	af00      	add	r7, sp, #0
 800576c:	f7ff ffdc 	bl	8005728 <HAL_RCC_GetHCLKFreq>
 8005770:	4602      	mov	r2, r0
 8005772:	4b05      	ldr	r3, [pc, #20]	@ (8005788 <HAL_RCC_GetPCLK2Freq+0x20>)
 8005774:	689b      	ldr	r3, [r3, #8]
 8005776:	0b5b      	lsrs	r3, r3, #13
 8005778:	f003 0307 	and.w	r3, r3, #7
 800577c:	4903      	ldr	r1, [pc, #12]	@ (800578c <HAL_RCC_GetPCLK2Freq+0x24>)
 800577e:	5ccb      	ldrb	r3, [r1, r3]
 8005780:	fa22 f303 	lsr.w	r3, r2, r3
 8005784:	4618      	mov	r0, r3
 8005786:	bd80      	pop	{r7, pc}
 8005788:	40023800 	.word	0x40023800
 800578c:	0800d020 	.word	0x0800d020

08005790 <HAL_RCC_GetSysClockFreq>:
 8005790:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 8005794:	b0ae      	sub	sp, #184	@ 0xb8
 8005796:	af00      	add	r7, sp, #0
 8005798:	2300      	movs	r3, #0
 800579a:	f8c7 30ac 	str.w	r3, [r7, #172]	@ 0xac
 800579e:	2300      	movs	r3, #0
 80057a0:	f8c7 30b4 	str.w	r3, [r7, #180]	@ 0xb4
 80057a4:	2300      	movs	r3, #0
 80057a6:	f8c7 30a8 	str.w	r3, [r7, #168]	@ 0xa8
 80057aa:	2300      	movs	r3, #0
 80057ac:	f8c7 30a4 	str.w	r3, [r7, #164]	@ 0xa4
 80057b0:	2300      	movs	r3, #0
 80057b2:	f8c7 30b0 	str.w	r3, [r7, #176]	@ 0xb0
 80057b6:	4bcb      	ldr	r3, [pc, #812]	@ (8005ae4 <HAL_RCC_GetSysClockFreq+0x354>)
 80057b8:	689b      	ldr	r3, [r3, #8]
 80057ba:	f003 030c 	and.w	r3, r3, #12
 80057be:	2b0c      	cmp	r3, #12
 80057c0:	f200 8206 	bhi.w	8005bd0 <HAL_RCC_GetSysClockFreq+0x440>
 80057c4:	a201      	add	r2, pc, #4	@ (adr r2, 80057cc <HAL_RCC_GetSysClockFreq+0x3c>)
 80057c6:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80057ca:	bf00      	nop
 80057cc:	08005801 	.word	0x08005801
 80057d0:	08005bd1 	.word	0x08005bd1
 80057d4:	08005bd1 	.word	0x08005bd1
 80057d8:	08005bd1 	.word	0x08005bd1
 80057dc:	08005809 	.word	0x08005809
 80057e0:	08005bd1 	.word	0x08005bd1
 80057e4:	08005bd1 	.word	0x08005bd1
 80057e8:	08005bd1 	.word	0x08005bd1
 80057ec:	08005811 	.word	0x08005811
 80057f0:	08005bd1 	.word	0x08005bd1
 80057f4:	08005bd1 	.word	0x08005bd1
 80057f8:	08005bd1 	.word	0x08005bd1
 80057fc:	08005a01 	.word	0x08005a01
 8005800:	4bb9      	ldr	r3, [pc, #740]	@ (8005ae8 <HAL_RCC_GetSysClockFreq+0x358>)
 8005802:	f8c7 30b0 	str.w	r3, [r7, #176]	@ 0xb0
 8005806:	e1e7      	b.n	8005bd8 <HAL_RCC_GetSysClockFreq+0x448>
 8005808:	4bb8      	ldr	r3, [pc, #736]	@ (8005aec <HAL_RCC_GetSysClockFreq+0x35c>)
 800580a:	f8c7 30b0 	str.w	r3, [r7, #176]	@ 0xb0
 800580e:	e1e3      	b.n	8005bd8 <HAL_RCC_GetSysClockFreq+0x448>
 8005810:	4bb4      	ldr	r3, [pc, #720]	@ (8005ae4 <HAL_RCC_GetSysClockFreq+0x354>)
 8005812:	685b      	ldr	r3, [r3, #4]
 8005814:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 8005818:	f8c7 30ac 	str.w	r3, [r7, #172]	@ 0xac
 800581c:	4bb1      	ldr	r3, [pc, #708]	@ (8005ae4 <HAL_RCC_GetSysClockFreq+0x354>)
 800581e:	685b      	ldr	r3, [r3, #4]
 8005820:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 8005824:	2b00      	cmp	r3, #0
 8005826:	d071      	beq.n	800590c <HAL_RCC_GetSysClockFreq+0x17c>
 8005828:	4bae      	ldr	r3, [pc, #696]	@ (8005ae4 <HAL_RCC_GetSysClockFreq+0x354>)
 800582a:	685b      	ldr	r3, [r3, #4]
 800582c:	099b      	lsrs	r3, r3, #6
 800582e:	2200      	movs	r2, #0
 8005830:	f8c7 3098 	str.w	r3, [r7, #152]	@ 0x98
 8005834:	f8c7 209c 	str.w	r2, [r7, #156]	@ 0x9c
 8005838:	f8d7 3098 	ldr.w	r3, [r7, #152]	@ 0x98
 800583c:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8005840:	f8c7 3090 	str.w	r3, [r7, #144]	@ 0x90
 8005844:	2300      	movs	r3, #0
 8005846:	f8c7 3094 	str.w	r3, [r7, #148]	@ 0x94
 800584a:	e9d7 4524 	ldrd	r4, r5, [r7, #144]	@ 0x90
 800584e:	4622      	mov	r2, r4
 8005850:	462b      	mov	r3, r5
 8005852:	f04f 0000 	mov.w	r0, #0
 8005856:	f04f 0100 	mov.w	r1, #0
 800585a:	0159      	lsls	r1, r3, #5
 800585c:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 8005860:	0150      	lsls	r0, r2, #5
 8005862:	4602      	mov	r2, r0
 8005864:	460b      	mov	r3, r1
 8005866:	4621      	mov	r1, r4
 8005868:	1a51      	subs	r1, r2, r1
 800586a:	6439      	str	r1, [r7, #64]	@ 0x40
 800586c:	4629      	mov	r1, r5
 800586e:	eb63 0301 	sbc.w	r3, r3, r1
 8005872:	647b      	str	r3, [r7, #68]	@ 0x44
 8005874:	f04f 0200 	mov.w	r2, #0
 8005878:	f04f 0300 	mov.w	r3, #0
 800587c:	e9d7 8910 	ldrd	r8, r9, [r7, #64]	@ 0x40
 8005880:	4649      	mov	r1, r9
 8005882:	018b      	lsls	r3, r1, #6
 8005884:	4641      	mov	r1, r8
 8005886:	ea43 6391 	orr.w	r3, r3, r1, lsr #26
 800588a:	4641      	mov	r1, r8
 800588c:	018a      	lsls	r2, r1, #6
 800588e:	4641      	mov	r1, r8
 8005890:	1a51      	subs	r1, r2, r1
 8005892:	63b9      	str	r1, [r7, #56]	@ 0x38
 8005894:	4649      	mov	r1, r9
 8005896:	eb63 0301 	sbc.w	r3, r3, r1
 800589a:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800589c:	f04f 0200 	mov.w	r2, #0
 80058a0:	f04f 0300 	mov.w	r3, #0
 80058a4:	e9d7 890e 	ldrd	r8, r9, [r7, #56]	@ 0x38
 80058a8:	4649      	mov	r1, r9
 80058aa:	00cb      	lsls	r3, r1, #3
 80058ac:	4641      	mov	r1, r8
 80058ae:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 80058b2:	4641      	mov	r1, r8
 80058b4:	00ca      	lsls	r2, r1, #3
 80058b6:	4610      	mov	r0, r2
 80058b8:	4619      	mov	r1, r3
 80058ba:	4603      	mov	r3, r0
 80058bc:	4622      	mov	r2, r4
 80058be:	189b      	adds	r3, r3, r2
 80058c0:	633b      	str	r3, [r7, #48]	@ 0x30
 80058c2:	462b      	mov	r3, r5
 80058c4:	460a      	mov	r2, r1
 80058c6:	eb42 0303 	adc.w	r3, r2, r3
 80058ca:	637b      	str	r3, [r7, #52]	@ 0x34
 80058cc:	f04f 0200 	mov.w	r2, #0
 80058d0:	f04f 0300 	mov.w	r3, #0
 80058d4:	e9d7 450c 	ldrd	r4, r5, [r7, #48]	@ 0x30
 80058d8:	4629      	mov	r1, r5
 80058da:	024b      	lsls	r3, r1, #9
 80058dc:	4621      	mov	r1, r4
 80058de:	ea43 53d1 	orr.w	r3, r3, r1, lsr #23
 80058e2:	4621      	mov	r1, r4
 80058e4:	024a      	lsls	r2, r1, #9
 80058e6:	4610      	mov	r0, r2
 80058e8:	4619      	mov	r1, r3
 80058ea:	f8d7 30ac 	ldr.w	r3, [r7, #172]	@ 0xac
 80058ee:	2200      	movs	r2, #0
 80058f0:	f8c7 3088 	str.w	r3, [r7, #136]	@ 0x88
 80058f4:	f8c7 208c 	str.w	r2, [r7, #140]	@ 0x8c
 80058f8:	e9d7 2322 	ldrd	r2, r3, [r7, #136]	@ 0x88
 80058fc:	f7fb f9e4 	bl	8000cc8 <__aeabi_uldivmod>
 8005900:	4602      	mov	r2, r0
 8005902:	460b      	mov	r3, r1
 8005904:	4613      	mov	r3, r2
 8005906:	f8c7 30b4 	str.w	r3, [r7, #180]	@ 0xb4
 800590a:	e067      	b.n	80059dc <HAL_RCC_GetSysClockFreq+0x24c>
 800590c:	4b75      	ldr	r3, [pc, #468]	@ (8005ae4 <HAL_RCC_GetSysClockFreq+0x354>)
 800590e:	685b      	ldr	r3, [r3, #4]
 8005910:	099b      	lsrs	r3, r3, #6
 8005912:	2200      	movs	r2, #0
 8005914:	f8c7 3080 	str.w	r3, [r7, #128]	@ 0x80
 8005918:	f8c7 2084 	str.w	r2, [r7, #132]	@ 0x84
 800591c:	f8d7 3080 	ldr.w	r3, [r7, #128]	@ 0x80
 8005920:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8005924:	67bb      	str	r3, [r7, #120]	@ 0x78
 8005926:	2300      	movs	r3, #0
 8005928:	67fb      	str	r3, [r7, #124]	@ 0x7c
 800592a:	e9d7 451e 	ldrd	r4, r5, [r7, #120]	@ 0x78
 800592e:	4622      	mov	r2, r4
 8005930:	462b      	mov	r3, r5
 8005932:	f04f 0000 	mov.w	r0, #0
 8005936:	f04f 0100 	mov.w	r1, #0
 800593a:	0159      	lsls	r1, r3, #5
 800593c:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 8005940:	0150      	lsls	r0, r2, #5
 8005942:	4602      	mov	r2, r0
 8005944:	460b      	mov	r3, r1
 8005946:	4621      	mov	r1, r4
 8005948:	1a51      	subs	r1, r2, r1
 800594a:	62b9      	str	r1, [r7, #40]	@ 0x28
 800594c:	4629      	mov	r1, r5
 800594e:	eb63 0301 	sbc.w	r3, r3, r1
 8005952:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8005954:	f04f 0200 	mov.w	r2, #0
 8005958:	f04f 0300 	mov.w	r3, #0
 800595c:	e9d7 890a 	ldrd	r8, r9, [r7, #40]	@ 0x28
 8005960:	4649      	mov	r1, r9
 8005962:	018b      	lsls	r3, r1, #6
 8005964:	4641      	mov	r1, r8
 8005966:	ea43 6391 	orr.w	r3, r3, r1, lsr #26
 800596a:	4641      	mov	r1, r8
 800596c:	018a      	lsls	r2, r1, #6
 800596e:	4641      	mov	r1, r8
 8005970:	ebb2 0a01 	subs.w	sl, r2, r1
 8005974:	4649      	mov	r1, r9
 8005976:	eb63 0b01 	sbc.w	fp, r3, r1
 800597a:	f04f 0200 	mov.w	r2, #0
 800597e:	f04f 0300 	mov.w	r3, #0
 8005982:	ea4f 03cb 	mov.w	r3, fp, lsl #3
 8005986:	ea43 735a 	orr.w	r3, r3, sl, lsr #29
 800598a:	ea4f 02ca 	mov.w	r2, sl, lsl #3
 800598e:	4692      	mov	sl, r2
 8005990:	469b      	mov	fp, r3
 8005992:	4623      	mov	r3, r4
 8005994:	eb1a 0303 	adds.w	r3, sl, r3
 8005998:	623b      	str	r3, [r7, #32]
 800599a:	462b      	mov	r3, r5
 800599c:	eb4b 0303 	adc.w	r3, fp, r3
 80059a0:	627b      	str	r3, [r7, #36]	@ 0x24
 80059a2:	f04f 0200 	mov.w	r2, #0
 80059a6:	f04f 0300 	mov.w	r3, #0
 80059aa:	e9d7 4508 	ldrd	r4, r5, [r7, #32]
 80059ae:	4629      	mov	r1, r5
 80059b0:	028b      	lsls	r3, r1, #10
 80059b2:	4621      	mov	r1, r4
 80059b4:	ea43 5391 	orr.w	r3, r3, r1, lsr #22
 80059b8:	4621      	mov	r1, r4
 80059ba:	028a      	lsls	r2, r1, #10
 80059bc:	4610      	mov	r0, r2
 80059be:	4619      	mov	r1, r3
 80059c0:	f8d7 30ac 	ldr.w	r3, [r7, #172]	@ 0xac
 80059c4:	2200      	movs	r2, #0
 80059c6:	673b      	str	r3, [r7, #112]	@ 0x70
 80059c8:	677a      	str	r2, [r7, #116]	@ 0x74
 80059ca:	e9d7 231c 	ldrd	r2, r3, [r7, #112]	@ 0x70
 80059ce:	f7fb f97b 	bl	8000cc8 <__aeabi_uldivmod>
 80059d2:	4602      	mov	r2, r0
 80059d4:	460b      	mov	r3, r1
 80059d6:	4613      	mov	r3, r2
 80059d8:	f8c7 30b4 	str.w	r3, [r7, #180]	@ 0xb4
 80059dc:	4b41      	ldr	r3, [pc, #260]	@ (8005ae4 <HAL_RCC_GetSysClockFreq+0x354>)
 80059de:	685b      	ldr	r3, [r3, #4]
 80059e0:	0c1b      	lsrs	r3, r3, #16
 80059e2:	f003 0303 	and.w	r3, r3, #3
 80059e6:	3301      	adds	r3, #1
 80059e8:	005b      	lsls	r3, r3, #1
 80059ea:	f8c7 30a8 	str.w	r3, [r7, #168]	@ 0xa8
 80059ee:	f8d7 20b4 	ldr.w	r2, [r7, #180]	@ 0xb4
 80059f2:	f8d7 30a8 	ldr.w	r3, [r7, #168]	@ 0xa8
 80059f6:	fbb2 f3f3 	udiv	r3, r2, r3
 80059fa:	f8c7 30b0 	str.w	r3, [r7, #176]	@ 0xb0
 80059fe:	e0eb      	b.n	8005bd8 <HAL_RCC_GetSysClockFreq+0x448>
 8005a00:	4b38      	ldr	r3, [pc, #224]	@ (8005ae4 <HAL_RCC_GetSysClockFreq+0x354>)
 8005a02:	685b      	ldr	r3, [r3, #4]
 8005a04:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 8005a08:	f8c7 30ac 	str.w	r3, [r7, #172]	@ 0xac
 8005a0c:	4b35      	ldr	r3, [pc, #212]	@ (8005ae4 <HAL_RCC_GetSysClockFreq+0x354>)
 8005a0e:	685b      	ldr	r3, [r3, #4]
 8005a10:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 8005a14:	2b00      	cmp	r3, #0
 8005a16:	d06b      	beq.n	8005af0 <HAL_RCC_GetSysClockFreq+0x360>
 8005a18:	4b32      	ldr	r3, [pc, #200]	@ (8005ae4 <HAL_RCC_GetSysClockFreq+0x354>)
 8005a1a:	685b      	ldr	r3, [r3, #4]
 8005a1c:	099b      	lsrs	r3, r3, #6
 8005a1e:	2200      	movs	r2, #0
 8005a20:	66bb      	str	r3, [r7, #104]	@ 0x68
 8005a22:	66fa      	str	r2, [r7, #108]	@ 0x6c
 8005a24:	6ebb      	ldr	r3, [r7, #104]	@ 0x68
 8005a26:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8005a2a:	663b      	str	r3, [r7, #96]	@ 0x60
 8005a2c:	2300      	movs	r3, #0
 8005a2e:	667b      	str	r3, [r7, #100]	@ 0x64
 8005a30:	e9d7 4518 	ldrd	r4, r5, [r7, #96]	@ 0x60
 8005a34:	4622      	mov	r2, r4
 8005a36:	462b      	mov	r3, r5
 8005a38:	f04f 0000 	mov.w	r0, #0
 8005a3c:	f04f 0100 	mov.w	r1, #0
 8005a40:	0159      	lsls	r1, r3, #5
 8005a42:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 8005a46:	0150      	lsls	r0, r2, #5
 8005a48:	4602      	mov	r2, r0
 8005a4a:	460b      	mov	r3, r1
 8005a4c:	4621      	mov	r1, r4
 8005a4e:	1a51      	subs	r1, r2, r1
 8005a50:	61b9      	str	r1, [r7, #24]
 8005a52:	4629      	mov	r1, r5
 8005a54:	eb63 0301 	sbc.w	r3, r3, r1
 8005a58:	61fb      	str	r3, [r7, #28]
 8005a5a:	f04f 0200 	mov.w	r2, #0
 8005a5e:	f04f 0300 	mov.w	r3, #0
 8005a62:	e9d7 ab06 	ldrd	sl, fp, [r7, #24]
 8005a66:	4659      	mov	r1, fp
 8005a68:	018b      	lsls	r3, r1, #6
 8005a6a:	4651      	mov	r1, sl
 8005a6c:	ea43 6391 	orr.w	r3, r3, r1, lsr #26
 8005a70:	4651      	mov	r1, sl
 8005a72:	018a      	lsls	r2, r1, #6
 8005a74:	4651      	mov	r1, sl
 8005a76:	ebb2 0801 	subs.w	r8, r2, r1
 8005a7a:	4659      	mov	r1, fp
 8005a7c:	eb63 0901 	sbc.w	r9, r3, r1
 8005a80:	f04f 0200 	mov.w	r2, #0
 8005a84:	f04f 0300 	mov.w	r3, #0
 8005a88:	ea4f 03c9 	mov.w	r3, r9, lsl #3
 8005a8c:	ea43 7358 	orr.w	r3, r3, r8, lsr #29
 8005a90:	ea4f 02c8 	mov.w	r2, r8, lsl #3
 8005a94:	4690      	mov	r8, r2
 8005a96:	4699      	mov	r9, r3
 8005a98:	4623      	mov	r3, r4
 8005a9a:	eb18 0303 	adds.w	r3, r8, r3
 8005a9e:	613b      	str	r3, [r7, #16]
 8005aa0:	462b      	mov	r3, r5
 8005aa2:	eb49 0303 	adc.w	r3, r9, r3
 8005aa6:	617b      	str	r3, [r7, #20]
 8005aa8:	f04f 0200 	mov.w	r2, #0
 8005aac:	f04f 0300 	mov.w	r3, #0
 8005ab0:	e9d7 4504 	ldrd	r4, r5, [r7, #16]
 8005ab4:	4629      	mov	r1, r5
 8005ab6:	024b      	lsls	r3, r1, #9
 8005ab8:	4621      	mov	r1, r4
 8005aba:	ea43 53d1 	orr.w	r3, r3, r1, lsr #23
 8005abe:	4621      	mov	r1, r4
 8005ac0:	024a      	lsls	r2, r1, #9
 8005ac2:	4610      	mov	r0, r2
 8005ac4:	4619      	mov	r1, r3
 8005ac6:	f8d7 30ac 	ldr.w	r3, [r7, #172]	@ 0xac
 8005aca:	2200      	movs	r2, #0
 8005acc:	65bb      	str	r3, [r7, #88]	@ 0x58
 8005ace:	65fa      	str	r2, [r7, #92]	@ 0x5c
 8005ad0:	e9d7 2316 	ldrd	r2, r3, [r7, #88]	@ 0x58
 8005ad4:	f7fb f8f8 	bl	8000cc8 <__aeabi_uldivmod>
 8005ad8:	4602      	mov	r2, r0
 8005ada:	460b      	mov	r3, r1
 8005adc:	4613      	mov	r3, r2
 8005ade:	f8c7 30b4 	str.w	r3, [r7, #180]	@ 0xb4
 8005ae2:	e065      	b.n	8005bb0 <HAL_RCC_GetSysClockFreq+0x420>
 8005ae4:	40023800 	.word	0x40023800
 8005ae8:	00f42400 	.word	0x00f42400
 8005aec:	007a1200 	.word	0x007a1200
 8005af0:	4b3d      	ldr	r3, [pc, #244]	@ (8005be8 <HAL_RCC_GetSysClockFreq+0x458>)
 8005af2:	685b      	ldr	r3, [r3, #4]
 8005af4:	099b      	lsrs	r3, r3, #6
 8005af6:	2200      	movs	r2, #0
 8005af8:	4618      	mov	r0, r3
 8005afa:	4611      	mov	r1, r2
 8005afc:	f3c0 0308 	ubfx	r3, r0, #0, #9
 8005b00:	653b      	str	r3, [r7, #80]	@ 0x50
 8005b02:	2300      	movs	r3, #0
 8005b04:	657b      	str	r3, [r7, #84]	@ 0x54
 8005b06:	e9d7 8914 	ldrd	r8, r9, [r7, #80]	@ 0x50
 8005b0a:	4642      	mov	r2, r8
 8005b0c:	464b      	mov	r3, r9
 8005b0e:	f04f 0000 	mov.w	r0, #0
 8005b12:	f04f 0100 	mov.w	r1, #0
 8005b16:	0159      	lsls	r1, r3, #5
 8005b18:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 8005b1c:	0150      	lsls	r0, r2, #5
 8005b1e:	4602      	mov	r2, r0
 8005b20:	460b      	mov	r3, r1
 8005b22:	4641      	mov	r1, r8
 8005b24:	1a51      	subs	r1, r2, r1
 8005b26:	60b9      	str	r1, [r7, #8]
 8005b28:	4649      	mov	r1, r9
 8005b2a:	eb63 0301 	sbc.w	r3, r3, r1
 8005b2e:	60fb      	str	r3, [r7, #12]
 8005b30:	f04f 0200 	mov.w	r2, #0
 8005b34:	f04f 0300 	mov.w	r3, #0
 8005b38:	e9d7 ab02 	ldrd	sl, fp, [r7, #8]
 8005b3c:	4659      	mov	r1, fp
 8005b3e:	018b      	lsls	r3, r1, #6
 8005b40:	4651      	mov	r1, sl
 8005b42:	ea43 6391 	orr.w	r3, r3, r1, lsr #26
 8005b46:	4651      	mov	r1, sl
 8005b48:	018a      	lsls	r2, r1, #6
 8005b4a:	4651      	mov	r1, sl
 8005b4c:	1a54      	subs	r4, r2, r1
 8005b4e:	4659      	mov	r1, fp
 8005b50:	eb63 0501 	sbc.w	r5, r3, r1
 8005b54:	f04f 0200 	mov.w	r2, #0
 8005b58:	f04f 0300 	mov.w	r3, #0
 8005b5c:	00eb      	lsls	r3, r5, #3
 8005b5e:	ea43 7354 	orr.w	r3, r3, r4, lsr #29
 8005b62:	00e2      	lsls	r2, r4, #3
 8005b64:	4614      	mov	r4, r2
 8005b66:	461d      	mov	r5, r3
 8005b68:	4643      	mov	r3, r8
 8005b6a:	18e3      	adds	r3, r4, r3
 8005b6c:	603b      	str	r3, [r7, #0]
 8005b6e:	464b      	mov	r3, r9
 8005b70:	eb45 0303 	adc.w	r3, r5, r3
 8005b74:	607b      	str	r3, [r7, #4]
 8005b76:	f04f 0200 	mov.w	r2, #0
 8005b7a:	f04f 0300 	mov.w	r3, #0
 8005b7e:	e9d7 4500 	ldrd	r4, r5, [r7]
 8005b82:	4629      	mov	r1, r5
 8005b84:	028b      	lsls	r3, r1, #10
 8005b86:	4621      	mov	r1, r4
 8005b88:	ea43 5391 	orr.w	r3, r3, r1, lsr #22
 8005b8c:	4621      	mov	r1, r4
 8005b8e:	028a      	lsls	r2, r1, #10
 8005b90:	4610      	mov	r0, r2
 8005b92:	4619      	mov	r1, r3
 8005b94:	f8d7 30ac 	ldr.w	r3, [r7, #172]	@ 0xac
 8005b98:	2200      	movs	r2, #0
 8005b9a:	64bb      	str	r3, [r7, #72]	@ 0x48
 8005b9c:	64fa      	str	r2, [r7, #76]	@ 0x4c
 8005b9e:	e9d7 2312 	ldrd	r2, r3, [r7, #72]	@ 0x48
 8005ba2:	f7fb f891 	bl	8000cc8 <__aeabi_uldivmod>
 8005ba6:	4602      	mov	r2, r0
 8005ba8:	460b      	mov	r3, r1
 8005baa:	4613      	mov	r3, r2
 8005bac:	f8c7 30b4 	str.w	r3, [r7, #180]	@ 0xb4
 8005bb0:	4b0d      	ldr	r3, [pc, #52]	@ (8005be8 <HAL_RCC_GetSysClockFreq+0x458>)
 8005bb2:	685b      	ldr	r3, [r3, #4]
 8005bb4:	0f1b      	lsrs	r3, r3, #28
 8005bb6:	f003 0307 	and.w	r3, r3, #7
 8005bba:	f8c7 30a4 	str.w	r3, [r7, #164]	@ 0xa4
 8005bbe:	f8d7 20b4 	ldr.w	r2, [r7, #180]	@ 0xb4
 8005bc2:	f8d7 30a4 	ldr.w	r3, [r7, #164]	@ 0xa4
 8005bc6:	fbb2 f3f3 	udiv	r3, r2, r3
 8005bca:	f8c7 30b0 	str.w	r3, [r7, #176]	@ 0xb0
 8005bce:	e003      	b.n	8005bd8 <HAL_RCC_GetSysClockFreq+0x448>
 8005bd0:	4b06      	ldr	r3, [pc, #24]	@ (8005bec <HAL_RCC_GetSysClockFreq+0x45c>)
 8005bd2:	f8c7 30b0 	str.w	r3, [r7, #176]	@ 0xb0
 8005bd6:	bf00      	nop
 8005bd8:	f8d7 30b0 	ldr.w	r3, [r7, #176]	@ 0xb0
 8005bdc:	4618      	mov	r0, r3
 8005bde:	37b8      	adds	r7, #184	@ 0xb8
 8005be0:	46bd      	mov	sp, r7
 8005be2:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 8005be6:	bf00      	nop
 8005be8:	40023800 	.word	0x40023800
 8005bec:	00f42400 	.word	0x00f42400

08005bf0 <HAL_RCC_OscConfig>:
 8005bf0:	b580      	push	{r7, lr}
 8005bf2:	b086      	sub	sp, #24
 8005bf4:	af00      	add	r7, sp, #0
 8005bf6:	6078      	str	r0, [r7, #4]
 8005bf8:	687b      	ldr	r3, [r7, #4]
 8005bfa:	2b00      	cmp	r3, #0
 8005bfc:	d101      	bne.n	8005c02 <HAL_RCC_OscConfig+0x12>
 8005bfe:	2301      	movs	r3, #1
 8005c00:	e28d      	b.n	800611e <HAL_RCC_OscConfig+0x52e>
 8005c02:	687b      	ldr	r3, [r7, #4]
 8005c04:	681b      	ldr	r3, [r3, #0]
 8005c06:	f003 0301 	and.w	r3, r3, #1
 8005c0a:	2b00      	cmp	r3, #0
 8005c0c:	f000 8083 	beq.w	8005d16 <HAL_RCC_OscConfig+0x126>
 8005c10:	4b94      	ldr	r3, [pc, #592]	@ (8005e64 <HAL_RCC_OscConfig+0x274>)
 8005c12:	689b      	ldr	r3, [r3, #8]
 8005c14:	f003 030c 	and.w	r3, r3, #12
 8005c18:	2b04      	cmp	r3, #4
 8005c1a:	d019      	beq.n	8005c50 <HAL_RCC_OscConfig+0x60>
 8005c1c:	4b91      	ldr	r3, [pc, #580]	@ (8005e64 <HAL_RCC_OscConfig+0x274>)
 8005c1e:	689b      	ldr	r3, [r3, #8]
 8005c20:	f003 030c 	and.w	r3, r3, #12
 8005c24:	2b08      	cmp	r3, #8
 8005c26:	d106      	bne.n	8005c36 <HAL_RCC_OscConfig+0x46>
 8005c28:	4b8e      	ldr	r3, [pc, #568]	@ (8005e64 <HAL_RCC_OscConfig+0x274>)
 8005c2a:	685b      	ldr	r3, [r3, #4]
 8005c2c:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 8005c30:	f5b3 0f80 	cmp.w	r3, #4194304	@ 0x400000
 8005c34:	d00c      	beq.n	8005c50 <HAL_RCC_OscConfig+0x60>
 8005c36:	4b8b      	ldr	r3, [pc, #556]	@ (8005e64 <HAL_RCC_OscConfig+0x274>)
 8005c38:	689b      	ldr	r3, [r3, #8]
 8005c3a:	f003 030c 	and.w	r3, r3, #12
 8005c3e:	2b0c      	cmp	r3, #12
 8005c40:	d112      	bne.n	8005c68 <HAL_RCC_OscConfig+0x78>
 8005c42:	4b88      	ldr	r3, [pc, #544]	@ (8005e64 <HAL_RCC_OscConfig+0x274>)
 8005c44:	685b      	ldr	r3, [r3, #4]
 8005c46:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 8005c4a:	f5b3 0f80 	cmp.w	r3, #4194304	@ 0x400000
 8005c4e:	d10b      	bne.n	8005c68 <HAL_RCC_OscConfig+0x78>
 8005c50:	4b84      	ldr	r3, [pc, #528]	@ (8005e64 <HAL_RCC_OscConfig+0x274>)
 8005c52:	681b      	ldr	r3, [r3, #0]
 8005c54:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8005c58:	2b00      	cmp	r3, #0
 8005c5a:	d05b      	beq.n	8005d14 <HAL_RCC_OscConfig+0x124>
 8005c5c:	687b      	ldr	r3, [r7, #4]
 8005c5e:	685b      	ldr	r3, [r3, #4]
 8005c60:	2b00      	cmp	r3, #0
 8005c62:	d157      	bne.n	8005d14 <HAL_RCC_OscConfig+0x124>
 8005c64:	2301      	movs	r3, #1
 8005c66:	e25a      	b.n	800611e <HAL_RCC_OscConfig+0x52e>
 8005c68:	687b      	ldr	r3, [r7, #4]
 8005c6a:	685b      	ldr	r3, [r3, #4]
 8005c6c:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 8005c70:	d106      	bne.n	8005c80 <HAL_RCC_OscConfig+0x90>
 8005c72:	4b7c      	ldr	r3, [pc, #496]	@ (8005e64 <HAL_RCC_OscConfig+0x274>)
 8005c74:	681b      	ldr	r3, [r3, #0]
 8005c76:	4a7b      	ldr	r2, [pc, #492]	@ (8005e64 <HAL_RCC_OscConfig+0x274>)
 8005c78:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8005c7c:	6013      	str	r3, [r2, #0]
 8005c7e:	e01d      	b.n	8005cbc <HAL_RCC_OscConfig+0xcc>
 8005c80:	687b      	ldr	r3, [r7, #4]
 8005c82:	685b      	ldr	r3, [r3, #4]
 8005c84:	f5b3 2fa0 	cmp.w	r3, #327680	@ 0x50000
 8005c88:	d10c      	bne.n	8005ca4 <HAL_RCC_OscConfig+0xb4>
 8005c8a:	4b76      	ldr	r3, [pc, #472]	@ (8005e64 <HAL_RCC_OscConfig+0x274>)
 8005c8c:	681b      	ldr	r3, [r3, #0]
 8005c8e:	4a75      	ldr	r2, [pc, #468]	@ (8005e64 <HAL_RCC_OscConfig+0x274>)
 8005c90:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
 8005c94:	6013      	str	r3, [r2, #0]
 8005c96:	4b73      	ldr	r3, [pc, #460]	@ (8005e64 <HAL_RCC_OscConfig+0x274>)
 8005c98:	681b      	ldr	r3, [r3, #0]
 8005c9a:	4a72      	ldr	r2, [pc, #456]	@ (8005e64 <HAL_RCC_OscConfig+0x274>)
 8005c9c:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8005ca0:	6013      	str	r3, [r2, #0]
 8005ca2:	e00b      	b.n	8005cbc <HAL_RCC_OscConfig+0xcc>
 8005ca4:	4b6f      	ldr	r3, [pc, #444]	@ (8005e64 <HAL_RCC_OscConfig+0x274>)
 8005ca6:	681b      	ldr	r3, [r3, #0]
 8005ca8:	4a6e      	ldr	r2, [pc, #440]	@ (8005e64 <HAL_RCC_OscConfig+0x274>)
 8005caa:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 8005cae:	6013      	str	r3, [r2, #0]
 8005cb0:	4b6c      	ldr	r3, [pc, #432]	@ (8005e64 <HAL_RCC_OscConfig+0x274>)
 8005cb2:	681b      	ldr	r3, [r3, #0]
 8005cb4:	4a6b      	ldr	r2, [pc, #428]	@ (8005e64 <HAL_RCC_OscConfig+0x274>)
 8005cb6:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
 8005cba:	6013      	str	r3, [r2, #0]
 8005cbc:	687b      	ldr	r3, [r7, #4]
 8005cbe:	685b      	ldr	r3, [r3, #4]
 8005cc0:	2b00      	cmp	r3, #0
 8005cc2:	d013      	beq.n	8005cec <HAL_RCC_OscConfig+0xfc>
 8005cc4:	f7fd fcf4 	bl	80036b0 <HAL_GetTick>
 8005cc8:	6138      	str	r0, [r7, #16]
 8005cca:	e008      	b.n	8005cde <HAL_RCC_OscConfig+0xee>
 8005ccc:	f7fd fcf0 	bl	80036b0 <HAL_GetTick>
 8005cd0:	4602      	mov	r2, r0
 8005cd2:	693b      	ldr	r3, [r7, #16]
 8005cd4:	1ad3      	subs	r3, r2, r3
 8005cd6:	2b64      	cmp	r3, #100	@ 0x64
 8005cd8:	d901      	bls.n	8005cde <HAL_RCC_OscConfig+0xee>
 8005cda:	2303      	movs	r3, #3
 8005cdc:	e21f      	b.n	800611e <HAL_RCC_OscConfig+0x52e>
 8005cde:	4b61      	ldr	r3, [pc, #388]	@ (8005e64 <HAL_RCC_OscConfig+0x274>)
 8005ce0:	681b      	ldr	r3, [r3, #0]
 8005ce2:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8005ce6:	2b00      	cmp	r3, #0
 8005ce8:	d0f0      	beq.n	8005ccc <HAL_RCC_OscConfig+0xdc>
 8005cea:	e014      	b.n	8005d16 <HAL_RCC_OscConfig+0x126>
 8005cec:	f7fd fce0 	bl	80036b0 <HAL_GetTick>
 8005cf0:	6138      	str	r0, [r7, #16]
 8005cf2:	e008      	b.n	8005d06 <HAL_RCC_OscConfig+0x116>
 8005cf4:	f7fd fcdc 	bl	80036b0 <HAL_GetTick>
 8005cf8:	4602      	mov	r2, r0
 8005cfa:	693b      	ldr	r3, [r7, #16]
 8005cfc:	1ad3      	subs	r3, r2, r3
 8005cfe:	2b64      	cmp	r3, #100	@ 0x64
 8005d00:	d901      	bls.n	8005d06 <HAL_RCC_OscConfig+0x116>
 8005d02:	2303      	movs	r3, #3
 8005d04:	e20b      	b.n	800611e <HAL_RCC_OscConfig+0x52e>
 8005d06:	4b57      	ldr	r3, [pc, #348]	@ (8005e64 <HAL_RCC_OscConfig+0x274>)
 8005d08:	681b      	ldr	r3, [r3, #0]
 8005d0a:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8005d0e:	2b00      	cmp	r3, #0
 8005d10:	d1f0      	bne.n	8005cf4 <HAL_RCC_OscConfig+0x104>
 8005d12:	e000      	b.n	8005d16 <HAL_RCC_OscConfig+0x126>
 8005d14:	bf00      	nop
 8005d16:	687b      	ldr	r3, [r7, #4]
 8005d18:	681b      	ldr	r3, [r3, #0]
 8005d1a:	f003 0302 	and.w	r3, r3, #2
 8005d1e:	2b00      	cmp	r3, #0
 8005d20:	d06f      	beq.n	8005e02 <HAL_RCC_OscConfig+0x212>
 8005d22:	4b50      	ldr	r3, [pc, #320]	@ (8005e64 <HAL_RCC_OscConfig+0x274>)
 8005d24:	689b      	ldr	r3, [r3, #8]
 8005d26:	f003 030c 	and.w	r3, r3, #12
 8005d2a:	2b00      	cmp	r3, #0
 8005d2c:	d017      	beq.n	8005d5e <HAL_RCC_OscConfig+0x16e>
 8005d2e:	4b4d      	ldr	r3, [pc, #308]	@ (8005e64 <HAL_RCC_OscConfig+0x274>)
 8005d30:	689b      	ldr	r3, [r3, #8]
 8005d32:	f003 030c 	and.w	r3, r3, #12
 8005d36:	2b08      	cmp	r3, #8
 8005d38:	d105      	bne.n	8005d46 <HAL_RCC_OscConfig+0x156>
 8005d3a:	4b4a      	ldr	r3, [pc, #296]	@ (8005e64 <HAL_RCC_OscConfig+0x274>)
 8005d3c:	685b      	ldr	r3, [r3, #4]
 8005d3e:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 8005d42:	2b00      	cmp	r3, #0
 8005d44:	d00b      	beq.n	8005d5e <HAL_RCC_OscConfig+0x16e>
 8005d46:	4b47      	ldr	r3, [pc, #284]	@ (8005e64 <HAL_RCC_OscConfig+0x274>)
 8005d48:	689b      	ldr	r3, [r3, #8]
 8005d4a:	f003 030c 	and.w	r3, r3, #12
 8005d4e:	2b0c      	cmp	r3, #12
 8005d50:	d11c      	bne.n	8005d8c <HAL_RCC_OscConfig+0x19c>
 8005d52:	4b44      	ldr	r3, [pc, #272]	@ (8005e64 <HAL_RCC_OscConfig+0x274>)
 8005d54:	685b      	ldr	r3, [r3, #4]
 8005d56:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 8005d5a:	2b00      	cmp	r3, #0
 8005d5c:	d116      	bne.n	8005d8c <HAL_RCC_OscConfig+0x19c>
 8005d5e:	4b41      	ldr	r3, [pc, #260]	@ (8005e64 <HAL_RCC_OscConfig+0x274>)
 8005d60:	681b      	ldr	r3, [r3, #0]
 8005d62:	f003 0302 	and.w	r3, r3, #2
 8005d66:	2b00      	cmp	r3, #0
 8005d68:	d005      	beq.n	8005d76 <HAL_RCC_OscConfig+0x186>
 8005d6a:	687b      	ldr	r3, [r7, #4]
 8005d6c:	68db      	ldr	r3, [r3, #12]
 8005d6e:	2b01      	cmp	r3, #1
 8005d70:	d001      	beq.n	8005d76 <HAL_RCC_OscConfig+0x186>
 8005d72:	2301      	movs	r3, #1
 8005d74:	e1d3      	b.n	800611e <HAL_RCC_OscConfig+0x52e>
 8005d76:	4b3b      	ldr	r3, [pc, #236]	@ (8005e64 <HAL_RCC_OscConfig+0x274>)
 8005d78:	681b      	ldr	r3, [r3, #0]
 8005d7a:	f023 02f8 	bic.w	r2, r3, #248	@ 0xf8
 8005d7e:	687b      	ldr	r3, [r7, #4]
 8005d80:	691b      	ldr	r3, [r3, #16]
 8005d82:	00db      	lsls	r3, r3, #3
 8005d84:	4937      	ldr	r1, [pc, #220]	@ (8005e64 <HAL_RCC_OscConfig+0x274>)
 8005d86:	4313      	orrs	r3, r2
 8005d88:	600b      	str	r3, [r1, #0]
 8005d8a:	e03a      	b.n	8005e02 <HAL_RCC_OscConfig+0x212>
 8005d8c:	687b      	ldr	r3, [r7, #4]
 8005d8e:	68db      	ldr	r3, [r3, #12]
 8005d90:	2b00      	cmp	r3, #0
 8005d92:	d020      	beq.n	8005dd6 <HAL_RCC_OscConfig+0x1e6>
 8005d94:	4b34      	ldr	r3, [pc, #208]	@ (8005e68 <HAL_RCC_OscConfig+0x278>)
 8005d96:	2201      	movs	r2, #1
 8005d98:	601a      	str	r2, [r3, #0]
 8005d9a:	f7fd fc89 	bl	80036b0 <HAL_GetTick>
 8005d9e:	6138      	str	r0, [r7, #16]
 8005da0:	e008      	b.n	8005db4 <HAL_RCC_OscConfig+0x1c4>
 8005da2:	f7fd fc85 	bl	80036b0 <HAL_GetTick>
 8005da6:	4602      	mov	r2, r0
 8005da8:	693b      	ldr	r3, [r7, #16]
 8005daa:	1ad3      	subs	r3, r2, r3
 8005dac:	2b02      	cmp	r3, #2
 8005dae:	d901      	bls.n	8005db4 <HAL_RCC_OscConfig+0x1c4>
 8005db0:	2303      	movs	r3, #3
 8005db2:	e1b4      	b.n	800611e <HAL_RCC_OscConfig+0x52e>
 8005db4:	4b2b      	ldr	r3, [pc, #172]	@ (8005e64 <HAL_RCC_OscConfig+0x274>)
 8005db6:	681b      	ldr	r3, [r3, #0]
 8005db8:	f003 0302 	and.w	r3, r3, #2
 8005dbc:	2b00      	cmp	r3, #0
 8005dbe:	d0f0      	beq.n	8005da2 <HAL_RCC_OscConfig+0x1b2>
 8005dc0:	4b28      	ldr	r3, [pc, #160]	@ (8005e64 <HAL_RCC_OscConfig+0x274>)
 8005dc2:	681b      	ldr	r3, [r3, #0]
 8005dc4:	f023 02f8 	bic.w	r2, r3, #248	@ 0xf8
 8005dc8:	687b      	ldr	r3, [r7, #4]
 8005dca:	691b      	ldr	r3, [r3, #16]
 8005dcc:	00db      	lsls	r3, r3, #3
 8005dce:	4925      	ldr	r1, [pc, #148]	@ (8005e64 <HAL_RCC_OscConfig+0x274>)
 8005dd0:	4313      	orrs	r3, r2
 8005dd2:	600b      	str	r3, [r1, #0]
 8005dd4:	e015      	b.n	8005e02 <HAL_RCC_OscConfig+0x212>
 8005dd6:	4b24      	ldr	r3, [pc, #144]	@ (8005e68 <HAL_RCC_OscConfig+0x278>)
 8005dd8:	2200      	movs	r2, #0
 8005dda:	601a      	str	r2, [r3, #0]
 8005ddc:	f7fd fc68 	bl	80036b0 <HAL_GetTick>
 8005de0:	6138      	str	r0, [r7, #16]
 8005de2:	e008      	b.n	8005df6 <HAL_RCC_OscConfig+0x206>
 8005de4:	f7fd fc64 	bl	80036b0 <HAL_GetTick>
 8005de8:	4602      	mov	r2, r0
 8005dea:	693b      	ldr	r3, [r7, #16]
 8005dec:	1ad3      	subs	r3, r2, r3
 8005dee:	2b02      	cmp	r3, #2
 8005df0:	d901      	bls.n	8005df6 <HAL_RCC_OscConfig+0x206>
 8005df2:	2303      	movs	r3, #3
 8005df4:	e193      	b.n	800611e <HAL_RCC_OscConfig+0x52e>
 8005df6:	4b1b      	ldr	r3, [pc, #108]	@ (8005e64 <HAL_RCC_OscConfig+0x274>)
 8005df8:	681b      	ldr	r3, [r3, #0]
 8005dfa:	f003 0302 	and.w	r3, r3, #2
 8005dfe:	2b00      	cmp	r3, #0
 8005e00:	d1f0      	bne.n	8005de4 <HAL_RCC_OscConfig+0x1f4>
 8005e02:	687b      	ldr	r3, [r7, #4]
 8005e04:	681b      	ldr	r3, [r3, #0]
 8005e06:	f003 0308 	and.w	r3, r3, #8
 8005e0a:	2b00      	cmp	r3, #0
 8005e0c:	d036      	beq.n	8005e7c <HAL_RCC_OscConfig+0x28c>
 8005e0e:	687b      	ldr	r3, [r7, #4]
 8005e10:	695b      	ldr	r3, [r3, #20]
 8005e12:	2b00      	cmp	r3, #0
 8005e14:	d016      	beq.n	8005e44 <HAL_RCC_OscConfig+0x254>
 8005e16:	4b15      	ldr	r3, [pc, #84]	@ (8005e6c <HAL_RCC_OscConfig+0x27c>)
 8005e18:	2201      	movs	r2, #1
 8005e1a:	601a      	str	r2, [r3, #0]
 8005e1c:	f7fd fc48 	bl	80036b0 <HAL_GetTick>
 8005e20:	6138      	str	r0, [r7, #16]
 8005e22:	e008      	b.n	8005e36 <HAL_RCC_OscConfig+0x246>
 8005e24:	f7fd fc44 	bl	80036b0 <HAL_GetTick>
 8005e28:	4602      	mov	r2, r0
 8005e2a:	693b      	ldr	r3, [r7, #16]
 8005e2c:	1ad3      	subs	r3, r2, r3
 8005e2e:	2b02      	cmp	r3, #2
 8005e30:	d901      	bls.n	8005e36 <HAL_RCC_OscConfig+0x246>
 8005e32:	2303      	movs	r3, #3
 8005e34:	e173      	b.n	800611e <HAL_RCC_OscConfig+0x52e>
 8005e36:	4b0b      	ldr	r3, [pc, #44]	@ (8005e64 <HAL_RCC_OscConfig+0x274>)
 8005e38:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 8005e3a:	f003 0302 	and.w	r3, r3, #2
 8005e3e:	2b00      	cmp	r3, #0
 8005e40:	d0f0      	beq.n	8005e24 <HAL_RCC_OscConfig+0x234>
 8005e42:	e01b      	b.n	8005e7c <HAL_RCC_OscConfig+0x28c>
 8005e44:	4b09      	ldr	r3, [pc, #36]	@ (8005e6c <HAL_RCC_OscConfig+0x27c>)
 8005e46:	2200      	movs	r2, #0
 8005e48:	601a      	str	r2, [r3, #0]
 8005e4a:	f7fd fc31 	bl	80036b0 <HAL_GetTick>
 8005e4e:	6138      	str	r0, [r7, #16]
 8005e50:	e00e      	b.n	8005e70 <HAL_RCC_OscConfig+0x280>
 8005e52:	f7fd fc2d 	bl	80036b0 <HAL_GetTick>
 8005e56:	4602      	mov	r2, r0
 8005e58:	693b      	ldr	r3, [r7, #16]
 8005e5a:	1ad3      	subs	r3, r2, r3
 8005e5c:	2b02      	cmp	r3, #2
 8005e5e:	d907      	bls.n	8005e70 <HAL_RCC_OscConfig+0x280>
 8005e60:	2303      	movs	r3, #3
 8005e62:	e15c      	b.n	800611e <HAL_RCC_OscConfig+0x52e>
 8005e64:	40023800 	.word	0x40023800
 8005e68:	42470000 	.word	0x42470000
 8005e6c:	42470e80 	.word	0x42470e80
 8005e70:	4b8a      	ldr	r3, [pc, #552]	@ (800609c <HAL_RCC_OscConfig+0x4ac>)
 8005e72:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 8005e74:	f003 0302 	and.w	r3, r3, #2
 8005e78:	2b00      	cmp	r3, #0
 8005e7a:	d1ea      	bne.n	8005e52 <HAL_RCC_OscConfig+0x262>
 8005e7c:	687b      	ldr	r3, [r7, #4]
 8005e7e:	681b      	ldr	r3, [r3, #0]
 8005e80:	f003 0304 	and.w	r3, r3, #4
 8005e84:	2b00      	cmp	r3, #0
 8005e86:	f000 8097 	beq.w	8005fb8 <HAL_RCC_OscConfig+0x3c8>
 8005e8a:	2300      	movs	r3, #0
 8005e8c:	75fb      	strb	r3, [r7, #23]
 8005e8e:	4b83      	ldr	r3, [pc, #524]	@ (800609c <HAL_RCC_OscConfig+0x4ac>)
 8005e90:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8005e92:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8005e96:	2b00      	cmp	r3, #0
 8005e98:	d10f      	bne.n	8005eba <HAL_RCC_OscConfig+0x2ca>
 8005e9a:	2300      	movs	r3, #0
 8005e9c:	60bb      	str	r3, [r7, #8]
 8005e9e:	4b7f      	ldr	r3, [pc, #508]	@ (800609c <HAL_RCC_OscConfig+0x4ac>)
 8005ea0:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8005ea2:	4a7e      	ldr	r2, [pc, #504]	@ (800609c <HAL_RCC_OscConfig+0x4ac>)
 8005ea4:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8005ea8:	6413      	str	r3, [r2, #64]	@ 0x40
 8005eaa:	4b7c      	ldr	r3, [pc, #496]	@ (800609c <HAL_RCC_OscConfig+0x4ac>)
 8005eac:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8005eae:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8005eb2:	60bb      	str	r3, [r7, #8]
 8005eb4:	68bb      	ldr	r3, [r7, #8]
 8005eb6:	2301      	movs	r3, #1
 8005eb8:	75fb      	strb	r3, [r7, #23]
 8005eba:	4b79      	ldr	r3, [pc, #484]	@ (80060a0 <HAL_RCC_OscConfig+0x4b0>)
 8005ebc:	681b      	ldr	r3, [r3, #0]
 8005ebe:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8005ec2:	2b00      	cmp	r3, #0
 8005ec4:	d118      	bne.n	8005ef8 <HAL_RCC_OscConfig+0x308>
 8005ec6:	4b76      	ldr	r3, [pc, #472]	@ (80060a0 <HAL_RCC_OscConfig+0x4b0>)
 8005ec8:	681b      	ldr	r3, [r3, #0]
 8005eca:	4a75      	ldr	r2, [pc, #468]	@ (80060a0 <HAL_RCC_OscConfig+0x4b0>)
 8005ecc:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8005ed0:	6013      	str	r3, [r2, #0]
 8005ed2:	f7fd fbed 	bl	80036b0 <HAL_GetTick>
 8005ed6:	6138      	str	r0, [r7, #16]
 8005ed8:	e008      	b.n	8005eec <HAL_RCC_OscConfig+0x2fc>
 8005eda:	f7fd fbe9 	bl	80036b0 <HAL_GetTick>
 8005ede:	4602      	mov	r2, r0
 8005ee0:	693b      	ldr	r3, [r7, #16]
 8005ee2:	1ad3      	subs	r3, r2, r3
 8005ee4:	2b02      	cmp	r3, #2
 8005ee6:	d901      	bls.n	8005eec <HAL_RCC_OscConfig+0x2fc>
 8005ee8:	2303      	movs	r3, #3
 8005eea:	e118      	b.n	800611e <HAL_RCC_OscConfig+0x52e>
 8005eec:	4b6c      	ldr	r3, [pc, #432]	@ (80060a0 <HAL_RCC_OscConfig+0x4b0>)
 8005eee:	681b      	ldr	r3, [r3, #0]
 8005ef0:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8005ef4:	2b00      	cmp	r3, #0
 8005ef6:	d0f0      	beq.n	8005eda <HAL_RCC_OscConfig+0x2ea>
 8005ef8:	687b      	ldr	r3, [r7, #4]
 8005efa:	689b      	ldr	r3, [r3, #8]
 8005efc:	2b01      	cmp	r3, #1
 8005efe:	d106      	bne.n	8005f0e <HAL_RCC_OscConfig+0x31e>
 8005f00:	4b66      	ldr	r3, [pc, #408]	@ (800609c <HAL_RCC_OscConfig+0x4ac>)
 8005f02:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8005f04:	4a65      	ldr	r2, [pc, #404]	@ (800609c <HAL_RCC_OscConfig+0x4ac>)
 8005f06:	f043 0301 	orr.w	r3, r3, #1
 8005f0a:	6713      	str	r3, [r2, #112]	@ 0x70
 8005f0c:	e01c      	b.n	8005f48 <HAL_RCC_OscConfig+0x358>
 8005f0e:	687b      	ldr	r3, [r7, #4]
 8005f10:	689b      	ldr	r3, [r3, #8]
 8005f12:	2b05      	cmp	r3, #5
 8005f14:	d10c      	bne.n	8005f30 <HAL_RCC_OscConfig+0x340>
 8005f16:	4b61      	ldr	r3, [pc, #388]	@ (800609c <HAL_RCC_OscConfig+0x4ac>)
 8005f18:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8005f1a:	4a60      	ldr	r2, [pc, #384]	@ (800609c <HAL_RCC_OscConfig+0x4ac>)
 8005f1c:	f043 0304 	orr.w	r3, r3, #4
 8005f20:	6713      	str	r3, [r2, #112]	@ 0x70
 8005f22:	4b5e      	ldr	r3, [pc, #376]	@ (800609c <HAL_RCC_OscConfig+0x4ac>)
 8005f24:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8005f26:	4a5d      	ldr	r2, [pc, #372]	@ (800609c <HAL_RCC_OscConfig+0x4ac>)
 8005f28:	f043 0301 	orr.w	r3, r3, #1
 8005f2c:	6713      	str	r3, [r2, #112]	@ 0x70
 8005f2e:	e00b      	b.n	8005f48 <HAL_RCC_OscConfig+0x358>
 8005f30:	4b5a      	ldr	r3, [pc, #360]	@ (800609c <HAL_RCC_OscConfig+0x4ac>)
 8005f32:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8005f34:	4a59      	ldr	r2, [pc, #356]	@ (800609c <HAL_RCC_OscConfig+0x4ac>)
 8005f36:	f023 0301 	bic.w	r3, r3, #1
 8005f3a:	6713      	str	r3, [r2, #112]	@ 0x70
 8005f3c:	4b57      	ldr	r3, [pc, #348]	@ (800609c <HAL_RCC_OscConfig+0x4ac>)
 8005f3e:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8005f40:	4a56      	ldr	r2, [pc, #344]	@ (800609c <HAL_RCC_OscConfig+0x4ac>)
 8005f42:	f023 0304 	bic.w	r3, r3, #4
 8005f46:	6713      	str	r3, [r2, #112]	@ 0x70
 8005f48:	687b      	ldr	r3, [r7, #4]
 8005f4a:	689b      	ldr	r3, [r3, #8]
 8005f4c:	2b00      	cmp	r3, #0
 8005f4e:	d015      	beq.n	8005f7c <HAL_RCC_OscConfig+0x38c>
 8005f50:	f7fd fbae 	bl	80036b0 <HAL_GetTick>
 8005f54:	6138      	str	r0, [r7, #16]
 8005f56:	e00a      	b.n	8005f6e <HAL_RCC_OscConfig+0x37e>
 8005f58:	f7fd fbaa 	bl	80036b0 <HAL_GetTick>
 8005f5c:	4602      	mov	r2, r0
 8005f5e:	693b      	ldr	r3, [r7, #16]
 8005f60:	1ad3      	subs	r3, r2, r3
 8005f62:	f241 3288 	movw	r2, #5000	@ 0x1388
 8005f66:	4293      	cmp	r3, r2
 8005f68:	d901      	bls.n	8005f6e <HAL_RCC_OscConfig+0x37e>
 8005f6a:	2303      	movs	r3, #3
 8005f6c:	e0d7      	b.n	800611e <HAL_RCC_OscConfig+0x52e>
 8005f6e:	4b4b      	ldr	r3, [pc, #300]	@ (800609c <HAL_RCC_OscConfig+0x4ac>)
 8005f70:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8005f72:	f003 0302 	and.w	r3, r3, #2
 8005f76:	2b00      	cmp	r3, #0
 8005f78:	d0ee      	beq.n	8005f58 <HAL_RCC_OscConfig+0x368>
 8005f7a:	e014      	b.n	8005fa6 <HAL_RCC_OscConfig+0x3b6>
 8005f7c:	f7fd fb98 	bl	80036b0 <HAL_GetTick>
 8005f80:	6138      	str	r0, [r7, #16]
 8005f82:	e00a      	b.n	8005f9a <HAL_RCC_OscConfig+0x3aa>
 8005f84:	f7fd fb94 	bl	80036b0 <HAL_GetTick>
 8005f88:	4602      	mov	r2, r0
 8005f8a:	693b      	ldr	r3, [r7, #16]
 8005f8c:	1ad3      	subs	r3, r2, r3
 8005f8e:	f241 3288 	movw	r2, #5000	@ 0x1388
 8005f92:	4293      	cmp	r3, r2
 8005f94:	d901      	bls.n	8005f9a <HAL_RCC_OscConfig+0x3aa>
 8005f96:	2303      	movs	r3, #3
 8005f98:	e0c1      	b.n	800611e <HAL_RCC_OscConfig+0x52e>
 8005f9a:	4b40      	ldr	r3, [pc, #256]	@ (800609c <HAL_RCC_OscConfig+0x4ac>)
 8005f9c:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8005f9e:	f003 0302 	and.w	r3, r3, #2
 8005fa2:	2b00      	cmp	r3, #0
 8005fa4:	d1ee      	bne.n	8005f84 <HAL_RCC_OscConfig+0x394>
 8005fa6:	7dfb      	ldrb	r3, [r7, #23]
 8005fa8:	2b01      	cmp	r3, #1
 8005faa:	d105      	bne.n	8005fb8 <HAL_RCC_OscConfig+0x3c8>
 8005fac:	4b3b      	ldr	r3, [pc, #236]	@ (800609c <HAL_RCC_OscConfig+0x4ac>)
 8005fae:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8005fb0:	4a3a      	ldr	r2, [pc, #232]	@ (800609c <HAL_RCC_OscConfig+0x4ac>)
 8005fb2:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
 8005fb6:	6413      	str	r3, [r2, #64]	@ 0x40
 8005fb8:	687b      	ldr	r3, [r7, #4]
 8005fba:	699b      	ldr	r3, [r3, #24]
 8005fbc:	2b00      	cmp	r3, #0
 8005fbe:	f000 80ad 	beq.w	800611c <HAL_RCC_OscConfig+0x52c>
 8005fc2:	4b36      	ldr	r3, [pc, #216]	@ (800609c <HAL_RCC_OscConfig+0x4ac>)
 8005fc4:	689b      	ldr	r3, [r3, #8]
 8005fc6:	f003 030c 	and.w	r3, r3, #12
 8005fca:	2b08      	cmp	r3, #8
 8005fcc:	d060      	beq.n	8006090 <HAL_RCC_OscConfig+0x4a0>
 8005fce:	687b      	ldr	r3, [r7, #4]
 8005fd0:	699b      	ldr	r3, [r3, #24]
 8005fd2:	2b02      	cmp	r3, #2
 8005fd4:	d145      	bne.n	8006062 <HAL_RCC_OscConfig+0x472>
 8005fd6:	4b33      	ldr	r3, [pc, #204]	@ (80060a4 <HAL_RCC_OscConfig+0x4b4>)
 8005fd8:	2200      	movs	r2, #0
 8005fda:	601a      	str	r2, [r3, #0]
 8005fdc:	f7fd fb68 	bl	80036b0 <HAL_GetTick>
 8005fe0:	6138      	str	r0, [r7, #16]
 8005fe2:	e008      	b.n	8005ff6 <HAL_RCC_OscConfig+0x406>
 8005fe4:	f7fd fb64 	bl	80036b0 <HAL_GetTick>
 8005fe8:	4602      	mov	r2, r0
 8005fea:	693b      	ldr	r3, [r7, #16]
 8005fec:	1ad3      	subs	r3, r2, r3
 8005fee:	2b02      	cmp	r3, #2
 8005ff0:	d901      	bls.n	8005ff6 <HAL_RCC_OscConfig+0x406>
 8005ff2:	2303      	movs	r3, #3
 8005ff4:	e093      	b.n	800611e <HAL_RCC_OscConfig+0x52e>
 8005ff6:	4b29      	ldr	r3, [pc, #164]	@ (800609c <HAL_RCC_OscConfig+0x4ac>)
 8005ff8:	681b      	ldr	r3, [r3, #0]
 8005ffa:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8005ffe:	2b00      	cmp	r3, #0
 8006000:	d1f0      	bne.n	8005fe4 <HAL_RCC_OscConfig+0x3f4>
 8006002:	687b      	ldr	r3, [r7, #4]
 8006004:	69da      	ldr	r2, [r3, #28]
 8006006:	687b      	ldr	r3, [r7, #4]
 8006008:	6a1b      	ldr	r3, [r3, #32]
 800600a:	431a      	orrs	r2, r3
 800600c:	687b      	ldr	r3, [r7, #4]
 800600e:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8006010:	019b      	lsls	r3, r3, #6
 8006012:	431a      	orrs	r2, r3
 8006014:	687b      	ldr	r3, [r7, #4]
 8006016:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8006018:	085b      	lsrs	r3, r3, #1
 800601a:	3b01      	subs	r3, #1
 800601c:	041b      	lsls	r3, r3, #16
 800601e:	431a      	orrs	r2, r3
 8006020:	687b      	ldr	r3, [r7, #4]
 8006022:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8006024:	061b      	lsls	r3, r3, #24
 8006026:	431a      	orrs	r2, r3
 8006028:	687b      	ldr	r3, [r7, #4]
 800602a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800602c:	071b      	lsls	r3, r3, #28
 800602e:	491b      	ldr	r1, [pc, #108]	@ (800609c <HAL_RCC_OscConfig+0x4ac>)
 8006030:	4313      	orrs	r3, r2
 8006032:	604b      	str	r3, [r1, #4]
 8006034:	4b1b      	ldr	r3, [pc, #108]	@ (80060a4 <HAL_RCC_OscConfig+0x4b4>)
 8006036:	2201      	movs	r2, #1
 8006038:	601a      	str	r2, [r3, #0]
 800603a:	f7fd fb39 	bl	80036b0 <HAL_GetTick>
 800603e:	6138      	str	r0, [r7, #16]
 8006040:	e008      	b.n	8006054 <HAL_RCC_OscConfig+0x464>
 8006042:	f7fd fb35 	bl	80036b0 <HAL_GetTick>
 8006046:	4602      	mov	r2, r0
 8006048:	693b      	ldr	r3, [r7, #16]
 800604a:	1ad3      	subs	r3, r2, r3
 800604c:	2b02      	cmp	r3, #2
 800604e:	d901      	bls.n	8006054 <HAL_RCC_OscConfig+0x464>
 8006050:	2303      	movs	r3, #3
 8006052:	e064      	b.n	800611e <HAL_RCC_OscConfig+0x52e>
 8006054:	4b11      	ldr	r3, [pc, #68]	@ (800609c <HAL_RCC_OscConfig+0x4ac>)
 8006056:	681b      	ldr	r3, [r3, #0]
 8006058:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 800605c:	2b00      	cmp	r3, #0
 800605e:	d0f0      	beq.n	8006042 <HAL_RCC_OscConfig+0x452>
 8006060:	e05c      	b.n	800611c <HAL_RCC_OscConfig+0x52c>
 8006062:	4b10      	ldr	r3, [pc, #64]	@ (80060a4 <HAL_RCC_OscConfig+0x4b4>)
 8006064:	2200      	movs	r2, #0
 8006066:	601a      	str	r2, [r3, #0]
 8006068:	f7fd fb22 	bl	80036b0 <HAL_GetTick>
 800606c:	6138      	str	r0, [r7, #16]
 800606e:	e008      	b.n	8006082 <HAL_RCC_OscConfig+0x492>
 8006070:	f7fd fb1e 	bl	80036b0 <HAL_GetTick>
 8006074:	4602      	mov	r2, r0
 8006076:	693b      	ldr	r3, [r7, #16]
 8006078:	1ad3      	subs	r3, r2, r3
 800607a:	2b02      	cmp	r3, #2
 800607c:	d901      	bls.n	8006082 <HAL_RCC_OscConfig+0x492>
 800607e:	2303      	movs	r3, #3
 8006080:	e04d      	b.n	800611e <HAL_RCC_OscConfig+0x52e>
 8006082:	4b06      	ldr	r3, [pc, #24]	@ (800609c <HAL_RCC_OscConfig+0x4ac>)
 8006084:	681b      	ldr	r3, [r3, #0]
 8006086:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 800608a:	2b00      	cmp	r3, #0
 800608c:	d1f0      	bne.n	8006070 <HAL_RCC_OscConfig+0x480>
 800608e:	e045      	b.n	800611c <HAL_RCC_OscConfig+0x52c>
 8006090:	687b      	ldr	r3, [r7, #4]
 8006092:	699b      	ldr	r3, [r3, #24]
 8006094:	2b01      	cmp	r3, #1
 8006096:	d107      	bne.n	80060a8 <HAL_RCC_OscConfig+0x4b8>
 8006098:	2301      	movs	r3, #1
 800609a:	e040      	b.n	800611e <HAL_RCC_OscConfig+0x52e>
 800609c:	40023800 	.word	0x40023800
 80060a0:	40007000 	.word	0x40007000
 80060a4:	42470060 	.word	0x42470060
 80060a8:	4b1f      	ldr	r3, [pc, #124]	@ (8006128 <HAL_RCC_OscConfig+0x538>)
 80060aa:	685b      	ldr	r3, [r3, #4]
 80060ac:	60fb      	str	r3, [r7, #12]
 80060ae:	687b      	ldr	r3, [r7, #4]
 80060b0:	699b      	ldr	r3, [r3, #24]
 80060b2:	2b01      	cmp	r3, #1
 80060b4:	d030      	beq.n	8006118 <HAL_RCC_OscConfig+0x528>
 80060b6:	68fb      	ldr	r3, [r7, #12]
 80060b8:	f403 0280 	and.w	r2, r3, #4194304	@ 0x400000
 80060bc:	687b      	ldr	r3, [r7, #4]
 80060be:	69db      	ldr	r3, [r3, #28]
 80060c0:	429a      	cmp	r2, r3
 80060c2:	d129      	bne.n	8006118 <HAL_RCC_OscConfig+0x528>
 80060c4:	68fb      	ldr	r3, [r7, #12]
 80060c6:	f003 023f 	and.w	r2, r3, #63	@ 0x3f
 80060ca:	687b      	ldr	r3, [r7, #4]
 80060cc:	6a1b      	ldr	r3, [r3, #32]
 80060ce:	429a      	cmp	r2, r3
 80060d0:	d122      	bne.n	8006118 <HAL_RCC_OscConfig+0x528>
 80060d2:	68fa      	ldr	r2, [r7, #12]
 80060d4:	f647 73c0 	movw	r3, #32704	@ 0x7fc0
 80060d8:	4013      	ands	r3, r2
 80060da:	687a      	ldr	r2, [r7, #4]
 80060dc:	6a52      	ldr	r2, [r2, #36]	@ 0x24
 80060de:	0192      	lsls	r2, r2, #6
 80060e0:	4293      	cmp	r3, r2
 80060e2:	d119      	bne.n	8006118 <HAL_RCC_OscConfig+0x528>
 80060e4:	68fb      	ldr	r3, [r7, #12]
 80060e6:	f403 3240 	and.w	r2, r3, #196608	@ 0x30000
 80060ea:	687b      	ldr	r3, [r7, #4]
 80060ec:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80060ee:	085b      	lsrs	r3, r3, #1
 80060f0:	3b01      	subs	r3, #1
 80060f2:	041b      	lsls	r3, r3, #16
 80060f4:	429a      	cmp	r2, r3
 80060f6:	d10f      	bne.n	8006118 <HAL_RCC_OscConfig+0x528>
 80060f8:	68fb      	ldr	r3, [r7, #12]
 80060fa:	f003 6270 	and.w	r2, r3, #251658240	@ 0xf000000
 80060fe:	687b      	ldr	r3, [r7, #4]
 8006100:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8006102:	061b      	lsls	r3, r3, #24
 8006104:	429a      	cmp	r2, r3
 8006106:	d107      	bne.n	8006118 <HAL_RCC_OscConfig+0x528>
 8006108:	68fb      	ldr	r3, [r7, #12]
 800610a:	f003 42e0 	and.w	r2, r3, #1879048192	@ 0x70000000
 800610e:	687b      	ldr	r3, [r7, #4]
 8006110:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8006112:	071b      	lsls	r3, r3, #28
 8006114:	429a      	cmp	r2, r3
 8006116:	d001      	beq.n	800611c <HAL_RCC_OscConfig+0x52c>
 8006118:	2301      	movs	r3, #1
 800611a:	e000      	b.n	800611e <HAL_RCC_OscConfig+0x52e>
 800611c:	2300      	movs	r3, #0
 800611e:	4618      	mov	r0, r3
 8006120:	3718      	adds	r7, #24
 8006122:	46bd      	mov	sp, r7
 8006124:	bd80      	pop	{r7, pc}
 8006126:	bf00      	nop
 8006128:	40023800 	.word	0x40023800

0800612c <HAL_TIM_Base_Init>:
 800612c:	b580      	push	{r7, lr}
 800612e:	b082      	sub	sp, #8
 8006130:	af00      	add	r7, sp, #0
 8006132:	6078      	str	r0, [r7, #4]
 8006134:	687b      	ldr	r3, [r7, #4]
 8006136:	2b00      	cmp	r3, #0
 8006138:	d101      	bne.n	800613e <HAL_TIM_Base_Init+0x12>
 800613a:	2301      	movs	r3, #1
 800613c:	e041      	b.n	80061c2 <HAL_TIM_Base_Init+0x96>
 800613e:	687b      	ldr	r3, [r7, #4]
 8006140:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 8006144:	b2db      	uxtb	r3, r3
 8006146:	2b00      	cmp	r3, #0
 8006148:	d106      	bne.n	8006158 <HAL_TIM_Base_Init+0x2c>
 800614a:	687b      	ldr	r3, [r7, #4]
 800614c:	2200      	movs	r2, #0
 800614e:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8006152:	6878      	ldr	r0, [r7, #4]
 8006154:	f7fc ff12 	bl	8002f7c <HAL_TIM_Base_MspInit>
 8006158:	687b      	ldr	r3, [r7, #4]
 800615a:	2202      	movs	r2, #2
 800615c:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8006160:	687b      	ldr	r3, [r7, #4]
 8006162:	681a      	ldr	r2, [r3, #0]
 8006164:	687b      	ldr	r3, [r7, #4]
 8006166:	3304      	adds	r3, #4
 8006168:	4619      	mov	r1, r3
 800616a:	4610      	mov	r0, r2
 800616c:	f000 fca4 	bl	8006ab8 <TIM_Base_SetConfig>
 8006170:	687b      	ldr	r3, [r7, #4]
 8006172:	2201      	movs	r2, #1
 8006174:	f883 2046 	strb.w	r2, [r3, #70]	@ 0x46
 8006178:	687b      	ldr	r3, [r7, #4]
 800617a:	2201      	movs	r2, #1
 800617c:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8006180:	687b      	ldr	r3, [r7, #4]
 8006182:	2201      	movs	r2, #1
 8006184:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 8006188:	687b      	ldr	r3, [r7, #4]
 800618a:	2201      	movs	r2, #1
 800618c:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8006190:	687b      	ldr	r3, [r7, #4]
 8006192:	2201      	movs	r2, #1
 8006194:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8006198:	687b      	ldr	r3, [r7, #4]
 800619a:	2201      	movs	r2, #1
 800619c:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 80061a0:	687b      	ldr	r3, [r7, #4]
 80061a2:	2201      	movs	r2, #1
 80061a4:	f883 2043 	strb.w	r2, [r3, #67]	@ 0x43
 80061a8:	687b      	ldr	r3, [r7, #4]
 80061aa:	2201      	movs	r2, #1
 80061ac:	f883 2044 	strb.w	r2, [r3, #68]	@ 0x44
 80061b0:	687b      	ldr	r3, [r7, #4]
 80061b2:	2201      	movs	r2, #1
 80061b4:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45
 80061b8:	687b      	ldr	r3, [r7, #4]
 80061ba:	2201      	movs	r2, #1
 80061bc:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 80061c0:	2300      	movs	r3, #0
 80061c2:	4618      	mov	r0, r3
 80061c4:	3708      	adds	r7, #8
 80061c6:	46bd      	mov	sp, r7
 80061c8:	bd80      	pop	{r7, pc}

080061ca <HAL_TIM_PWM_Init>:
 80061ca:	b580      	push	{r7, lr}
 80061cc:	b082      	sub	sp, #8
 80061ce:	af00      	add	r7, sp, #0
 80061d0:	6078      	str	r0, [r7, #4]
 80061d2:	687b      	ldr	r3, [r7, #4]
 80061d4:	2b00      	cmp	r3, #0
 80061d6:	d101      	bne.n	80061dc <HAL_TIM_PWM_Init+0x12>
 80061d8:	2301      	movs	r3, #1
 80061da:	e041      	b.n	8006260 <HAL_TIM_PWM_Init+0x96>
 80061dc:	687b      	ldr	r3, [r7, #4]
 80061de:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 80061e2:	b2db      	uxtb	r3, r3
 80061e4:	2b00      	cmp	r3, #0
 80061e6:	d106      	bne.n	80061f6 <HAL_TIM_PWM_Init+0x2c>
 80061e8:	687b      	ldr	r3, [r7, #4]
 80061ea:	2200      	movs	r2, #0
 80061ec:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 80061f0:	6878      	ldr	r0, [r7, #4]
 80061f2:	f000 f839 	bl	8006268 <HAL_TIM_PWM_MspInit>
 80061f6:	687b      	ldr	r3, [r7, #4]
 80061f8:	2202      	movs	r2, #2
 80061fa:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 80061fe:	687b      	ldr	r3, [r7, #4]
 8006200:	681a      	ldr	r2, [r3, #0]
 8006202:	687b      	ldr	r3, [r7, #4]
 8006204:	3304      	adds	r3, #4
 8006206:	4619      	mov	r1, r3
 8006208:	4610      	mov	r0, r2
 800620a:	f000 fc55 	bl	8006ab8 <TIM_Base_SetConfig>
 800620e:	687b      	ldr	r3, [r7, #4]
 8006210:	2201      	movs	r2, #1
 8006212:	f883 2046 	strb.w	r2, [r3, #70]	@ 0x46
 8006216:	687b      	ldr	r3, [r7, #4]
 8006218:	2201      	movs	r2, #1
 800621a:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 800621e:	687b      	ldr	r3, [r7, #4]
 8006220:	2201      	movs	r2, #1
 8006222:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 8006226:	687b      	ldr	r3, [r7, #4]
 8006228:	2201      	movs	r2, #1
 800622a:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 800622e:	687b      	ldr	r3, [r7, #4]
 8006230:	2201      	movs	r2, #1
 8006232:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8006236:	687b      	ldr	r3, [r7, #4]
 8006238:	2201      	movs	r2, #1
 800623a:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 800623e:	687b      	ldr	r3, [r7, #4]
 8006240:	2201      	movs	r2, #1
 8006242:	f883 2043 	strb.w	r2, [r3, #67]	@ 0x43
 8006246:	687b      	ldr	r3, [r7, #4]
 8006248:	2201      	movs	r2, #1
 800624a:	f883 2044 	strb.w	r2, [r3, #68]	@ 0x44
 800624e:	687b      	ldr	r3, [r7, #4]
 8006250:	2201      	movs	r2, #1
 8006252:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45
 8006256:	687b      	ldr	r3, [r7, #4]
 8006258:	2201      	movs	r2, #1
 800625a:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 800625e:	2300      	movs	r3, #0
 8006260:	4618      	mov	r0, r3
 8006262:	3708      	adds	r7, #8
 8006264:	46bd      	mov	sp, r7
 8006266:	bd80      	pop	{r7, pc}

08006268 <HAL_TIM_PWM_MspInit>:
 8006268:	b480      	push	{r7}
 800626a:	b083      	sub	sp, #12
 800626c:	af00      	add	r7, sp, #0
 800626e:	6078      	str	r0, [r7, #4]
 8006270:	bf00      	nop
 8006272:	370c      	adds	r7, #12
 8006274:	46bd      	mov	sp, r7
 8006276:	f85d 7b04 	ldr.w	r7, [sp], #4
 800627a:	4770      	bx	lr

0800627c <HAL_TIM_PWM_Start>:
 800627c:	b580      	push	{r7, lr}
 800627e:	b084      	sub	sp, #16
 8006280:	af00      	add	r7, sp, #0
 8006282:	6078      	str	r0, [r7, #4]
 8006284:	6039      	str	r1, [r7, #0]
 8006286:	683b      	ldr	r3, [r7, #0]
 8006288:	2b00      	cmp	r3, #0
 800628a:	d109      	bne.n	80062a0 <HAL_TIM_PWM_Start+0x24>
 800628c:	687b      	ldr	r3, [r7, #4]
 800628e:	f893 303e 	ldrb.w	r3, [r3, #62]	@ 0x3e
 8006292:	b2db      	uxtb	r3, r3
 8006294:	2b01      	cmp	r3, #1
 8006296:	bf14      	ite	ne
 8006298:	2301      	movne	r3, #1
 800629a:	2300      	moveq	r3, #0
 800629c:	b2db      	uxtb	r3, r3
 800629e:	e022      	b.n	80062e6 <HAL_TIM_PWM_Start+0x6a>
 80062a0:	683b      	ldr	r3, [r7, #0]
 80062a2:	2b04      	cmp	r3, #4
 80062a4:	d109      	bne.n	80062ba <HAL_TIM_PWM_Start+0x3e>
 80062a6:	687b      	ldr	r3, [r7, #4]
 80062a8:	f893 303f 	ldrb.w	r3, [r3, #63]	@ 0x3f
 80062ac:	b2db      	uxtb	r3, r3
 80062ae:	2b01      	cmp	r3, #1
 80062b0:	bf14      	ite	ne
 80062b2:	2301      	movne	r3, #1
 80062b4:	2300      	moveq	r3, #0
 80062b6:	b2db      	uxtb	r3, r3
 80062b8:	e015      	b.n	80062e6 <HAL_TIM_PWM_Start+0x6a>
 80062ba:	683b      	ldr	r3, [r7, #0]
 80062bc:	2b08      	cmp	r3, #8
 80062be:	d109      	bne.n	80062d4 <HAL_TIM_PWM_Start+0x58>
 80062c0:	687b      	ldr	r3, [r7, #4]
 80062c2:	f893 3040 	ldrb.w	r3, [r3, #64]	@ 0x40
 80062c6:	b2db      	uxtb	r3, r3
 80062c8:	2b01      	cmp	r3, #1
 80062ca:	bf14      	ite	ne
 80062cc:	2301      	movne	r3, #1
 80062ce:	2300      	moveq	r3, #0
 80062d0:	b2db      	uxtb	r3, r3
 80062d2:	e008      	b.n	80062e6 <HAL_TIM_PWM_Start+0x6a>
 80062d4:	687b      	ldr	r3, [r7, #4]
 80062d6:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 80062da:	b2db      	uxtb	r3, r3
 80062dc:	2b01      	cmp	r3, #1
 80062de:	bf14      	ite	ne
 80062e0:	2301      	movne	r3, #1
 80062e2:	2300      	moveq	r3, #0
 80062e4:	b2db      	uxtb	r3, r3
 80062e6:	2b00      	cmp	r3, #0
 80062e8:	d001      	beq.n	80062ee <HAL_TIM_PWM_Start+0x72>
 80062ea:	2301      	movs	r3, #1
 80062ec:	e07c      	b.n	80063e8 <HAL_TIM_PWM_Start+0x16c>
 80062ee:	683b      	ldr	r3, [r7, #0]
 80062f0:	2b00      	cmp	r3, #0
 80062f2:	d104      	bne.n	80062fe <HAL_TIM_PWM_Start+0x82>
 80062f4:	687b      	ldr	r3, [r7, #4]
 80062f6:	2202      	movs	r2, #2
 80062f8:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 80062fc:	e013      	b.n	8006326 <HAL_TIM_PWM_Start+0xaa>
 80062fe:	683b      	ldr	r3, [r7, #0]
 8006300:	2b04      	cmp	r3, #4
 8006302:	d104      	bne.n	800630e <HAL_TIM_PWM_Start+0x92>
 8006304:	687b      	ldr	r3, [r7, #4]
 8006306:	2202      	movs	r2, #2
 8006308:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 800630c:	e00b      	b.n	8006326 <HAL_TIM_PWM_Start+0xaa>
 800630e:	683b      	ldr	r3, [r7, #0]
 8006310:	2b08      	cmp	r3, #8
 8006312:	d104      	bne.n	800631e <HAL_TIM_PWM_Start+0xa2>
 8006314:	687b      	ldr	r3, [r7, #4]
 8006316:	2202      	movs	r2, #2
 8006318:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 800631c:	e003      	b.n	8006326 <HAL_TIM_PWM_Start+0xaa>
 800631e:	687b      	ldr	r3, [r7, #4]
 8006320:	2202      	movs	r2, #2
 8006322:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8006326:	687b      	ldr	r3, [r7, #4]
 8006328:	681b      	ldr	r3, [r3, #0]
 800632a:	2201      	movs	r2, #1
 800632c:	6839      	ldr	r1, [r7, #0]
 800632e:	4618      	mov	r0, r3
 8006330:	f000 feb8 	bl	80070a4 <TIM_CCxChannelCmd>
 8006334:	687b      	ldr	r3, [r7, #4]
 8006336:	681b      	ldr	r3, [r3, #0]
 8006338:	4a2d      	ldr	r2, [pc, #180]	@ (80063f0 <HAL_TIM_PWM_Start+0x174>)
 800633a:	4293      	cmp	r3, r2
 800633c:	d004      	beq.n	8006348 <HAL_TIM_PWM_Start+0xcc>
 800633e:	687b      	ldr	r3, [r7, #4]
 8006340:	681b      	ldr	r3, [r3, #0]
 8006342:	4a2c      	ldr	r2, [pc, #176]	@ (80063f4 <HAL_TIM_PWM_Start+0x178>)
 8006344:	4293      	cmp	r3, r2
 8006346:	d101      	bne.n	800634c <HAL_TIM_PWM_Start+0xd0>
 8006348:	2301      	movs	r3, #1
 800634a:	e000      	b.n	800634e <HAL_TIM_PWM_Start+0xd2>
 800634c:	2300      	movs	r3, #0
 800634e:	2b00      	cmp	r3, #0
 8006350:	d007      	beq.n	8006362 <HAL_TIM_PWM_Start+0xe6>
 8006352:	687b      	ldr	r3, [r7, #4]
 8006354:	681b      	ldr	r3, [r3, #0]
 8006356:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 8006358:	687b      	ldr	r3, [r7, #4]
 800635a:	681b      	ldr	r3, [r3, #0]
 800635c:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
 8006360:	645a      	str	r2, [r3, #68]	@ 0x44
 8006362:	687b      	ldr	r3, [r7, #4]
 8006364:	681b      	ldr	r3, [r3, #0]
 8006366:	4a22      	ldr	r2, [pc, #136]	@ (80063f0 <HAL_TIM_PWM_Start+0x174>)
 8006368:	4293      	cmp	r3, r2
 800636a:	d022      	beq.n	80063b2 <HAL_TIM_PWM_Start+0x136>
 800636c:	687b      	ldr	r3, [r7, #4]
 800636e:	681b      	ldr	r3, [r3, #0]
 8006370:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8006374:	d01d      	beq.n	80063b2 <HAL_TIM_PWM_Start+0x136>
 8006376:	687b      	ldr	r3, [r7, #4]
 8006378:	681b      	ldr	r3, [r3, #0]
 800637a:	4a1f      	ldr	r2, [pc, #124]	@ (80063f8 <HAL_TIM_PWM_Start+0x17c>)
 800637c:	4293      	cmp	r3, r2
 800637e:	d018      	beq.n	80063b2 <HAL_TIM_PWM_Start+0x136>
 8006380:	687b      	ldr	r3, [r7, #4]
 8006382:	681b      	ldr	r3, [r3, #0]
 8006384:	4a1d      	ldr	r2, [pc, #116]	@ (80063fc <HAL_TIM_PWM_Start+0x180>)
 8006386:	4293      	cmp	r3, r2
 8006388:	d013      	beq.n	80063b2 <HAL_TIM_PWM_Start+0x136>
 800638a:	687b      	ldr	r3, [r7, #4]
 800638c:	681b      	ldr	r3, [r3, #0]
 800638e:	4a1c      	ldr	r2, [pc, #112]	@ (8006400 <HAL_TIM_PWM_Start+0x184>)
 8006390:	4293      	cmp	r3, r2
 8006392:	d00e      	beq.n	80063b2 <HAL_TIM_PWM_Start+0x136>
 8006394:	687b      	ldr	r3, [r7, #4]
 8006396:	681b      	ldr	r3, [r3, #0]
 8006398:	4a16      	ldr	r2, [pc, #88]	@ (80063f4 <HAL_TIM_PWM_Start+0x178>)
 800639a:	4293      	cmp	r3, r2
 800639c:	d009      	beq.n	80063b2 <HAL_TIM_PWM_Start+0x136>
 800639e:	687b      	ldr	r3, [r7, #4]
 80063a0:	681b      	ldr	r3, [r3, #0]
 80063a2:	4a18      	ldr	r2, [pc, #96]	@ (8006404 <HAL_TIM_PWM_Start+0x188>)
 80063a4:	4293      	cmp	r3, r2
 80063a6:	d004      	beq.n	80063b2 <HAL_TIM_PWM_Start+0x136>
 80063a8:	687b      	ldr	r3, [r7, #4]
 80063aa:	681b      	ldr	r3, [r3, #0]
 80063ac:	4a16      	ldr	r2, [pc, #88]	@ (8006408 <HAL_TIM_PWM_Start+0x18c>)
 80063ae:	4293      	cmp	r3, r2
 80063b0:	d111      	bne.n	80063d6 <HAL_TIM_PWM_Start+0x15a>
 80063b2:	687b      	ldr	r3, [r7, #4]
 80063b4:	681b      	ldr	r3, [r3, #0]
 80063b6:	689b      	ldr	r3, [r3, #8]
 80063b8:	f003 0307 	and.w	r3, r3, #7
 80063bc:	60fb      	str	r3, [r7, #12]
 80063be:	68fb      	ldr	r3, [r7, #12]
 80063c0:	2b06      	cmp	r3, #6
 80063c2:	d010      	beq.n	80063e6 <HAL_TIM_PWM_Start+0x16a>
 80063c4:	687b      	ldr	r3, [r7, #4]
 80063c6:	681b      	ldr	r3, [r3, #0]
 80063c8:	681a      	ldr	r2, [r3, #0]
 80063ca:	687b      	ldr	r3, [r7, #4]
 80063cc:	681b      	ldr	r3, [r3, #0]
 80063ce:	f042 0201 	orr.w	r2, r2, #1
 80063d2:	601a      	str	r2, [r3, #0]
 80063d4:	e007      	b.n	80063e6 <HAL_TIM_PWM_Start+0x16a>
 80063d6:	687b      	ldr	r3, [r7, #4]
 80063d8:	681b      	ldr	r3, [r3, #0]
 80063da:	681a      	ldr	r2, [r3, #0]
 80063dc:	687b      	ldr	r3, [r7, #4]
 80063de:	681b      	ldr	r3, [r3, #0]
 80063e0:	f042 0201 	orr.w	r2, r2, #1
 80063e4:	601a      	str	r2, [r3, #0]
 80063e6:	2300      	movs	r3, #0
 80063e8:	4618      	mov	r0, r3
 80063ea:	3710      	adds	r7, #16
 80063ec:	46bd      	mov	sp, r7
 80063ee:	bd80      	pop	{r7, pc}
 80063f0:	40010000 	.word	0x40010000
 80063f4:	40010400 	.word	0x40010400
 80063f8:	40000400 	.word	0x40000400
 80063fc:	40000800 	.word	0x40000800
 8006400:	40000c00 	.word	0x40000c00
 8006404:	40014000 	.word	0x40014000
 8006408:	40001800 	.word	0x40001800

0800640c <HAL_TIM_Encoder_Init>:
 800640c:	b580      	push	{r7, lr}
 800640e:	b086      	sub	sp, #24
 8006410:	af00      	add	r7, sp, #0
 8006412:	6078      	str	r0, [r7, #4]
 8006414:	6039      	str	r1, [r7, #0]
 8006416:	687b      	ldr	r3, [r7, #4]
 8006418:	2b00      	cmp	r3, #0
 800641a:	d101      	bne.n	8006420 <HAL_TIM_Encoder_Init+0x14>
 800641c:	2301      	movs	r3, #1
 800641e:	e097      	b.n	8006550 <HAL_TIM_Encoder_Init+0x144>
 8006420:	687b      	ldr	r3, [r7, #4]
 8006422:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 8006426:	b2db      	uxtb	r3, r3
 8006428:	2b00      	cmp	r3, #0
 800642a:	d106      	bne.n	800643a <HAL_TIM_Encoder_Init+0x2e>
 800642c:	687b      	ldr	r3, [r7, #4]
 800642e:	2200      	movs	r2, #0
 8006430:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8006434:	6878      	ldr	r0, [r7, #4]
 8006436:	f7fc fc7d 	bl	8002d34 <HAL_TIM_Encoder_MspInit>
 800643a:	687b      	ldr	r3, [r7, #4]
 800643c:	2202      	movs	r2, #2
 800643e:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8006442:	687b      	ldr	r3, [r7, #4]
 8006444:	681b      	ldr	r3, [r3, #0]
 8006446:	689b      	ldr	r3, [r3, #8]
 8006448:	687a      	ldr	r2, [r7, #4]
 800644a:	6812      	ldr	r2, [r2, #0]
 800644c:	f423 4380 	bic.w	r3, r3, #16384	@ 0x4000
 8006450:	f023 0307 	bic.w	r3, r3, #7
 8006454:	6093      	str	r3, [r2, #8]
 8006456:	687b      	ldr	r3, [r7, #4]
 8006458:	681a      	ldr	r2, [r3, #0]
 800645a:	687b      	ldr	r3, [r7, #4]
 800645c:	3304      	adds	r3, #4
 800645e:	4619      	mov	r1, r3
 8006460:	4610      	mov	r0, r2
 8006462:	f000 fb29 	bl	8006ab8 <TIM_Base_SetConfig>
 8006466:	687b      	ldr	r3, [r7, #4]
 8006468:	681b      	ldr	r3, [r3, #0]
 800646a:	689b      	ldr	r3, [r3, #8]
 800646c:	617b      	str	r3, [r7, #20]
 800646e:	687b      	ldr	r3, [r7, #4]
 8006470:	681b      	ldr	r3, [r3, #0]
 8006472:	699b      	ldr	r3, [r3, #24]
 8006474:	613b      	str	r3, [r7, #16]
 8006476:	687b      	ldr	r3, [r7, #4]
 8006478:	681b      	ldr	r3, [r3, #0]
 800647a:	6a1b      	ldr	r3, [r3, #32]
 800647c:	60fb      	str	r3, [r7, #12]
 800647e:	683b      	ldr	r3, [r7, #0]
 8006480:	681b      	ldr	r3, [r3, #0]
 8006482:	697a      	ldr	r2, [r7, #20]
 8006484:	4313      	orrs	r3, r2
 8006486:	617b      	str	r3, [r7, #20]
 8006488:	693b      	ldr	r3, [r7, #16]
 800648a:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 800648e:	f023 0303 	bic.w	r3, r3, #3
 8006492:	613b      	str	r3, [r7, #16]
 8006494:	683b      	ldr	r3, [r7, #0]
 8006496:	689a      	ldr	r2, [r3, #8]
 8006498:	683b      	ldr	r3, [r7, #0]
 800649a:	699b      	ldr	r3, [r3, #24]
 800649c:	021b      	lsls	r3, r3, #8
 800649e:	4313      	orrs	r3, r2
 80064a0:	693a      	ldr	r2, [r7, #16]
 80064a2:	4313      	orrs	r3, r2
 80064a4:	613b      	str	r3, [r7, #16]
 80064a6:	693b      	ldr	r3, [r7, #16]
 80064a8:	f423 6340 	bic.w	r3, r3, #3072	@ 0xc00
 80064ac:	f023 030c 	bic.w	r3, r3, #12
 80064b0:	613b      	str	r3, [r7, #16]
 80064b2:	693b      	ldr	r3, [r7, #16]
 80064b4:	f423 4370 	bic.w	r3, r3, #61440	@ 0xf000
 80064b8:	f023 03f0 	bic.w	r3, r3, #240	@ 0xf0
 80064bc:	613b      	str	r3, [r7, #16]
 80064be:	683b      	ldr	r3, [r7, #0]
 80064c0:	68da      	ldr	r2, [r3, #12]
 80064c2:	683b      	ldr	r3, [r7, #0]
 80064c4:	69db      	ldr	r3, [r3, #28]
 80064c6:	021b      	lsls	r3, r3, #8
 80064c8:	4313      	orrs	r3, r2
 80064ca:	693a      	ldr	r2, [r7, #16]
 80064cc:	4313      	orrs	r3, r2
 80064ce:	613b      	str	r3, [r7, #16]
 80064d0:	683b      	ldr	r3, [r7, #0]
 80064d2:	691b      	ldr	r3, [r3, #16]
 80064d4:	011a      	lsls	r2, r3, #4
 80064d6:	683b      	ldr	r3, [r7, #0]
 80064d8:	6a1b      	ldr	r3, [r3, #32]
 80064da:	031b      	lsls	r3, r3, #12
 80064dc:	4313      	orrs	r3, r2
 80064de:	693a      	ldr	r2, [r7, #16]
 80064e0:	4313      	orrs	r3, r2
 80064e2:	613b      	str	r3, [r7, #16]
 80064e4:	68fb      	ldr	r3, [r7, #12]
 80064e6:	f023 0322 	bic.w	r3, r3, #34	@ 0x22
 80064ea:	60fb      	str	r3, [r7, #12]
 80064ec:	68fb      	ldr	r3, [r7, #12]
 80064ee:	f023 0388 	bic.w	r3, r3, #136	@ 0x88
 80064f2:	60fb      	str	r3, [r7, #12]
 80064f4:	683b      	ldr	r3, [r7, #0]
 80064f6:	685a      	ldr	r2, [r3, #4]
 80064f8:	683b      	ldr	r3, [r7, #0]
 80064fa:	695b      	ldr	r3, [r3, #20]
 80064fc:	011b      	lsls	r3, r3, #4
 80064fe:	4313      	orrs	r3, r2
 8006500:	68fa      	ldr	r2, [r7, #12]
 8006502:	4313      	orrs	r3, r2
 8006504:	60fb      	str	r3, [r7, #12]
 8006506:	687b      	ldr	r3, [r7, #4]
 8006508:	681b      	ldr	r3, [r3, #0]
 800650a:	697a      	ldr	r2, [r7, #20]
 800650c:	609a      	str	r2, [r3, #8]
 800650e:	687b      	ldr	r3, [r7, #4]
 8006510:	681b      	ldr	r3, [r3, #0]
 8006512:	693a      	ldr	r2, [r7, #16]
 8006514:	619a      	str	r2, [r3, #24]
 8006516:	687b      	ldr	r3, [r7, #4]
 8006518:	681b      	ldr	r3, [r3, #0]
 800651a:	68fa      	ldr	r2, [r7, #12]
 800651c:	621a      	str	r2, [r3, #32]
 800651e:	687b      	ldr	r3, [r7, #4]
 8006520:	2201      	movs	r2, #1
 8006522:	f883 2046 	strb.w	r2, [r3, #70]	@ 0x46
 8006526:	687b      	ldr	r3, [r7, #4]
 8006528:	2201      	movs	r2, #1
 800652a:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 800652e:	687b      	ldr	r3, [r7, #4]
 8006530:	2201      	movs	r2, #1
 8006532:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 8006536:	687b      	ldr	r3, [r7, #4]
 8006538:	2201      	movs	r2, #1
 800653a:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 800653e:	687b      	ldr	r3, [r7, #4]
 8006540:	2201      	movs	r2, #1
 8006542:	f883 2043 	strb.w	r2, [r3, #67]	@ 0x43
 8006546:	687b      	ldr	r3, [r7, #4]
 8006548:	2201      	movs	r2, #1
 800654a:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 800654e:	2300      	movs	r3, #0
 8006550:	4618      	mov	r0, r3
 8006552:	3718      	adds	r7, #24
 8006554:	46bd      	mov	sp, r7
 8006556:	bd80      	pop	{r7, pc}

08006558 <HAL_TIM_Encoder_Start>:
 8006558:	b580      	push	{r7, lr}
 800655a:	b084      	sub	sp, #16
 800655c:	af00      	add	r7, sp, #0
 800655e:	6078      	str	r0, [r7, #4]
 8006560:	6039      	str	r1, [r7, #0]
 8006562:	687b      	ldr	r3, [r7, #4]
 8006564:	f893 303e 	ldrb.w	r3, [r3, #62]	@ 0x3e
 8006568:	73fb      	strb	r3, [r7, #15]
 800656a:	687b      	ldr	r3, [r7, #4]
 800656c:	f893 303f 	ldrb.w	r3, [r3, #63]	@ 0x3f
 8006570:	73bb      	strb	r3, [r7, #14]
 8006572:	687b      	ldr	r3, [r7, #4]
 8006574:	f893 3042 	ldrb.w	r3, [r3, #66]	@ 0x42
 8006578:	737b      	strb	r3, [r7, #13]
 800657a:	687b      	ldr	r3, [r7, #4]
 800657c:	f893 3043 	ldrb.w	r3, [r3, #67]	@ 0x43
 8006580:	733b      	strb	r3, [r7, #12]
 8006582:	683b      	ldr	r3, [r7, #0]
 8006584:	2b00      	cmp	r3, #0
 8006586:	d110      	bne.n	80065aa <HAL_TIM_Encoder_Start+0x52>
 8006588:	7bfb      	ldrb	r3, [r7, #15]
 800658a:	2b01      	cmp	r3, #1
 800658c:	d102      	bne.n	8006594 <HAL_TIM_Encoder_Start+0x3c>
 800658e:	7b7b      	ldrb	r3, [r7, #13]
 8006590:	2b01      	cmp	r3, #1
 8006592:	d001      	beq.n	8006598 <HAL_TIM_Encoder_Start+0x40>
 8006594:	2301      	movs	r3, #1
 8006596:	e069      	b.n	800666c <HAL_TIM_Encoder_Start+0x114>
 8006598:	687b      	ldr	r3, [r7, #4]
 800659a:	2202      	movs	r2, #2
 800659c:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 80065a0:	687b      	ldr	r3, [r7, #4]
 80065a2:	2202      	movs	r2, #2
 80065a4:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 80065a8:	e031      	b.n	800660e <HAL_TIM_Encoder_Start+0xb6>
 80065aa:	683b      	ldr	r3, [r7, #0]
 80065ac:	2b04      	cmp	r3, #4
 80065ae:	d110      	bne.n	80065d2 <HAL_TIM_Encoder_Start+0x7a>
 80065b0:	7bbb      	ldrb	r3, [r7, #14]
 80065b2:	2b01      	cmp	r3, #1
 80065b4:	d102      	bne.n	80065bc <HAL_TIM_Encoder_Start+0x64>
 80065b6:	7b3b      	ldrb	r3, [r7, #12]
 80065b8:	2b01      	cmp	r3, #1
 80065ba:	d001      	beq.n	80065c0 <HAL_TIM_Encoder_Start+0x68>
 80065bc:	2301      	movs	r3, #1
 80065be:	e055      	b.n	800666c <HAL_TIM_Encoder_Start+0x114>
 80065c0:	687b      	ldr	r3, [r7, #4]
 80065c2:	2202      	movs	r2, #2
 80065c4:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 80065c8:	687b      	ldr	r3, [r7, #4]
 80065ca:	2202      	movs	r2, #2
 80065cc:	f883 2043 	strb.w	r2, [r3, #67]	@ 0x43
 80065d0:	e01d      	b.n	800660e <HAL_TIM_Encoder_Start+0xb6>
 80065d2:	7bfb      	ldrb	r3, [r7, #15]
 80065d4:	2b01      	cmp	r3, #1
 80065d6:	d108      	bne.n	80065ea <HAL_TIM_Encoder_Start+0x92>
 80065d8:	7bbb      	ldrb	r3, [r7, #14]
 80065da:	2b01      	cmp	r3, #1
 80065dc:	d105      	bne.n	80065ea <HAL_TIM_Encoder_Start+0x92>
 80065de:	7b7b      	ldrb	r3, [r7, #13]
 80065e0:	2b01      	cmp	r3, #1
 80065e2:	d102      	bne.n	80065ea <HAL_TIM_Encoder_Start+0x92>
 80065e4:	7b3b      	ldrb	r3, [r7, #12]
 80065e6:	2b01      	cmp	r3, #1
 80065e8:	d001      	beq.n	80065ee <HAL_TIM_Encoder_Start+0x96>
 80065ea:	2301      	movs	r3, #1
 80065ec:	e03e      	b.n	800666c <HAL_TIM_Encoder_Start+0x114>
 80065ee:	687b      	ldr	r3, [r7, #4]
 80065f0:	2202      	movs	r2, #2
 80065f2:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 80065f6:	687b      	ldr	r3, [r7, #4]
 80065f8:	2202      	movs	r2, #2
 80065fa:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 80065fe:	687b      	ldr	r3, [r7, #4]
 8006600:	2202      	movs	r2, #2
 8006602:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8006606:	687b      	ldr	r3, [r7, #4]
 8006608:	2202      	movs	r2, #2
 800660a:	f883 2043 	strb.w	r2, [r3, #67]	@ 0x43
 800660e:	683b      	ldr	r3, [r7, #0]
 8006610:	2b00      	cmp	r3, #0
 8006612:	d003      	beq.n	800661c <HAL_TIM_Encoder_Start+0xc4>
 8006614:	683b      	ldr	r3, [r7, #0]
 8006616:	2b04      	cmp	r3, #4
 8006618:	d008      	beq.n	800662c <HAL_TIM_Encoder_Start+0xd4>
 800661a:	e00f      	b.n	800663c <HAL_TIM_Encoder_Start+0xe4>
 800661c:	687b      	ldr	r3, [r7, #4]
 800661e:	681b      	ldr	r3, [r3, #0]
 8006620:	2201      	movs	r2, #1
 8006622:	2100      	movs	r1, #0
 8006624:	4618      	mov	r0, r3
 8006626:	f000 fd3d 	bl	80070a4 <TIM_CCxChannelCmd>
 800662a:	e016      	b.n	800665a <HAL_TIM_Encoder_Start+0x102>
 800662c:	687b      	ldr	r3, [r7, #4]
 800662e:	681b      	ldr	r3, [r3, #0]
 8006630:	2201      	movs	r2, #1
 8006632:	2104      	movs	r1, #4
 8006634:	4618      	mov	r0, r3
 8006636:	f000 fd35 	bl	80070a4 <TIM_CCxChannelCmd>
 800663a:	e00e      	b.n	800665a <HAL_TIM_Encoder_Start+0x102>
 800663c:	687b      	ldr	r3, [r7, #4]
 800663e:	681b      	ldr	r3, [r3, #0]
 8006640:	2201      	movs	r2, #1
 8006642:	2100      	movs	r1, #0
 8006644:	4618      	mov	r0, r3
 8006646:	f000 fd2d 	bl	80070a4 <TIM_CCxChannelCmd>
 800664a:	687b      	ldr	r3, [r7, #4]
 800664c:	681b      	ldr	r3, [r3, #0]
 800664e:	2201      	movs	r2, #1
 8006650:	2104      	movs	r1, #4
 8006652:	4618      	mov	r0, r3
 8006654:	f000 fd26 	bl	80070a4 <TIM_CCxChannelCmd>
 8006658:	bf00      	nop
 800665a:	687b      	ldr	r3, [r7, #4]
 800665c:	681b      	ldr	r3, [r3, #0]
 800665e:	681a      	ldr	r2, [r3, #0]
 8006660:	687b      	ldr	r3, [r7, #4]
 8006662:	681b      	ldr	r3, [r3, #0]
 8006664:	f042 0201 	orr.w	r2, r2, #1
 8006668:	601a      	str	r2, [r3, #0]
 800666a:	2300      	movs	r3, #0
 800666c:	4618      	mov	r0, r3
 800666e:	3710      	adds	r7, #16
 8006670:	46bd      	mov	sp, r7
 8006672:	bd80      	pop	{r7, pc}

08006674 <HAL_TIM_Encoder_Stop>:
 8006674:	b580      	push	{r7, lr}
 8006676:	b082      	sub	sp, #8
 8006678:	af00      	add	r7, sp, #0
 800667a:	6078      	str	r0, [r7, #4]
 800667c:	6039      	str	r1, [r7, #0]
 800667e:	683b      	ldr	r3, [r7, #0]
 8006680:	2b00      	cmp	r3, #0
 8006682:	d003      	beq.n	800668c <HAL_TIM_Encoder_Stop+0x18>
 8006684:	683b      	ldr	r3, [r7, #0]
 8006686:	2b04      	cmp	r3, #4
 8006688:	d008      	beq.n	800669c <HAL_TIM_Encoder_Stop+0x28>
 800668a:	e00f      	b.n	80066ac <HAL_TIM_Encoder_Stop+0x38>
 800668c:	687b      	ldr	r3, [r7, #4]
 800668e:	681b      	ldr	r3, [r3, #0]
 8006690:	2200      	movs	r2, #0
 8006692:	2100      	movs	r1, #0
 8006694:	4618      	mov	r0, r3
 8006696:	f000 fd05 	bl	80070a4 <TIM_CCxChannelCmd>
 800669a:	e016      	b.n	80066ca <HAL_TIM_Encoder_Stop+0x56>
 800669c:	687b      	ldr	r3, [r7, #4]
 800669e:	681b      	ldr	r3, [r3, #0]
 80066a0:	2200      	movs	r2, #0
 80066a2:	2104      	movs	r1, #4
 80066a4:	4618      	mov	r0, r3
 80066a6:	f000 fcfd 	bl	80070a4 <TIM_CCxChannelCmd>
 80066aa:	e00e      	b.n	80066ca <HAL_TIM_Encoder_Stop+0x56>
 80066ac:	687b      	ldr	r3, [r7, #4]
 80066ae:	681b      	ldr	r3, [r3, #0]
 80066b0:	2200      	movs	r2, #0
 80066b2:	2100      	movs	r1, #0
 80066b4:	4618      	mov	r0, r3
 80066b6:	f000 fcf5 	bl	80070a4 <TIM_CCxChannelCmd>
 80066ba:	687b      	ldr	r3, [r7, #4]
 80066bc:	681b      	ldr	r3, [r3, #0]
 80066be:	2200      	movs	r2, #0
 80066c0:	2104      	movs	r1, #4
 80066c2:	4618      	mov	r0, r3
 80066c4:	f000 fcee 	bl	80070a4 <TIM_CCxChannelCmd>
 80066c8:	bf00      	nop
 80066ca:	687b      	ldr	r3, [r7, #4]
 80066cc:	681b      	ldr	r3, [r3, #0]
 80066ce:	6a1a      	ldr	r2, [r3, #32]
 80066d0:	f241 1311 	movw	r3, #4369	@ 0x1111
 80066d4:	4013      	ands	r3, r2
 80066d6:	2b00      	cmp	r3, #0
 80066d8:	d10f      	bne.n	80066fa <HAL_TIM_Encoder_Stop+0x86>
 80066da:	687b      	ldr	r3, [r7, #4]
 80066dc:	681b      	ldr	r3, [r3, #0]
 80066de:	6a1a      	ldr	r2, [r3, #32]
 80066e0:	f240 4344 	movw	r3, #1092	@ 0x444
 80066e4:	4013      	ands	r3, r2
 80066e6:	2b00      	cmp	r3, #0
 80066e8:	d107      	bne.n	80066fa <HAL_TIM_Encoder_Stop+0x86>
 80066ea:	687b      	ldr	r3, [r7, #4]
 80066ec:	681b      	ldr	r3, [r3, #0]
 80066ee:	681a      	ldr	r2, [r3, #0]
 80066f0:	687b      	ldr	r3, [r7, #4]
 80066f2:	681b      	ldr	r3, [r3, #0]
 80066f4:	f022 0201 	bic.w	r2, r2, #1
 80066f8:	601a      	str	r2, [r3, #0]
 80066fa:	683b      	ldr	r3, [r7, #0]
 80066fc:	2b00      	cmp	r3, #0
 80066fe:	d002      	beq.n	8006706 <HAL_TIM_Encoder_Stop+0x92>
 8006700:	683b      	ldr	r3, [r7, #0]
 8006702:	2b04      	cmp	r3, #4
 8006704:	d138      	bne.n	8006778 <HAL_TIM_Encoder_Stop+0x104>
 8006706:	683b      	ldr	r3, [r7, #0]
 8006708:	2b00      	cmp	r3, #0
 800670a:	d104      	bne.n	8006716 <HAL_TIM_Encoder_Stop+0xa2>
 800670c:	687b      	ldr	r3, [r7, #4]
 800670e:	2201      	movs	r2, #1
 8006710:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8006714:	e013      	b.n	800673e <HAL_TIM_Encoder_Stop+0xca>
 8006716:	683b      	ldr	r3, [r7, #0]
 8006718:	2b04      	cmp	r3, #4
 800671a:	d104      	bne.n	8006726 <HAL_TIM_Encoder_Stop+0xb2>
 800671c:	687b      	ldr	r3, [r7, #4]
 800671e:	2201      	movs	r2, #1
 8006720:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 8006724:	e00b      	b.n	800673e <HAL_TIM_Encoder_Stop+0xca>
 8006726:	683b      	ldr	r3, [r7, #0]
 8006728:	2b08      	cmp	r3, #8
 800672a:	d104      	bne.n	8006736 <HAL_TIM_Encoder_Stop+0xc2>
 800672c:	687b      	ldr	r3, [r7, #4]
 800672e:	2201      	movs	r2, #1
 8006730:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8006734:	e003      	b.n	800673e <HAL_TIM_Encoder_Stop+0xca>
 8006736:	687b      	ldr	r3, [r7, #4]
 8006738:	2201      	movs	r2, #1
 800673a:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 800673e:	683b      	ldr	r3, [r7, #0]
 8006740:	2b00      	cmp	r3, #0
 8006742:	d104      	bne.n	800674e <HAL_TIM_Encoder_Stop+0xda>
 8006744:	687b      	ldr	r3, [r7, #4]
 8006746:	2201      	movs	r2, #1
 8006748:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 800674c:	e024      	b.n	8006798 <HAL_TIM_Encoder_Stop+0x124>
 800674e:	683b      	ldr	r3, [r7, #0]
 8006750:	2b04      	cmp	r3, #4
 8006752:	d104      	bne.n	800675e <HAL_TIM_Encoder_Stop+0xea>
 8006754:	687b      	ldr	r3, [r7, #4]
 8006756:	2201      	movs	r2, #1
 8006758:	f883 2043 	strb.w	r2, [r3, #67]	@ 0x43
 800675c:	e01c      	b.n	8006798 <HAL_TIM_Encoder_Stop+0x124>
 800675e:	683b      	ldr	r3, [r7, #0]
 8006760:	2b08      	cmp	r3, #8
 8006762:	d104      	bne.n	800676e <HAL_TIM_Encoder_Stop+0xfa>
 8006764:	687b      	ldr	r3, [r7, #4]
 8006766:	2201      	movs	r2, #1
 8006768:	f883 2044 	strb.w	r2, [r3, #68]	@ 0x44
 800676c:	e014      	b.n	8006798 <HAL_TIM_Encoder_Stop+0x124>
 800676e:	687b      	ldr	r3, [r7, #4]
 8006770:	2201      	movs	r2, #1
 8006772:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45
 8006776:	e00f      	b.n	8006798 <HAL_TIM_Encoder_Stop+0x124>
 8006778:	687b      	ldr	r3, [r7, #4]
 800677a:	2201      	movs	r2, #1
 800677c:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8006780:	687b      	ldr	r3, [r7, #4]
 8006782:	2201      	movs	r2, #1
 8006784:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 8006788:	687b      	ldr	r3, [r7, #4]
 800678a:	2201      	movs	r2, #1
 800678c:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8006790:	687b      	ldr	r3, [r7, #4]
 8006792:	2201      	movs	r2, #1
 8006794:	f883 2043 	strb.w	r2, [r3, #67]	@ 0x43
 8006798:	2300      	movs	r3, #0
 800679a:	4618      	mov	r0, r3
 800679c:	3708      	adds	r7, #8
 800679e:	46bd      	mov	sp, r7
 80067a0:	bd80      	pop	{r7, pc}
	...

080067a4 <HAL_TIM_PWM_ConfigChannel>:
 80067a4:	b580      	push	{r7, lr}
 80067a6:	b086      	sub	sp, #24
 80067a8:	af00      	add	r7, sp, #0
 80067aa:	60f8      	str	r0, [r7, #12]
 80067ac:	60b9      	str	r1, [r7, #8]
 80067ae:	607a      	str	r2, [r7, #4]
 80067b0:	2300      	movs	r3, #0
 80067b2:	75fb      	strb	r3, [r7, #23]
 80067b4:	68fb      	ldr	r3, [r7, #12]
 80067b6:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 80067ba:	2b01      	cmp	r3, #1
 80067bc:	d101      	bne.n	80067c2 <HAL_TIM_PWM_ConfigChannel+0x1e>
 80067be:	2302      	movs	r3, #2
 80067c0:	e0ae      	b.n	8006920 <HAL_TIM_PWM_ConfigChannel+0x17c>
 80067c2:	68fb      	ldr	r3, [r7, #12]
 80067c4:	2201      	movs	r2, #1
 80067c6:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 80067ca:	687b      	ldr	r3, [r7, #4]
 80067cc:	2b0c      	cmp	r3, #12
 80067ce:	f200 809f 	bhi.w	8006910 <HAL_TIM_PWM_ConfigChannel+0x16c>
 80067d2:	a201      	add	r2, pc, #4	@ (adr r2, 80067d8 <HAL_TIM_PWM_ConfigChannel+0x34>)
 80067d4:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80067d8:	0800680d 	.word	0x0800680d
 80067dc:	08006911 	.word	0x08006911
 80067e0:	08006911 	.word	0x08006911
 80067e4:	08006911 	.word	0x08006911
 80067e8:	0800684d 	.word	0x0800684d
 80067ec:	08006911 	.word	0x08006911
 80067f0:	08006911 	.word	0x08006911
 80067f4:	08006911 	.word	0x08006911
 80067f8:	0800688f 	.word	0x0800688f
 80067fc:	08006911 	.word	0x08006911
 8006800:	08006911 	.word	0x08006911
 8006804:	08006911 	.word	0x08006911
 8006808:	080068cf 	.word	0x080068cf
 800680c:	68fb      	ldr	r3, [r7, #12]
 800680e:	681b      	ldr	r3, [r3, #0]
 8006810:	68b9      	ldr	r1, [r7, #8]
 8006812:	4618      	mov	r0, r3
 8006814:	f000 f9fc 	bl	8006c10 <TIM_OC1_SetConfig>
 8006818:	68fb      	ldr	r3, [r7, #12]
 800681a:	681b      	ldr	r3, [r3, #0]
 800681c:	699a      	ldr	r2, [r3, #24]
 800681e:	68fb      	ldr	r3, [r7, #12]
 8006820:	681b      	ldr	r3, [r3, #0]
 8006822:	f042 0208 	orr.w	r2, r2, #8
 8006826:	619a      	str	r2, [r3, #24]
 8006828:	68fb      	ldr	r3, [r7, #12]
 800682a:	681b      	ldr	r3, [r3, #0]
 800682c:	699a      	ldr	r2, [r3, #24]
 800682e:	68fb      	ldr	r3, [r7, #12]
 8006830:	681b      	ldr	r3, [r3, #0]
 8006832:	f022 0204 	bic.w	r2, r2, #4
 8006836:	619a      	str	r2, [r3, #24]
 8006838:	68fb      	ldr	r3, [r7, #12]
 800683a:	681b      	ldr	r3, [r3, #0]
 800683c:	6999      	ldr	r1, [r3, #24]
 800683e:	68bb      	ldr	r3, [r7, #8]
 8006840:	691a      	ldr	r2, [r3, #16]
 8006842:	68fb      	ldr	r3, [r7, #12]
 8006844:	681b      	ldr	r3, [r3, #0]
 8006846:	430a      	orrs	r2, r1
 8006848:	619a      	str	r2, [r3, #24]
 800684a:	e064      	b.n	8006916 <HAL_TIM_PWM_ConfigChannel+0x172>
 800684c:	68fb      	ldr	r3, [r7, #12]
 800684e:	681b      	ldr	r3, [r3, #0]
 8006850:	68b9      	ldr	r1, [r7, #8]
 8006852:	4618      	mov	r0, r3
 8006854:	f000 fa4c 	bl	8006cf0 <TIM_OC2_SetConfig>
 8006858:	68fb      	ldr	r3, [r7, #12]
 800685a:	681b      	ldr	r3, [r3, #0]
 800685c:	699a      	ldr	r2, [r3, #24]
 800685e:	68fb      	ldr	r3, [r7, #12]
 8006860:	681b      	ldr	r3, [r3, #0]
 8006862:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 8006866:	619a      	str	r2, [r3, #24]
 8006868:	68fb      	ldr	r3, [r7, #12]
 800686a:	681b      	ldr	r3, [r3, #0]
 800686c:	699a      	ldr	r2, [r3, #24]
 800686e:	68fb      	ldr	r3, [r7, #12]
 8006870:	681b      	ldr	r3, [r3, #0]
 8006872:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 8006876:	619a      	str	r2, [r3, #24]
 8006878:	68fb      	ldr	r3, [r7, #12]
 800687a:	681b      	ldr	r3, [r3, #0]
 800687c:	6999      	ldr	r1, [r3, #24]
 800687e:	68bb      	ldr	r3, [r7, #8]
 8006880:	691b      	ldr	r3, [r3, #16]
 8006882:	021a      	lsls	r2, r3, #8
 8006884:	68fb      	ldr	r3, [r7, #12]
 8006886:	681b      	ldr	r3, [r3, #0]
 8006888:	430a      	orrs	r2, r1
 800688a:	619a      	str	r2, [r3, #24]
 800688c:	e043      	b.n	8006916 <HAL_TIM_PWM_ConfigChannel+0x172>
 800688e:	68fb      	ldr	r3, [r7, #12]
 8006890:	681b      	ldr	r3, [r3, #0]
 8006892:	68b9      	ldr	r1, [r7, #8]
 8006894:	4618      	mov	r0, r3
 8006896:	f000 faa1 	bl	8006ddc <TIM_OC3_SetConfig>
 800689a:	68fb      	ldr	r3, [r7, #12]
 800689c:	681b      	ldr	r3, [r3, #0]
 800689e:	69da      	ldr	r2, [r3, #28]
 80068a0:	68fb      	ldr	r3, [r7, #12]
 80068a2:	681b      	ldr	r3, [r3, #0]
 80068a4:	f042 0208 	orr.w	r2, r2, #8
 80068a8:	61da      	str	r2, [r3, #28]
 80068aa:	68fb      	ldr	r3, [r7, #12]
 80068ac:	681b      	ldr	r3, [r3, #0]
 80068ae:	69da      	ldr	r2, [r3, #28]
 80068b0:	68fb      	ldr	r3, [r7, #12]
 80068b2:	681b      	ldr	r3, [r3, #0]
 80068b4:	f022 0204 	bic.w	r2, r2, #4
 80068b8:	61da      	str	r2, [r3, #28]
 80068ba:	68fb      	ldr	r3, [r7, #12]
 80068bc:	681b      	ldr	r3, [r3, #0]
 80068be:	69d9      	ldr	r1, [r3, #28]
 80068c0:	68bb      	ldr	r3, [r7, #8]
 80068c2:	691a      	ldr	r2, [r3, #16]
 80068c4:	68fb      	ldr	r3, [r7, #12]
 80068c6:	681b      	ldr	r3, [r3, #0]
 80068c8:	430a      	orrs	r2, r1
 80068ca:	61da      	str	r2, [r3, #28]
 80068cc:	e023      	b.n	8006916 <HAL_TIM_PWM_ConfigChannel+0x172>
 80068ce:	68fb      	ldr	r3, [r7, #12]
 80068d0:	681b      	ldr	r3, [r3, #0]
 80068d2:	68b9      	ldr	r1, [r7, #8]
 80068d4:	4618      	mov	r0, r3
 80068d6:	f000 faf5 	bl	8006ec4 <TIM_OC4_SetConfig>
 80068da:	68fb      	ldr	r3, [r7, #12]
 80068dc:	681b      	ldr	r3, [r3, #0]
 80068de:	69da      	ldr	r2, [r3, #28]
 80068e0:	68fb      	ldr	r3, [r7, #12]
 80068e2:	681b      	ldr	r3, [r3, #0]
 80068e4:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 80068e8:	61da      	str	r2, [r3, #28]
 80068ea:	68fb      	ldr	r3, [r7, #12]
 80068ec:	681b      	ldr	r3, [r3, #0]
 80068ee:	69da      	ldr	r2, [r3, #28]
 80068f0:	68fb      	ldr	r3, [r7, #12]
 80068f2:	681b      	ldr	r3, [r3, #0]
 80068f4:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 80068f8:	61da      	str	r2, [r3, #28]
 80068fa:	68fb      	ldr	r3, [r7, #12]
 80068fc:	681b      	ldr	r3, [r3, #0]
 80068fe:	69d9      	ldr	r1, [r3, #28]
 8006900:	68bb      	ldr	r3, [r7, #8]
 8006902:	691b      	ldr	r3, [r3, #16]
 8006904:	021a      	lsls	r2, r3, #8
 8006906:	68fb      	ldr	r3, [r7, #12]
 8006908:	681b      	ldr	r3, [r3, #0]
 800690a:	430a      	orrs	r2, r1
 800690c:	61da      	str	r2, [r3, #28]
 800690e:	e002      	b.n	8006916 <HAL_TIM_PWM_ConfigChannel+0x172>
 8006910:	2301      	movs	r3, #1
 8006912:	75fb      	strb	r3, [r7, #23]
 8006914:	bf00      	nop
 8006916:	68fb      	ldr	r3, [r7, #12]
 8006918:	2200      	movs	r2, #0
 800691a:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 800691e:	7dfb      	ldrb	r3, [r7, #23]
 8006920:	4618      	mov	r0, r3
 8006922:	3718      	adds	r7, #24
 8006924:	46bd      	mov	sp, r7
 8006926:	bd80      	pop	{r7, pc}

08006928 <HAL_TIM_ConfigClockSource>:
 8006928:	b580      	push	{r7, lr}
 800692a:	b084      	sub	sp, #16
 800692c:	af00      	add	r7, sp, #0
 800692e:	6078      	str	r0, [r7, #4]
 8006930:	6039      	str	r1, [r7, #0]
 8006932:	2300      	movs	r3, #0
 8006934:	73fb      	strb	r3, [r7, #15]
 8006936:	687b      	ldr	r3, [r7, #4]
 8006938:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 800693c:	2b01      	cmp	r3, #1
 800693e:	d101      	bne.n	8006944 <HAL_TIM_ConfigClockSource+0x1c>
 8006940:	2302      	movs	r3, #2
 8006942:	e0b4      	b.n	8006aae <HAL_TIM_ConfigClockSource+0x186>
 8006944:	687b      	ldr	r3, [r7, #4]
 8006946:	2201      	movs	r2, #1
 8006948:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 800694c:	687b      	ldr	r3, [r7, #4]
 800694e:	2202      	movs	r2, #2
 8006950:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8006954:	687b      	ldr	r3, [r7, #4]
 8006956:	681b      	ldr	r3, [r3, #0]
 8006958:	689b      	ldr	r3, [r3, #8]
 800695a:	60bb      	str	r3, [r7, #8]
 800695c:	68bb      	ldr	r3, [r7, #8]
 800695e:	f023 0377 	bic.w	r3, r3, #119	@ 0x77
 8006962:	60bb      	str	r3, [r7, #8]
 8006964:	68bb      	ldr	r3, [r7, #8]
 8006966:	f423 437f 	bic.w	r3, r3, #65280	@ 0xff00
 800696a:	60bb      	str	r3, [r7, #8]
 800696c:	687b      	ldr	r3, [r7, #4]
 800696e:	681b      	ldr	r3, [r3, #0]
 8006970:	68ba      	ldr	r2, [r7, #8]
 8006972:	609a      	str	r2, [r3, #8]
 8006974:	683b      	ldr	r3, [r7, #0]
 8006976:	681b      	ldr	r3, [r3, #0]
 8006978:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 800697c:	d03e      	beq.n	80069fc <HAL_TIM_ConfigClockSource+0xd4>
 800697e:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 8006982:	f200 8087 	bhi.w	8006a94 <HAL_TIM_ConfigClockSource+0x16c>
 8006986:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 800698a:	f000 8086 	beq.w	8006a9a <HAL_TIM_ConfigClockSource+0x172>
 800698e:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8006992:	d87f      	bhi.n	8006a94 <HAL_TIM_ConfigClockSource+0x16c>
 8006994:	2b70      	cmp	r3, #112	@ 0x70
 8006996:	d01a      	beq.n	80069ce <HAL_TIM_ConfigClockSource+0xa6>
 8006998:	2b70      	cmp	r3, #112	@ 0x70
 800699a:	d87b      	bhi.n	8006a94 <HAL_TIM_ConfigClockSource+0x16c>
 800699c:	2b60      	cmp	r3, #96	@ 0x60
 800699e:	d050      	beq.n	8006a42 <HAL_TIM_ConfigClockSource+0x11a>
 80069a0:	2b60      	cmp	r3, #96	@ 0x60
 80069a2:	d877      	bhi.n	8006a94 <HAL_TIM_ConfigClockSource+0x16c>
 80069a4:	2b50      	cmp	r3, #80	@ 0x50
 80069a6:	d03c      	beq.n	8006a22 <HAL_TIM_ConfigClockSource+0xfa>
 80069a8:	2b50      	cmp	r3, #80	@ 0x50
 80069aa:	d873      	bhi.n	8006a94 <HAL_TIM_ConfigClockSource+0x16c>
 80069ac:	2b40      	cmp	r3, #64	@ 0x40
 80069ae:	d058      	beq.n	8006a62 <HAL_TIM_ConfigClockSource+0x13a>
 80069b0:	2b40      	cmp	r3, #64	@ 0x40
 80069b2:	d86f      	bhi.n	8006a94 <HAL_TIM_ConfigClockSource+0x16c>
 80069b4:	2b30      	cmp	r3, #48	@ 0x30
 80069b6:	d064      	beq.n	8006a82 <HAL_TIM_ConfigClockSource+0x15a>
 80069b8:	2b30      	cmp	r3, #48	@ 0x30
 80069ba:	d86b      	bhi.n	8006a94 <HAL_TIM_ConfigClockSource+0x16c>
 80069bc:	2b20      	cmp	r3, #32
 80069be:	d060      	beq.n	8006a82 <HAL_TIM_ConfigClockSource+0x15a>
 80069c0:	2b20      	cmp	r3, #32
 80069c2:	d867      	bhi.n	8006a94 <HAL_TIM_ConfigClockSource+0x16c>
 80069c4:	2b00      	cmp	r3, #0
 80069c6:	d05c      	beq.n	8006a82 <HAL_TIM_ConfigClockSource+0x15a>
 80069c8:	2b10      	cmp	r3, #16
 80069ca:	d05a      	beq.n	8006a82 <HAL_TIM_ConfigClockSource+0x15a>
 80069cc:	e062      	b.n	8006a94 <HAL_TIM_ConfigClockSource+0x16c>
 80069ce:	687b      	ldr	r3, [r7, #4]
 80069d0:	6818      	ldr	r0, [r3, #0]
 80069d2:	683b      	ldr	r3, [r7, #0]
 80069d4:	6899      	ldr	r1, [r3, #8]
 80069d6:	683b      	ldr	r3, [r7, #0]
 80069d8:	685a      	ldr	r2, [r3, #4]
 80069da:	683b      	ldr	r3, [r7, #0]
 80069dc:	68db      	ldr	r3, [r3, #12]
 80069de:	f000 fb41 	bl	8007064 <TIM_ETR_SetConfig>
 80069e2:	687b      	ldr	r3, [r7, #4]
 80069e4:	681b      	ldr	r3, [r3, #0]
 80069e6:	689b      	ldr	r3, [r3, #8]
 80069e8:	60bb      	str	r3, [r7, #8]
 80069ea:	68bb      	ldr	r3, [r7, #8]
 80069ec:	f043 0377 	orr.w	r3, r3, #119	@ 0x77
 80069f0:	60bb      	str	r3, [r7, #8]
 80069f2:	687b      	ldr	r3, [r7, #4]
 80069f4:	681b      	ldr	r3, [r3, #0]
 80069f6:	68ba      	ldr	r2, [r7, #8]
 80069f8:	609a      	str	r2, [r3, #8]
 80069fa:	e04f      	b.n	8006a9c <HAL_TIM_ConfigClockSource+0x174>
 80069fc:	687b      	ldr	r3, [r7, #4]
 80069fe:	6818      	ldr	r0, [r3, #0]
 8006a00:	683b      	ldr	r3, [r7, #0]
 8006a02:	6899      	ldr	r1, [r3, #8]
 8006a04:	683b      	ldr	r3, [r7, #0]
 8006a06:	685a      	ldr	r2, [r3, #4]
 8006a08:	683b      	ldr	r3, [r7, #0]
 8006a0a:	68db      	ldr	r3, [r3, #12]
 8006a0c:	f000 fb2a 	bl	8007064 <TIM_ETR_SetConfig>
 8006a10:	687b      	ldr	r3, [r7, #4]
 8006a12:	681b      	ldr	r3, [r3, #0]
 8006a14:	689a      	ldr	r2, [r3, #8]
 8006a16:	687b      	ldr	r3, [r7, #4]
 8006a18:	681b      	ldr	r3, [r3, #0]
 8006a1a:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
 8006a1e:	609a      	str	r2, [r3, #8]
 8006a20:	e03c      	b.n	8006a9c <HAL_TIM_ConfigClockSource+0x174>
 8006a22:	687b      	ldr	r3, [r7, #4]
 8006a24:	6818      	ldr	r0, [r3, #0]
 8006a26:	683b      	ldr	r3, [r7, #0]
 8006a28:	6859      	ldr	r1, [r3, #4]
 8006a2a:	683b      	ldr	r3, [r7, #0]
 8006a2c:	68db      	ldr	r3, [r3, #12]
 8006a2e:	461a      	mov	r2, r3
 8006a30:	f000 fa9e 	bl	8006f70 <TIM_TI1_ConfigInputStage>
 8006a34:	687b      	ldr	r3, [r7, #4]
 8006a36:	681b      	ldr	r3, [r3, #0]
 8006a38:	2150      	movs	r1, #80	@ 0x50
 8006a3a:	4618      	mov	r0, r3
 8006a3c:	f000 faf7 	bl	800702e <TIM_ITRx_SetConfig>
 8006a40:	e02c      	b.n	8006a9c <HAL_TIM_ConfigClockSource+0x174>
 8006a42:	687b      	ldr	r3, [r7, #4]
 8006a44:	6818      	ldr	r0, [r3, #0]
 8006a46:	683b      	ldr	r3, [r7, #0]
 8006a48:	6859      	ldr	r1, [r3, #4]
 8006a4a:	683b      	ldr	r3, [r7, #0]
 8006a4c:	68db      	ldr	r3, [r3, #12]
 8006a4e:	461a      	mov	r2, r3
 8006a50:	f000 fabd 	bl	8006fce <TIM_TI2_ConfigInputStage>
 8006a54:	687b      	ldr	r3, [r7, #4]
 8006a56:	681b      	ldr	r3, [r3, #0]
 8006a58:	2160      	movs	r1, #96	@ 0x60
 8006a5a:	4618      	mov	r0, r3
 8006a5c:	f000 fae7 	bl	800702e <TIM_ITRx_SetConfig>
 8006a60:	e01c      	b.n	8006a9c <HAL_TIM_ConfigClockSource+0x174>
 8006a62:	687b      	ldr	r3, [r7, #4]
 8006a64:	6818      	ldr	r0, [r3, #0]
 8006a66:	683b      	ldr	r3, [r7, #0]
 8006a68:	6859      	ldr	r1, [r3, #4]
 8006a6a:	683b      	ldr	r3, [r7, #0]
 8006a6c:	68db      	ldr	r3, [r3, #12]
 8006a6e:	461a      	mov	r2, r3
 8006a70:	f000 fa7e 	bl	8006f70 <TIM_TI1_ConfigInputStage>
 8006a74:	687b      	ldr	r3, [r7, #4]
 8006a76:	681b      	ldr	r3, [r3, #0]
 8006a78:	2140      	movs	r1, #64	@ 0x40
 8006a7a:	4618      	mov	r0, r3
 8006a7c:	f000 fad7 	bl	800702e <TIM_ITRx_SetConfig>
 8006a80:	e00c      	b.n	8006a9c <HAL_TIM_ConfigClockSource+0x174>
 8006a82:	687b      	ldr	r3, [r7, #4]
 8006a84:	681a      	ldr	r2, [r3, #0]
 8006a86:	683b      	ldr	r3, [r7, #0]
 8006a88:	681b      	ldr	r3, [r3, #0]
 8006a8a:	4619      	mov	r1, r3
 8006a8c:	4610      	mov	r0, r2
 8006a8e:	f000 face 	bl	800702e <TIM_ITRx_SetConfig>
 8006a92:	e003      	b.n	8006a9c <HAL_TIM_ConfigClockSource+0x174>
 8006a94:	2301      	movs	r3, #1
 8006a96:	73fb      	strb	r3, [r7, #15]
 8006a98:	e000      	b.n	8006a9c <HAL_TIM_ConfigClockSource+0x174>
 8006a9a:	bf00      	nop
 8006a9c:	687b      	ldr	r3, [r7, #4]
 8006a9e:	2201      	movs	r2, #1
 8006aa0:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8006aa4:	687b      	ldr	r3, [r7, #4]
 8006aa6:	2200      	movs	r2, #0
 8006aa8:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8006aac:	7bfb      	ldrb	r3, [r7, #15]
 8006aae:	4618      	mov	r0, r3
 8006ab0:	3710      	adds	r7, #16
 8006ab2:	46bd      	mov	sp, r7
 8006ab4:	bd80      	pop	{r7, pc}
	...

08006ab8 <TIM_Base_SetConfig>:
 8006ab8:	b480      	push	{r7}
 8006aba:	b085      	sub	sp, #20
 8006abc:	af00      	add	r7, sp, #0
 8006abe:	6078      	str	r0, [r7, #4]
 8006ac0:	6039      	str	r1, [r7, #0]
 8006ac2:	687b      	ldr	r3, [r7, #4]
 8006ac4:	681b      	ldr	r3, [r3, #0]
 8006ac6:	60fb      	str	r3, [r7, #12]
 8006ac8:	687b      	ldr	r3, [r7, #4]
 8006aca:	4a46      	ldr	r2, [pc, #280]	@ (8006be4 <TIM_Base_SetConfig+0x12c>)
 8006acc:	4293      	cmp	r3, r2
 8006ace:	d013      	beq.n	8006af8 <TIM_Base_SetConfig+0x40>
 8006ad0:	687b      	ldr	r3, [r7, #4]
 8006ad2:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8006ad6:	d00f      	beq.n	8006af8 <TIM_Base_SetConfig+0x40>
 8006ad8:	687b      	ldr	r3, [r7, #4]
 8006ada:	4a43      	ldr	r2, [pc, #268]	@ (8006be8 <TIM_Base_SetConfig+0x130>)
 8006adc:	4293      	cmp	r3, r2
 8006ade:	d00b      	beq.n	8006af8 <TIM_Base_SetConfig+0x40>
 8006ae0:	687b      	ldr	r3, [r7, #4]
 8006ae2:	4a42      	ldr	r2, [pc, #264]	@ (8006bec <TIM_Base_SetConfig+0x134>)
 8006ae4:	4293      	cmp	r3, r2
 8006ae6:	d007      	beq.n	8006af8 <TIM_Base_SetConfig+0x40>
 8006ae8:	687b      	ldr	r3, [r7, #4]
 8006aea:	4a41      	ldr	r2, [pc, #260]	@ (8006bf0 <TIM_Base_SetConfig+0x138>)
 8006aec:	4293      	cmp	r3, r2
 8006aee:	d003      	beq.n	8006af8 <TIM_Base_SetConfig+0x40>
 8006af0:	687b      	ldr	r3, [r7, #4]
 8006af2:	4a40      	ldr	r2, [pc, #256]	@ (8006bf4 <TIM_Base_SetConfig+0x13c>)
 8006af4:	4293      	cmp	r3, r2
 8006af6:	d108      	bne.n	8006b0a <TIM_Base_SetConfig+0x52>
 8006af8:	68fb      	ldr	r3, [r7, #12]
 8006afa:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8006afe:	60fb      	str	r3, [r7, #12]
 8006b00:	683b      	ldr	r3, [r7, #0]
 8006b02:	685b      	ldr	r3, [r3, #4]
 8006b04:	68fa      	ldr	r2, [r7, #12]
 8006b06:	4313      	orrs	r3, r2
 8006b08:	60fb      	str	r3, [r7, #12]
 8006b0a:	687b      	ldr	r3, [r7, #4]
 8006b0c:	4a35      	ldr	r2, [pc, #212]	@ (8006be4 <TIM_Base_SetConfig+0x12c>)
 8006b0e:	4293      	cmp	r3, r2
 8006b10:	d02b      	beq.n	8006b6a <TIM_Base_SetConfig+0xb2>
 8006b12:	687b      	ldr	r3, [r7, #4]
 8006b14:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8006b18:	d027      	beq.n	8006b6a <TIM_Base_SetConfig+0xb2>
 8006b1a:	687b      	ldr	r3, [r7, #4]
 8006b1c:	4a32      	ldr	r2, [pc, #200]	@ (8006be8 <TIM_Base_SetConfig+0x130>)
 8006b1e:	4293      	cmp	r3, r2
 8006b20:	d023      	beq.n	8006b6a <TIM_Base_SetConfig+0xb2>
 8006b22:	687b      	ldr	r3, [r7, #4]
 8006b24:	4a31      	ldr	r2, [pc, #196]	@ (8006bec <TIM_Base_SetConfig+0x134>)
 8006b26:	4293      	cmp	r3, r2
 8006b28:	d01f      	beq.n	8006b6a <TIM_Base_SetConfig+0xb2>
 8006b2a:	687b      	ldr	r3, [r7, #4]
 8006b2c:	4a30      	ldr	r2, [pc, #192]	@ (8006bf0 <TIM_Base_SetConfig+0x138>)
 8006b2e:	4293      	cmp	r3, r2
 8006b30:	d01b      	beq.n	8006b6a <TIM_Base_SetConfig+0xb2>
 8006b32:	687b      	ldr	r3, [r7, #4]
 8006b34:	4a2f      	ldr	r2, [pc, #188]	@ (8006bf4 <TIM_Base_SetConfig+0x13c>)
 8006b36:	4293      	cmp	r3, r2
 8006b38:	d017      	beq.n	8006b6a <TIM_Base_SetConfig+0xb2>
 8006b3a:	687b      	ldr	r3, [r7, #4]
 8006b3c:	4a2e      	ldr	r2, [pc, #184]	@ (8006bf8 <TIM_Base_SetConfig+0x140>)
 8006b3e:	4293      	cmp	r3, r2
 8006b40:	d013      	beq.n	8006b6a <TIM_Base_SetConfig+0xb2>
 8006b42:	687b      	ldr	r3, [r7, #4]
 8006b44:	4a2d      	ldr	r2, [pc, #180]	@ (8006bfc <TIM_Base_SetConfig+0x144>)
 8006b46:	4293      	cmp	r3, r2
 8006b48:	d00f      	beq.n	8006b6a <TIM_Base_SetConfig+0xb2>
 8006b4a:	687b      	ldr	r3, [r7, #4]
 8006b4c:	4a2c      	ldr	r2, [pc, #176]	@ (8006c00 <TIM_Base_SetConfig+0x148>)
 8006b4e:	4293      	cmp	r3, r2
 8006b50:	d00b      	beq.n	8006b6a <TIM_Base_SetConfig+0xb2>
 8006b52:	687b      	ldr	r3, [r7, #4]
 8006b54:	4a2b      	ldr	r2, [pc, #172]	@ (8006c04 <TIM_Base_SetConfig+0x14c>)
 8006b56:	4293      	cmp	r3, r2
 8006b58:	d007      	beq.n	8006b6a <TIM_Base_SetConfig+0xb2>
 8006b5a:	687b      	ldr	r3, [r7, #4]
 8006b5c:	4a2a      	ldr	r2, [pc, #168]	@ (8006c08 <TIM_Base_SetConfig+0x150>)
 8006b5e:	4293      	cmp	r3, r2
 8006b60:	d003      	beq.n	8006b6a <TIM_Base_SetConfig+0xb2>
 8006b62:	687b      	ldr	r3, [r7, #4]
 8006b64:	4a29      	ldr	r2, [pc, #164]	@ (8006c0c <TIM_Base_SetConfig+0x154>)
 8006b66:	4293      	cmp	r3, r2
 8006b68:	d108      	bne.n	8006b7c <TIM_Base_SetConfig+0xc4>
 8006b6a:	68fb      	ldr	r3, [r7, #12]
 8006b6c:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 8006b70:	60fb      	str	r3, [r7, #12]
 8006b72:	683b      	ldr	r3, [r7, #0]
 8006b74:	68db      	ldr	r3, [r3, #12]
 8006b76:	68fa      	ldr	r2, [r7, #12]
 8006b78:	4313      	orrs	r3, r2
 8006b7a:	60fb      	str	r3, [r7, #12]
 8006b7c:	68fb      	ldr	r3, [r7, #12]
 8006b7e:	f023 0280 	bic.w	r2, r3, #128	@ 0x80
 8006b82:	683b      	ldr	r3, [r7, #0]
 8006b84:	695b      	ldr	r3, [r3, #20]
 8006b86:	4313      	orrs	r3, r2
 8006b88:	60fb      	str	r3, [r7, #12]
 8006b8a:	687b      	ldr	r3, [r7, #4]
 8006b8c:	68fa      	ldr	r2, [r7, #12]
 8006b8e:	601a      	str	r2, [r3, #0]
 8006b90:	683b      	ldr	r3, [r7, #0]
 8006b92:	689a      	ldr	r2, [r3, #8]
 8006b94:	687b      	ldr	r3, [r7, #4]
 8006b96:	62da      	str	r2, [r3, #44]	@ 0x2c
 8006b98:	683b      	ldr	r3, [r7, #0]
 8006b9a:	681a      	ldr	r2, [r3, #0]
 8006b9c:	687b      	ldr	r3, [r7, #4]
 8006b9e:	629a      	str	r2, [r3, #40]	@ 0x28
 8006ba0:	687b      	ldr	r3, [r7, #4]
 8006ba2:	4a10      	ldr	r2, [pc, #64]	@ (8006be4 <TIM_Base_SetConfig+0x12c>)
 8006ba4:	4293      	cmp	r3, r2
 8006ba6:	d003      	beq.n	8006bb0 <TIM_Base_SetConfig+0xf8>
 8006ba8:	687b      	ldr	r3, [r7, #4]
 8006baa:	4a12      	ldr	r2, [pc, #72]	@ (8006bf4 <TIM_Base_SetConfig+0x13c>)
 8006bac:	4293      	cmp	r3, r2
 8006bae:	d103      	bne.n	8006bb8 <TIM_Base_SetConfig+0x100>
 8006bb0:	683b      	ldr	r3, [r7, #0]
 8006bb2:	691a      	ldr	r2, [r3, #16]
 8006bb4:	687b      	ldr	r3, [r7, #4]
 8006bb6:	631a      	str	r2, [r3, #48]	@ 0x30
 8006bb8:	687b      	ldr	r3, [r7, #4]
 8006bba:	2201      	movs	r2, #1
 8006bbc:	615a      	str	r2, [r3, #20]
 8006bbe:	687b      	ldr	r3, [r7, #4]
 8006bc0:	691b      	ldr	r3, [r3, #16]
 8006bc2:	f003 0301 	and.w	r3, r3, #1
 8006bc6:	2b01      	cmp	r3, #1
 8006bc8:	d105      	bne.n	8006bd6 <TIM_Base_SetConfig+0x11e>
 8006bca:	687b      	ldr	r3, [r7, #4]
 8006bcc:	691b      	ldr	r3, [r3, #16]
 8006bce:	f023 0201 	bic.w	r2, r3, #1
 8006bd2:	687b      	ldr	r3, [r7, #4]
 8006bd4:	611a      	str	r2, [r3, #16]
 8006bd6:	bf00      	nop
 8006bd8:	3714      	adds	r7, #20
 8006bda:	46bd      	mov	sp, r7
 8006bdc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006be0:	4770      	bx	lr
 8006be2:	bf00      	nop
 8006be4:	40010000 	.word	0x40010000
 8006be8:	40000400 	.word	0x40000400
 8006bec:	40000800 	.word	0x40000800
 8006bf0:	40000c00 	.word	0x40000c00
 8006bf4:	40010400 	.word	0x40010400
 8006bf8:	40014000 	.word	0x40014000
 8006bfc:	40014400 	.word	0x40014400
 8006c00:	40014800 	.word	0x40014800
 8006c04:	40001800 	.word	0x40001800
 8006c08:	40001c00 	.word	0x40001c00
 8006c0c:	40002000 	.word	0x40002000

08006c10 <TIM_OC1_SetConfig>:
 8006c10:	b480      	push	{r7}
 8006c12:	b087      	sub	sp, #28
 8006c14:	af00      	add	r7, sp, #0
 8006c16:	6078      	str	r0, [r7, #4]
 8006c18:	6039      	str	r1, [r7, #0]
 8006c1a:	687b      	ldr	r3, [r7, #4]
 8006c1c:	6a1b      	ldr	r3, [r3, #32]
 8006c1e:	617b      	str	r3, [r7, #20]
 8006c20:	687b      	ldr	r3, [r7, #4]
 8006c22:	6a1b      	ldr	r3, [r3, #32]
 8006c24:	f023 0201 	bic.w	r2, r3, #1
 8006c28:	687b      	ldr	r3, [r7, #4]
 8006c2a:	621a      	str	r2, [r3, #32]
 8006c2c:	687b      	ldr	r3, [r7, #4]
 8006c2e:	685b      	ldr	r3, [r3, #4]
 8006c30:	613b      	str	r3, [r7, #16]
 8006c32:	687b      	ldr	r3, [r7, #4]
 8006c34:	699b      	ldr	r3, [r3, #24]
 8006c36:	60fb      	str	r3, [r7, #12]
 8006c38:	68fb      	ldr	r3, [r7, #12]
 8006c3a:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8006c3e:	60fb      	str	r3, [r7, #12]
 8006c40:	68fb      	ldr	r3, [r7, #12]
 8006c42:	f023 0303 	bic.w	r3, r3, #3
 8006c46:	60fb      	str	r3, [r7, #12]
 8006c48:	683b      	ldr	r3, [r7, #0]
 8006c4a:	681b      	ldr	r3, [r3, #0]
 8006c4c:	68fa      	ldr	r2, [r7, #12]
 8006c4e:	4313      	orrs	r3, r2
 8006c50:	60fb      	str	r3, [r7, #12]
 8006c52:	697b      	ldr	r3, [r7, #20]
 8006c54:	f023 0302 	bic.w	r3, r3, #2
 8006c58:	617b      	str	r3, [r7, #20]
 8006c5a:	683b      	ldr	r3, [r7, #0]
 8006c5c:	689b      	ldr	r3, [r3, #8]
 8006c5e:	697a      	ldr	r2, [r7, #20]
 8006c60:	4313      	orrs	r3, r2
 8006c62:	617b      	str	r3, [r7, #20]
 8006c64:	687b      	ldr	r3, [r7, #4]
 8006c66:	4a20      	ldr	r2, [pc, #128]	@ (8006ce8 <TIM_OC1_SetConfig+0xd8>)
 8006c68:	4293      	cmp	r3, r2
 8006c6a:	d003      	beq.n	8006c74 <TIM_OC1_SetConfig+0x64>
 8006c6c:	687b      	ldr	r3, [r7, #4]
 8006c6e:	4a1f      	ldr	r2, [pc, #124]	@ (8006cec <TIM_OC1_SetConfig+0xdc>)
 8006c70:	4293      	cmp	r3, r2
 8006c72:	d10c      	bne.n	8006c8e <TIM_OC1_SetConfig+0x7e>
 8006c74:	697b      	ldr	r3, [r7, #20]
 8006c76:	f023 0308 	bic.w	r3, r3, #8
 8006c7a:	617b      	str	r3, [r7, #20]
 8006c7c:	683b      	ldr	r3, [r7, #0]
 8006c7e:	68db      	ldr	r3, [r3, #12]
 8006c80:	697a      	ldr	r2, [r7, #20]
 8006c82:	4313      	orrs	r3, r2
 8006c84:	617b      	str	r3, [r7, #20]
 8006c86:	697b      	ldr	r3, [r7, #20]
 8006c88:	f023 0304 	bic.w	r3, r3, #4
 8006c8c:	617b      	str	r3, [r7, #20]
 8006c8e:	687b      	ldr	r3, [r7, #4]
 8006c90:	4a15      	ldr	r2, [pc, #84]	@ (8006ce8 <TIM_OC1_SetConfig+0xd8>)
 8006c92:	4293      	cmp	r3, r2
 8006c94:	d003      	beq.n	8006c9e <TIM_OC1_SetConfig+0x8e>
 8006c96:	687b      	ldr	r3, [r7, #4]
 8006c98:	4a14      	ldr	r2, [pc, #80]	@ (8006cec <TIM_OC1_SetConfig+0xdc>)
 8006c9a:	4293      	cmp	r3, r2
 8006c9c:	d111      	bne.n	8006cc2 <TIM_OC1_SetConfig+0xb2>
 8006c9e:	693b      	ldr	r3, [r7, #16]
 8006ca0:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 8006ca4:	613b      	str	r3, [r7, #16]
 8006ca6:	693b      	ldr	r3, [r7, #16]
 8006ca8:	f423 7300 	bic.w	r3, r3, #512	@ 0x200
 8006cac:	613b      	str	r3, [r7, #16]
 8006cae:	683b      	ldr	r3, [r7, #0]
 8006cb0:	695b      	ldr	r3, [r3, #20]
 8006cb2:	693a      	ldr	r2, [r7, #16]
 8006cb4:	4313      	orrs	r3, r2
 8006cb6:	613b      	str	r3, [r7, #16]
 8006cb8:	683b      	ldr	r3, [r7, #0]
 8006cba:	699b      	ldr	r3, [r3, #24]
 8006cbc:	693a      	ldr	r2, [r7, #16]
 8006cbe:	4313      	orrs	r3, r2
 8006cc0:	613b      	str	r3, [r7, #16]
 8006cc2:	687b      	ldr	r3, [r7, #4]
 8006cc4:	693a      	ldr	r2, [r7, #16]
 8006cc6:	605a      	str	r2, [r3, #4]
 8006cc8:	687b      	ldr	r3, [r7, #4]
 8006cca:	68fa      	ldr	r2, [r7, #12]
 8006ccc:	619a      	str	r2, [r3, #24]
 8006cce:	683b      	ldr	r3, [r7, #0]
 8006cd0:	685a      	ldr	r2, [r3, #4]
 8006cd2:	687b      	ldr	r3, [r7, #4]
 8006cd4:	635a      	str	r2, [r3, #52]	@ 0x34
 8006cd6:	687b      	ldr	r3, [r7, #4]
 8006cd8:	697a      	ldr	r2, [r7, #20]
 8006cda:	621a      	str	r2, [r3, #32]
 8006cdc:	bf00      	nop
 8006cde:	371c      	adds	r7, #28
 8006ce0:	46bd      	mov	sp, r7
 8006ce2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006ce6:	4770      	bx	lr
 8006ce8:	40010000 	.word	0x40010000
 8006cec:	40010400 	.word	0x40010400

08006cf0 <TIM_OC2_SetConfig>:
 8006cf0:	b480      	push	{r7}
 8006cf2:	b087      	sub	sp, #28
 8006cf4:	af00      	add	r7, sp, #0
 8006cf6:	6078      	str	r0, [r7, #4]
 8006cf8:	6039      	str	r1, [r7, #0]
 8006cfa:	687b      	ldr	r3, [r7, #4]
 8006cfc:	6a1b      	ldr	r3, [r3, #32]
 8006cfe:	617b      	str	r3, [r7, #20]
 8006d00:	687b      	ldr	r3, [r7, #4]
 8006d02:	6a1b      	ldr	r3, [r3, #32]
 8006d04:	f023 0210 	bic.w	r2, r3, #16
 8006d08:	687b      	ldr	r3, [r7, #4]
 8006d0a:	621a      	str	r2, [r3, #32]
 8006d0c:	687b      	ldr	r3, [r7, #4]
 8006d0e:	685b      	ldr	r3, [r3, #4]
 8006d10:	613b      	str	r3, [r7, #16]
 8006d12:	687b      	ldr	r3, [r7, #4]
 8006d14:	699b      	ldr	r3, [r3, #24]
 8006d16:	60fb      	str	r3, [r7, #12]
 8006d18:	68fb      	ldr	r3, [r7, #12]
 8006d1a:	f423 43e0 	bic.w	r3, r3, #28672	@ 0x7000
 8006d1e:	60fb      	str	r3, [r7, #12]
 8006d20:	68fb      	ldr	r3, [r7, #12]
 8006d22:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 8006d26:	60fb      	str	r3, [r7, #12]
 8006d28:	683b      	ldr	r3, [r7, #0]
 8006d2a:	681b      	ldr	r3, [r3, #0]
 8006d2c:	021b      	lsls	r3, r3, #8
 8006d2e:	68fa      	ldr	r2, [r7, #12]
 8006d30:	4313      	orrs	r3, r2
 8006d32:	60fb      	str	r3, [r7, #12]
 8006d34:	697b      	ldr	r3, [r7, #20]
 8006d36:	f023 0320 	bic.w	r3, r3, #32
 8006d3a:	617b      	str	r3, [r7, #20]
 8006d3c:	683b      	ldr	r3, [r7, #0]
 8006d3e:	689b      	ldr	r3, [r3, #8]
 8006d40:	011b      	lsls	r3, r3, #4
 8006d42:	697a      	ldr	r2, [r7, #20]
 8006d44:	4313      	orrs	r3, r2
 8006d46:	617b      	str	r3, [r7, #20]
 8006d48:	687b      	ldr	r3, [r7, #4]
 8006d4a:	4a22      	ldr	r2, [pc, #136]	@ (8006dd4 <TIM_OC2_SetConfig+0xe4>)
 8006d4c:	4293      	cmp	r3, r2
 8006d4e:	d003      	beq.n	8006d58 <TIM_OC2_SetConfig+0x68>
 8006d50:	687b      	ldr	r3, [r7, #4]
 8006d52:	4a21      	ldr	r2, [pc, #132]	@ (8006dd8 <TIM_OC2_SetConfig+0xe8>)
 8006d54:	4293      	cmp	r3, r2
 8006d56:	d10d      	bne.n	8006d74 <TIM_OC2_SetConfig+0x84>
 8006d58:	697b      	ldr	r3, [r7, #20]
 8006d5a:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 8006d5e:	617b      	str	r3, [r7, #20]
 8006d60:	683b      	ldr	r3, [r7, #0]
 8006d62:	68db      	ldr	r3, [r3, #12]
 8006d64:	011b      	lsls	r3, r3, #4
 8006d66:	697a      	ldr	r2, [r7, #20]
 8006d68:	4313      	orrs	r3, r2
 8006d6a:	617b      	str	r3, [r7, #20]
 8006d6c:	697b      	ldr	r3, [r7, #20]
 8006d6e:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 8006d72:	617b      	str	r3, [r7, #20]
 8006d74:	687b      	ldr	r3, [r7, #4]
 8006d76:	4a17      	ldr	r2, [pc, #92]	@ (8006dd4 <TIM_OC2_SetConfig+0xe4>)
 8006d78:	4293      	cmp	r3, r2
 8006d7a:	d003      	beq.n	8006d84 <TIM_OC2_SetConfig+0x94>
 8006d7c:	687b      	ldr	r3, [r7, #4]
 8006d7e:	4a16      	ldr	r2, [pc, #88]	@ (8006dd8 <TIM_OC2_SetConfig+0xe8>)
 8006d80:	4293      	cmp	r3, r2
 8006d82:	d113      	bne.n	8006dac <TIM_OC2_SetConfig+0xbc>
 8006d84:	693b      	ldr	r3, [r7, #16]
 8006d86:	f423 6380 	bic.w	r3, r3, #1024	@ 0x400
 8006d8a:	613b      	str	r3, [r7, #16]
 8006d8c:	693b      	ldr	r3, [r7, #16]
 8006d8e:	f423 6300 	bic.w	r3, r3, #2048	@ 0x800
 8006d92:	613b      	str	r3, [r7, #16]
 8006d94:	683b      	ldr	r3, [r7, #0]
 8006d96:	695b      	ldr	r3, [r3, #20]
 8006d98:	009b      	lsls	r3, r3, #2
 8006d9a:	693a      	ldr	r2, [r7, #16]
 8006d9c:	4313      	orrs	r3, r2
 8006d9e:	613b      	str	r3, [r7, #16]
 8006da0:	683b      	ldr	r3, [r7, #0]
 8006da2:	699b      	ldr	r3, [r3, #24]
 8006da4:	009b      	lsls	r3, r3, #2
 8006da6:	693a      	ldr	r2, [r7, #16]
 8006da8:	4313      	orrs	r3, r2
 8006daa:	613b      	str	r3, [r7, #16]
 8006dac:	687b      	ldr	r3, [r7, #4]
 8006dae:	693a      	ldr	r2, [r7, #16]
 8006db0:	605a      	str	r2, [r3, #4]
 8006db2:	687b      	ldr	r3, [r7, #4]
 8006db4:	68fa      	ldr	r2, [r7, #12]
 8006db6:	619a      	str	r2, [r3, #24]
 8006db8:	683b      	ldr	r3, [r7, #0]
 8006dba:	685a      	ldr	r2, [r3, #4]
 8006dbc:	687b      	ldr	r3, [r7, #4]
 8006dbe:	639a      	str	r2, [r3, #56]	@ 0x38
 8006dc0:	687b      	ldr	r3, [r7, #4]
 8006dc2:	697a      	ldr	r2, [r7, #20]
 8006dc4:	621a      	str	r2, [r3, #32]
 8006dc6:	bf00      	nop
 8006dc8:	371c      	adds	r7, #28
 8006dca:	46bd      	mov	sp, r7
 8006dcc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006dd0:	4770      	bx	lr
 8006dd2:	bf00      	nop
 8006dd4:	40010000 	.word	0x40010000
 8006dd8:	40010400 	.word	0x40010400

08006ddc <TIM_OC3_SetConfig>:
 8006ddc:	b480      	push	{r7}
 8006dde:	b087      	sub	sp, #28
 8006de0:	af00      	add	r7, sp, #0
 8006de2:	6078      	str	r0, [r7, #4]
 8006de4:	6039      	str	r1, [r7, #0]
 8006de6:	687b      	ldr	r3, [r7, #4]
 8006de8:	6a1b      	ldr	r3, [r3, #32]
 8006dea:	617b      	str	r3, [r7, #20]
 8006dec:	687b      	ldr	r3, [r7, #4]
 8006dee:	6a1b      	ldr	r3, [r3, #32]
 8006df0:	f423 7280 	bic.w	r2, r3, #256	@ 0x100
 8006df4:	687b      	ldr	r3, [r7, #4]
 8006df6:	621a      	str	r2, [r3, #32]
 8006df8:	687b      	ldr	r3, [r7, #4]
 8006dfa:	685b      	ldr	r3, [r3, #4]
 8006dfc:	613b      	str	r3, [r7, #16]
 8006dfe:	687b      	ldr	r3, [r7, #4]
 8006e00:	69db      	ldr	r3, [r3, #28]
 8006e02:	60fb      	str	r3, [r7, #12]
 8006e04:	68fb      	ldr	r3, [r7, #12]
 8006e06:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8006e0a:	60fb      	str	r3, [r7, #12]
 8006e0c:	68fb      	ldr	r3, [r7, #12]
 8006e0e:	f023 0303 	bic.w	r3, r3, #3
 8006e12:	60fb      	str	r3, [r7, #12]
 8006e14:	683b      	ldr	r3, [r7, #0]
 8006e16:	681b      	ldr	r3, [r3, #0]
 8006e18:	68fa      	ldr	r2, [r7, #12]
 8006e1a:	4313      	orrs	r3, r2
 8006e1c:	60fb      	str	r3, [r7, #12]
 8006e1e:	697b      	ldr	r3, [r7, #20]
 8006e20:	f423 7300 	bic.w	r3, r3, #512	@ 0x200
 8006e24:	617b      	str	r3, [r7, #20]
 8006e26:	683b      	ldr	r3, [r7, #0]
 8006e28:	689b      	ldr	r3, [r3, #8]
 8006e2a:	021b      	lsls	r3, r3, #8
 8006e2c:	697a      	ldr	r2, [r7, #20]
 8006e2e:	4313      	orrs	r3, r2
 8006e30:	617b      	str	r3, [r7, #20]
 8006e32:	687b      	ldr	r3, [r7, #4]
 8006e34:	4a21      	ldr	r2, [pc, #132]	@ (8006ebc <TIM_OC3_SetConfig+0xe0>)
 8006e36:	4293      	cmp	r3, r2
 8006e38:	d003      	beq.n	8006e42 <TIM_OC3_SetConfig+0x66>
 8006e3a:	687b      	ldr	r3, [r7, #4]
 8006e3c:	4a20      	ldr	r2, [pc, #128]	@ (8006ec0 <TIM_OC3_SetConfig+0xe4>)
 8006e3e:	4293      	cmp	r3, r2
 8006e40:	d10d      	bne.n	8006e5e <TIM_OC3_SetConfig+0x82>
 8006e42:	697b      	ldr	r3, [r7, #20]
 8006e44:	f423 6300 	bic.w	r3, r3, #2048	@ 0x800
 8006e48:	617b      	str	r3, [r7, #20]
 8006e4a:	683b      	ldr	r3, [r7, #0]
 8006e4c:	68db      	ldr	r3, [r3, #12]
 8006e4e:	021b      	lsls	r3, r3, #8
 8006e50:	697a      	ldr	r2, [r7, #20]
 8006e52:	4313      	orrs	r3, r2
 8006e54:	617b      	str	r3, [r7, #20]
 8006e56:	697b      	ldr	r3, [r7, #20]
 8006e58:	f423 6380 	bic.w	r3, r3, #1024	@ 0x400
 8006e5c:	617b      	str	r3, [r7, #20]
 8006e5e:	687b      	ldr	r3, [r7, #4]
 8006e60:	4a16      	ldr	r2, [pc, #88]	@ (8006ebc <TIM_OC3_SetConfig+0xe0>)
 8006e62:	4293      	cmp	r3, r2
 8006e64:	d003      	beq.n	8006e6e <TIM_OC3_SetConfig+0x92>
 8006e66:	687b      	ldr	r3, [r7, #4]
 8006e68:	4a15      	ldr	r2, [pc, #84]	@ (8006ec0 <TIM_OC3_SetConfig+0xe4>)
 8006e6a:	4293      	cmp	r3, r2
 8006e6c:	d113      	bne.n	8006e96 <TIM_OC3_SetConfig+0xba>
 8006e6e:	693b      	ldr	r3, [r7, #16]
 8006e70:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 8006e74:	613b      	str	r3, [r7, #16]
 8006e76:	693b      	ldr	r3, [r7, #16]
 8006e78:	f423 5300 	bic.w	r3, r3, #8192	@ 0x2000
 8006e7c:	613b      	str	r3, [r7, #16]
 8006e7e:	683b      	ldr	r3, [r7, #0]
 8006e80:	695b      	ldr	r3, [r3, #20]
 8006e82:	011b      	lsls	r3, r3, #4
 8006e84:	693a      	ldr	r2, [r7, #16]
 8006e86:	4313      	orrs	r3, r2
 8006e88:	613b      	str	r3, [r7, #16]
 8006e8a:	683b      	ldr	r3, [r7, #0]
 8006e8c:	699b      	ldr	r3, [r3, #24]
 8006e8e:	011b      	lsls	r3, r3, #4
 8006e90:	693a      	ldr	r2, [r7, #16]
 8006e92:	4313      	orrs	r3, r2
 8006e94:	613b      	str	r3, [r7, #16]
 8006e96:	687b      	ldr	r3, [r7, #4]
 8006e98:	693a      	ldr	r2, [r7, #16]
 8006e9a:	605a      	str	r2, [r3, #4]
 8006e9c:	687b      	ldr	r3, [r7, #4]
 8006e9e:	68fa      	ldr	r2, [r7, #12]
 8006ea0:	61da      	str	r2, [r3, #28]
 8006ea2:	683b      	ldr	r3, [r7, #0]
 8006ea4:	685a      	ldr	r2, [r3, #4]
 8006ea6:	687b      	ldr	r3, [r7, #4]
 8006ea8:	63da      	str	r2, [r3, #60]	@ 0x3c
 8006eaa:	687b      	ldr	r3, [r7, #4]
 8006eac:	697a      	ldr	r2, [r7, #20]
 8006eae:	621a      	str	r2, [r3, #32]
 8006eb0:	bf00      	nop
 8006eb2:	371c      	adds	r7, #28
 8006eb4:	46bd      	mov	sp, r7
 8006eb6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006eba:	4770      	bx	lr
 8006ebc:	40010000 	.word	0x40010000
 8006ec0:	40010400 	.word	0x40010400

08006ec4 <TIM_OC4_SetConfig>:
 8006ec4:	b480      	push	{r7}
 8006ec6:	b087      	sub	sp, #28
 8006ec8:	af00      	add	r7, sp, #0
 8006eca:	6078      	str	r0, [r7, #4]
 8006ecc:	6039      	str	r1, [r7, #0]
 8006ece:	687b      	ldr	r3, [r7, #4]
 8006ed0:	6a1b      	ldr	r3, [r3, #32]
 8006ed2:	613b      	str	r3, [r7, #16]
 8006ed4:	687b      	ldr	r3, [r7, #4]
 8006ed6:	6a1b      	ldr	r3, [r3, #32]
 8006ed8:	f423 5280 	bic.w	r2, r3, #4096	@ 0x1000
 8006edc:	687b      	ldr	r3, [r7, #4]
 8006ede:	621a      	str	r2, [r3, #32]
 8006ee0:	687b      	ldr	r3, [r7, #4]
 8006ee2:	685b      	ldr	r3, [r3, #4]
 8006ee4:	617b      	str	r3, [r7, #20]
 8006ee6:	687b      	ldr	r3, [r7, #4]
 8006ee8:	69db      	ldr	r3, [r3, #28]
 8006eea:	60fb      	str	r3, [r7, #12]
 8006eec:	68fb      	ldr	r3, [r7, #12]
 8006eee:	f423 43e0 	bic.w	r3, r3, #28672	@ 0x7000
 8006ef2:	60fb      	str	r3, [r7, #12]
 8006ef4:	68fb      	ldr	r3, [r7, #12]
 8006ef6:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 8006efa:	60fb      	str	r3, [r7, #12]
 8006efc:	683b      	ldr	r3, [r7, #0]
 8006efe:	681b      	ldr	r3, [r3, #0]
 8006f00:	021b      	lsls	r3, r3, #8
 8006f02:	68fa      	ldr	r2, [r7, #12]
 8006f04:	4313      	orrs	r3, r2
 8006f06:	60fb      	str	r3, [r7, #12]
 8006f08:	693b      	ldr	r3, [r7, #16]
 8006f0a:	f423 5300 	bic.w	r3, r3, #8192	@ 0x2000
 8006f0e:	613b      	str	r3, [r7, #16]
 8006f10:	683b      	ldr	r3, [r7, #0]
 8006f12:	689b      	ldr	r3, [r3, #8]
 8006f14:	031b      	lsls	r3, r3, #12
 8006f16:	693a      	ldr	r2, [r7, #16]
 8006f18:	4313      	orrs	r3, r2
 8006f1a:	613b      	str	r3, [r7, #16]
 8006f1c:	687b      	ldr	r3, [r7, #4]
 8006f1e:	4a12      	ldr	r2, [pc, #72]	@ (8006f68 <TIM_OC4_SetConfig+0xa4>)
 8006f20:	4293      	cmp	r3, r2
 8006f22:	d003      	beq.n	8006f2c <TIM_OC4_SetConfig+0x68>
 8006f24:	687b      	ldr	r3, [r7, #4]
 8006f26:	4a11      	ldr	r2, [pc, #68]	@ (8006f6c <TIM_OC4_SetConfig+0xa8>)
 8006f28:	4293      	cmp	r3, r2
 8006f2a:	d109      	bne.n	8006f40 <TIM_OC4_SetConfig+0x7c>
 8006f2c:	697b      	ldr	r3, [r7, #20]
 8006f2e:	f423 4380 	bic.w	r3, r3, #16384	@ 0x4000
 8006f32:	617b      	str	r3, [r7, #20]
 8006f34:	683b      	ldr	r3, [r7, #0]
 8006f36:	695b      	ldr	r3, [r3, #20]
 8006f38:	019b      	lsls	r3, r3, #6
 8006f3a:	697a      	ldr	r2, [r7, #20]
 8006f3c:	4313      	orrs	r3, r2
 8006f3e:	617b      	str	r3, [r7, #20]
 8006f40:	687b      	ldr	r3, [r7, #4]
 8006f42:	697a      	ldr	r2, [r7, #20]
 8006f44:	605a      	str	r2, [r3, #4]
 8006f46:	687b      	ldr	r3, [r7, #4]
 8006f48:	68fa      	ldr	r2, [r7, #12]
 8006f4a:	61da      	str	r2, [r3, #28]
 8006f4c:	683b      	ldr	r3, [r7, #0]
 8006f4e:	685a      	ldr	r2, [r3, #4]
 8006f50:	687b      	ldr	r3, [r7, #4]
 8006f52:	641a      	str	r2, [r3, #64]	@ 0x40
 8006f54:	687b      	ldr	r3, [r7, #4]
 8006f56:	693a      	ldr	r2, [r7, #16]
 8006f58:	621a      	str	r2, [r3, #32]
 8006f5a:	bf00      	nop
 8006f5c:	371c      	adds	r7, #28
 8006f5e:	46bd      	mov	sp, r7
 8006f60:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006f64:	4770      	bx	lr
 8006f66:	bf00      	nop
 8006f68:	40010000 	.word	0x40010000
 8006f6c:	40010400 	.word	0x40010400

08006f70 <TIM_TI1_ConfigInputStage>:
 8006f70:	b480      	push	{r7}
 8006f72:	b087      	sub	sp, #28
 8006f74:	af00      	add	r7, sp, #0
 8006f76:	60f8      	str	r0, [r7, #12]
 8006f78:	60b9      	str	r1, [r7, #8]
 8006f7a:	607a      	str	r2, [r7, #4]
 8006f7c:	68fb      	ldr	r3, [r7, #12]
 8006f7e:	6a1b      	ldr	r3, [r3, #32]
 8006f80:	617b      	str	r3, [r7, #20]
 8006f82:	68fb      	ldr	r3, [r7, #12]
 8006f84:	6a1b      	ldr	r3, [r3, #32]
 8006f86:	f023 0201 	bic.w	r2, r3, #1
 8006f8a:	68fb      	ldr	r3, [r7, #12]
 8006f8c:	621a      	str	r2, [r3, #32]
 8006f8e:	68fb      	ldr	r3, [r7, #12]
 8006f90:	699b      	ldr	r3, [r3, #24]
 8006f92:	613b      	str	r3, [r7, #16]
 8006f94:	693b      	ldr	r3, [r7, #16]
 8006f96:	f023 03f0 	bic.w	r3, r3, #240	@ 0xf0
 8006f9a:	613b      	str	r3, [r7, #16]
 8006f9c:	687b      	ldr	r3, [r7, #4]
 8006f9e:	011b      	lsls	r3, r3, #4
 8006fa0:	693a      	ldr	r2, [r7, #16]
 8006fa2:	4313      	orrs	r3, r2
 8006fa4:	613b      	str	r3, [r7, #16]
 8006fa6:	697b      	ldr	r3, [r7, #20]
 8006fa8:	f023 030a 	bic.w	r3, r3, #10
 8006fac:	617b      	str	r3, [r7, #20]
 8006fae:	697a      	ldr	r2, [r7, #20]
 8006fb0:	68bb      	ldr	r3, [r7, #8]
 8006fb2:	4313      	orrs	r3, r2
 8006fb4:	617b      	str	r3, [r7, #20]
 8006fb6:	68fb      	ldr	r3, [r7, #12]
 8006fb8:	693a      	ldr	r2, [r7, #16]
 8006fba:	619a      	str	r2, [r3, #24]
 8006fbc:	68fb      	ldr	r3, [r7, #12]
 8006fbe:	697a      	ldr	r2, [r7, #20]
 8006fc0:	621a      	str	r2, [r3, #32]
 8006fc2:	bf00      	nop
 8006fc4:	371c      	adds	r7, #28
 8006fc6:	46bd      	mov	sp, r7
 8006fc8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006fcc:	4770      	bx	lr

08006fce <TIM_TI2_ConfigInputStage>:
 8006fce:	b480      	push	{r7}
 8006fd0:	b087      	sub	sp, #28
 8006fd2:	af00      	add	r7, sp, #0
 8006fd4:	60f8      	str	r0, [r7, #12]
 8006fd6:	60b9      	str	r1, [r7, #8]
 8006fd8:	607a      	str	r2, [r7, #4]
 8006fda:	68fb      	ldr	r3, [r7, #12]
 8006fdc:	6a1b      	ldr	r3, [r3, #32]
 8006fde:	617b      	str	r3, [r7, #20]
 8006fe0:	68fb      	ldr	r3, [r7, #12]
 8006fe2:	6a1b      	ldr	r3, [r3, #32]
 8006fe4:	f023 0210 	bic.w	r2, r3, #16
 8006fe8:	68fb      	ldr	r3, [r7, #12]
 8006fea:	621a      	str	r2, [r3, #32]
 8006fec:	68fb      	ldr	r3, [r7, #12]
 8006fee:	699b      	ldr	r3, [r3, #24]
 8006ff0:	613b      	str	r3, [r7, #16]
 8006ff2:	693b      	ldr	r3, [r7, #16]
 8006ff4:	f423 4370 	bic.w	r3, r3, #61440	@ 0xf000
 8006ff8:	613b      	str	r3, [r7, #16]
 8006ffa:	687b      	ldr	r3, [r7, #4]
 8006ffc:	031b      	lsls	r3, r3, #12
 8006ffe:	693a      	ldr	r2, [r7, #16]
 8007000:	4313      	orrs	r3, r2
 8007002:	613b      	str	r3, [r7, #16]
 8007004:	697b      	ldr	r3, [r7, #20]
 8007006:	f023 03a0 	bic.w	r3, r3, #160	@ 0xa0
 800700a:	617b      	str	r3, [r7, #20]
 800700c:	68bb      	ldr	r3, [r7, #8]
 800700e:	011b      	lsls	r3, r3, #4
 8007010:	697a      	ldr	r2, [r7, #20]
 8007012:	4313      	orrs	r3, r2
 8007014:	617b      	str	r3, [r7, #20]
 8007016:	68fb      	ldr	r3, [r7, #12]
 8007018:	693a      	ldr	r2, [r7, #16]
 800701a:	619a      	str	r2, [r3, #24]
 800701c:	68fb      	ldr	r3, [r7, #12]
 800701e:	697a      	ldr	r2, [r7, #20]
 8007020:	621a      	str	r2, [r3, #32]
 8007022:	bf00      	nop
 8007024:	371c      	adds	r7, #28
 8007026:	46bd      	mov	sp, r7
 8007028:	f85d 7b04 	ldr.w	r7, [sp], #4
 800702c:	4770      	bx	lr

0800702e <TIM_ITRx_SetConfig>:
 800702e:	b480      	push	{r7}
 8007030:	b085      	sub	sp, #20
 8007032:	af00      	add	r7, sp, #0
 8007034:	6078      	str	r0, [r7, #4]
 8007036:	6039      	str	r1, [r7, #0]
 8007038:	687b      	ldr	r3, [r7, #4]
 800703a:	689b      	ldr	r3, [r3, #8]
 800703c:	60fb      	str	r3, [r7, #12]
 800703e:	68fb      	ldr	r3, [r7, #12]
 8007040:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8007044:	60fb      	str	r3, [r7, #12]
 8007046:	683a      	ldr	r2, [r7, #0]
 8007048:	68fb      	ldr	r3, [r7, #12]
 800704a:	4313      	orrs	r3, r2
 800704c:	f043 0307 	orr.w	r3, r3, #7
 8007050:	60fb      	str	r3, [r7, #12]
 8007052:	687b      	ldr	r3, [r7, #4]
 8007054:	68fa      	ldr	r2, [r7, #12]
 8007056:	609a      	str	r2, [r3, #8]
 8007058:	bf00      	nop
 800705a:	3714      	adds	r7, #20
 800705c:	46bd      	mov	sp, r7
 800705e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007062:	4770      	bx	lr

08007064 <TIM_ETR_SetConfig>:
 8007064:	b480      	push	{r7}
 8007066:	b087      	sub	sp, #28
 8007068:	af00      	add	r7, sp, #0
 800706a:	60f8      	str	r0, [r7, #12]
 800706c:	60b9      	str	r1, [r7, #8]
 800706e:	607a      	str	r2, [r7, #4]
 8007070:	603b      	str	r3, [r7, #0]
 8007072:	68fb      	ldr	r3, [r7, #12]
 8007074:	689b      	ldr	r3, [r3, #8]
 8007076:	617b      	str	r3, [r7, #20]
 8007078:	697b      	ldr	r3, [r7, #20]
 800707a:	f423 437f 	bic.w	r3, r3, #65280	@ 0xff00
 800707e:	617b      	str	r3, [r7, #20]
 8007080:	683b      	ldr	r3, [r7, #0]
 8007082:	021a      	lsls	r2, r3, #8
 8007084:	687b      	ldr	r3, [r7, #4]
 8007086:	431a      	orrs	r2, r3
 8007088:	68bb      	ldr	r3, [r7, #8]
 800708a:	4313      	orrs	r3, r2
 800708c:	697a      	ldr	r2, [r7, #20]
 800708e:	4313      	orrs	r3, r2
 8007090:	617b      	str	r3, [r7, #20]
 8007092:	68fb      	ldr	r3, [r7, #12]
 8007094:	697a      	ldr	r2, [r7, #20]
 8007096:	609a      	str	r2, [r3, #8]
 8007098:	bf00      	nop
 800709a:	371c      	adds	r7, #28
 800709c:	46bd      	mov	sp, r7
 800709e:	f85d 7b04 	ldr.w	r7, [sp], #4
 80070a2:	4770      	bx	lr

080070a4 <TIM_CCxChannelCmd>:
 80070a4:	b480      	push	{r7}
 80070a6:	b087      	sub	sp, #28
 80070a8:	af00      	add	r7, sp, #0
 80070aa:	60f8      	str	r0, [r7, #12]
 80070ac:	60b9      	str	r1, [r7, #8]
 80070ae:	607a      	str	r2, [r7, #4]
 80070b0:	68bb      	ldr	r3, [r7, #8]
 80070b2:	f003 031f 	and.w	r3, r3, #31
 80070b6:	2201      	movs	r2, #1
 80070b8:	fa02 f303 	lsl.w	r3, r2, r3
 80070bc:	617b      	str	r3, [r7, #20]
 80070be:	68fb      	ldr	r3, [r7, #12]
 80070c0:	6a1a      	ldr	r2, [r3, #32]
 80070c2:	697b      	ldr	r3, [r7, #20]
 80070c4:	43db      	mvns	r3, r3
 80070c6:	401a      	ands	r2, r3
 80070c8:	68fb      	ldr	r3, [r7, #12]
 80070ca:	621a      	str	r2, [r3, #32]
 80070cc:	68fb      	ldr	r3, [r7, #12]
 80070ce:	6a1a      	ldr	r2, [r3, #32]
 80070d0:	68bb      	ldr	r3, [r7, #8]
 80070d2:	f003 031f 	and.w	r3, r3, #31
 80070d6:	6879      	ldr	r1, [r7, #4]
 80070d8:	fa01 f303 	lsl.w	r3, r1, r3
 80070dc:	431a      	orrs	r2, r3
 80070de:	68fb      	ldr	r3, [r7, #12]
 80070e0:	621a      	str	r2, [r3, #32]
 80070e2:	bf00      	nop
 80070e4:	371c      	adds	r7, #28
 80070e6:	46bd      	mov	sp, r7
 80070e8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80070ec:	4770      	bx	lr
	...

080070f0 <HAL_TIMEx_MasterConfigSynchronization>:
 80070f0:	b480      	push	{r7}
 80070f2:	b085      	sub	sp, #20
 80070f4:	af00      	add	r7, sp, #0
 80070f6:	6078      	str	r0, [r7, #4]
 80070f8:	6039      	str	r1, [r7, #0]
 80070fa:	687b      	ldr	r3, [r7, #4]
 80070fc:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 8007100:	2b01      	cmp	r3, #1
 8007102:	d101      	bne.n	8007108 <HAL_TIMEx_MasterConfigSynchronization+0x18>
 8007104:	2302      	movs	r3, #2
 8007106:	e05a      	b.n	80071be <HAL_TIMEx_MasterConfigSynchronization+0xce>
 8007108:	687b      	ldr	r3, [r7, #4]
 800710a:	2201      	movs	r2, #1
 800710c:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8007110:	687b      	ldr	r3, [r7, #4]
 8007112:	2202      	movs	r2, #2
 8007114:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8007118:	687b      	ldr	r3, [r7, #4]
 800711a:	681b      	ldr	r3, [r3, #0]
 800711c:	685b      	ldr	r3, [r3, #4]
 800711e:	60fb      	str	r3, [r7, #12]
 8007120:	687b      	ldr	r3, [r7, #4]
 8007122:	681b      	ldr	r3, [r3, #0]
 8007124:	689b      	ldr	r3, [r3, #8]
 8007126:	60bb      	str	r3, [r7, #8]
 8007128:	68fb      	ldr	r3, [r7, #12]
 800712a:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 800712e:	60fb      	str	r3, [r7, #12]
 8007130:	683b      	ldr	r3, [r7, #0]
 8007132:	681b      	ldr	r3, [r3, #0]
 8007134:	68fa      	ldr	r2, [r7, #12]
 8007136:	4313      	orrs	r3, r2
 8007138:	60fb      	str	r3, [r7, #12]
 800713a:	687b      	ldr	r3, [r7, #4]
 800713c:	681b      	ldr	r3, [r3, #0]
 800713e:	68fa      	ldr	r2, [r7, #12]
 8007140:	605a      	str	r2, [r3, #4]
 8007142:	687b      	ldr	r3, [r7, #4]
 8007144:	681b      	ldr	r3, [r3, #0]
 8007146:	4a21      	ldr	r2, [pc, #132]	@ (80071cc <HAL_TIMEx_MasterConfigSynchronization+0xdc>)
 8007148:	4293      	cmp	r3, r2
 800714a:	d022      	beq.n	8007192 <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 800714c:	687b      	ldr	r3, [r7, #4]
 800714e:	681b      	ldr	r3, [r3, #0]
 8007150:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8007154:	d01d      	beq.n	8007192 <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8007156:	687b      	ldr	r3, [r7, #4]
 8007158:	681b      	ldr	r3, [r3, #0]
 800715a:	4a1d      	ldr	r2, [pc, #116]	@ (80071d0 <HAL_TIMEx_MasterConfigSynchronization+0xe0>)
 800715c:	4293      	cmp	r3, r2
 800715e:	d018      	beq.n	8007192 <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8007160:	687b      	ldr	r3, [r7, #4]
 8007162:	681b      	ldr	r3, [r3, #0]
 8007164:	4a1b      	ldr	r2, [pc, #108]	@ (80071d4 <HAL_TIMEx_MasterConfigSynchronization+0xe4>)
 8007166:	4293      	cmp	r3, r2
 8007168:	d013      	beq.n	8007192 <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 800716a:	687b      	ldr	r3, [r7, #4]
 800716c:	681b      	ldr	r3, [r3, #0]
 800716e:	4a1a      	ldr	r2, [pc, #104]	@ (80071d8 <HAL_TIMEx_MasterConfigSynchronization+0xe8>)
 8007170:	4293      	cmp	r3, r2
 8007172:	d00e      	beq.n	8007192 <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8007174:	687b      	ldr	r3, [r7, #4]
 8007176:	681b      	ldr	r3, [r3, #0]
 8007178:	4a18      	ldr	r2, [pc, #96]	@ (80071dc <HAL_TIMEx_MasterConfigSynchronization+0xec>)
 800717a:	4293      	cmp	r3, r2
 800717c:	d009      	beq.n	8007192 <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 800717e:	687b      	ldr	r3, [r7, #4]
 8007180:	681b      	ldr	r3, [r3, #0]
 8007182:	4a17      	ldr	r2, [pc, #92]	@ (80071e0 <HAL_TIMEx_MasterConfigSynchronization+0xf0>)
 8007184:	4293      	cmp	r3, r2
 8007186:	d004      	beq.n	8007192 <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8007188:	687b      	ldr	r3, [r7, #4]
 800718a:	681b      	ldr	r3, [r3, #0]
 800718c:	4a15      	ldr	r2, [pc, #84]	@ (80071e4 <HAL_TIMEx_MasterConfigSynchronization+0xf4>)
 800718e:	4293      	cmp	r3, r2
 8007190:	d10c      	bne.n	80071ac <HAL_TIMEx_MasterConfigSynchronization+0xbc>
 8007192:	68bb      	ldr	r3, [r7, #8]
 8007194:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 8007198:	60bb      	str	r3, [r7, #8]
 800719a:	683b      	ldr	r3, [r7, #0]
 800719c:	685b      	ldr	r3, [r3, #4]
 800719e:	68ba      	ldr	r2, [r7, #8]
 80071a0:	4313      	orrs	r3, r2
 80071a2:	60bb      	str	r3, [r7, #8]
 80071a4:	687b      	ldr	r3, [r7, #4]
 80071a6:	681b      	ldr	r3, [r3, #0]
 80071a8:	68ba      	ldr	r2, [r7, #8]
 80071aa:	609a      	str	r2, [r3, #8]
 80071ac:	687b      	ldr	r3, [r7, #4]
 80071ae:	2201      	movs	r2, #1
 80071b0:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 80071b4:	687b      	ldr	r3, [r7, #4]
 80071b6:	2200      	movs	r2, #0
 80071b8:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 80071bc:	2300      	movs	r3, #0
 80071be:	4618      	mov	r0, r3
 80071c0:	3714      	adds	r7, #20
 80071c2:	46bd      	mov	sp, r7
 80071c4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80071c8:	4770      	bx	lr
 80071ca:	bf00      	nop
 80071cc:	40010000 	.word	0x40010000
 80071d0:	40000400 	.word	0x40000400
 80071d4:	40000800 	.word	0x40000800
 80071d8:	40000c00 	.word	0x40000c00
 80071dc:	40010400 	.word	0x40010400
 80071e0:	40014000 	.word	0x40014000
 80071e4:	40001800 	.word	0x40001800

080071e8 <HAL_UART_Init>:
 80071e8:	b580      	push	{r7, lr}
 80071ea:	b082      	sub	sp, #8
 80071ec:	af00      	add	r7, sp, #0
 80071ee:	6078      	str	r0, [r7, #4]
 80071f0:	687b      	ldr	r3, [r7, #4]
 80071f2:	2b00      	cmp	r3, #0
 80071f4:	d101      	bne.n	80071fa <HAL_UART_Init+0x12>
 80071f6:	2301      	movs	r3, #1
 80071f8:	e042      	b.n	8007280 <HAL_UART_Init+0x98>
 80071fa:	687b      	ldr	r3, [r7, #4]
 80071fc:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 8007200:	b2db      	uxtb	r3, r3
 8007202:	2b00      	cmp	r3, #0
 8007204:	d106      	bne.n	8007214 <HAL_UART_Init+0x2c>
 8007206:	687b      	ldr	r3, [r7, #4]
 8007208:	2200      	movs	r2, #0
 800720a:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 800720e:	6878      	ldr	r0, [r7, #4]
 8007210:	f7fc f804 	bl	800321c <HAL_UART_MspInit>
 8007214:	687b      	ldr	r3, [r7, #4]
 8007216:	2224      	movs	r2, #36	@ 0x24
 8007218:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 800721c:	687b      	ldr	r3, [r7, #4]
 800721e:	681b      	ldr	r3, [r3, #0]
 8007220:	68da      	ldr	r2, [r3, #12]
 8007222:	687b      	ldr	r3, [r7, #4]
 8007224:	681b      	ldr	r3, [r3, #0]
 8007226:	f422 5200 	bic.w	r2, r2, #8192	@ 0x2000
 800722a:	60da      	str	r2, [r3, #12]
 800722c:	6878      	ldr	r0, [r7, #4]
 800722e:	f000 ff4f 	bl	80080d0 <UART_SetConfig>
 8007232:	687b      	ldr	r3, [r7, #4]
 8007234:	681b      	ldr	r3, [r3, #0]
 8007236:	691a      	ldr	r2, [r3, #16]
 8007238:	687b      	ldr	r3, [r7, #4]
 800723a:	681b      	ldr	r3, [r3, #0]
 800723c:	f422 4290 	bic.w	r2, r2, #18432	@ 0x4800
 8007240:	611a      	str	r2, [r3, #16]
 8007242:	687b      	ldr	r3, [r7, #4]
 8007244:	681b      	ldr	r3, [r3, #0]
 8007246:	695a      	ldr	r2, [r3, #20]
 8007248:	687b      	ldr	r3, [r7, #4]
 800724a:	681b      	ldr	r3, [r3, #0]
 800724c:	f022 022a 	bic.w	r2, r2, #42	@ 0x2a
 8007250:	615a      	str	r2, [r3, #20]
 8007252:	687b      	ldr	r3, [r7, #4]
 8007254:	681b      	ldr	r3, [r3, #0]
 8007256:	68da      	ldr	r2, [r3, #12]
 8007258:	687b      	ldr	r3, [r7, #4]
 800725a:	681b      	ldr	r3, [r3, #0]
 800725c:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
 8007260:	60da      	str	r2, [r3, #12]
 8007262:	687b      	ldr	r3, [r7, #4]
 8007264:	2200      	movs	r2, #0
 8007266:	645a      	str	r2, [r3, #68]	@ 0x44
 8007268:	687b      	ldr	r3, [r7, #4]
 800726a:	2220      	movs	r2, #32
 800726c:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8007270:	687b      	ldr	r3, [r7, #4]
 8007272:	2220      	movs	r2, #32
 8007274:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8007278:	687b      	ldr	r3, [r7, #4]
 800727a:	2200      	movs	r2, #0
 800727c:	635a      	str	r2, [r3, #52]	@ 0x34
 800727e:	2300      	movs	r3, #0
 8007280:	4618      	mov	r0, r3
 8007282:	3708      	adds	r7, #8
 8007284:	46bd      	mov	sp, r7
 8007286:	bd80      	pop	{r7, pc}

08007288 <HAL_UART_Transmit>:
 8007288:	b580      	push	{r7, lr}
 800728a:	b08a      	sub	sp, #40	@ 0x28
 800728c:	af02      	add	r7, sp, #8
 800728e:	60f8      	str	r0, [r7, #12]
 8007290:	60b9      	str	r1, [r7, #8]
 8007292:	603b      	str	r3, [r7, #0]
 8007294:	4613      	mov	r3, r2
 8007296:	80fb      	strh	r3, [r7, #6]
 8007298:	2300      	movs	r3, #0
 800729a:	617b      	str	r3, [r7, #20]
 800729c:	68fb      	ldr	r3, [r7, #12]
 800729e:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 80072a2:	b2db      	uxtb	r3, r3
 80072a4:	2b20      	cmp	r3, #32
 80072a6:	d175      	bne.n	8007394 <HAL_UART_Transmit+0x10c>
 80072a8:	68bb      	ldr	r3, [r7, #8]
 80072aa:	2b00      	cmp	r3, #0
 80072ac:	d002      	beq.n	80072b4 <HAL_UART_Transmit+0x2c>
 80072ae:	88fb      	ldrh	r3, [r7, #6]
 80072b0:	2b00      	cmp	r3, #0
 80072b2:	d101      	bne.n	80072b8 <HAL_UART_Transmit+0x30>
 80072b4:	2301      	movs	r3, #1
 80072b6:	e06e      	b.n	8007396 <HAL_UART_Transmit+0x10e>
 80072b8:	68fb      	ldr	r3, [r7, #12]
 80072ba:	2200      	movs	r2, #0
 80072bc:	645a      	str	r2, [r3, #68]	@ 0x44
 80072be:	68fb      	ldr	r3, [r7, #12]
 80072c0:	2221      	movs	r2, #33	@ 0x21
 80072c2:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 80072c6:	f7fc f9f3 	bl	80036b0 <HAL_GetTick>
 80072ca:	6178      	str	r0, [r7, #20]
 80072cc:	68fb      	ldr	r3, [r7, #12]
 80072ce:	88fa      	ldrh	r2, [r7, #6]
 80072d0:	849a      	strh	r2, [r3, #36]	@ 0x24
 80072d2:	68fb      	ldr	r3, [r7, #12]
 80072d4:	88fa      	ldrh	r2, [r7, #6]
 80072d6:	84da      	strh	r2, [r3, #38]	@ 0x26
 80072d8:	68fb      	ldr	r3, [r7, #12]
 80072da:	689b      	ldr	r3, [r3, #8]
 80072dc:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 80072e0:	d108      	bne.n	80072f4 <HAL_UART_Transmit+0x6c>
 80072e2:	68fb      	ldr	r3, [r7, #12]
 80072e4:	691b      	ldr	r3, [r3, #16]
 80072e6:	2b00      	cmp	r3, #0
 80072e8:	d104      	bne.n	80072f4 <HAL_UART_Transmit+0x6c>
 80072ea:	2300      	movs	r3, #0
 80072ec:	61fb      	str	r3, [r7, #28]
 80072ee:	68bb      	ldr	r3, [r7, #8]
 80072f0:	61bb      	str	r3, [r7, #24]
 80072f2:	e003      	b.n	80072fc <HAL_UART_Transmit+0x74>
 80072f4:	68bb      	ldr	r3, [r7, #8]
 80072f6:	61fb      	str	r3, [r7, #28]
 80072f8:	2300      	movs	r3, #0
 80072fa:	61bb      	str	r3, [r7, #24]
 80072fc:	e02e      	b.n	800735c <HAL_UART_Transmit+0xd4>
 80072fe:	683b      	ldr	r3, [r7, #0]
 8007300:	9300      	str	r3, [sp, #0]
 8007302:	697b      	ldr	r3, [r7, #20]
 8007304:	2200      	movs	r2, #0
 8007306:	2180      	movs	r1, #128	@ 0x80
 8007308:	68f8      	ldr	r0, [r7, #12]
 800730a:	f000 fc27 	bl	8007b5c <UART_WaitOnFlagUntilTimeout>
 800730e:	4603      	mov	r3, r0
 8007310:	2b00      	cmp	r3, #0
 8007312:	d005      	beq.n	8007320 <HAL_UART_Transmit+0x98>
 8007314:	68fb      	ldr	r3, [r7, #12]
 8007316:	2220      	movs	r2, #32
 8007318:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 800731c:	2303      	movs	r3, #3
 800731e:	e03a      	b.n	8007396 <HAL_UART_Transmit+0x10e>
 8007320:	69fb      	ldr	r3, [r7, #28]
 8007322:	2b00      	cmp	r3, #0
 8007324:	d10b      	bne.n	800733e <HAL_UART_Transmit+0xb6>
 8007326:	69bb      	ldr	r3, [r7, #24]
 8007328:	881b      	ldrh	r3, [r3, #0]
 800732a:	461a      	mov	r2, r3
 800732c:	68fb      	ldr	r3, [r7, #12]
 800732e:	681b      	ldr	r3, [r3, #0]
 8007330:	f3c2 0208 	ubfx	r2, r2, #0, #9
 8007334:	605a      	str	r2, [r3, #4]
 8007336:	69bb      	ldr	r3, [r7, #24]
 8007338:	3302      	adds	r3, #2
 800733a:	61bb      	str	r3, [r7, #24]
 800733c:	e007      	b.n	800734e <HAL_UART_Transmit+0xc6>
 800733e:	69fb      	ldr	r3, [r7, #28]
 8007340:	781a      	ldrb	r2, [r3, #0]
 8007342:	68fb      	ldr	r3, [r7, #12]
 8007344:	681b      	ldr	r3, [r3, #0]
 8007346:	605a      	str	r2, [r3, #4]
 8007348:	69fb      	ldr	r3, [r7, #28]
 800734a:	3301      	adds	r3, #1
 800734c:	61fb      	str	r3, [r7, #28]
 800734e:	68fb      	ldr	r3, [r7, #12]
 8007350:	8cdb      	ldrh	r3, [r3, #38]	@ 0x26
 8007352:	b29b      	uxth	r3, r3
 8007354:	3b01      	subs	r3, #1
 8007356:	b29a      	uxth	r2, r3
 8007358:	68fb      	ldr	r3, [r7, #12]
 800735a:	84da      	strh	r2, [r3, #38]	@ 0x26
 800735c:	68fb      	ldr	r3, [r7, #12]
 800735e:	8cdb      	ldrh	r3, [r3, #38]	@ 0x26
 8007360:	b29b      	uxth	r3, r3
 8007362:	2b00      	cmp	r3, #0
 8007364:	d1cb      	bne.n	80072fe <HAL_UART_Transmit+0x76>
 8007366:	683b      	ldr	r3, [r7, #0]
 8007368:	9300      	str	r3, [sp, #0]
 800736a:	697b      	ldr	r3, [r7, #20]
 800736c:	2200      	movs	r2, #0
 800736e:	2140      	movs	r1, #64	@ 0x40
 8007370:	68f8      	ldr	r0, [r7, #12]
 8007372:	f000 fbf3 	bl	8007b5c <UART_WaitOnFlagUntilTimeout>
 8007376:	4603      	mov	r3, r0
 8007378:	2b00      	cmp	r3, #0
 800737a:	d005      	beq.n	8007388 <HAL_UART_Transmit+0x100>
 800737c:	68fb      	ldr	r3, [r7, #12]
 800737e:	2220      	movs	r2, #32
 8007380:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8007384:	2303      	movs	r3, #3
 8007386:	e006      	b.n	8007396 <HAL_UART_Transmit+0x10e>
 8007388:	68fb      	ldr	r3, [r7, #12]
 800738a:	2220      	movs	r2, #32
 800738c:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8007390:	2300      	movs	r3, #0
 8007392:	e000      	b.n	8007396 <HAL_UART_Transmit+0x10e>
 8007394:	2302      	movs	r3, #2
 8007396:	4618      	mov	r0, r3
 8007398:	3720      	adds	r7, #32
 800739a:	46bd      	mov	sp, r7
 800739c:	bd80      	pop	{r7, pc}

0800739e <HAL_UART_Receive_DMA>:
 800739e:	b580      	push	{r7, lr}
 80073a0:	b084      	sub	sp, #16
 80073a2:	af00      	add	r7, sp, #0
 80073a4:	60f8      	str	r0, [r7, #12]
 80073a6:	60b9      	str	r1, [r7, #8]
 80073a8:	4613      	mov	r3, r2
 80073aa:	80fb      	strh	r3, [r7, #6]
 80073ac:	68fb      	ldr	r3, [r7, #12]
 80073ae:	f893 3042 	ldrb.w	r3, [r3, #66]	@ 0x42
 80073b2:	b2db      	uxtb	r3, r3
 80073b4:	2b20      	cmp	r3, #32
 80073b6:	d112      	bne.n	80073de <HAL_UART_Receive_DMA+0x40>
 80073b8:	68bb      	ldr	r3, [r7, #8]
 80073ba:	2b00      	cmp	r3, #0
 80073bc:	d002      	beq.n	80073c4 <HAL_UART_Receive_DMA+0x26>
 80073be:	88fb      	ldrh	r3, [r7, #6]
 80073c0:	2b00      	cmp	r3, #0
 80073c2:	d101      	bne.n	80073c8 <HAL_UART_Receive_DMA+0x2a>
 80073c4:	2301      	movs	r3, #1
 80073c6:	e00b      	b.n	80073e0 <HAL_UART_Receive_DMA+0x42>
 80073c8:	68fb      	ldr	r3, [r7, #12]
 80073ca:	2200      	movs	r2, #0
 80073cc:	631a      	str	r2, [r3, #48]	@ 0x30
 80073ce:	88fb      	ldrh	r3, [r7, #6]
 80073d0:	461a      	mov	r2, r3
 80073d2:	68b9      	ldr	r1, [r7, #8]
 80073d4:	68f8      	ldr	r0, [r7, #12]
 80073d6:	f000 fc1b 	bl	8007c10 <UART_Start_Receive_DMA>
 80073da:	4603      	mov	r3, r0
 80073dc:	e000      	b.n	80073e0 <HAL_UART_Receive_DMA+0x42>
 80073de:	2302      	movs	r3, #2
 80073e0:	4618      	mov	r0, r3
 80073e2:	3710      	adds	r7, #16
 80073e4:	46bd      	mov	sp, r7
 80073e6:	bd80      	pop	{r7, pc}

080073e8 <HAL_UART_IRQHandler>:
 80073e8:	b580      	push	{r7, lr}
 80073ea:	b0ba      	sub	sp, #232	@ 0xe8
 80073ec:	af00      	add	r7, sp, #0
 80073ee:	6078      	str	r0, [r7, #4]
 80073f0:	687b      	ldr	r3, [r7, #4]
 80073f2:	681b      	ldr	r3, [r3, #0]
 80073f4:	681b      	ldr	r3, [r3, #0]
 80073f6:	f8c7 30e4 	str.w	r3, [r7, #228]	@ 0xe4
 80073fa:	687b      	ldr	r3, [r7, #4]
 80073fc:	681b      	ldr	r3, [r3, #0]
 80073fe:	68db      	ldr	r3, [r3, #12]
 8007400:	f8c7 30e0 	str.w	r3, [r7, #224]	@ 0xe0
 8007404:	687b      	ldr	r3, [r7, #4]
 8007406:	681b      	ldr	r3, [r3, #0]
 8007408:	695b      	ldr	r3, [r3, #20]
 800740a:	f8c7 30dc 	str.w	r3, [r7, #220]	@ 0xdc
 800740e:	2300      	movs	r3, #0
 8007410:	f8c7 30d8 	str.w	r3, [r7, #216]	@ 0xd8
 8007414:	2300      	movs	r3, #0
 8007416:	f8c7 30d4 	str.w	r3, [r7, #212]	@ 0xd4
 800741a:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 800741e:	f003 030f 	and.w	r3, r3, #15
 8007422:	f8c7 30d8 	str.w	r3, [r7, #216]	@ 0xd8
 8007426:	f8d7 30d8 	ldr.w	r3, [r7, #216]	@ 0xd8
 800742a:	2b00      	cmp	r3, #0
 800742c:	d10f      	bne.n	800744e <HAL_UART_IRQHandler+0x66>
 800742e:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8007432:	f003 0320 	and.w	r3, r3, #32
 8007436:	2b00      	cmp	r3, #0
 8007438:	d009      	beq.n	800744e <HAL_UART_IRQHandler+0x66>
 800743a:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 800743e:	f003 0320 	and.w	r3, r3, #32
 8007442:	2b00      	cmp	r3, #0
 8007444:	d003      	beq.n	800744e <HAL_UART_IRQHandler+0x66>
 8007446:	6878      	ldr	r0, [r7, #4]
 8007448:	f000 fd83 	bl	8007f52 <UART_Receive_IT>
 800744c:	e25b      	b.n	8007906 <HAL_UART_IRQHandler+0x51e>
 800744e:	f8d7 30d8 	ldr.w	r3, [r7, #216]	@ 0xd8
 8007452:	2b00      	cmp	r3, #0
 8007454:	f000 80de 	beq.w	8007614 <HAL_UART_IRQHandler+0x22c>
 8007458:	f8d7 30dc 	ldr.w	r3, [r7, #220]	@ 0xdc
 800745c:	f003 0301 	and.w	r3, r3, #1
 8007460:	2b00      	cmp	r3, #0
 8007462:	d106      	bne.n	8007472 <HAL_UART_IRQHandler+0x8a>
 8007464:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 8007468:	f403 7390 	and.w	r3, r3, #288	@ 0x120
 800746c:	2b00      	cmp	r3, #0
 800746e:	f000 80d1 	beq.w	8007614 <HAL_UART_IRQHandler+0x22c>
 8007472:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8007476:	f003 0301 	and.w	r3, r3, #1
 800747a:	2b00      	cmp	r3, #0
 800747c:	d00b      	beq.n	8007496 <HAL_UART_IRQHandler+0xae>
 800747e:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 8007482:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8007486:	2b00      	cmp	r3, #0
 8007488:	d005      	beq.n	8007496 <HAL_UART_IRQHandler+0xae>
 800748a:	687b      	ldr	r3, [r7, #4]
 800748c:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800748e:	f043 0201 	orr.w	r2, r3, #1
 8007492:	687b      	ldr	r3, [r7, #4]
 8007494:	645a      	str	r2, [r3, #68]	@ 0x44
 8007496:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 800749a:	f003 0304 	and.w	r3, r3, #4
 800749e:	2b00      	cmp	r3, #0
 80074a0:	d00b      	beq.n	80074ba <HAL_UART_IRQHandler+0xd2>
 80074a2:	f8d7 30dc 	ldr.w	r3, [r7, #220]	@ 0xdc
 80074a6:	f003 0301 	and.w	r3, r3, #1
 80074aa:	2b00      	cmp	r3, #0
 80074ac:	d005      	beq.n	80074ba <HAL_UART_IRQHandler+0xd2>
 80074ae:	687b      	ldr	r3, [r7, #4]
 80074b0:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80074b2:	f043 0202 	orr.w	r2, r3, #2
 80074b6:	687b      	ldr	r3, [r7, #4]
 80074b8:	645a      	str	r2, [r3, #68]	@ 0x44
 80074ba:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 80074be:	f003 0302 	and.w	r3, r3, #2
 80074c2:	2b00      	cmp	r3, #0
 80074c4:	d00b      	beq.n	80074de <HAL_UART_IRQHandler+0xf6>
 80074c6:	f8d7 30dc 	ldr.w	r3, [r7, #220]	@ 0xdc
 80074ca:	f003 0301 	and.w	r3, r3, #1
 80074ce:	2b00      	cmp	r3, #0
 80074d0:	d005      	beq.n	80074de <HAL_UART_IRQHandler+0xf6>
 80074d2:	687b      	ldr	r3, [r7, #4]
 80074d4:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80074d6:	f043 0204 	orr.w	r2, r3, #4
 80074da:	687b      	ldr	r3, [r7, #4]
 80074dc:	645a      	str	r2, [r3, #68]	@ 0x44
 80074de:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 80074e2:	f003 0308 	and.w	r3, r3, #8
 80074e6:	2b00      	cmp	r3, #0
 80074e8:	d011      	beq.n	800750e <HAL_UART_IRQHandler+0x126>
 80074ea:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 80074ee:	f003 0320 	and.w	r3, r3, #32
 80074f2:	2b00      	cmp	r3, #0
 80074f4:	d105      	bne.n	8007502 <HAL_UART_IRQHandler+0x11a>
 80074f6:	f8d7 30dc 	ldr.w	r3, [r7, #220]	@ 0xdc
 80074fa:	f003 0301 	and.w	r3, r3, #1
 80074fe:	2b00      	cmp	r3, #0
 8007500:	d005      	beq.n	800750e <HAL_UART_IRQHandler+0x126>
 8007502:	687b      	ldr	r3, [r7, #4]
 8007504:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8007506:	f043 0208 	orr.w	r2, r3, #8
 800750a:	687b      	ldr	r3, [r7, #4]
 800750c:	645a      	str	r2, [r3, #68]	@ 0x44
 800750e:	687b      	ldr	r3, [r7, #4]
 8007510:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8007512:	2b00      	cmp	r3, #0
 8007514:	f000 81f2 	beq.w	80078fc <HAL_UART_IRQHandler+0x514>
 8007518:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 800751c:	f003 0320 	and.w	r3, r3, #32
 8007520:	2b00      	cmp	r3, #0
 8007522:	d008      	beq.n	8007536 <HAL_UART_IRQHandler+0x14e>
 8007524:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 8007528:	f003 0320 	and.w	r3, r3, #32
 800752c:	2b00      	cmp	r3, #0
 800752e:	d002      	beq.n	8007536 <HAL_UART_IRQHandler+0x14e>
 8007530:	6878      	ldr	r0, [r7, #4]
 8007532:	f000 fd0e 	bl	8007f52 <UART_Receive_IT>
 8007536:	687b      	ldr	r3, [r7, #4]
 8007538:	681b      	ldr	r3, [r3, #0]
 800753a:	695b      	ldr	r3, [r3, #20]
 800753c:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8007540:	2b40      	cmp	r3, #64	@ 0x40
 8007542:	bf0c      	ite	eq
 8007544:	2301      	moveq	r3, #1
 8007546:	2300      	movne	r3, #0
 8007548:	b2db      	uxtb	r3, r3
 800754a:	f8c7 30d4 	str.w	r3, [r7, #212]	@ 0xd4
 800754e:	687b      	ldr	r3, [r7, #4]
 8007550:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8007552:	f003 0308 	and.w	r3, r3, #8
 8007556:	2b00      	cmp	r3, #0
 8007558:	d103      	bne.n	8007562 <HAL_UART_IRQHandler+0x17a>
 800755a:	f8d7 30d4 	ldr.w	r3, [r7, #212]	@ 0xd4
 800755e:	2b00      	cmp	r3, #0
 8007560:	d04f      	beq.n	8007602 <HAL_UART_IRQHandler+0x21a>
 8007562:	6878      	ldr	r0, [r7, #4]
 8007564:	f000 fc16 	bl	8007d94 <UART_EndRxTransfer>
 8007568:	687b      	ldr	r3, [r7, #4]
 800756a:	681b      	ldr	r3, [r3, #0]
 800756c:	695b      	ldr	r3, [r3, #20]
 800756e:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8007572:	2b40      	cmp	r3, #64	@ 0x40
 8007574:	d141      	bne.n	80075fa <HAL_UART_IRQHandler+0x212>
 8007576:	687b      	ldr	r3, [r7, #4]
 8007578:	681b      	ldr	r3, [r3, #0]
 800757a:	3314      	adds	r3, #20
 800757c:	f8c7 309c 	str.w	r3, [r7, #156]	@ 0x9c
 8007580:	f8d7 309c 	ldr.w	r3, [r7, #156]	@ 0x9c
 8007584:	e853 3f00 	ldrex	r3, [r3]
 8007588:	f8c7 3098 	str.w	r3, [r7, #152]	@ 0x98
 800758c:	f8d7 3098 	ldr.w	r3, [r7, #152]	@ 0x98
 8007590:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 8007594:	f8c7 30d0 	str.w	r3, [r7, #208]	@ 0xd0
 8007598:	687b      	ldr	r3, [r7, #4]
 800759a:	681b      	ldr	r3, [r3, #0]
 800759c:	3314      	adds	r3, #20
 800759e:	f8d7 20d0 	ldr.w	r2, [r7, #208]	@ 0xd0
 80075a2:	f8c7 20a8 	str.w	r2, [r7, #168]	@ 0xa8
 80075a6:	f8c7 30a4 	str.w	r3, [r7, #164]	@ 0xa4
 80075aa:	f8d7 10a4 	ldr.w	r1, [r7, #164]	@ 0xa4
 80075ae:	f8d7 20a8 	ldr.w	r2, [r7, #168]	@ 0xa8
 80075b2:	e841 2300 	strex	r3, r2, [r1]
 80075b6:	f8c7 30a0 	str.w	r3, [r7, #160]	@ 0xa0
 80075ba:	f8d7 30a0 	ldr.w	r3, [r7, #160]	@ 0xa0
 80075be:	2b00      	cmp	r3, #0
 80075c0:	d1d9      	bne.n	8007576 <HAL_UART_IRQHandler+0x18e>
 80075c2:	687b      	ldr	r3, [r7, #4]
 80075c4:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 80075c6:	2b00      	cmp	r3, #0
 80075c8:	d013      	beq.n	80075f2 <HAL_UART_IRQHandler+0x20a>
 80075ca:	687b      	ldr	r3, [r7, #4]
 80075cc:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 80075ce:	4a7e      	ldr	r2, [pc, #504]	@ (80077c8 <HAL_UART_IRQHandler+0x3e0>)
 80075d0:	651a      	str	r2, [r3, #80]	@ 0x50
 80075d2:	687b      	ldr	r3, [r7, #4]
 80075d4:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 80075d6:	4618      	mov	r0, r3
 80075d8:	f7fc fb22 	bl	8003c20 <HAL_DMA_Abort_IT>
 80075dc:	4603      	mov	r3, r0
 80075de:	2b00      	cmp	r3, #0
 80075e0:	d016      	beq.n	8007610 <HAL_UART_IRQHandler+0x228>
 80075e2:	687b      	ldr	r3, [r7, #4]
 80075e4:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 80075e6:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 80075e8:	687a      	ldr	r2, [r7, #4]
 80075ea:	6bd2      	ldr	r2, [r2, #60]	@ 0x3c
 80075ec:	4610      	mov	r0, r2
 80075ee:	4798      	blx	r3
 80075f0:	e00e      	b.n	8007610 <HAL_UART_IRQHandler+0x228>
 80075f2:	6878      	ldr	r0, [r7, #4]
 80075f4:	f000 f99e 	bl	8007934 <HAL_UART_ErrorCallback>
 80075f8:	e00a      	b.n	8007610 <HAL_UART_IRQHandler+0x228>
 80075fa:	6878      	ldr	r0, [r7, #4]
 80075fc:	f000 f99a 	bl	8007934 <HAL_UART_ErrorCallback>
 8007600:	e006      	b.n	8007610 <HAL_UART_IRQHandler+0x228>
 8007602:	6878      	ldr	r0, [r7, #4]
 8007604:	f000 f996 	bl	8007934 <HAL_UART_ErrorCallback>
 8007608:	687b      	ldr	r3, [r7, #4]
 800760a:	2200      	movs	r2, #0
 800760c:	645a      	str	r2, [r3, #68]	@ 0x44
 800760e:	e175      	b.n	80078fc <HAL_UART_IRQHandler+0x514>
 8007610:	bf00      	nop
 8007612:	e173      	b.n	80078fc <HAL_UART_IRQHandler+0x514>
 8007614:	687b      	ldr	r3, [r7, #4]
 8007616:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8007618:	2b01      	cmp	r3, #1
 800761a:	f040 814f 	bne.w	80078bc <HAL_UART_IRQHandler+0x4d4>
 800761e:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8007622:	f003 0310 	and.w	r3, r3, #16
 8007626:	2b00      	cmp	r3, #0
 8007628:	f000 8148 	beq.w	80078bc <HAL_UART_IRQHandler+0x4d4>
 800762c:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 8007630:	f003 0310 	and.w	r3, r3, #16
 8007634:	2b00      	cmp	r3, #0
 8007636:	f000 8141 	beq.w	80078bc <HAL_UART_IRQHandler+0x4d4>
 800763a:	2300      	movs	r3, #0
 800763c:	60bb      	str	r3, [r7, #8]
 800763e:	687b      	ldr	r3, [r7, #4]
 8007640:	681b      	ldr	r3, [r3, #0]
 8007642:	681b      	ldr	r3, [r3, #0]
 8007644:	60bb      	str	r3, [r7, #8]
 8007646:	687b      	ldr	r3, [r7, #4]
 8007648:	681b      	ldr	r3, [r3, #0]
 800764a:	685b      	ldr	r3, [r3, #4]
 800764c:	60bb      	str	r3, [r7, #8]
 800764e:	68bb      	ldr	r3, [r7, #8]
 8007650:	687b      	ldr	r3, [r7, #4]
 8007652:	681b      	ldr	r3, [r3, #0]
 8007654:	695b      	ldr	r3, [r3, #20]
 8007656:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 800765a:	2b40      	cmp	r3, #64	@ 0x40
 800765c:	f040 80b6 	bne.w	80077cc <HAL_UART_IRQHandler+0x3e4>
 8007660:	687b      	ldr	r3, [r7, #4]
 8007662:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8007664:	681b      	ldr	r3, [r3, #0]
 8007666:	685b      	ldr	r3, [r3, #4]
 8007668:	f8a7 30be 	strh.w	r3, [r7, #190]	@ 0xbe
 800766c:	f8b7 30be 	ldrh.w	r3, [r7, #190]	@ 0xbe
 8007670:	2b00      	cmp	r3, #0
 8007672:	f000 8145 	beq.w	8007900 <HAL_UART_IRQHandler+0x518>
 8007676:	687b      	ldr	r3, [r7, #4]
 8007678:	8d9b      	ldrh	r3, [r3, #44]	@ 0x2c
 800767a:	f8b7 20be 	ldrh.w	r2, [r7, #190]	@ 0xbe
 800767e:	429a      	cmp	r2, r3
 8007680:	f080 813e 	bcs.w	8007900 <HAL_UART_IRQHandler+0x518>
 8007684:	687b      	ldr	r3, [r7, #4]
 8007686:	f8b7 20be 	ldrh.w	r2, [r7, #190]	@ 0xbe
 800768a:	85da      	strh	r2, [r3, #46]	@ 0x2e
 800768c:	687b      	ldr	r3, [r7, #4]
 800768e:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8007690:	69db      	ldr	r3, [r3, #28]
 8007692:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 8007696:	f000 8088 	beq.w	80077aa <HAL_UART_IRQHandler+0x3c2>
 800769a:	687b      	ldr	r3, [r7, #4]
 800769c:	681b      	ldr	r3, [r3, #0]
 800769e:	330c      	adds	r3, #12
 80076a0:	f8c7 3088 	str.w	r3, [r7, #136]	@ 0x88
 80076a4:	f8d7 3088 	ldr.w	r3, [r7, #136]	@ 0x88
 80076a8:	e853 3f00 	ldrex	r3, [r3]
 80076ac:	f8c7 3084 	str.w	r3, [r7, #132]	@ 0x84
 80076b0:	f8d7 3084 	ldr.w	r3, [r7, #132]	@ 0x84
 80076b4:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 80076b8:	f8c7 30b8 	str.w	r3, [r7, #184]	@ 0xb8
 80076bc:	687b      	ldr	r3, [r7, #4]
 80076be:	681b      	ldr	r3, [r3, #0]
 80076c0:	330c      	adds	r3, #12
 80076c2:	f8d7 20b8 	ldr.w	r2, [r7, #184]	@ 0xb8
 80076c6:	f8c7 2094 	str.w	r2, [r7, #148]	@ 0x94
 80076ca:	f8c7 3090 	str.w	r3, [r7, #144]	@ 0x90
 80076ce:	f8d7 1090 	ldr.w	r1, [r7, #144]	@ 0x90
 80076d2:	f8d7 2094 	ldr.w	r2, [r7, #148]	@ 0x94
 80076d6:	e841 2300 	strex	r3, r2, [r1]
 80076da:	f8c7 308c 	str.w	r3, [r7, #140]	@ 0x8c
 80076de:	f8d7 308c 	ldr.w	r3, [r7, #140]	@ 0x8c
 80076e2:	2b00      	cmp	r3, #0
 80076e4:	d1d9      	bne.n	800769a <HAL_UART_IRQHandler+0x2b2>
 80076e6:	687b      	ldr	r3, [r7, #4]
 80076e8:	681b      	ldr	r3, [r3, #0]
 80076ea:	3314      	adds	r3, #20
 80076ec:	677b      	str	r3, [r7, #116]	@ 0x74
 80076ee:	6f7b      	ldr	r3, [r7, #116]	@ 0x74
 80076f0:	e853 3f00 	ldrex	r3, [r3]
 80076f4:	673b      	str	r3, [r7, #112]	@ 0x70
 80076f6:	6f3b      	ldr	r3, [r7, #112]	@ 0x70
 80076f8:	f023 0301 	bic.w	r3, r3, #1
 80076fc:	f8c7 30b4 	str.w	r3, [r7, #180]	@ 0xb4
 8007700:	687b      	ldr	r3, [r7, #4]
 8007702:	681b      	ldr	r3, [r3, #0]
 8007704:	3314      	adds	r3, #20
 8007706:	f8d7 20b4 	ldr.w	r2, [r7, #180]	@ 0xb4
 800770a:	f8c7 2080 	str.w	r2, [r7, #128]	@ 0x80
 800770e:	67fb      	str	r3, [r7, #124]	@ 0x7c
 8007710:	6ff9      	ldr	r1, [r7, #124]	@ 0x7c
 8007712:	f8d7 2080 	ldr.w	r2, [r7, #128]	@ 0x80
 8007716:	e841 2300 	strex	r3, r2, [r1]
 800771a:	67bb      	str	r3, [r7, #120]	@ 0x78
 800771c:	6fbb      	ldr	r3, [r7, #120]	@ 0x78
 800771e:	2b00      	cmp	r3, #0
 8007720:	d1e1      	bne.n	80076e6 <HAL_UART_IRQHandler+0x2fe>
 8007722:	687b      	ldr	r3, [r7, #4]
 8007724:	681b      	ldr	r3, [r3, #0]
 8007726:	3314      	adds	r3, #20
 8007728:	663b      	str	r3, [r7, #96]	@ 0x60
 800772a:	6e3b      	ldr	r3, [r7, #96]	@ 0x60
 800772c:	e853 3f00 	ldrex	r3, [r3]
 8007730:	65fb      	str	r3, [r7, #92]	@ 0x5c
 8007732:	6dfb      	ldr	r3, [r7, #92]	@ 0x5c
 8007734:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 8007738:	f8c7 30b0 	str.w	r3, [r7, #176]	@ 0xb0
 800773c:	687b      	ldr	r3, [r7, #4]
 800773e:	681b      	ldr	r3, [r3, #0]
 8007740:	3314      	adds	r3, #20
 8007742:	f8d7 20b0 	ldr.w	r2, [r7, #176]	@ 0xb0
 8007746:	66fa      	str	r2, [r7, #108]	@ 0x6c
 8007748:	66bb      	str	r3, [r7, #104]	@ 0x68
 800774a:	6eb9      	ldr	r1, [r7, #104]	@ 0x68
 800774c:	6efa      	ldr	r2, [r7, #108]	@ 0x6c
 800774e:	e841 2300 	strex	r3, r2, [r1]
 8007752:	667b      	str	r3, [r7, #100]	@ 0x64
 8007754:	6e7b      	ldr	r3, [r7, #100]	@ 0x64
 8007756:	2b00      	cmp	r3, #0
 8007758:	d1e3      	bne.n	8007722 <HAL_UART_IRQHandler+0x33a>
 800775a:	687b      	ldr	r3, [r7, #4]
 800775c:	2220      	movs	r2, #32
 800775e:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8007762:	687b      	ldr	r3, [r7, #4]
 8007764:	2200      	movs	r2, #0
 8007766:	631a      	str	r2, [r3, #48]	@ 0x30
 8007768:	687b      	ldr	r3, [r7, #4]
 800776a:	681b      	ldr	r3, [r3, #0]
 800776c:	330c      	adds	r3, #12
 800776e:	64fb      	str	r3, [r7, #76]	@ 0x4c
 8007770:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 8007772:	e853 3f00 	ldrex	r3, [r3]
 8007776:	64bb      	str	r3, [r7, #72]	@ 0x48
 8007778:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
 800777a:	f023 0310 	bic.w	r3, r3, #16
 800777e:	f8c7 30ac 	str.w	r3, [r7, #172]	@ 0xac
 8007782:	687b      	ldr	r3, [r7, #4]
 8007784:	681b      	ldr	r3, [r3, #0]
 8007786:	330c      	adds	r3, #12
 8007788:	f8d7 20ac 	ldr.w	r2, [r7, #172]	@ 0xac
 800778c:	65ba      	str	r2, [r7, #88]	@ 0x58
 800778e:	657b      	str	r3, [r7, #84]	@ 0x54
 8007790:	6d79      	ldr	r1, [r7, #84]	@ 0x54
 8007792:	6dba      	ldr	r2, [r7, #88]	@ 0x58
 8007794:	e841 2300 	strex	r3, r2, [r1]
 8007798:	653b      	str	r3, [r7, #80]	@ 0x50
 800779a:	6d3b      	ldr	r3, [r7, #80]	@ 0x50
 800779c:	2b00      	cmp	r3, #0
 800779e:	d1e3      	bne.n	8007768 <HAL_UART_IRQHandler+0x380>
 80077a0:	687b      	ldr	r3, [r7, #4]
 80077a2:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 80077a4:	4618      	mov	r0, r3
 80077a6:	f7fc f9cb 	bl	8003b40 <HAL_DMA_Abort>
 80077aa:	687b      	ldr	r3, [r7, #4]
 80077ac:	2202      	movs	r2, #2
 80077ae:	635a      	str	r2, [r3, #52]	@ 0x34
 80077b0:	687b      	ldr	r3, [r7, #4]
 80077b2:	8d9a      	ldrh	r2, [r3, #44]	@ 0x2c
 80077b4:	687b      	ldr	r3, [r7, #4]
 80077b6:	8ddb      	ldrh	r3, [r3, #46]	@ 0x2e
 80077b8:	b29b      	uxth	r3, r3
 80077ba:	1ad3      	subs	r3, r2, r3
 80077bc:	b29b      	uxth	r3, r3
 80077be:	4619      	mov	r1, r3
 80077c0:	6878      	ldr	r0, [r7, #4]
 80077c2:	f000 f8c1 	bl	8007948 <HAL_UARTEx_RxEventCallback>
 80077c6:	e09b      	b.n	8007900 <HAL_UART_IRQHandler+0x518>
 80077c8:	08007e5b 	.word	0x08007e5b
 80077cc:	687b      	ldr	r3, [r7, #4]
 80077ce:	8d9a      	ldrh	r2, [r3, #44]	@ 0x2c
 80077d0:	687b      	ldr	r3, [r7, #4]
 80077d2:	8ddb      	ldrh	r3, [r3, #46]	@ 0x2e
 80077d4:	b29b      	uxth	r3, r3
 80077d6:	1ad3      	subs	r3, r2, r3
 80077d8:	f8a7 30ce 	strh.w	r3, [r7, #206]	@ 0xce
 80077dc:	687b      	ldr	r3, [r7, #4]
 80077de:	8ddb      	ldrh	r3, [r3, #46]	@ 0x2e
 80077e0:	b29b      	uxth	r3, r3
 80077e2:	2b00      	cmp	r3, #0
 80077e4:	f000 808e 	beq.w	8007904 <HAL_UART_IRQHandler+0x51c>
 80077e8:	f8b7 30ce 	ldrh.w	r3, [r7, #206]	@ 0xce
 80077ec:	2b00      	cmp	r3, #0
 80077ee:	f000 8089 	beq.w	8007904 <HAL_UART_IRQHandler+0x51c>
 80077f2:	687b      	ldr	r3, [r7, #4]
 80077f4:	681b      	ldr	r3, [r3, #0]
 80077f6:	330c      	adds	r3, #12
 80077f8:	63bb      	str	r3, [r7, #56]	@ 0x38
 80077fa:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 80077fc:	e853 3f00 	ldrex	r3, [r3]
 8007800:	637b      	str	r3, [r7, #52]	@ 0x34
 8007802:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8007804:	f423 7390 	bic.w	r3, r3, #288	@ 0x120
 8007808:	f8c7 30c8 	str.w	r3, [r7, #200]	@ 0xc8
 800780c:	687b      	ldr	r3, [r7, #4]
 800780e:	681b      	ldr	r3, [r3, #0]
 8007810:	330c      	adds	r3, #12
 8007812:	f8d7 20c8 	ldr.w	r2, [r7, #200]	@ 0xc8
 8007816:	647a      	str	r2, [r7, #68]	@ 0x44
 8007818:	643b      	str	r3, [r7, #64]	@ 0x40
 800781a:	6c39      	ldr	r1, [r7, #64]	@ 0x40
 800781c:	6c7a      	ldr	r2, [r7, #68]	@ 0x44
 800781e:	e841 2300 	strex	r3, r2, [r1]
 8007822:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8007824:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 8007826:	2b00      	cmp	r3, #0
 8007828:	d1e3      	bne.n	80077f2 <HAL_UART_IRQHandler+0x40a>
 800782a:	687b      	ldr	r3, [r7, #4]
 800782c:	681b      	ldr	r3, [r3, #0]
 800782e:	3314      	adds	r3, #20
 8007830:	627b      	str	r3, [r7, #36]	@ 0x24
 8007832:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8007834:	e853 3f00 	ldrex	r3, [r3]
 8007838:	623b      	str	r3, [r7, #32]
 800783a:	6a3b      	ldr	r3, [r7, #32]
 800783c:	f023 0301 	bic.w	r3, r3, #1
 8007840:	f8c7 30c4 	str.w	r3, [r7, #196]	@ 0xc4
 8007844:	687b      	ldr	r3, [r7, #4]
 8007846:	681b      	ldr	r3, [r3, #0]
 8007848:	3314      	adds	r3, #20
 800784a:	f8d7 20c4 	ldr.w	r2, [r7, #196]	@ 0xc4
 800784e:	633a      	str	r2, [r7, #48]	@ 0x30
 8007850:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8007852:	6af9      	ldr	r1, [r7, #44]	@ 0x2c
 8007854:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 8007856:	e841 2300 	strex	r3, r2, [r1]
 800785a:	62bb      	str	r3, [r7, #40]	@ 0x28
 800785c:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800785e:	2b00      	cmp	r3, #0
 8007860:	d1e3      	bne.n	800782a <HAL_UART_IRQHandler+0x442>
 8007862:	687b      	ldr	r3, [r7, #4]
 8007864:	2220      	movs	r2, #32
 8007866:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 800786a:	687b      	ldr	r3, [r7, #4]
 800786c:	2200      	movs	r2, #0
 800786e:	631a      	str	r2, [r3, #48]	@ 0x30
 8007870:	687b      	ldr	r3, [r7, #4]
 8007872:	681b      	ldr	r3, [r3, #0]
 8007874:	330c      	adds	r3, #12
 8007876:	613b      	str	r3, [r7, #16]
 8007878:	693b      	ldr	r3, [r7, #16]
 800787a:	e853 3f00 	ldrex	r3, [r3]
 800787e:	60fb      	str	r3, [r7, #12]
 8007880:	68fb      	ldr	r3, [r7, #12]
 8007882:	f023 0310 	bic.w	r3, r3, #16
 8007886:	f8c7 30c0 	str.w	r3, [r7, #192]	@ 0xc0
 800788a:	687b      	ldr	r3, [r7, #4]
 800788c:	681b      	ldr	r3, [r3, #0]
 800788e:	330c      	adds	r3, #12
 8007890:	f8d7 20c0 	ldr.w	r2, [r7, #192]	@ 0xc0
 8007894:	61fa      	str	r2, [r7, #28]
 8007896:	61bb      	str	r3, [r7, #24]
 8007898:	69b9      	ldr	r1, [r7, #24]
 800789a:	69fa      	ldr	r2, [r7, #28]
 800789c:	e841 2300 	strex	r3, r2, [r1]
 80078a0:	617b      	str	r3, [r7, #20]
 80078a2:	697b      	ldr	r3, [r7, #20]
 80078a4:	2b00      	cmp	r3, #0
 80078a6:	d1e3      	bne.n	8007870 <HAL_UART_IRQHandler+0x488>
 80078a8:	687b      	ldr	r3, [r7, #4]
 80078aa:	2202      	movs	r2, #2
 80078ac:	635a      	str	r2, [r3, #52]	@ 0x34
 80078ae:	f8b7 30ce 	ldrh.w	r3, [r7, #206]	@ 0xce
 80078b2:	4619      	mov	r1, r3
 80078b4:	6878      	ldr	r0, [r7, #4]
 80078b6:	f000 f847 	bl	8007948 <HAL_UARTEx_RxEventCallback>
 80078ba:	e023      	b.n	8007904 <HAL_UART_IRQHandler+0x51c>
 80078bc:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 80078c0:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 80078c4:	2b00      	cmp	r3, #0
 80078c6:	d009      	beq.n	80078dc <HAL_UART_IRQHandler+0x4f4>
 80078c8:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 80078cc:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 80078d0:	2b00      	cmp	r3, #0
 80078d2:	d003      	beq.n	80078dc <HAL_UART_IRQHandler+0x4f4>
 80078d4:	6878      	ldr	r0, [r7, #4]
 80078d6:	f000 fad4 	bl	8007e82 <UART_Transmit_IT>
 80078da:	e014      	b.n	8007906 <HAL_UART_IRQHandler+0x51e>
 80078dc:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 80078e0:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 80078e4:	2b00      	cmp	r3, #0
 80078e6:	d00e      	beq.n	8007906 <HAL_UART_IRQHandler+0x51e>
 80078e8:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 80078ec:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 80078f0:	2b00      	cmp	r3, #0
 80078f2:	d008      	beq.n	8007906 <HAL_UART_IRQHandler+0x51e>
 80078f4:	6878      	ldr	r0, [r7, #4]
 80078f6:	f000 fb14 	bl	8007f22 <UART_EndTransmit_IT>
 80078fa:	e004      	b.n	8007906 <HAL_UART_IRQHandler+0x51e>
 80078fc:	bf00      	nop
 80078fe:	e002      	b.n	8007906 <HAL_UART_IRQHandler+0x51e>
 8007900:	bf00      	nop
 8007902:	e000      	b.n	8007906 <HAL_UART_IRQHandler+0x51e>
 8007904:	bf00      	nop
 8007906:	37e8      	adds	r7, #232	@ 0xe8
 8007908:	46bd      	mov	sp, r7
 800790a:	bd80      	pop	{r7, pc}

0800790c <HAL_UART_TxCpltCallback>:
 800790c:	b480      	push	{r7}
 800790e:	b083      	sub	sp, #12
 8007910:	af00      	add	r7, sp, #0
 8007912:	6078      	str	r0, [r7, #4]
 8007914:	bf00      	nop
 8007916:	370c      	adds	r7, #12
 8007918:	46bd      	mov	sp, r7
 800791a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800791e:	4770      	bx	lr

08007920 <HAL_UART_RxHalfCpltCallback>:
 8007920:	b480      	push	{r7}
 8007922:	b083      	sub	sp, #12
 8007924:	af00      	add	r7, sp, #0
 8007926:	6078      	str	r0, [r7, #4]
 8007928:	bf00      	nop
 800792a:	370c      	adds	r7, #12
 800792c:	46bd      	mov	sp, r7
 800792e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007932:	4770      	bx	lr

08007934 <HAL_UART_ErrorCallback>:
 8007934:	b480      	push	{r7}
 8007936:	b083      	sub	sp, #12
 8007938:	af00      	add	r7, sp, #0
 800793a:	6078      	str	r0, [r7, #4]
 800793c:	bf00      	nop
 800793e:	370c      	adds	r7, #12
 8007940:	46bd      	mov	sp, r7
 8007942:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007946:	4770      	bx	lr

08007948 <HAL_UARTEx_RxEventCallback>:
 8007948:	b480      	push	{r7}
 800794a:	b083      	sub	sp, #12
 800794c:	af00      	add	r7, sp, #0
 800794e:	6078      	str	r0, [r7, #4]
 8007950:	460b      	mov	r3, r1
 8007952:	807b      	strh	r3, [r7, #2]
 8007954:	bf00      	nop
 8007956:	370c      	adds	r7, #12
 8007958:	46bd      	mov	sp, r7
 800795a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800795e:	4770      	bx	lr

08007960 <UART_DMAReceiveCplt>:
 8007960:	b580      	push	{r7, lr}
 8007962:	b09c      	sub	sp, #112	@ 0x70
 8007964:	af00      	add	r7, sp, #0
 8007966:	6078      	str	r0, [r7, #4]
 8007968:	687b      	ldr	r3, [r7, #4]
 800796a:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800796c:	66fb      	str	r3, [r7, #108]	@ 0x6c
 800796e:	687b      	ldr	r3, [r7, #4]
 8007970:	681b      	ldr	r3, [r3, #0]
 8007972:	681b      	ldr	r3, [r3, #0]
 8007974:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8007978:	2b00      	cmp	r3, #0
 800797a:	d172      	bne.n	8007a62 <UART_DMAReceiveCplt+0x102>
 800797c:	6efb      	ldr	r3, [r7, #108]	@ 0x6c
 800797e:	2200      	movs	r2, #0
 8007980:	85da      	strh	r2, [r3, #46]	@ 0x2e
 8007982:	6efb      	ldr	r3, [r7, #108]	@ 0x6c
 8007984:	681b      	ldr	r3, [r3, #0]
 8007986:	330c      	adds	r3, #12
 8007988:	64fb      	str	r3, [r7, #76]	@ 0x4c
 800798a:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 800798c:	e853 3f00 	ldrex	r3, [r3]
 8007990:	64bb      	str	r3, [r7, #72]	@ 0x48
 8007992:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
 8007994:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 8007998:	66bb      	str	r3, [r7, #104]	@ 0x68
 800799a:	6efb      	ldr	r3, [r7, #108]	@ 0x6c
 800799c:	681b      	ldr	r3, [r3, #0]
 800799e:	330c      	adds	r3, #12
 80079a0:	6eba      	ldr	r2, [r7, #104]	@ 0x68
 80079a2:	65ba      	str	r2, [r7, #88]	@ 0x58
 80079a4:	657b      	str	r3, [r7, #84]	@ 0x54
 80079a6:	6d79      	ldr	r1, [r7, #84]	@ 0x54
 80079a8:	6dba      	ldr	r2, [r7, #88]	@ 0x58
 80079aa:	e841 2300 	strex	r3, r2, [r1]
 80079ae:	653b      	str	r3, [r7, #80]	@ 0x50
 80079b0:	6d3b      	ldr	r3, [r7, #80]	@ 0x50
 80079b2:	2b00      	cmp	r3, #0
 80079b4:	d1e5      	bne.n	8007982 <UART_DMAReceiveCplt+0x22>
 80079b6:	6efb      	ldr	r3, [r7, #108]	@ 0x6c
 80079b8:	681b      	ldr	r3, [r3, #0]
 80079ba:	3314      	adds	r3, #20
 80079bc:	63bb      	str	r3, [r7, #56]	@ 0x38
 80079be:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 80079c0:	e853 3f00 	ldrex	r3, [r3]
 80079c4:	637b      	str	r3, [r7, #52]	@ 0x34
 80079c6:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 80079c8:	f023 0301 	bic.w	r3, r3, #1
 80079cc:	667b      	str	r3, [r7, #100]	@ 0x64
 80079ce:	6efb      	ldr	r3, [r7, #108]	@ 0x6c
 80079d0:	681b      	ldr	r3, [r3, #0]
 80079d2:	3314      	adds	r3, #20
 80079d4:	6e7a      	ldr	r2, [r7, #100]	@ 0x64
 80079d6:	647a      	str	r2, [r7, #68]	@ 0x44
 80079d8:	643b      	str	r3, [r7, #64]	@ 0x40
 80079da:	6c39      	ldr	r1, [r7, #64]	@ 0x40
 80079dc:	6c7a      	ldr	r2, [r7, #68]	@ 0x44
 80079de:	e841 2300 	strex	r3, r2, [r1]
 80079e2:	63fb      	str	r3, [r7, #60]	@ 0x3c
 80079e4:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 80079e6:	2b00      	cmp	r3, #0
 80079e8:	d1e5      	bne.n	80079b6 <UART_DMAReceiveCplt+0x56>
 80079ea:	6efb      	ldr	r3, [r7, #108]	@ 0x6c
 80079ec:	681b      	ldr	r3, [r3, #0]
 80079ee:	3314      	adds	r3, #20
 80079f0:	627b      	str	r3, [r7, #36]	@ 0x24
 80079f2:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80079f4:	e853 3f00 	ldrex	r3, [r3]
 80079f8:	623b      	str	r3, [r7, #32]
 80079fa:	6a3b      	ldr	r3, [r7, #32]
 80079fc:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 8007a00:	663b      	str	r3, [r7, #96]	@ 0x60
 8007a02:	6efb      	ldr	r3, [r7, #108]	@ 0x6c
 8007a04:	681b      	ldr	r3, [r3, #0]
 8007a06:	3314      	adds	r3, #20
 8007a08:	6e3a      	ldr	r2, [r7, #96]	@ 0x60
 8007a0a:	633a      	str	r2, [r7, #48]	@ 0x30
 8007a0c:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8007a0e:	6af9      	ldr	r1, [r7, #44]	@ 0x2c
 8007a10:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 8007a12:	e841 2300 	strex	r3, r2, [r1]
 8007a16:	62bb      	str	r3, [r7, #40]	@ 0x28
 8007a18:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8007a1a:	2b00      	cmp	r3, #0
 8007a1c:	d1e5      	bne.n	80079ea <UART_DMAReceiveCplt+0x8a>
 8007a1e:	6efb      	ldr	r3, [r7, #108]	@ 0x6c
 8007a20:	2220      	movs	r2, #32
 8007a22:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8007a26:	6efb      	ldr	r3, [r7, #108]	@ 0x6c
 8007a28:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8007a2a:	2b01      	cmp	r3, #1
 8007a2c:	d119      	bne.n	8007a62 <UART_DMAReceiveCplt+0x102>
 8007a2e:	6efb      	ldr	r3, [r7, #108]	@ 0x6c
 8007a30:	681b      	ldr	r3, [r3, #0]
 8007a32:	330c      	adds	r3, #12
 8007a34:	613b      	str	r3, [r7, #16]
 8007a36:	693b      	ldr	r3, [r7, #16]
 8007a38:	e853 3f00 	ldrex	r3, [r3]
 8007a3c:	60fb      	str	r3, [r7, #12]
 8007a3e:	68fb      	ldr	r3, [r7, #12]
 8007a40:	f023 0310 	bic.w	r3, r3, #16
 8007a44:	65fb      	str	r3, [r7, #92]	@ 0x5c
 8007a46:	6efb      	ldr	r3, [r7, #108]	@ 0x6c
 8007a48:	681b      	ldr	r3, [r3, #0]
 8007a4a:	330c      	adds	r3, #12
 8007a4c:	6dfa      	ldr	r2, [r7, #92]	@ 0x5c
 8007a4e:	61fa      	str	r2, [r7, #28]
 8007a50:	61bb      	str	r3, [r7, #24]
 8007a52:	69b9      	ldr	r1, [r7, #24]
 8007a54:	69fa      	ldr	r2, [r7, #28]
 8007a56:	e841 2300 	strex	r3, r2, [r1]
 8007a5a:	617b      	str	r3, [r7, #20]
 8007a5c:	697b      	ldr	r3, [r7, #20]
 8007a5e:	2b00      	cmp	r3, #0
 8007a60:	d1e5      	bne.n	8007a2e <UART_DMAReceiveCplt+0xce>
 8007a62:	6efb      	ldr	r3, [r7, #108]	@ 0x6c
 8007a64:	2200      	movs	r2, #0
 8007a66:	635a      	str	r2, [r3, #52]	@ 0x34
 8007a68:	6efb      	ldr	r3, [r7, #108]	@ 0x6c
 8007a6a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8007a6c:	2b01      	cmp	r3, #1
 8007a6e:	d106      	bne.n	8007a7e <UART_DMAReceiveCplt+0x11e>
 8007a70:	6efb      	ldr	r3, [r7, #108]	@ 0x6c
 8007a72:	8d9b      	ldrh	r3, [r3, #44]	@ 0x2c
 8007a74:	4619      	mov	r1, r3
 8007a76:	6ef8      	ldr	r0, [r7, #108]	@ 0x6c
 8007a78:	f7ff ff66 	bl	8007948 <HAL_UARTEx_RxEventCallback>
 8007a7c:	e002      	b.n	8007a84 <UART_DMAReceiveCplt+0x124>
 8007a7e:	6ef8      	ldr	r0, [r7, #108]	@ 0x6c
 8007a80:	f7f9 fc62 	bl	8001348 <HAL_UART_RxCpltCallback>
 8007a84:	bf00      	nop
 8007a86:	3770      	adds	r7, #112	@ 0x70
 8007a88:	46bd      	mov	sp, r7
 8007a8a:	bd80      	pop	{r7, pc}

08007a8c <UART_DMARxHalfCplt>:
 8007a8c:	b580      	push	{r7, lr}
 8007a8e:	b084      	sub	sp, #16
 8007a90:	af00      	add	r7, sp, #0
 8007a92:	6078      	str	r0, [r7, #4]
 8007a94:	687b      	ldr	r3, [r7, #4]
 8007a96:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8007a98:	60fb      	str	r3, [r7, #12]
 8007a9a:	68fb      	ldr	r3, [r7, #12]
 8007a9c:	2201      	movs	r2, #1
 8007a9e:	635a      	str	r2, [r3, #52]	@ 0x34
 8007aa0:	68fb      	ldr	r3, [r7, #12]
 8007aa2:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8007aa4:	2b01      	cmp	r3, #1
 8007aa6:	d108      	bne.n	8007aba <UART_DMARxHalfCplt+0x2e>
 8007aa8:	68fb      	ldr	r3, [r7, #12]
 8007aaa:	8d9b      	ldrh	r3, [r3, #44]	@ 0x2c
 8007aac:	085b      	lsrs	r3, r3, #1
 8007aae:	b29b      	uxth	r3, r3
 8007ab0:	4619      	mov	r1, r3
 8007ab2:	68f8      	ldr	r0, [r7, #12]
 8007ab4:	f7ff ff48 	bl	8007948 <HAL_UARTEx_RxEventCallback>
 8007ab8:	e002      	b.n	8007ac0 <UART_DMARxHalfCplt+0x34>
 8007aba:	68f8      	ldr	r0, [r7, #12]
 8007abc:	f7ff ff30 	bl	8007920 <HAL_UART_RxHalfCpltCallback>
 8007ac0:	bf00      	nop
 8007ac2:	3710      	adds	r7, #16
 8007ac4:	46bd      	mov	sp, r7
 8007ac6:	bd80      	pop	{r7, pc}

08007ac8 <UART_DMAError>:
 8007ac8:	b580      	push	{r7, lr}
 8007aca:	b084      	sub	sp, #16
 8007acc:	af00      	add	r7, sp, #0
 8007ace:	6078      	str	r0, [r7, #4]
 8007ad0:	2300      	movs	r3, #0
 8007ad2:	60fb      	str	r3, [r7, #12]
 8007ad4:	687b      	ldr	r3, [r7, #4]
 8007ad6:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8007ad8:	60bb      	str	r3, [r7, #8]
 8007ada:	68bb      	ldr	r3, [r7, #8]
 8007adc:	681b      	ldr	r3, [r3, #0]
 8007ade:	695b      	ldr	r3, [r3, #20]
 8007ae0:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8007ae4:	2b80      	cmp	r3, #128	@ 0x80
 8007ae6:	bf0c      	ite	eq
 8007ae8:	2301      	moveq	r3, #1
 8007aea:	2300      	movne	r3, #0
 8007aec:	b2db      	uxtb	r3, r3
 8007aee:	60fb      	str	r3, [r7, #12]
 8007af0:	68bb      	ldr	r3, [r7, #8]
 8007af2:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 8007af6:	b2db      	uxtb	r3, r3
 8007af8:	2b21      	cmp	r3, #33	@ 0x21
 8007afa:	d108      	bne.n	8007b0e <UART_DMAError+0x46>
 8007afc:	68fb      	ldr	r3, [r7, #12]
 8007afe:	2b00      	cmp	r3, #0
 8007b00:	d005      	beq.n	8007b0e <UART_DMAError+0x46>
 8007b02:	68bb      	ldr	r3, [r7, #8]
 8007b04:	2200      	movs	r2, #0
 8007b06:	84da      	strh	r2, [r3, #38]	@ 0x26
 8007b08:	68b8      	ldr	r0, [r7, #8]
 8007b0a:	f000 f91b 	bl	8007d44 <UART_EndTxTransfer>
 8007b0e:	68bb      	ldr	r3, [r7, #8]
 8007b10:	681b      	ldr	r3, [r3, #0]
 8007b12:	695b      	ldr	r3, [r3, #20]
 8007b14:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8007b18:	2b40      	cmp	r3, #64	@ 0x40
 8007b1a:	bf0c      	ite	eq
 8007b1c:	2301      	moveq	r3, #1
 8007b1e:	2300      	movne	r3, #0
 8007b20:	b2db      	uxtb	r3, r3
 8007b22:	60fb      	str	r3, [r7, #12]
 8007b24:	68bb      	ldr	r3, [r7, #8]
 8007b26:	f893 3042 	ldrb.w	r3, [r3, #66]	@ 0x42
 8007b2a:	b2db      	uxtb	r3, r3
 8007b2c:	2b22      	cmp	r3, #34	@ 0x22
 8007b2e:	d108      	bne.n	8007b42 <UART_DMAError+0x7a>
 8007b30:	68fb      	ldr	r3, [r7, #12]
 8007b32:	2b00      	cmp	r3, #0
 8007b34:	d005      	beq.n	8007b42 <UART_DMAError+0x7a>
 8007b36:	68bb      	ldr	r3, [r7, #8]
 8007b38:	2200      	movs	r2, #0
 8007b3a:	85da      	strh	r2, [r3, #46]	@ 0x2e
 8007b3c:	68b8      	ldr	r0, [r7, #8]
 8007b3e:	f000 f929 	bl	8007d94 <UART_EndRxTransfer>
 8007b42:	68bb      	ldr	r3, [r7, #8]
 8007b44:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8007b46:	f043 0210 	orr.w	r2, r3, #16
 8007b4a:	68bb      	ldr	r3, [r7, #8]
 8007b4c:	645a      	str	r2, [r3, #68]	@ 0x44
 8007b4e:	68b8      	ldr	r0, [r7, #8]
 8007b50:	f7ff fef0 	bl	8007934 <HAL_UART_ErrorCallback>
 8007b54:	bf00      	nop
 8007b56:	3710      	adds	r7, #16
 8007b58:	46bd      	mov	sp, r7
 8007b5a:	bd80      	pop	{r7, pc}

08007b5c <UART_WaitOnFlagUntilTimeout>:
 8007b5c:	b580      	push	{r7, lr}
 8007b5e:	b086      	sub	sp, #24
 8007b60:	af00      	add	r7, sp, #0
 8007b62:	60f8      	str	r0, [r7, #12]
 8007b64:	60b9      	str	r1, [r7, #8]
 8007b66:	603b      	str	r3, [r7, #0]
 8007b68:	4613      	mov	r3, r2
 8007b6a:	71fb      	strb	r3, [r7, #7]
 8007b6c:	e03b      	b.n	8007be6 <UART_WaitOnFlagUntilTimeout+0x8a>
 8007b6e:	6a3b      	ldr	r3, [r7, #32]
 8007b70:	f1b3 3fff 	cmp.w	r3, #4294967295
 8007b74:	d037      	beq.n	8007be6 <UART_WaitOnFlagUntilTimeout+0x8a>
 8007b76:	f7fb fd9b 	bl	80036b0 <HAL_GetTick>
 8007b7a:	4602      	mov	r2, r0
 8007b7c:	683b      	ldr	r3, [r7, #0]
 8007b7e:	1ad3      	subs	r3, r2, r3
 8007b80:	6a3a      	ldr	r2, [r7, #32]
 8007b82:	429a      	cmp	r2, r3
 8007b84:	d302      	bcc.n	8007b8c <UART_WaitOnFlagUntilTimeout+0x30>
 8007b86:	6a3b      	ldr	r3, [r7, #32]
 8007b88:	2b00      	cmp	r3, #0
 8007b8a:	d101      	bne.n	8007b90 <UART_WaitOnFlagUntilTimeout+0x34>
 8007b8c:	2303      	movs	r3, #3
 8007b8e:	e03a      	b.n	8007c06 <UART_WaitOnFlagUntilTimeout+0xaa>
 8007b90:	68fb      	ldr	r3, [r7, #12]
 8007b92:	681b      	ldr	r3, [r3, #0]
 8007b94:	68db      	ldr	r3, [r3, #12]
 8007b96:	f003 0304 	and.w	r3, r3, #4
 8007b9a:	2b00      	cmp	r3, #0
 8007b9c:	d023      	beq.n	8007be6 <UART_WaitOnFlagUntilTimeout+0x8a>
 8007b9e:	68bb      	ldr	r3, [r7, #8]
 8007ba0:	2b80      	cmp	r3, #128	@ 0x80
 8007ba2:	d020      	beq.n	8007be6 <UART_WaitOnFlagUntilTimeout+0x8a>
 8007ba4:	68bb      	ldr	r3, [r7, #8]
 8007ba6:	2b40      	cmp	r3, #64	@ 0x40
 8007ba8:	d01d      	beq.n	8007be6 <UART_WaitOnFlagUntilTimeout+0x8a>
 8007baa:	68fb      	ldr	r3, [r7, #12]
 8007bac:	681b      	ldr	r3, [r3, #0]
 8007bae:	681b      	ldr	r3, [r3, #0]
 8007bb0:	f003 0308 	and.w	r3, r3, #8
 8007bb4:	2b08      	cmp	r3, #8
 8007bb6:	d116      	bne.n	8007be6 <UART_WaitOnFlagUntilTimeout+0x8a>
 8007bb8:	2300      	movs	r3, #0
 8007bba:	617b      	str	r3, [r7, #20]
 8007bbc:	68fb      	ldr	r3, [r7, #12]
 8007bbe:	681b      	ldr	r3, [r3, #0]
 8007bc0:	681b      	ldr	r3, [r3, #0]
 8007bc2:	617b      	str	r3, [r7, #20]
 8007bc4:	68fb      	ldr	r3, [r7, #12]
 8007bc6:	681b      	ldr	r3, [r3, #0]
 8007bc8:	685b      	ldr	r3, [r3, #4]
 8007bca:	617b      	str	r3, [r7, #20]
 8007bcc:	697b      	ldr	r3, [r7, #20]
 8007bce:	68f8      	ldr	r0, [r7, #12]
 8007bd0:	f000 f8e0 	bl	8007d94 <UART_EndRxTransfer>
 8007bd4:	68fb      	ldr	r3, [r7, #12]
 8007bd6:	2208      	movs	r2, #8
 8007bd8:	645a      	str	r2, [r3, #68]	@ 0x44
 8007bda:	68fb      	ldr	r3, [r7, #12]
 8007bdc:	2200      	movs	r2, #0
 8007bde:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8007be2:	2301      	movs	r3, #1
 8007be4:	e00f      	b.n	8007c06 <UART_WaitOnFlagUntilTimeout+0xaa>
 8007be6:	68fb      	ldr	r3, [r7, #12]
 8007be8:	681b      	ldr	r3, [r3, #0]
 8007bea:	681a      	ldr	r2, [r3, #0]
 8007bec:	68bb      	ldr	r3, [r7, #8]
 8007bee:	4013      	ands	r3, r2
 8007bf0:	68ba      	ldr	r2, [r7, #8]
 8007bf2:	429a      	cmp	r2, r3
 8007bf4:	bf0c      	ite	eq
 8007bf6:	2301      	moveq	r3, #1
 8007bf8:	2300      	movne	r3, #0
 8007bfa:	b2db      	uxtb	r3, r3
 8007bfc:	461a      	mov	r2, r3
 8007bfe:	79fb      	ldrb	r3, [r7, #7]
 8007c00:	429a      	cmp	r2, r3
 8007c02:	d0b4      	beq.n	8007b6e <UART_WaitOnFlagUntilTimeout+0x12>
 8007c04:	2300      	movs	r3, #0
 8007c06:	4618      	mov	r0, r3
 8007c08:	3718      	adds	r7, #24
 8007c0a:	46bd      	mov	sp, r7
 8007c0c:	bd80      	pop	{r7, pc}
	...

08007c10 <UART_Start_Receive_DMA>:
 8007c10:	b580      	push	{r7, lr}
 8007c12:	b098      	sub	sp, #96	@ 0x60
 8007c14:	af00      	add	r7, sp, #0
 8007c16:	60f8      	str	r0, [r7, #12]
 8007c18:	60b9      	str	r1, [r7, #8]
 8007c1a:	4613      	mov	r3, r2
 8007c1c:	80fb      	strh	r3, [r7, #6]
 8007c1e:	68ba      	ldr	r2, [r7, #8]
 8007c20:	68fb      	ldr	r3, [r7, #12]
 8007c22:	629a      	str	r2, [r3, #40]	@ 0x28
 8007c24:	68fb      	ldr	r3, [r7, #12]
 8007c26:	88fa      	ldrh	r2, [r7, #6]
 8007c28:	859a      	strh	r2, [r3, #44]	@ 0x2c
 8007c2a:	68fb      	ldr	r3, [r7, #12]
 8007c2c:	2200      	movs	r2, #0
 8007c2e:	645a      	str	r2, [r3, #68]	@ 0x44
 8007c30:	68fb      	ldr	r3, [r7, #12]
 8007c32:	2222      	movs	r2, #34	@ 0x22
 8007c34:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8007c38:	68fb      	ldr	r3, [r7, #12]
 8007c3a:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8007c3c:	4a3e      	ldr	r2, [pc, #248]	@ (8007d38 <UART_Start_Receive_DMA+0x128>)
 8007c3e:	63da      	str	r2, [r3, #60]	@ 0x3c
 8007c40:	68fb      	ldr	r3, [r7, #12]
 8007c42:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8007c44:	4a3d      	ldr	r2, [pc, #244]	@ (8007d3c <UART_Start_Receive_DMA+0x12c>)
 8007c46:	641a      	str	r2, [r3, #64]	@ 0x40
 8007c48:	68fb      	ldr	r3, [r7, #12]
 8007c4a:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8007c4c:	4a3c      	ldr	r2, [pc, #240]	@ (8007d40 <UART_Start_Receive_DMA+0x130>)
 8007c4e:	64da      	str	r2, [r3, #76]	@ 0x4c
 8007c50:	68fb      	ldr	r3, [r7, #12]
 8007c52:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8007c54:	2200      	movs	r2, #0
 8007c56:	651a      	str	r2, [r3, #80]	@ 0x50
 8007c58:	f107 0308 	add.w	r3, r7, #8
 8007c5c:	65fb      	str	r3, [r7, #92]	@ 0x5c
 8007c5e:	68fb      	ldr	r3, [r7, #12]
 8007c60:	6bd8      	ldr	r0, [r3, #60]	@ 0x3c
 8007c62:	68fb      	ldr	r3, [r7, #12]
 8007c64:	681b      	ldr	r3, [r3, #0]
 8007c66:	3304      	adds	r3, #4
 8007c68:	4619      	mov	r1, r3
 8007c6a:	6dfb      	ldr	r3, [r7, #92]	@ 0x5c
 8007c6c:	681a      	ldr	r2, [r3, #0]
 8007c6e:	88fb      	ldrh	r3, [r7, #6]
 8007c70:	f7fb ff0e 	bl	8003a90 <HAL_DMA_Start_IT>
 8007c74:	2300      	movs	r3, #0
 8007c76:	613b      	str	r3, [r7, #16]
 8007c78:	68fb      	ldr	r3, [r7, #12]
 8007c7a:	681b      	ldr	r3, [r3, #0]
 8007c7c:	681b      	ldr	r3, [r3, #0]
 8007c7e:	613b      	str	r3, [r7, #16]
 8007c80:	68fb      	ldr	r3, [r7, #12]
 8007c82:	681b      	ldr	r3, [r3, #0]
 8007c84:	685b      	ldr	r3, [r3, #4]
 8007c86:	613b      	str	r3, [r7, #16]
 8007c88:	693b      	ldr	r3, [r7, #16]
 8007c8a:	68fb      	ldr	r3, [r7, #12]
 8007c8c:	691b      	ldr	r3, [r3, #16]
 8007c8e:	2b00      	cmp	r3, #0
 8007c90:	d019      	beq.n	8007cc6 <UART_Start_Receive_DMA+0xb6>
 8007c92:	68fb      	ldr	r3, [r7, #12]
 8007c94:	681b      	ldr	r3, [r3, #0]
 8007c96:	330c      	adds	r3, #12
 8007c98:	643b      	str	r3, [r7, #64]	@ 0x40
 8007c9a:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
 8007c9c:	e853 3f00 	ldrex	r3, [r3]
 8007ca0:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8007ca2:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 8007ca4:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8007ca8:	65bb      	str	r3, [r7, #88]	@ 0x58
 8007caa:	68fb      	ldr	r3, [r7, #12]
 8007cac:	681b      	ldr	r3, [r3, #0]
 8007cae:	330c      	adds	r3, #12
 8007cb0:	6dba      	ldr	r2, [r7, #88]	@ 0x58
 8007cb2:	64fa      	str	r2, [r7, #76]	@ 0x4c
 8007cb4:	64bb      	str	r3, [r7, #72]	@ 0x48
 8007cb6:	6cb9      	ldr	r1, [r7, #72]	@ 0x48
 8007cb8:	6cfa      	ldr	r2, [r7, #76]	@ 0x4c
 8007cba:	e841 2300 	strex	r3, r2, [r1]
 8007cbe:	647b      	str	r3, [r7, #68]	@ 0x44
 8007cc0:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
 8007cc2:	2b00      	cmp	r3, #0
 8007cc4:	d1e5      	bne.n	8007c92 <UART_Start_Receive_DMA+0x82>
 8007cc6:	68fb      	ldr	r3, [r7, #12]
 8007cc8:	681b      	ldr	r3, [r3, #0]
 8007cca:	3314      	adds	r3, #20
 8007ccc:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8007cce:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8007cd0:	e853 3f00 	ldrex	r3, [r3]
 8007cd4:	62bb      	str	r3, [r7, #40]	@ 0x28
 8007cd6:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8007cd8:	f043 0301 	orr.w	r3, r3, #1
 8007cdc:	657b      	str	r3, [r7, #84]	@ 0x54
 8007cde:	68fb      	ldr	r3, [r7, #12]
 8007ce0:	681b      	ldr	r3, [r3, #0]
 8007ce2:	3314      	adds	r3, #20
 8007ce4:	6d7a      	ldr	r2, [r7, #84]	@ 0x54
 8007ce6:	63ba      	str	r2, [r7, #56]	@ 0x38
 8007ce8:	637b      	str	r3, [r7, #52]	@ 0x34
 8007cea:	6b79      	ldr	r1, [r7, #52]	@ 0x34
 8007cec:	6bba      	ldr	r2, [r7, #56]	@ 0x38
 8007cee:	e841 2300 	strex	r3, r2, [r1]
 8007cf2:	633b      	str	r3, [r7, #48]	@ 0x30
 8007cf4:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8007cf6:	2b00      	cmp	r3, #0
 8007cf8:	d1e5      	bne.n	8007cc6 <UART_Start_Receive_DMA+0xb6>
 8007cfa:	68fb      	ldr	r3, [r7, #12]
 8007cfc:	681b      	ldr	r3, [r3, #0]
 8007cfe:	3314      	adds	r3, #20
 8007d00:	61bb      	str	r3, [r7, #24]
 8007d02:	69bb      	ldr	r3, [r7, #24]
 8007d04:	e853 3f00 	ldrex	r3, [r3]
 8007d08:	617b      	str	r3, [r7, #20]
 8007d0a:	697b      	ldr	r3, [r7, #20]
 8007d0c:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8007d10:	653b      	str	r3, [r7, #80]	@ 0x50
 8007d12:	68fb      	ldr	r3, [r7, #12]
 8007d14:	681b      	ldr	r3, [r3, #0]
 8007d16:	3314      	adds	r3, #20
 8007d18:	6d3a      	ldr	r2, [r7, #80]	@ 0x50
 8007d1a:	627a      	str	r2, [r7, #36]	@ 0x24
 8007d1c:	623b      	str	r3, [r7, #32]
 8007d1e:	6a39      	ldr	r1, [r7, #32]
 8007d20:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8007d22:	e841 2300 	strex	r3, r2, [r1]
 8007d26:	61fb      	str	r3, [r7, #28]
 8007d28:	69fb      	ldr	r3, [r7, #28]
 8007d2a:	2b00      	cmp	r3, #0
 8007d2c:	d1e5      	bne.n	8007cfa <UART_Start_Receive_DMA+0xea>
 8007d2e:	2300      	movs	r3, #0
 8007d30:	4618      	mov	r0, r3
 8007d32:	3760      	adds	r7, #96	@ 0x60
 8007d34:	46bd      	mov	sp, r7
 8007d36:	bd80      	pop	{r7, pc}
 8007d38:	08007961 	.word	0x08007961
 8007d3c:	08007a8d 	.word	0x08007a8d
 8007d40:	08007ac9 	.word	0x08007ac9

08007d44 <UART_EndTxTransfer>:
 8007d44:	b480      	push	{r7}
 8007d46:	b089      	sub	sp, #36	@ 0x24
 8007d48:	af00      	add	r7, sp, #0
 8007d4a:	6078      	str	r0, [r7, #4]
 8007d4c:	687b      	ldr	r3, [r7, #4]
 8007d4e:	681b      	ldr	r3, [r3, #0]
 8007d50:	330c      	adds	r3, #12
 8007d52:	60fb      	str	r3, [r7, #12]
 8007d54:	68fb      	ldr	r3, [r7, #12]
 8007d56:	e853 3f00 	ldrex	r3, [r3]
 8007d5a:	60bb      	str	r3, [r7, #8]
 8007d5c:	68bb      	ldr	r3, [r7, #8]
 8007d5e:	f023 03c0 	bic.w	r3, r3, #192	@ 0xc0
 8007d62:	61fb      	str	r3, [r7, #28]
 8007d64:	687b      	ldr	r3, [r7, #4]
 8007d66:	681b      	ldr	r3, [r3, #0]
 8007d68:	330c      	adds	r3, #12
 8007d6a:	69fa      	ldr	r2, [r7, #28]
 8007d6c:	61ba      	str	r2, [r7, #24]
 8007d6e:	617b      	str	r3, [r7, #20]
 8007d70:	6979      	ldr	r1, [r7, #20]
 8007d72:	69ba      	ldr	r2, [r7, #24]
 8007d74:	e841 2300 	strex	r3, r2, [r1]
 8007d78:	613b      	str	r3, [r7, #16]
 8007d7a:	693b      	ldr	r3, [r7, #16]
 8007d7c:	2b00      	cmp	r3, #0
 8007d7e:	d1e5      	bne.n	8007d4c <UART_EndTxTransfer+0x8>
 8007d80:	687b      	ldr	r3, [r7, #4]
 8007d82:	2220      	movs	r2, #32
 8007d84:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8007d88:	bf00      	nop
 8007d8a:	3724      	adds	r7, #36	@ 0x24
 8007d8c:	46bd      	mov	sp, r7
 8007d8e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007d92:	4770      	bx	lr

08007d94 <UART_EndRxTransfer>:
 8007d94:	b480      	push	{r7}
 8007d96:	b095      	sub	sp, #84	@ 0x54
 8007d98:	af00      	add	r7, sp, #0
 8007d9a:	6078      	str	r0, [r7, #4]
 8007d9c:	687b      	ldr	r3, [r7, #4]
 8007d9e:	681b      	ldr	r3, [r3, #0]
 8007da0:	330c      	adds	r3, #12
 8007da2:	637b      	str	r3, [r7, #52]	@ 0x34
 8007da4:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8007da6:	e853 3f00 	ldrex	r3, [r3]
 8007daa:	633b      	str	r3, [r7, #48]	@ 0x30
 8007dac:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8007dae:	f423 7390 	bic.w	r3, r3, #288	@ 0x120
 8007db2:	64fb      	str	r3, [r7, #76]	@ 0x4c
 8007db4:	687b      	ldr	r3, [r7, #4]
 8007db6:	681b      	ldr	r3, [r3, #0]
 8007db8:	330c      	adds	r3, #12
 8007dba:	6cfa      	ldr	r2, [r7, #76]	@ 0x4c
 8007dbc:	643a      	str	r2, [r7, #64]	@ 0x40
 8007dbe:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8007dc0:	6bf9      	ldr	r1, [r7, #60]	@ 0x3c
 8007dc2:	6c3a      	ldr	r2, [r7, #64]	@ 0x40
 8007dc4:	e841 2300 	strex	r3, r2, [r1]
 8007dc8:	63bb      	str	r3, [r7, #56]	@ 0x38
 8007dca:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8007dcc:	2b00      	cmp	r3, #0
 8007dce:	d1e5      	bne.n	8007d9c <UART_EndRxTransfer+0x8>
 8007dd0:	687b      	ldr	r3, [r7, #4]
 8007dd2:	681b      	ldr	r3, [r3, #0]
 8007dd4:	3314      	adds	r3, #20
 8007dd6:	623b      	str	r3, [r7, #32]
 8007dd8:	6a3b      	ldr	r3, [r7, #32]
 8007dda:	e853 3f00 	ldrex	r3, [r3]
 8007dde:	61fb      	str	r3, [r7, #28]
 8007de0:	69fb      	ldr	r3, [r7, #28]
 8007de2:	f023 0301 	bic.w	r3, r3, #1
 8007de6:	64bb      	str	r3, [r7, #72]	@ 0x48
 8007de8:	687b      	ldr	r3, [r7, #4]
 8007dea:	681b      	ldr	r3, [r3, #0]
 8007dec:	3314      	adds	r3, #20
 8007dee:	6cba      	ldr	r2, [r7, #72]	@ 0x48
 8007df0:	62fa      	str	r2, [r7, #44]	@ 0x2c
 8007df2:	62bb      	str	r3, [r7, #40]	@ 0x28
 8007df4:	6ab9      	ldr	r1, [r7, #40]	@ 0x28
 8007df6:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 8007df8:	e841 2300 	strex	r3, r2, [r1]
 8007dfc:	627b      	str	r3, [r7, #36]	@ 0x24
 8007dfe:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8007e00:	2b00      	cmp	r3, #0
 8007e02:	d1e5      	bne.n	8007dd0 <UART_EndRxTransfer+0x3c>
 8007e04:	687b      	ldr	r3, [r7, #4]
 8007e06:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8007e08:	2b01      	cmp	r3, #1
 8007e0a:	d119      	bne.n	8007e40 <UART_EndRxTransfer+0xac>
 8007e0c:	687b      	ldr	r3, [r7, #4]
 8007e0e:	681b      	ldr	r3, [r3, #0]
 8007e10:	330c      	adds	r3, #12
 8007e12:	60fb      	str	r3, [r7, #12]
 8007e14:	68fb      	ldr	r3, [r7, #12]
 8007e16:	e853 3f00 	ldrex	r3, [r3]
 8007e1a:	60bb      	str	r3, [r7, #8]
 8007e1c:	68bb      	ldr	r3, [r7, #8]
 8007e1e:	f023 0310 	bic.w	r3, r3, #16
 8007e22:	647b      	str	r3, [r7, #68]	@ 0x44
 8007e24:	687b      	ldr	r3, [r7, #4]
 8007e26:	681b      	ldr	r3, [r3, #0]
 8007e28:	330c      	adds	r3, #12
 8007e2a:	6c7a      	ldr	r2, [r7, #68]	@ 0x44
 8007e2c:	61ba      	str	r2, [r7, #24]
 8007e2e:	617b      	str	r3, [r7, #20]
 8007e30:	6979      	ldr	r1, [r7, #20]
 8007e32:	69ba      	ldr	r2, [r7, #24]
 8007e34:	e841 2300 	strex	r3, r2, [r1]
 8007e38:	613b      	str	r3, [r7, #16]
 8007e3a:	693b      	ldr	r3, [r7, #16]
 8007e3c:	2b00      	cmp	r3, #0
 8007e3e:	d1e5      	bne.n	8007e0c <UART_EndRxTransfer+0x78>
 8007e40:	687b      	ldr	r3, [r7, #4]
 8007e42:	2220      	movs	r2, #32
 8007e44:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8007e48:	687b      	ldr	r3, [r7, #4]
 8007e4a:	2200      	movs	r2, #0
 8007e4c:	631a      	str	r2, [r3, #48]	@ 0x30
 8007e4e:	bf00      	nop
 8007e50:	3754      	adds	r7, #84	@ 0x54
 8007e52:	46bd      	mov	sp, r7
 8007e54:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007e58:	4770      	bx	lr

08007e5a <UART_DMAAbortOnError>:
 8007e5a:	b580      	push	{r7, lr}
 8007e5c:	b084      	sub	sp, #16
 8007e5e:	af00      	add	r7, sp, #0
 8007e60:	6078      	str	r0, [r7, #4]
 8007e62:	687b      	ldr	r3, [r7, #4]
 8007e64:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8007e66:	60fb      	str	r3, [r7, #12]
 8007e68:	68fb      	ldr	r3, [r7, #12]
 8007e6a:	2200      	movs	r2, #0
 8007e6c:	85da      	strh	r2, [r3, #46]	@ 0x2e
 8007e6e:	68fb      	ldr	r3, [r7, #12]
 8007e70:	2200      	movs	r2, #0
 8007e72:	84da      	strh	r2, [r3, #38]	@ 0x26
 8007e74:	68f8      	ldr	r0, [r7, #12]
 8007e76:	f7ff fd5d 	bl	8007934 <HAL_UART_ErrorCallback>
 8007e7a:	bf00      	nop
 8007e7c:	3710      	adds	r7, #16
 8007e7e:	46bd      	mov	sp, r7
 8007e80:	bd80      	pop	{r7, pc}

08007e82 <UART_Transmit_IT>:
 8007e82:	b480      	push	{r7}
 8007e84:	b085      	sub	sp, #20
 8007e86:	af00      	add	r7, sp, #0
 8007e88:	6078      	str	r0, [r7, #4]
 8007e8a:	687b      	ldr	r3, [r7, #4]
 8007e8c:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 8007e90:	b2db      	uxtb	r3, r3
 8007e92:	2b21      	cmp	r3, #33	@ 0x21
 8007e94:	d13e      	bne.n	8007f14 <UART_Transmit_IT+0x92>
 8007e96:	687b      	ldr	r3, [r7, #4]
 8007e98:	689b      	ldr	r3, [r3, #8]
 8007e9a:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8007e9e:	d114      	bne.n	8007eca <UART_Transmit_IT+0x48>
 8007ea0:	687b      	ldr	r3, [r7, #4]
 8007ea2:	691b      	ldr	r3, [r3, #16]
 8007ea4:	2b00      	cmp	r3, #0
 8007ea6:	d110      	bne.n	8007eca <UART_Transmit_IT+0x48>
 8007ea8:	687b      	ldr	r3, [r7, #4]
 8007eaa:	6a1b      	ldr	r3, [r3, #32]
 8007eac:	60fb      	str	r3, [r7, #12]
 8007eae:	68fb      	ldr	r3, [r7, #12]
 8007eb0:	881b      	ldrh	r3, [r3, #0]
 8007eb2:	461a      	mov	r2, r3
 8007eb4:	687b      	ldr	r3, [r7, #4]
 8007eb6:	681b      	ldr	r3, [r3, #0]
 8007eb8:	f3c2 0208 	ubfx	r2, r2, #0, #9
 8007ebc:	605a      	str	r2, [r3, #4]
 8007ebe:	687b      	ldr	r3, [r7, #4]
 8007ec0:	6a1b      	ldr	r3, [r3, #32]
 8007ec2:	1c9a      	adds	r2, r3, #2
 8007ec4:	687b      	ldr	r3, [r7, #4]
 8007ec6:	621a      	str	r2, [r3, #32]
 8007ec8:	e008      	b.n	8007edc <UART_Transmit_IT+0x5a>
 8007eca:	687b      	ldr	r3, [r7, #4]
 8007ecc:	6a1b      	ldr	r3, [r3, #32]
 8007ece:	1c59      	adds	r1, r3, #1
 8007ed0:	687a      	ldr	r2, [r7, #4]
 8007ed2:	6211      	str	r1, [r2, #32]
 8007ed4:	781a      	ldrb	r2, [r3, #0]
 8007ed6:	687b      	ldr	r3, [r7, #4]
 8007ed8:	681b      	ldr	r3, [r3, #0]
 8007eda:	605a      	str	r2, [r3, #4]
 8007edc:	687b      	ldr	r3, [r7, #4]
 8007ede:	8cdb      	ldrh	r3, [r3, #38]	@ 0x26
 8007ee0:	b29b      	uxth	r3, r3
 8007ee2:	3b01      	subs	r3, #1
 8007ee4:	b29b      	uxth	r3, r3
 8007ee6:	687a      	ldr	r2, [r7, #4]
 8007ee8:	4619      	mov	r1, r3
 8007eea:	84d1      	strh	r1, [r2, #38]	@ 0x26
 8007eec:	2b00      	cmp	r3, #0
 8007eee:	d10f      	bne.n	8007f10 <UART_Transmit_IT+0x8e>
 8007ef0:	687b      	ldr	r3, [r7, #4]
 8007ef2:	681b      	ldr	r3, [r3, #0]
 8007ef4:	68da      	ldr	r2, [r3, #12]
 8007ef6:	687b      	ldr	r3, [r7, #4]
 8007ef8:	681b      	ldr	r3, [r3, #0]
 8007efa:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
 8007efe:	60da      	str	r2, [r3, #12]
 8007f00:	687b      	ldr	r3, [r7, #4]
 8007f02:	681b      	ldr	r3, [r3, #0]
 8007f04:	68da      	ldr	r2, [r3, #12]
 8007f06:	687b      	ldr	r3, [r7, #4]
 8007f08:	681b      	ldr	r3, [r3, #0]
 8007f0a:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 8007f0e:	60da      	str	r2, [r3, #12]
 8007f10:	2300      	movs	r3, #0
 8007f12:	e000      	b.n	8007f16 <UART_Transmit_IT+0x94>
 8007f14:	2302      	movs	r3, #2
 8007f16:	4618      	mov	r0, r3
 8007f18:	3714      	adds	r7, #20
 8007f1a:	46bd      	mov	sp, r7
 8007f1c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007f20:	4770      	bx	lr

08007f22 <UART_EndTransmit_IT>:
 8007f22:	b580      	push	{r7, lr}
 8007f24:	b082      	sub	sp, #8
 8007f26:	af00      	add	r7, sp, #0
 8007f28:	6078      	str	r0, [r7, #4]
 8007f2a:	687b      	ldr	r3, [r7, #4]
 8007f2c:	681b      	ldr	r3, [r3, #0]
 8007f2e:	68da      	ldr	r2, [r3, #12]
 8007f30:	687b      	ldr	r3, [r7, #4]
 8007f32:	681b      	ldr	r3, [r3, #0]
 8007f34:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 8007f38:	60da      	str	r2, [r3, #12]
 8007f3a:	687b      	ldr	r3, [r7, #4]
 8007f3c:	2220      	movs	r2, #32
 8007f3e:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8007f42:	6878      	ldr	r0, [r7, #4]
 8007f44:	f7ff fce2 	bl	800790c <HAL_UART_TxCpltCallback>
 8007f48:	2300      	movs	r3, #0
 8007f4a:	4618      	mov	r0, r3
 8007f4c:	3708      	adds	r7, #8
 8007f4e:	46bd      	mov	sp, r7
 8007f50:	bd80      	pop	{r7, pc}

08007f52 <UART_Receive_IT>:
 8007f52:	b580      	push	{r7, lr}
 8007f54:	b08c      	sub	sp, #48	@ 0x30
 8007f56:	af00      	add	r7, sp, #0
 8007f58:	6078      	str	r0, [r7, #4]
 8007f5a:	687b      	ldr	r3, [r7, #4]
 8007f5c:	f893 3042 	ldrb.w	r3, [r3, #66]	@ 0x42
 8007f60:	b2db      	uxtb	r3, r3
 8007f62:	2b22      	cmp	r3, #34	@ 0x22
 8007f64:	f040 80ae 	bne.w	80080c4 <UART_Receive_IT+0x172>
 8007f68:	687b      	ldr	r3, [r7, #4]
 8007f6a:	689b      	ldr	r3, [r3, #8]
 8007f6c:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8007f70:	d117      	bne.n	8007fa2 <UART_Receive_IT+0x50>
 8007f72:	687b      	ldr	r3, [r7, #4]
 8007f74:	691b      	ldr	r3, [r3, #16]
 8007f76:	2b00      	cmp	r3, #0
 8007f78:	d113      	bne.n	8007fa2 <UART_Receive_IT+0x50>
 8007f7a:	2300      	movs	r3, #0
 8007f7c:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8007f7e:	687b      	ldr	r3, [r7, #4]
 8007f80:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8007f82:	62bb      	str	r3, [r7, #40]	@ 0x28
 8007f84:	687b      	ldr	r3, [r7, #4]
 8007f86:	681b      	ldr	r3, [r3, #0]
 8007f88:	685b      	ldr	r3, [r3, #4]
 8007f8a:	b29b      	uxth	r3, r3
 8007f8c:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8007f90:	b29a      	uxth	r2, r3
 8007f92:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8007f94:	801a      	strh	r2, [r3, #0]
 8007f96:	687b      	ldr	r3, [r7, #4]
 8007f98:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8007f9a:	1c9a      	adds	r2, r3, #2
 8007f9c:	687b      	ldr	r3, [r7, #4]
 8007f9e:	629a      	str	r2, [r3, #40]	@ 0x28
 8007fa0:	e026      	b.n	8007ff0 <UART_Receive_IT+0x9e>
 8007fa2:	687b      	ldr	r3, [r7, #4]
 8007fa4:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8007fa6:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8007fa8:	2300      	movs	r3, #0
 8007faa:	62bb      	str	r3, [r7, #40]	@ 0x28
 8007fac:	687b      	ldr	r3, [r7, #4]
 8007fae:	689b      	ldr	r3, [r3, #8]
 8007fb0:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8007fb4:	d007      	beq.n	8007fc6 <UART_Receive_IT+0x74>
 8007fb6:	687b      	ldr	r3, [r7, #4]
 8007fb8:	689b      	ldr	r3, [r3, #8]
 8007fba:	2b00      	cmp	r3, #0
 8007fbc:	d10a      	bne.n	8007fd4 <UART_Receive_IT+0x82>
 8007fbe:	687b      	ldr	r3, [r7, #4]
 8007fc0:	691b      	ldr	r3, [r3, #16]
 8007fc2:	2b00      	cmp	r3, #0
 8007fc4:	d106      	bne.n	8007fd4 <UART_Receive_IT+0x82>
 8007fc6:	687b      	ldr	r3, [r7, #4]
 8007fc8:	681b      	ldr	r3, [r3, #0]
 8007fca:	685b      	ldr	r3, [r3, #4]
 8007fcc:	b2da      	uxtb	r2, r3
 8007fce:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8007fd0:	701a      	strb	r2, [r3, #0]
 8007fd2:	e008      	b.n	8007fe6 <UART_Receive_IT+0x94>
 8007fd4:	687b      	ldr	r3, [r7, #4]
 8007fd6:	681b      	ldr	r3, [r3, #0]
 8007fd8:	685b      	ldr	r3, [r3, #4]
 8007fda:	b2db      	uxtb	r3, r3
 8007fdc:	f003 037f 	and.w	r3, r3, #127	@ 0x7f
 8007fe0:	b2da      	uxtb	r2, r3
 8007fe2:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8007fe4:	701a      	strb	r2, [r3, #0]
 8007fe6:	687b      	ldr	r3, [r7, #4]
 8007fe8:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8007fea:	1c5a      	adds	r2, r3, #1
 8007fec:	687b      	ldr	r3, [r7, #4]
 8007fee:	629a      	str	r2, [r3, #40]	@ 0x28
 8007ff0:	687b      	ldr	r3, [r7, #4]
 8007ff2:	8ddb      	ldrh	r3, [r3, #46]	@ 0x2e
 8007ff4:	b29b      	uxth	r3, r3
 8007ff6:	3b01      	subs	r3, #1
 8007ff8:	b29b      	uxth	r3, r3
 8007ffa:	687a      	ldr	r2, [r7, #4]
 8007ffc:	4619      	mov	r1, r3
 8007ffe:	85d1      	strh	r1, [r2, #46]	@ 0x2e
 8008000:	2b00      	cmp	r3, #0
 8008002:	d15d      	bne.n	80080c0 <UART_Receive_IT+0x16e>
 8008004:	687b      	ldr	r3, [r7, #4]
 8008006:	681b      	ldr	r3, [r3, #0]
 8008008:	68da      	ldr	r2, [r3, #12]
 800800a:	687b      	ldr	r3, [r7, #4]
 800800c:	681b      	ldr	r3, [r3, #0]
 800800e:	f022 0220 	bic.w	r2, r2, #32
 8008012:	60da      	str	r2, [r3, #12]
 8008014:	687b      	ldr	r3, [r7, #4]
 8008016:	681b      	ldr	r3, [r3, #0]
 8008018:	68da      	ldr	r2, [r3, #12]
 800801a:	687b      	ldr	r3, [r7, #4]
 800801c:	681b      	ldr	r3, [r3, #0]
 800801e:	f422 7280 	bic.w	r2, r2, #256	@ 0x100
 8008022:	60da      	str	r2, [r3, #12]
 8008024:	687b      	ldr	r3, [r7, #4]
 8008026:	681b      	ldr	r3, [r3, #0]
 8008028:	695a      	ldr	r2, [r3, #20]
 800802a:	687b      	ldr	r3, [r7, #4]
 800802c:	681b      	ldr	r3, [r3, #0]
 800802e:	f022 0201 	bic.w	r2, r2, #1
 8008032:	615a      	str	r2, [r3, #20]
 8008034:	687b      	ldr	r3, [r7, #4]
 8008036:	2220      	movs	r2, #32
 8008038:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 800803c:	687b      	ldr	r3, [r7, #4]
 800803e:	2200      	movs	r2, #0
 8008040:	635a      	str	r2, [r3, #52]	@ 0x34
 8008042:	687b      	ldr	r3, [r7, #4]
 8008044:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8008046:	2b01      	cmp	r3, #1
 8008048:	d135      	bne.n	80080b6 <UART_Receive_IT+0x164>
 800804a:	687b      	ldr	r3, [r7, #4]
 800804c:	2200      	movs	r2, #0
 800804e:	631a      	str	r2, [r3, #48]	@ 0x30
 8008050:	687b      	ldr	r3, [r7, #4]
 8008052:	681b      	ldr	r3, [r3, #0]
 8008054:	330c      	adds	r3, #12
 8008056:	617b      	str	r3, [r7, #20]
 8008058:	697b      	ldr	r3, [r7, #20]
 800805a:	e853 3f00 	ldrex	r3, [r3]
 800805e:	613b      	str	r3, [r7, #16]
 8008060:	693b      	ldr	r3, [r7, #16]
 8008062:	f023 0310 	bic.w	r3, r3, #16
 8008066:	627b      	str	r3, [r7, #36]	@ 0x24
 8008068:	687b      	ldr	r3, [r7, #4]
 800806a:	681b      	ldr	r3, [r3, #0]
 800806c:	330c      	adds	r3, #12
 800806e:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8008070:	623a      	str	r2, [r7, #32]
 8008072:	61fb      	str	r3, [r7, #28]
 8008074:	69f9      	ldr	r1, [r7, #28]
 8008076:	6a3a      	ldr	r2, [r7, #32]
 8008078:	e841 2300 	strex	r3, r2, [r1]
 800807c:	61bb      	str	r3, [r7, #24]
 800807e:	69bb      	ldr	r3, [r7, #24]
 8008080:	2b00      	cmp	r3, #0
 8008082:	d1e5      	bne.n	8008050 <UART_Receive_IT+0xfe>
 8008084:	687b      	ldr	r3, [r7, #4]
 8008086:	681b      	ldr	r3, [r3, #0]
 8008088:	681b      	ldr	r3, [r3, #0]
 800808a:	f003 0310 	and.w	r3, r3, #16
 800808e:	2b10      	cmp	r3, #16
 8008090:	d10a      	bne.n	80080a8 <UART_Receive_IT+0x156>
 8008092:	2300      	movs	r3, #0
 8008094:	60fb      	str	r3, [r7, #12]
 8008096:	687b      	ldr	r3, [r7, #4]
 8008098:	681b      	ldr	r3, [r3, #0]
 800809a:	681b      	ldr	r3, [r3, #0]
 800809c:	60fb      	str	r3, [r7, #12]
 800809e:	687b      	ldr	r3, [r7, #4]
 80080a0:	681b      	ldr	r3, [r3, #0]
 80080a2:	685b      	ldr	r3, [r3, #4]
 80080a4:	60fb      	str	r3, [r7, #12]
 80080a6:	68fb      	ldr	r3, [r7, #12]
 80080a8:	687b      	ldr	r3, [r7, #4]
 80080aa:	8d9b      	ldrh	r3, [r3, #44]	@ 0x2c
 80080ac:	4619      	mov	r1, r3
 80080ae:	6878      	ldr	r0, [r7, #4]
 80080b0:	f7ff fc4a 	bl	8007948 <HAL_UARTEx_RxEventCallback>
 80080b4:	e002      	b.n	80080bc <UART_Receive_IT+0x16a>
 80080b6:	6878      	ldr	r0, [r7, #4]
 80080b8:	f7f9 f946 	bl	8001348 <HAL_UART_RxCpltCallback>
 80080bc:	2300      	movs	r3, #0
 80080be:	e002      	b.n	80080c6 <UART_Receive_IT+0x174>
 80080c0:	2300      	movs	r3, #0
 80080c2:	e000      	b.n	80080c6 <UART_Receive_IT+0x174>
 80080c4:	2302      	movs	r3, #2
 80080c6:	4618      	mov	r0, r3
 80080c8:	3730      	adds	r7, #48	@ 0x30
 80080ca:	46bd      	mov	sp, r7
 80080cc:	bd80      	pop	{r7, pc}
	...

080080d0 <UART_SetConfig>:
 80080d0:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 80080d4:	b0c0      	sub	sp, #256	@ 0x100
 80080d6:	af00      	add	r7, sp, #0
 80080d8:	f8c7 00f4 	str.w	r0, [r7, #244]	@ 0xf4
 80080dc:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 80080e0:	681b      	ldr	r3, [r3, #0]
 80080e2:	691b      	ldr	r3, [r3, #16]
 80080e4:	f423 5040 	bic.w	r0, r3, #12288	@ 0x3000
 80080e8:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 80080ec:	68d9      	ldr	r1, [r3, #12]
 80080ee:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 80080f2:	681a      	ldr	r2, [r3, #0]
 80080f4:	ea40 0301 	orr.w	r3, r0, r1
 80080f8:	6113      	str	r3, [r2, #16]
 80080fa:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 80080fe:	689a      	ldr	r2, [r3, #8]
 8008100:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8008104:	691b      	ldr	r3, [r3, #16]
 8008106:	431a      	orrs	r2, r3
 8008108:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 800810c:	695b      	ldr	r3, [r3, #20]
 800810e:	431a      	orrs	r2, r3
 8008110:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8008114:	69db      	ldr	r3, [r3, #28]
 8008116:	4313      	orrs	r3, r2
 8008118:	f8c7 30f8 	str.w	r3, [r7, #248]	@ 0xf8
 800811c:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8008120:	681b      	ldr	r3, [r3, #0]
 8008122:	68db      	ldr	r3, [r3, #12]
 8008124:	f423 4116 	bic.w	r1, r3, #38400	@ 0x9600
 8008128:	f021 010c 	bic.w	r1, r1, #12
 800812c:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8008130:	681a      	ldr	r2, [r3, #0]
 8008132:	f8d7 30f8 	ldr.w	r3, [r7, #248]	@ 0xf8
 8008136:	430b      	orrs	r3, r1
 8008138:	60d3      	str	r3, [r2, #12]
 800813a:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 800813e:	681b      	ldr	r3, [r3, #0]
 8008140:	695b      	ldr	r3, [r3, #20]
 8008142:	f423 7040 	bic.w	r0, r3, #768	@ 0x300
 8008146:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 800814a:	6999      	ldr	r1, [r3, #24]
 800814c:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8008150:	681a      	ldr	r2, [r3, #0]
 8008152:	ea40 0301 	orr.w	r3, r0, r1
 8008156:	6153      	str	r3, [r2, #20]
 8008158:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 800815c:	681a      	ldr	r2, [r3, #0]
 800815e:	4b8f      	ldr	r3, [pc, #572]	@ (800839c <UART_SetConfig+0x2cc>)
 8008160:	429a      	cmp	r2, r3
 8008162:	d005      	beq.n	8008170 <UART_SetConfig+0xa0>
 8008164:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8008168:	681a      	ldr	r2, [r3, #0]
 800816a:	4b8d      	ldr	r3, [pc, #564]	@ (80083a0 <UART_SetConfig+0x2d0>)
 800816c:	429a      	cmp	r2, r3
 800816e:	d104      	bne.n	800817a <UART_SetConfig+0xaa>
 8008170:	f7fd fafa 	bl	8005768 <HAL_RCC_GetPCLK2Freq>
 8008174:	f8c7 00fc 	str.w	r0, [r7, #252]	@ 0xfc
 8008178:	e003      	b.n	8008182 <UART_SetConfig+0xb2>
 800817a:	f7fd fae1 	bl	8005740 <HAL_RCC_GetPCLK1Freq>
 800817e:	f8c7 00fc 	str.w	r0, [r7, #252]	@ 0xfc
 8008182:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8008186:	69db      	ldr	r3, [r3, #28]
 8008188:	f5b3 4f00 	cmp.w	r3, #32768	@ 0x8000
 800818c:	f040 810c 	bne.w	80083a8 <UART_SetConfig+0x2d8>
 8008190:	f8d7 30fc 	ldr.w	r3, [r7, #252]	@ 0xfc
 8008194:	2200      	movs	r2, #0
 8008196:	f8c7 30e8 	str.w	r3, [r7, #232]	@ 0xe8
 800819a:	f8c7 20ec 	str.w	r2, [r7, #236]	@ 0xec
 800819e:	e9d7 453a 	ldrd	r4, r5, [r7, #232]	@ 0xe8
 80081a2:	4622      	mov	r2, r4
 80081a4:	462b      	mov	r3, r5
 80081a6:	1891      	adds	r1, r2, r2
 80081a8:	65b9      	str	r1, [r7, #88]	@ 0x58
 80081aa:	415b      	adcs	r3, r3
 80081ac:	65fb      	str	r3, [r7, #92]	@ 0x5c
 80081ae:	e9d7 2316 	ldrd	r2, r3, [r7, #88]	@ 0x58
 80081b2:	4621      	mov	r1, r4
 80081b4:	eb12 0801 	adds.w	r8, r2, r1
 80081b8:	4629      	mov	r1, r5
 80081ba:	eb43 0901 	adc.w	r9, r3, r1
 80081be:	f04f 0200 	mov.w	r2, #0
 80081c2:	f04f 0300 	mov.w	r3, #0
 80081c6:	ea4f 03c9 	mov.w	r3, r9, lsl #3
 80081ca:	ea43 7358 	orr.w	r3, r3, r8, lsr #29
 80081ce:	ea4f 02c8 	mov.w	r2, r8, lsl #3
 80081d2:	4690      	mov	r8, r2
 80081d4:	4699      	mov	r9, r3
 80081d6:	4623      	mov	r3, r4
 80081d8:	eb18 0303 	adds.w	r3, r8, r3
 80081dc:	f8c7 30e0 	str.w	r3, [r7, #224]	@ 0xe0
 80081e0:	462b      	mov	r3, r5
 80081e2:	eb49 0303 	adc.w	r3, r9, r3
 80081e6:	f8c7 30e4 	str.w	r3, [r7, #228]	@ 0xe4
 80081ea:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 80081ee:	685b      	ldr	r3, [r3, #4]
 80081f0:	2200      	movs	r2, #0
 80081f2:	f8c7 30d8 	str.w	r3, [r7, #216]	@ 0xd8
 80081f6:	f8c7 20dc 	str.w	r2, [r7, #220]	@ 0xdc
 80081fa:	e9d7 1236 	ldrd	r1, r2, [r7, #216]	@ 0xd8
 80081fe:	460b      	mov	r3, r1
 8008200:	18db      	adds	r3, r3, r3
 8008202:	653b      	str	r3, [r7, #80]	@ 0x50
 8008204:	4613      	mov	r3, r2
 8008206:	eb42 0303 	adc.w	r3, r2, r3
 800820a:	657b      	str	r3, [r7, #84]	@ 0x54
 800820c:	e9d7 2314 	ldrd	r2, r3, [r7, #80]	@ 0x50
 8008210:	e9d7 0138 	ldrd	r0, r1, [r7, #224]	@ 0xe0
 8008214:	f7f8 fd58 	bl	8000cc8 <__aeabi_uldivmod>
 8008218:	4602      	mov	r2, r0
 800821a:	460b      	mov	r3, r1
 800821c:	4b61      	ldr	r3, [pc, #388]	@ (80083a4 <UART_SetConfig+0x2d4>)
 800821e:	fba3 2302 	umull	r2, r3, r3, r2
 8008222:	095b      	lsrs	r3, r3, #5
 8008224:	011c      	lsls	r4, r3, #4
 8008226:	f8d7 30fc 	ldr.w	r3, [r7, #252]	@ 0xfc
 800822a:	2200      	movs	r2, #0
 800822c:	f8c7 30d0 	str.w	r3, [r7, #208]	@ 0xd0
 8008230:	f8c7 20d4 	str.w	r2, [r7, #212]	@ 0xd4
 8008234:	e9d7 8934 	ldrd	r8, r9, [r7, #208]	@ 0xd0
 8008238:	4642      	mov	r2, r8
 800823a:	464b      	mov	r3, r9
 800823c:	1891      	adds	r1, r2, r2
 800823e:	64b9      	str	r1, [r7, #72]	@ 0x48
 8008240:	415b      	adcs	r3, r3
 8008242:	64fb      	str	r3, [r7, #76]	@ 0x4c
 8008244:	e9d7 2312 	ldrd	r2, r3, [r7, #72]	@ 0x48
 8008248:	4641      	mov	r1, r8
 800824a:	eb12 0a01 	adds.w	sl, r2, r1
 800824e:	4649      	mov	r1, r9
 8008250:	eb43 0b01 	adc.w	fp, r3, r1
 8008254:	f04f 0200 	mov.w	r2, #0
 8008258:	f04f 0300 	mov.w	r3, #0
 800825c:	ea4f 03cb 	mov.w	r3, fp, lsl #3
 8008260:	ea43 735a 	orr.w	r3, r3, sl, lsr #29
 8008264:	ea4f 02ca 	mov.w	r2, sl, lsl #3
 8008268:	4692      	mov	sl, r2
 800826a:	469b      	mov	fp, r3
 800826c:	4643      	mov	r3, r8
 800826e:	eb1a 0303 	adds.w	r3, sl, r3
 8008272:	f8c7 30c8 	str.w	r3, [r7, #200]	@ 0xc8
 8008276:	464b      	mov	r3, r9
 8008278:	eb4b 0303 	adc.w	r3, fp, r3
 800827c:	f8c7 30cc 	str.w	r3, [r7, #204]	@ 0xcc
 8008280:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8008284:	685b      	ldr	r3, [r3, #4]
 8008286:	2200      	movs	r2, #0
 8008288:	f8c7 30c0 	str.w	r3, [r7, #192]	@ 0xc0
 800828c:	f8c7 20c4 	str.w	r2, [r7, #196]	@ 0xc4
 8008290:	e9d7 1230 	ldrd	r1, r2, [r7, #192]	@ 0xc0
 8008294:	460b      	mov	r3, r1
 8008296:	18db      	adds	r3, r3, r3
 8008298:	643b      	str	r3, [r7, #64]	@ 0x40
 800829a:	4613      	mov	r3, r2
 800829c:	eb42 0303 	adc.w	r3, r2, r3
 80082a0:	647b      	str	r3, [r7, #68]	@ 0x44
 80082a2:	e9d7 2310 	ldrd	r2, r3, [r7, #64]	@ 0x40
 80082a6:	e9d7 0132 	ldrd	r0, r1, [r7, #200]	@ 0xc8
 80082aa:	f7f8 fd0d 	bl	8000cc8 <__aeabi_uldivmod>
 80082ae:	4602      	mov	r2, r0
 80082b0:	460b      	mov	r3, r1
 80082b2:	4611      	mov	r1, r2
 80082b4:	4b3b      	ldr	r3, [pc, #236]	@ (80083a4 <UART_SetConfig+0x2d4>)
 80082b6:	fba3 2301 	umull	r2, r3, r3, r1
 80082ba:	095b      	lsrs	r3, r3, #5
 80082bc:	2264      	movs	r2, #100	@ 0x64
 80082be:	fb02 f303 	mul.w	r3, r2, r3
 80082c2:	1acb      	subs	r3, r1, r3
 80082c4:	00db      	lsls	r3, r3, #3
 80082c6:	f103 0232 	add.w	r2, r3, #50	@ 0x32
 80082ca:	4b36      	ldr	r3, [pc, #216]	@ (80083a4 <UART_SetConfig+0x2d4>)
 80082cc:	fba3 2302 	umull	r2, r3, r3, r2
 80082d0:	095b      	lsrs	r3, r3, #5
 80082d2:	005b      	lsls	r3, r3, #1
 80082d4:	f403 73f8 	and.w	r3, r3, #496	@ 0x1f0
 80082d8:	441c      	add	r4, r3
 80082da:	f8d7 30fc 	ldr.w	r3, [r7, #252]	@ 0xfc
 80082de:	2200      	movs	r2, #0
 80082e0:	f8c7 30b8 	str.w	r3, [r7, #184]	@ 0xb8
 80082e4:	f8c7 20bc 	str.w	r2, [r7, #188]	@ 0xbc
 80082e8:	e9d7 892e 	ldrd	r8, r9, [r7, #184]	@ 0xb8
 80082ec:	4642      	mov	r2, r8
 80082ee:	464b      	mov	r3, r9
 80082f0:	1891      	adds	r1, r2, r2
 80082f2:	63b9      	str	r1, [r7, #56]	@ 0x38
 80082f4:	415b      	adcs	r3, r3
 80082f6:	63fb      	str	r3, [r7, #60]	@ 0x3c
 80082f8:	e9d7 230e 	ldrd	r2, r3, [r7, #56]	@ 0x38
 80082fc:	4641      	mov	r1, r8
 80082fe:	1851      	adds	r1, r2, r1
 8008300:	6339      	str	r1, [r7, #48]	@ 0x30
 8008302:	4649      	mov	r1, r9
 8008304:	414b      	adcs	r3, r1
 8008306:	637b      	str	r3, [r7, #52]	@ 0x34
 8008308:	f04f 0200 	mov.w	r2, #0
 800830c:	f04f 0300 	mov.w	r3, #0
 8008310:	e9d7 ab0c 	ldrd	sl, fp, [r7, #48]	@ 0x30
 8008314:	4659      	mov	r1, fp
 8008316:	00cb      	lsls	r3, r1, #3
 8008318:	4651      	mov	r1, sl
 800831a:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 800831e:	4651      	mov	r1, sl
 8008320:	00ca      	lsls	r2, r1, #3
 8008322:	4610      	mov	r0, r2
 8008324:	4619      	mov	r1, r3
 8008326:	4603      	mov	r3, r0
 8008328:	4642      	mov	r2, r8
 800832a:	189b      	adds	r3, r3, r2
 800832c:	f8c7 30b0 	str.w	r3, [r7, #176]	@ 0xb0
 8008330:	464b      	mov	r3, r9
 8008332:	460a      	mov	r2, r1
 8008334:	eb42 0303 	adc.w	r3, r2, r3
 8008338:	f8c7 30b4 	str.w	r3, [r7, #180]	@ 0xb4
 800833c:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8008340:	685b      	ldr	r3, [r3, #4]
 8008342:	2200      	movs	r2, #0
 8008344:	f8c7 30a8 	str.w	r3, [r7, #168]	@ 0xa8
 8008348:	f8c7 20ac 	str.w	r2, [r7, #172]	@ 0xac
 800834c:	e9d7 122a 	ldrd	r1, r2, [r7, #168]	@ 0xa8
 8008350:	460b      	mov	r3, r1
 8008352:	18db      	adds	r3, r3, r3
 8008354:	62bb      	str	r3, [r7, #40]	@ 0x28
 8008356:	4613      	mov	r3, r2
 8008358:	eb42 0303 	adc.w	r3, r2, r3
 800835c:	62fb      	str	r3, [r7, #44]	@ 0x2c
 800835e:	e9d7 230a 	ldrd	r2, r3, [r7, #40]	@ 0x28
 8008362:	e9d7 012c 	ldrd	r0, r1, [r7, #176]	@ 0xb0
 8008366:	f7f8 fcaf 	bl	8000cc8 <__aeabi_uldivmod>
 800836a:	4602      	mov	r2, r0
 800836c:	460b      	mov	r3, r1
 800836e:	4b0d      	ldr	r3, [pc, #52]	@ (80083a4 <UART_SetConfig+0x2d4>)
 8008370:	fba3 1302 	umull	r1, r3, r3, r2
 8008374:	095b      	lsrs	r3, r3, #5
 8008376:	2164      	movs	r1, #100	@ 0x64
 8008378:	fb01 f303 	mul.w	r3, r1, r3
 800837c:	1ad3      	subs	r3, r2, r3
 800837e:	00db      	lsls	r3, r3, #3
 8008380:	3332      	adds	r3, #50	@ 0x32
 8008382:	4a08      	ldr	r2, [pc, #32]	@ (80083a4 <UART_SetConfig+0x2d4>)
 8008384:	fba2 2303 	umull	r2, r3, r2, r3
 8008388:	095b      	lsrs	r3, r3, #5
 800838a:	f003 0207 	and.w	r2, r3, #7
 800838e:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8008392:	681b      	ldr	r3, [r3, #0]
 8008394:	4422      	add	r2, r4
 8008396:	609a      	str	r2, [r3, #8]
 8008398:	e106      	b.n	80085a8 <UART_SetConfig+0x4d8>
 800839a:	bf00      	nop
 800839c:	40011000 	.word	0x40011000
 80083a0:	40011400 	.word	0x40011400
 80083a4:	51eb851f 	.word	0x51eb851f
 80083a8:	f8d7 30fc 	ldr.w	r3, [r7, #252]	@ 0xfc
 80083ac:	2200      	movs	r2, #0
 80083ae:	f8c7 30a0 	str.w	r3, [r7, #160]	@ 0xa0
 80083b2:	f8c7 20a4 	str.w	r2, [r7, #164]	@ 0xa4
 80083b6:	e9d7 8928 	ldrd	r8, r9, [r7, #160]	@ 0xa0
 80083ba:	4642      	mov	r2, r8
 80083bc:	464b      	mov	r3, r9
 80083be:	1891      	adds	r1, r2, r2
 80083c0:	6239      	str	r1, [r7, #32]
 80083c2:	415b      	adcs	r3, r3
 80083c4:	627b      	str	r3, [r7, #36]	@ 0x24
 80083c6:	e9d7 2308 	ldrd	r2, r3, [r7, #32]
 80083ca:	4641      	mov	r1, r8
 80083cc:	1854      	adds	r4, r2, r1
 80083ce:	4649      	mov	r1, r9
 80083d0:	eb43 0501 	adc.w	r5, r3, r1
 80083d4:	f04f 0200 	mov.w	r2, #0
 80083d8:	f04f 0300 	mov.w	r3, #0
 80083dc:	00eb      	lsls	r3, r5, #3
 80083de:	ea43 7354 	orr.w	r3, r3, r4, lsr #29
 80083e2:	00e2      	lsls	r2, r4, #3
 80083e4:	4614      	mov	r4, r2
 80083e6:	461d      	mov	r5, r3
 80083e8:	4643      	mov	r3, r8
 80083ea:	18e3      	adds	r3, r4, r3
 80083ec:	f8c7 3098 	str.w	r3, [r7, #152]	@ 0x98
 80083f0:	464b      	mov	r3, r9
 80083f2:	eb45 0303 	adc.w	r3, r5, r3
 80083f6:	f8c7 309c 	str.w	r3, [r7, #156]	@ 0x9c
 80083fa:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 80083fe:	685b      	ldr	r3, [r3, #4]
 8008400:	2200      	movs	r2, #0
 8008402:	f8c7 3090 	str.w	r3, [r7, #144]	@ 0x90
 8008406:	f8c7 2094 	str.w	r2, [r7, #148]	@ 0x94
 800840a:	f04f 0200 	mov.w	r2, #0
 800840e:	f04f 0300 	mov.w	r3, #0
 8008412:	e9d7 4524 	ldrd	r4, r5, [r7, #144]	@ 0x90
 8008416:	4629      	mov	r1, r5
 8008418:	008b      	lsls	r3, r1, #2
 800841a:	4621      	mov	r1, r4
 800841c:	ea43 7391 	orr.w	r3, r3, r1, lsr #30
 8008420:	4621      	mov	r1, r4
 8008422:	008a      	lsls	r2, r1, #2
 8008424:	e9d7 0126 	ldrd	r0, r1, [r7, #152]	@ 0x98
 8008428:	f7f8 fc4e 	bl	8000cc8 <__aeabi_uldivmod>
 800842c:	4602      	mov	r2, r0
 800842e:	460b      	mov	r3, r1
 8008430:	4b60      	ldr	r3, [pc, #384]	@ (80085b4 <UART_SetConfig+0x4e4>)
 8008432:	fba3 2302 	umull	r2, r3, r3, r2
 8008436:	095b      	lsrs	r3, r3, #5
 8008438:	011c      	lsls	r4, r3, #4
 800843a:	f8d7 30fc 	ldr.w	r3, [r7, #252]	@ 0xfc
 800843e:	2200      	movs	r2, #0
 8008440:	f8c7 3088 	str.w	r3, [r7, #136]	@ 0x88
 8008444:	f8c7 208c 	str.w	r2, [r7, #140]	@ 0x8c
 8008448:	e9d7 8922 	ldrd	r8, r9, [r7, #136]	@ 0x88
 800844c:	4642      	mov	r2, r8
 800844e:	464b      	mov	r3, r9
 8008450:	1891      	adds	r1, r2, r2
 8008452:	61b9      	str	r1, [r7, #24]
 8008454:	415b      	adcs	r3, r3
 8008456:	61fb      	str	r3, [r7, #28]
 8008458:	e9d7 2306 	ldrd	r2, r3, [r7, #24]
 800845c:	4641      	mov	r1, r8
 800845e:	1851      	adds	r1, r2, r1
 8008460:	6139      	str	r1, [r7, #16]
 8008462:	4649      	mov	r1, r9
 8008464:	414b      	adcs	r3, r1
 8008466:	617b      	str	r3, [r7, #20]
 8008468:	f04f 0200 	mov.w	r2, #0
 800846c:	f04f 0300 	mov.w	r3, #0
 8008470:	e9d7 ab04 	ldrd	sl, fp, [r7, #16]
 8008474:	4659      	mov	r1, fp
 8008476:	00cb      	lsls	r3, r1, #3
 8008478:	4651      	mov	r1, sl
 800847a:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 800847e:	4651      	mov	r1, sl
 8008480:	00ca      	lsls	r2, r1, #3
 8008482:	4610      	mov	r0, r2
 8008484:	4619      	mov	r1, r3
 8008486:	4603      	mov	r3, r0
 8008488:	4642      	mov	r2, r8
 800848a:	189b      	adds	r3, r3, r2
 800848c:	f8c7 3080 	str.w	r3, [r7, #128]	@ 0x80
 8008490:	464b      	mov	r3, r9
 8008492:	460a      	mov	r2, r1
 8008494:	eb42 0303 	adc.w	r3, r2, r3
 8008498:	f8c7 3084 	str.w	r3, [r7, #132]	@ 0x84
 800849c:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 80084a0:	685b      	ldr	r3, [r3, #4]
 80084a2:	2200      	movs	r2, #0
 80084a4:	67bb      	str	r3, [r7, #120]	@ 0x78
 80084a6:	67fa      	str	r2, [r7, #124]	@ 0x7c
 80084a8:	f04f 0200 	mov.w	r2, #0
 80084ac:	f04f 0300 	mov.w	r3, #0
 80084b0:	e9d7 891e 	ldrd	r8, r9, [r7, #120]	@ 0x78
 80084b4:	4649      	mov	r1, r9
 80084b6:	008b      	lsls	r3, r1, #2
 80084b8:	4641      	mov	r1, r8
 80084ba:	ea43 7391 	orr.w	r3, r3, r1, lsr #30
 80084be:	4641      	mov	r1, r8
 80084c0:	008a      	lsls	r2, r1, #2
 80084c2:	e9d7 0120 	ldrd	r0, r1, [r7, #128]	@ 0x80
 80084c6:	f7f8 fbff 	bl	8000cc8 <__aeabi_uldivmod>
 80084ca:	4602      	mov	r2, r0
 80084cc:	460b      	mov	r3, r1
 80084ce:	4611      	mov	r1, r2
 80084d0:	4b38      	ldr	r3, [pc, #224]	@ (80085b4 <UART_SetConfig+0x4e4>)
 80084d2:	fba3 2301 	umull	r2, r3, r3, r1
 80084d6:	095b      	lsrs	r3, r3, #5
 80084d8:	2264      	movs	r2, #100	@ 0x64
 80084da:	fb02 f303 	mul.w	r3, r2, r3
 80084de:	1acb      	subs	r3, r1, r3
 80084e0:	011b      	lsls	r3, r3, #4
 80084e2:	3332      	adds	r3, #50	@ 0x32
 80084e4:	4a33      	ldr	r2, [pc, #204]	@ (80085b4 <UART_SetConfig+0x4e4>)
 80084e6:	fba2 2303 	umull	r2, r3, r2, r3
 80084ea:	095b      	lsrs	r3, r3, #5
 80084ec:	f003 03f0 	and.w	r3, r3, #240	@ 0xf0
 80084f0:	441c      	add	r4, r3
 80084f2:	f8d7 30fc 	ldr.w	r3, [r7, #252]	@ 0xfc
 80084f6:	2200      	movs	r2, #0
 80084f8:	673b      	str	r3, [r7, #112]	@ 0x70
 80084fa:	677a      	str	r2, [r7, #116]	@ 0x74
 80084fc:	e9d7 891c 	ldrd	r8, r9, [r7, #112]	@ 0x70
 8008500:	4642      	mov	r2, r8
 8008502:	464b      	mov	r3, r9
 8008504:	1891      	adds	r1, r2, r2
 8008506:	60b9      	str	r1, [r7, #8]
 8008508:	415b      	adcs	r3, r3
 800850a:	60fb      	str	r3, [r7, #12]
 800850c:	e9d7 2302 	ldrd	r2, r3, [r7, #8]
 8008510:	4641      	mov	r1, r8
 8008512:	1851      	adds	r1, r2, r1
 8008514:	6039      	str	r1, [r7, #0]
 8008516:	4649      	mov	r1, r9
 8008518:	414b      	adcs	r3, r1
 800851a:	607b      	str	r3, [r7, #4]
 800851c:	f04f 0200 	mov.w	r2, #0
 8008520:	f04f 0300 	mov.w	r3, #0
 8008524:	e9d7 ab00 	ldrd	sl, fp, [r7]
 8008528:	4659      	mov	r1, fp
 800852a:	00cb      	lsls	r3, r1, #3
 800852c:	4651      	mov	r1, sl
 800852e:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 8008532:	4651      	mov	r1, sl
 8008534:	00ca      	lsls	r2, r1, #3
 8008536:	4610      	mov	r0, r2
 8008538:	4619      	mov	r1, r3
 800853a:	4603      	mov	r3, r0
 800853c:	4642      	mov	r2, r8
 800853e:	189b      	adds	r3, r3, r2
 8008540:	66bb      	str	r3, [r7, #104]	@ 0x68
 8008542:	464b      	mov	r3, r9
 8008544:	460a      	mov	r2, r1
 8008546:	eb42 0303 	adc.w	r3, r2, r3
 800854a:	66fb      	str	r3, [r7, #108]	@ 0x6c
 800854c:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8008550:	685b      	ldr	r3, [r3, #4]
 8008552:	2200      	movs	r2, #0
 8008554:	663b      	str	r3, [r7, #96]	@ 0x60
 8008556:	667a      	str	r2, [r7, #100]	@ 0x64
 8008558:	f04f 0200 	mov.w	r2, #0
 800855c:	f04f 0300 	mov.w	r3, #0
 8008560:	e9d7 8918 	ldrd	r8, r9, [r7, #96]	@ 0x60
 8008564:	4649      	mov	r1, r9
 8008566:	008b      	lsls	r3, r1, #2
 8008568:	4641      	mov	r1, r8
 800856a:	ea43 7391 	orr.w	r3, r3, r1, lsr #30
 800856e:	4641      	mov	r1, r8
 8008570:	008a      	lsls	r2, r1, #2
 8008572:	e9d7 011a 	ldrd	r0, r1, [r7, #104]	@ 0x68
 8008576:	f7f8 fba7 	bl	8000cc8 <__aeabi_uldivmod>
 800857a:	4602      	mov	r2, r0
 800857c:	460b      	mov	r3, r1
 800857e:	4b0d      	ldr	r3, [pc, #52]	@ (80085b4 <UART_SetConfig+0x4e4>)
 8008580:	fba3 1302 	umull	r1, r3, r3, r2
 8008584:	095b      	lsrs	r3, r3, #5
 8008586:	2164      	movs	r1, #100	@ 0x64
 8008588:	fb01 f303 	mul.w	r3, r1, r3
 800858c:	1ad3      	subs	r3, r2, r3
 800858e:	011b      	lsls	r3, r3, #4
 8008590:	3332      	adds	r3, #50	@ 0x32
 8008592:	4a08      	ldr	r2, [pc, #32]	@ (80085b4 <UART_SetConfig+0x4e4>)
 8008594:	fba2 2303 	umull	r2, r3, r2, r3
 8008598:	095b      	lsrs	r3, r3, #5
 800859a:	f003 020f 	and.w	r2, r3, #15
 800859e:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 80085a2:	681b      	ldr	r3, [r3, #0]
 80085a4:	4422      	add	r2, r4
 80085a6:	609a      	str	r2, [r3, #8]
 80085a8:	bf00      	nop
 80085aa:	f507 7780 	add.w	r7, r7, #256	@ 0x100
 80085ae:	46bd      	mov	sp, r7
 80085b0:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 80085b4:	51eb851f 	.word	0x51eb851f

080085b8 <__cvt>:
 80085b8:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 80085bc:	ec57 6b10 	vmov	r6, r7, d0
 80085c0:	2f00      	cmp	r7, #0
 80085c2:	460c      	mov	r4, r1
 80085c4:	4619      	mov	r1, r3
 80085c6:	463b      	mov	r3, r7
 80085c8:	bfbb      	ittet	lt
 80085ca:	f107 4300 	addlt.w	r3, r7, #2147483648	@ 0x80000000
 80085ce:	461f      	movlt	r7, r3
 80085d0:	2300      	movge	r3, #0
 80085d2:	232d      	movlt	r3, #45	@ 0x2d
 80085d4:	700b      	strb	r3, [r1, #0]
 80085d6:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 80085d8:	f8dd a030 	ldr.w	sl, [sp, #48]	@ 0x30
 80085dc:	4691      	mov	r9, r2
 80085de:	f023 0820 	bic.w	r8, r3, #32
 80085e2:	bfbc      	itt	lt
 80085e4:	4632      	movlt	r2, r6
 80085e6:	4616      	movlt	r6, r2
 80085e8:	f1b8 0f46 	cmp.w	r8, #70	@ 0x46
 80085ec:	d005      	beq.n	80085fa <__cvt+0x42>
 80085ee:	f1b8 0f45 	cmp.w	r8, #69	@ 0x45
 80085f2:	d100      	bne.n	80085f6 <__cvt+0x3e>
 80085f4:	3401      	adds	r4, #1
 80085f6:	2102      	movs	r1, #2
 80085f8:	e000      	b.n	80085fc <__cvt+0x44>
 80085fa:	2103      	movs	r1, #3
 80085fc:	ab03      	add	r3, sp, #12
 80085fe:	9301      	str	r3, [sp, #4]
 8008600:	ab02      	add	r3, sp, #8
 8008602:	9300      	str	r3, [sp, #0]
 8008604:	ec47 6b10 	vmov	d0, r6, r7
 8008608:	4653      	mov	r3, sl
 800860a:	4622      	mov	r2, r4
 800860c:	f001 f988 	bl	8009920 <_dtoa_r>
 8008610:	f1b8 0f47 	cmp.w	r8, #71	@ 0x47
 8008614:	4605      	mov	r5, r0
 8008616:	d119      	bne.n	800864c <__cvt+0x94>
 8008618:	f019 0f01 	tst.w	r9, #1
 800861c:	d00e      	beq.n	800863c <__cvt+0x84>
 800861e:	eb00 0904 	add.w	r9, r0, r4
 8008622:	2200      	movs	r2, #0
 8008624:	2300      	movs	r3, #0
 8008626:	4630      	mov	r0, r6
 8008628:	4639      	mov	r1, r7
 800862a:	f7f8 fa6d 	bl	8000b08 <__aeabi_dcmpeq>
 800862e:	b108      	cbz	r0, 8008634 <__cvt+0x7c>
 8008630:	f8cd 900c 	str.w	r9, [sp, #12]
 8008634:	2230      	movs	r2, #48	@ 0x30
 8008636:	9b03      	ldr	r3, [sp, #12]
 8008638:	454b      	cmp	r3, r9
 800863a:	d31e      	bcc.n	800867a <__cvt+0xc2>
 800863c:	9b03      	ldr	r3, [sp, #12]
 800863e:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 8008640:	1b5b      	subs	r3, r3, r5
 8008642:	4628      	mov	r0, r5
 8008644:	6013      	str	r3, [r2, #0]
 8008646:	b004      	add	sp, #16
 8008648:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800864c:	f1b8 0f46 	cmp.w	r8, #70	@ 0x46
 8008650:	eb00 0904 	add.w	r9, r0, r4
 8008654:	d1e5      	bne.n	8008622 <__cvt+0x6a>
 8008656:	7803      	ldrb	r3, [r0, #0]
 8008658:	2b30      	cmp	r3, #48	@ 0x30
 800865a:	d10a      	bne.n	8008672 <__cvt+0xba>
 800865c:	2200      	movs	r2, #0
 800865e:	2300      	movs	r3, #0
 8008660:	4630      	mov	r0, r6
 8008662:	4639      	mov	r1, r7
 8008664:	f7f8 fa50 	bl	8000b08 <__aeabi_dcmpeq>
 8008668:	b918      	cbnz	r0, 8008672 <__cvt+0xba>
 800866a:	f1c4 0401 	rsb	r4, r4, #1
 800866e:	f8ca 4000 	str.w	r4, [sl]
 8008672:	f8da 3000 	ldr.w	r3, [sl]
 8008676:	4499      	add	r9, r3
 8008678:	e7d3      	b.n	8008622 <__cvt+0x6a>
 800867a:	1c59      	adds	r1, r3, #1
 800867c:	9103      	str	r1, [sp, #12]
 800867e:	701a      	strb	r2, [r3, #0]
 8008680:	e7d9      	b.n	8008636 <__cvt+0x7e>

08008682 <__exponent>:
 8008682:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8008684:	2900      	cmp	r1, #0
 8008686:	bfba      	itte	lt
 8008688:	4249      	neglt	r1, r1
 800868a:	232d      	movlt	r3, #45	@ 0x2d
 800868c:	232b      	movge	r3, #43	@ 0x2b
 800868e:	2909      	cmp	r1, #9
 8008690:	7002      	strb	r2, [r0, #0]
 8008692:	7043      	strb	r3, [r0, #1]
 8008694:	dd29      	ble.n	80086ea <__exponent+0x68>
 8008696:	f10d 0307 	add.w	r3, sp, #7
 800869a:	461d      	mov	r5, r3
 800869c:	270a      	movs	r7, #10
 800869e:	461a      	mov	r2, r3
 80086a0:	fbb1 f6f7 	udiv	r6, r1, r7
 80086a4:	fb07 1416 	mls	r4, r7, r6, r1
 80086a8:	3430      	adds	r4, #48	@ 0x30
 80086aa:	f802 4c01 	strb.w	r4, [r2, #-1]
 80086ae:	460c      	mov	r4, r1
 80086b0:	2c63      	cmp	r4, #99	@ 0x63
 80086b2:	f103 33ff 	add.w	r3, r3, #4294967295
 80086b6:	4631      	mov	r1, r6
 80086b8:	dcf1      	bgt.n	800869e <__exponent+0x1c>
 80086ba:	3130      	adds	r1, #48	@ 0x30
 80086bc:	1e94      	subs	r4, r2, #2
 80086be:	f803 1c01 	strb.w	r1, [r3, #-1]
 80086c2:	1c41      	adds	r1, r0, #1
 80086c4:	4623      	mov	r3, r4
 80086c6:	42ab      	cmp	r3, r5
 80086c8:	d30a      	bcc.n	80086e0 <__exponent+0x5e>
 80086ca:	f10d 0309 	add.w	r3, sp, #9
 80086ce:	1a9b      	subs	r3, r3, r2
 80086d0:	42ac      	cmp	r4, r5
 80086d2:	bf88      	it	hi
 80086d4:	2300      	movhi	r3, #0
 80086d6:	3302      	adds	r3, #2
 80086d8:	4403      	add	r3, r0
 80086da:	1a18      	subs	r0, r3, r0
 80086dc:	b003      	add	sp, #12
 80086de:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80086e0:	f813 6b01 	ldrb.w	r6, [r3], #1
 80086e4:	f801 6f01 	strb.w	r6, [r1, #1]!
 80086e8:	e7ed      	b.n	80086c6 <__exponent+0x44>
 80086ea:	2330      	movs	r3, #48	@ 0x30
 80086ec:	3130      	adds	r1, #48	@ 0x30
 80086ee:	7083      	strb	r3, [r0, #2]
 80086f0:	70c1      	strb	r1, [r0, #3]
 80086f2:	1d03      	adds	r3, r0, #4
 80086f4:	e7f1      	b.n	80086da <__exponent+0x58>
	...

080086f8 <_printf_float>:
 80086f8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80086fc:	b08d      	sub	sp, #52	@ 0x34
 80086fe:	460c      	mov	r4, r1
 8008700:	f8dd 8058 	ldr.w	r8, [sp, #88]	@ 0x58
 8008704:	4616      	mov	r6, r2
 8008706:	461f      	mov	r7, r3
 8008708:	4605      	mov	r5, r0
 800870a:	f000 fff3 	bl	80096f4 <_localeconv_r>
 800870e:	6803      	ldr	r3, [r0, #0]
 8008710:	9304      	str	r3, [sp, #16]
 8008712:	4618      	mov	r0, r3
 8008714:	f7f7 fdcc 	bl	80002b0 <strlen>
 8008718:	2300      	movs	r3, #0
 800871a:	930a      	str	r3, [sp, #40]	@ 0x28
 800871c:	f8d8 3000 	ldr.w	r3, [r8]
 8008720:	9005      	str	r0, [sp, #20]
 8008722:	3307      	adds	r3, #7
 8008724:	f023 0307 	bic.w	r3, r3, #7
 8008728:	f103 0208 	add.w	r2, r3, #8
 800872c:	f894 a018 	ldrb.w	sl, [r4, #24]
 8008730:	f8d4 b000 	ldr.w	fp, [r4]
 8008734:	f8c8 2000 	str.w	r2, [r8]
 8008738:	e9d3 8900 	ldrd	r8, r9, [r3]
 800873c:	f029 4300 	bic.w	r3, r9, #2147483648	@ 0x80000000
 8008740:	9307      	str	r3, [sp, #28]
 8008742:	f8cd 8018 	str.w	r8, [sp, #24]
 8008746:	e9c4 8912 	strd	r8, r9, [r4, #72]	@ 0x48
 800874a:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 800874e:	4b9c      	ldr	r3, [pc, #624]	@ (80089c0 <_printf_float+0x2c8>)
 8008750:	f04f 32ff 	mov.w	r2, #4294967295
 8008754:	f7f8 fa0a 	bl	8000b6c <__aeabi_dcmpun>
 8008758:	bb70      	cbnz	r0, 80087b8 <_printf_float+0xc0>
 800875a:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 800875e:	4b98      	ldr	r3, [pc, #608]	@ (80089c0 <_printf_float+0x2c8>)
 8008760:	f04f 32ff 	mov.w	r2, #4294967295
 8008764:	f7f8 f9e4 	bl	8000b30 <__aeabi_dcmple>
 8008768:	bb30      	cbnz	r0, 80087b8 <_printf_float+0xc0>
 800876a:	2200      	movs	r2, #0
 800876c:	2300      	movs	r3, #0
 800876e:	4640      	mov	r0, r8
 8008770:	4649      	mov	r1, r9
 8008772:	f7f8 f9d3 	bl	8000b1c <__aeabi_dcmplt>
 8008776:	b110      	cbz	r0, 800877e <_printf_float+0x86>
 8008778:	232d      	movs	r3, #45	@ 0x2d
 800877a:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 800877e:	4a91      	ldr	r2, [pc, #580]	@ (80089c4 <_printf_float+0x2cc>)
 8008780:	4b91      	ldr	r3, [pc, #580]	@ (80089c8 <_printf_float+0x2d0>)
 8008782:	f1ba 0f47 	cmp.w	sl, #71	@ 0x47
 8008786:	bf94      	ite	ls
 8008788:	4690      	movls	r8, r2
 800878a:	4698      	movhi	r8, r3
 800878c:	2303      	movs	r3, #3
 800878e:	6123      	str	r3, [r4, #16]
 8008790:	f02b 0304 	bic.w	r3, fp, #4
 8008794:	6023      	str	r3, [r4, #0]
 8008796:	f04f 0900 	mov.w	r9, #0
 800879a:	9700      	str	r7, [sp, #0]
 800879c:	4633      	mov	r3, r6
 800879e:	aa0b      	add	r2, sp, #44	@ 0x2c
 80087a0:	4621      	mov	r1, r4
 80087a2:	4628      	mov	r0, r5
 80087a4:	f000 f9d2 	bl	8008b4c <_printf_common>
 80087a8:	3001      	adds	r0, #1
 80087aa:	f040 808d 	bne.w	80088c8 <_printf_float+0x1d0>
 80087ae:	f04f 30ff 	mov.w	r0, #4294967295
 80087b2:	b00d      	add	sp, #52	@ 0x34
 80087b4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80087b8:	4642      	mov	r2, r8
 80087ba:	464b      	mov	r3, r9
 80087bc:	4640      	mov	r0, r8
 80087be:	4649      	mov	r1, r9
 80087c0:	f7f8 f9d4 	bl	8000b6c <__aeabi_dcmpun>
 80087c4:	b140      	cbz	r0, 80087d8 <_printf_float+0xe0>
 80087c6:	464b      	mov	r3, r9
 80087c8:	2b00      	cmp	r3, #0
 80087ca:	bfbc      	itt	lt
 80087cc:	232d      	movlt	r3, #45	@ 0x2d
 80087ce:	f884 3043 	strblt.w	r3, [r4, #67]	@ 0x43
 80087d2:	4a7e      	ldr	r2, [pc, #504]	@ (80089cc <_printf_float+0x2d4>)
 80087d4:	4b7e      	ldr	r3, [pc, #504]	@ (80089d0 <_printf_float+0x2d8>)
 80087d6:	e7d4      	b.n	8008782 <_printf_float+0x8a>
 80087d8:	6863      	ldr	r3, [r4, #4]
 80087da:	f00a 02df 	and.w	r2, sl, #223	@ 0xdf
 80087de:	9206      	str	r2, [sp, #24]
 80087e0:	1c5a      	adds	r2, r3, #1
 80087e2:	d13b      	bne.n	800885c <_printf_float+0x164>
 80087e4:	2306      	movs	r3, #6
 80087e6:	6063      	str	r3, [r4, #4]
 80087e8:	f44b 6280 	orr.w	r2, fp, #1024	@ 0x400
 80087ec:	2300      	movs	r3, #0
 80087ee:	6022      	str	r2, [r4, #0]
 80087f0:	9303      	str	r3, [sp, #12]
 80087f2:	ab0a      	add	r3, sp, #40	@ 0x28
 80087f4:	e9cd a301 	strd	sl, r3, [sp, #4]
 80087f8:	ab09      	add	r3, sp, #36	@ 0x24
 80087fa:	9300      	str	r3, [sp, #0]
 80087fc:	6861      	ldr	r1, [r4, #4]
 80087fe:	ec49 8b10 	vmov	d0, r8, r9
 8008802:	f10d 0323 	add.w	r3, sp, #35	@ 0x23
 8008806:	4628      	mov	r0, r5
 8008808:	f7ff fed6 	bl	80085b8 <__cvt>
 800880c:	9b06      	ldr	r3, [sp, #24]
 800880e:	9909      	ldr	r1, [sp, #36]	@ 0x24
 8008810:	2b47      	cmp	r3, #71	@ 0x47
 8008812:	4680      	mov	r8, r0
 8008814:	d129      	bne.n	800886a <_printf_float+0x172>
 8008816:	1cc8      	adds	r0, r1, #3
 8008818:	db02      	blt.n	8008820 <_printf_float+0x128>
 800881a:	6863      	ldr	r3, [r4, #4]
 800881c:	4299      	cmp	r1, r3
 800881e:	dd41      	ble.n	80088a4 <_printf_float+0x1ac>
 8008820:	f1aa 0a02 	sub.w	sl, sl, #2
 8008824:	fa5f fa8a 	uxtb.w	sl, sl
 8008828:	3901      	subs	r1, #1
 800882a:	4652      	mov	r2, sl
 800882c:	f104 0050 	add.w	r0, r4, #80	@ 0x50
 8008830:	9109      	str	r1, [sp, #36]	@ 0x24
 8008832:	f7ff ff26 	bl	8008682 <__exponent>
 8008836:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8008838:	1813      	adds	r3, r2, r0
 800883a:	2a01      	cmp	r2, #1
 800883c:	4681      	mov	r9, r0
 800883e:	6123      	str	r3, [r4, #16]
 8008840:	dc02      	bgt.n	8008848 <_printf_float+0x150>
 8008842:	6822      	ldr	r2, [r4, #0]
 8008844:	07d2      	lsls	r2, r2, #31
 8008846:	d501      	bpl.n	800884c <_printf_float+0x154>
 8008848:	3301      	adds	r3, #1
 800884a:	6123      	str	r3, [r4, #16]
 800884c:	f89d 3023 	ldrb.w	r3, [sp, #35]	@ 0x23
 8008850:	2b00      	cmp	r3, #0
 8008852:	d0a2      	beq.n	800879a <_printf_float+0xa2>
 8008854:	232d      	movs	r3, #45	@ 0x2d
 8008856:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 800885a:	e79e      	b.n	800879a <_printf_float+0xa2>
 800885c:	9a06      	ldr	r2, [sp, #24]
 800885e:	2a47      	cmp	r2, #71	@ 0x47
 8008860:	d1c2      	bne.n	80087e8 <_printf_float+0xf0>
 8008862:	2b00      	cmp	r3, #0
 8008864:	d1c0      	bne.n	80087e8 <_printf_float+0xf0>
 8008866:	2301      	movs	r3, #1
 8008868:	e7bd      	b.n	80087e6 <_printf_float+0xee>
 800886a:	f1ba 0f65 	cmp.w	sl, #101	@ 0x65
 800886e:	d9db      	bls.n	8008828 <_printf_float+0x130>
 8008870:	f1ba 0f66 	cmp.w	sl, #102	@ 0x66
 8008874:	d118      	bne.n	80088a8 <_printf_float+0x1b0>
 8008876:	2900      	cmp	r1, #0
 8008878:	6863      	ldr	r3, [r4, #4]
 800887a:	dd0b      	ble.n	8008894 <_printf_float+0x19c>
 800887c:	6121      	str	r1, [r4, #16]
 800887e:	b913      	cbnz	r3, 8008886 <_printf_float+0x18e>
 8008880:	6822      	ldr	r2, [r4, #0]
 8008882:	07d0      	lsls	r0, r2, #31
 8008884:	d502      	bpl.n	800888c <_printf_float+0x194>
 8008886:	3301      	adds	r3, #1
 8008888:	440b      	add	r3, r1
 800888a:	6123      	str	r3, [r4, #16]
 800888c:	65a1      	str	r1, [r4, #88]	@ 0x58
 800888e:	f04f 0900 	mov.w	r9, #0
 8008892:	e7db      	b.n	800884c <_printf_float+0x154>
 8008894:	b913      	cbnz	r3, 800889c <_printf_float+0x1a4>
 8008896:	6822      	ldr	r2, [r4, #0]
 8008898:	07d2      	lsls	r2, r2, #31
 800889a:	d501      	bpl.n	80088a0 <_printf_float+0x1a8>
 800889c:	3302      	adds	r3, #2
 800889e:	e7f4      	b.n	800888a <_printf_float+0x192>
 80088a0:	2301      	movs	r3, #1
 80088a2:	e7f2      	b.n	800888a <_printf_float+0x192>
 80088a4:	f04f 0a67 	mov.w	sl, #103	@ 0x67
 80088a8:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 80088aa:	4299      	cmp	r1, r3
 80088ac:	db05      	blt.n	80088ba <_printf_float+0x1c2>
 80088ae:	6823      	ldr	r3, [r4, #0]
 80088b0:	6121      	str	r1, [r4, #16]
 80088b2:	07d8      	lsls	r0, r3, #31
 80088b4:	d5ea      	bpl.n	800888c <_printf_float+0x194>
 80088b6:	1c4b      	adds	r3, r1, #1
 80088b8:	e7e7      	b.n	800888a <_printf_float+0x192>
 80088ba:	2900      	cmp	r1, #0
 80088bc:	bfd4      	ite	le
 80088be:	f1c1 0202 	rsble	r2, r1, #2
 80088c2:	2201      	movgt	r2, #1
 80088c4:	4413      	add	r3, r2
 80088c6:	e7e0      	b.n	800888a <_printf_float+0x192>
 80088c8:	6823      	ldr	r3, [r4, #0]
 80088ca:	055a      	lsls	r2, r3, #21
 80088cc:	d407      	bmi.n	80088de <_printf_float+0x1e6>
 80088ce:	6923      	ldr	r3, [r4, #16]
 80088d0:	4642      	mov	r2, r8
 80088d2:	4631      	mov	r1, r6
 80088d4:	4628      	mov	r0, r5
 80088d6:	47b8      	blx	r7
 80088d8:	3001      	adds	r0, #1
 80088da:	d12b      	bne.n	8008934 <_printf_float+0x23c>
 80088dc:	e767      	b.n	80087ae <_printf_float+0xb6>
 80088de:	f1ba 0f65 	cmp.w	sl, #101	@ 0x65
 80088e2:	f240 80dd 	bls.w	8008aa0 <_printf_float+0x3a8>
 80088e6:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	@ 0x48
 80088ea:	2200      	movs	r2, #0
 80088ec:	2300      	movs	r3, #0
 80088ee:	f7f8 f90b 	bl	8000b08 <__aeabi_dcmpeq>
 80088f2:	2800      	cmp	r0, #0
 80088f4:	d033      	beq.n	800895e <_printf_float+0x266>
 80088f6:	4a37      	ldr	r2, [pc, #220]	@ (80089d4 <_printf_float+0x2dc>)
 80088f8:	2301      	movs	r3, #1
 80088fa:	4631      	mov	r1, r6
 80088fc:	4628      	mov	r0, r5
 80088fe:	47b8      	blx	r7
 8008900:	3001      	adds	r0, #1
 8008902:	f43f af54 	beq.w	80087ae <_printf_float+0xb6>
 8008906:	e9dd 3809 	ldrd	r3, r8, [sp, #36]	@ 0x24
 800890a:	4543      	cmp	r3, r8
 800890c:	db02      	blt.n	8008914 <_printf_float+0x21c>
 800890e:	6823      	ldr	r3, [r4, #0]
 8008910:	07d8      	lsls	r0, r3, #31
 8008912:	d50f      	bpl.n	8008934 <_printf_float+0x23c>
 8008914:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8008918:	4631      	mov	r1, r6
 800891a:	4628      	mov	r0, r5
 800891c:	47b8      	blx	r7
 800891e:	3001      	adds	r0, #1
 8008920:	f43f af45 	beq.w	80087ae <_printf_float+0xb6>
 8008924:	f04f 0900 	mov.w	r9, #0
 8008928:	f108 38ff 	add.w	r8, r8, #4294967295
 800892c:	f104 0a1a 	add.w	sl, r4, #26
 8008930:	45c8      	cmp	r8, r9
 8008932:	dc09      	bgt.n	8008948 <_printf_float+0x250>
 8008934:	6823      	ldr	r3, [r4, #0]
 8008936:	079b      	lsls	r3, r3, #30
 8008938:	f100 8103 	bmi.w	8008b42 <_printf_float+0x44a>
 800893c:	68e0      	ldr	r0, [r4, #12]
 800893e:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8008940:	4298      	cmp	r0, r3
 8008942:	bfb8      	it	lt
 8008944:	4618      	movlt	r0, r3
 8008946:	e734      	b.n	80087b2 <_printf_float+0xba>
 8008948:	2301      	movs	r3, #1
 800894a:	4652      	mov	r2, sl
 800894c:	4631      	mov	r1, r6
 800894e:	4628      	mov	r0, r5
 8008950:	47b8      	blx	r7
 8008952:	3001      	adds	r0, #1
 8008954:	f43f af2b 	beq.w	80087ae <_printf_float+0xb6>
 8008958:	f109 0901 	add.w	r9, r9, #1
 800895c:	e7e8      	b.n	8008930 <_printf_float+0x238>
 800895e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8008960:	2b00      	cmp	r3, #0
 8008962:	dc39      	bgt.n	80089d8 <_printf_float+0x2e0>
 8008964:	4a1b      	ldr	r2, [pc, #108]	@ (80089d4 <_printf_float+0x2dc>)
 8008966:	2301      	movs	r3, #1
 8008968:	4631      	mov	r1, r6
 800896a:	4628      	mov	r0, r5
 800896c:	47b8      	blx	r7
 800896e:	3001      	adds	r0, #1
 8008970:	f43f af1d 	beq.w	80087ae <_printf_float+0xb6>
 8008974:	e9dd 3909 	ldrd	r3, r9, [sp, #36]	@ 0x24
 8008978:	ea59 0303 	orrs.w	r3, r9, r3
 800897c:	d102      	bne.n	8008984 <_printf_float+0x28c>
 800897e:	6823      	ldr	r3, [r4, #0]
 8008980:	07d9      	lsls	r1, r3, #31
 8008982:	d5d7      	bpl.n	8008934 <_printf_float+0x23c>
 8008984:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8008988:	4631      	mov	r1, r6
 800898a:	4628      	mov	r0, r5
 800898c:	47b8      	blx	r7
 800898e:	3001      	adds	r0, #1
 8008990:	f43f af0d 	beq.w	80087ae <_printf_float+0xb6>
 8008994:	f04f 0a00 	mov.w	sl, #0
 8008998:	f104 0b1a 	add.w	fp, r4, #26
 800899c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800899e:	425b      	negs	r3, r3
 80089a0:	4553      	cmp	r3, sl
 80089a2:	dc01      	bgt.n	80089a8 <_printf_float+0x2b0>
 80089a4:	464b      	mov	r3, r9
 80089a6:	e793      	b.n	80088d0 <_printf_float+0x1d8>
 80089a8:	2301      	movs	r3, #1
 80089aa:	465a      	mov	r2, fp
 80089ac:	4631      	mov	r1, r6
 80089ae:	4628      	mov	r0, r5
 80089b0:	47b8      	blx	r7
 80089b2:	3001      	adds	r0, #1
 80089b4:	f43f aefb 	beq.w	80087ae <_printf_float+0xb6>
 80089b8:	f10a 0a01 	add.w	sl, sl, #1
 80089bc:	e7ee      	b.n	800899c <_printf_float+0x2a4>
 80089be:	bf00      	nop
 80089c0:	7fefffff 	.word	0x7fefffff
 80089c4:	0800d030 	.word	0x0800d030
 80089c8:	0800d034 	.word	0x0800d034
 80089cc:	0800d038 	.word	0x0800d038
 80089d0:	0800d03c 	.word	0x0800d03c
 80089d4:	0800d040 	.word	0x0800d040
 80089d8:	6da3      	ldr	r3, [r4, #88]	@ 0x58
 80089da:	f8dd a028 	ldr.w	sl, [sp, #40]	@ 0x28
 80089de:	4553      	cmp	r3, sl
 80089e0:	bfa8      	it	ge
 80089e2:	4653      	movge	r3, sl
 80089e4:	2b00      	cmp	r3, #0
 80089e6:	4699      	mov	r9, r3
 80089e8:	dc36      	bgt.n	8008a58 <_printf_float+0x360>
 80089ea:	f04f 0b00 	mov.w	fp, #0
 80089ee:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 80089f2:	f104 021a 	add.w	r2, r4, #26
 80089f6:	6da3      	ldr	r3, [r4, #88]	@ 0x58
 80089f8:	9306      	str	r3, [sp, #24]
 80089fa:	eba3 0309 	sub.w	r3, r3, r9
 80089fe:	455b      	cmp	r3, fp
 8008a00:	dc31      	bgt.n	8008a66 <_printf_float+0x36e>
 8008a02:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8008a04:	459a      	cmp	sl, r3
 8008a06:	dc3a      	bgt.n	8008a7e <_printf_float+0x386>
 8008a08:	6823      	ldr	r3, [r4, #0]
 8008a0a:	07da      	lsls	r2, r3, #31
 8008a0c:	d437      	bmi.n	8008a7e <_printf_float+0x386>
 8008a0e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8008a10:	ebaa 0903 	sub.w	r9, sl, r3
 8008a14:	9b06      	ldr	r3, [sp, #24]
 8008a16:	ebaa 0303 	sub.w	r3, sl, r3
 8008a1a:	4599      	cmp	r9, r3
 8008a1c:	bfa8      	it	ge
 8008a1e:	4699      	movge	r9, r3
 8008a20:	f1b9 0f00 	cmp.w	r9, #0
 8008a24:	dc33      	bgt.n	8008a8e <_printf_float+0x396>
 8008a26:	f04f 0800 	mov.w	r8, #0
 8008a2a:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 8008a2e:	f104 0b1a 	add.w	fp, r4, #26
 8008a32:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8008a34:	ebaa 0303 	sub.w	r3, sl, r3
 8008a38:	eba3 0309 	sub.w	r3, r3, r9
 8008a3c:	4543      	cmp	r3, r8
 8008a3e:	f77f af79 	ble.w	8008934 <_printf_float+0x23c>
 8008a42:	2301      	movs	r3, #1
 8008a44:	465a      	mov	r2, fp
 8008a46:	4631      	mov	r1, r6
 8008a48:	4628      	mov	r0, r5
 8008a4a:	47b8      	blx	r7
 8008a4c:	3001      	adds	r0, #1
 8008a4e:	f43f aeae 	beq.w	80087ae <_printf_float+0xb6>
 8008a52:	f108 0801 	add.w	r8, r8, #1
 8008a56:	e7ec      	b.n	8008a32 <_printf_float+0x33a>
 8008a58:	4642      	mov	r2, r8
 8008a5a:	4631      	mov	r1, r6
 8008a5c:	4628      	mov	r0, r5
 8008a5e:	47b8      	blx	r7
 8008a60:	3001      	adds	r0, #1
 8008a62:	d1c2      	bne.n	80089ea <_printf_float+0x2f2>
 8008a64:	e6a3      	b.n	80087ae <_printf_float+0xb6>
 8008a66:	2301      	movs	r3, #1
 8008a68:	4631      	mov	r1, r6
 8008a6a:	4628      	mov	r0, r5
 8008a6c:	9206      	str	r2, [sp, #24]
 8008a6e:	47b8      	blx	r7
 8008a70:	3001      	adds	r0, #1
 8008a72:	f43f ae9c 	beq.w	80087ae <_printf_float+0xb6>
 8008a76:	9a06      	ldr	r2, [sp, #24]
 8008a78:	f10b 0b01 	add.w	fp, fp, #1
 8008a7c:	e7bb      	b.n	80089f6 <_printf_float+0x2fe>
 8008a7e:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8008a82:	4631      	mov	r1, r6
 8008a84:	4628      	mov	r0, r5
 8008a86:	47b8      	blx	r7
 8008a88:	3001      	adds	r0, #1
 8008a8a:	d1c0      	bne.n	8008a0e <_printf_float+0x316>
 8008a8c:	e68f      	b.n	80087ae <_printf_float+0xb6>
 8008a8e:	9a06      	ldr	r2, [sp, #24]
 8008a90:	464b      	mov	r3, r9
 8008a92:	4442      	add	r2, r8
 8008a94:	4631      	mov	r1, r6
 8008a96:	4628      	mov	r0, r5
 8008a98:	47b8      	blx	r7
 8008a9a:	3001      	adds	r0, #1
 8008a9c:	d1c3      	bne.n	8008a26 <_printf_float+0x32e>
 8008a9e:	e686      	b.n	80087ae <_printf_float+0xb6>
 8008aa0:	f8dd a028 	ldr.w	sl, [sp, #40]	@ 0x28
 8008aa4:	f1ba 0f01 	cmp.w	sl, #1
 8008aa8:	dc01      	bgt.n	8008aae <_printf_float+0x3b6>
 8008aaa:	07db      	lsls	r3, r3, #31
 8008aac:	d536      	bpl.n	8008b1c <_printf_float+0x424>
 8008aae:	2301      	movs	r3, #1
 8008ab0:	4642      	mov	r2, r8
 8008ab2:	4631      	mov	r1, r6
 8008ab4:	4628      	mov	r0, r5
 8008ab6:	47b8      	blx	r7
 8008ab8:	3001      	adds	r0, #1
 8008aba:	f43f ae78 	beq.w	80087ae <_printf_float+0xb6>
 8008abe:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8008ac2:	4631      	mov	r1, r6
 8008ac4:	4628      	mov	r0, r5
 8008ac6:	47b8      	blx	r7
 8008ac8:	3001      	adds	r0, #1
 8008aca:	f43f ae70 	beq.w	80087ae <_printf_float+0xb6>
 8008ace:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	@ 0x48
 8008ad2:	2200      	movs	r2, #0
 8008ad4:	2300      	movs	r3, #0
 8008ad6:	f10a 3aff 	add.w	sl, sl, #4294967295
 8008ada:	f7f8 f815 	bl	8000b08 <__aeabi_dcmpeq>
 8008ade:	b9c0      	cbnz	r0, 8008b12 <_printf_float+0x41a>
 8008ae0:	4653      	mov	r3, sl
 8008ae2:	f108 0201 	add.w	r2, r8, #1
 8008ae6:	4631      	mov	r1, r6
 8008ae8:	4628      	mov	r0, r5
 8008aea:	47b8      	blx	r7
 8008aec:	3001      	adds	r0, #1
 8008aee:	d10c      	bne.n	8008b0a <_printf_float+0x412>
 8008af0:	e65d      	b.n	80087ae <_printf_float+0xb6>
 8008af2:	2301      	movs	r3, #1
 8008af4:	465a      	mov	r2, fp
 8008af6:	4631      	mov	r1, r6
 8008af8:	4628      	mov	r0, r5
 8008afa:	47b8      	blx	r7
 8008afc:	3001      	adds	r0, #1
 8008afe:	f43f ae56 	beq.w	80087ae <_printf_float+0xb6>
 8008b02:	f108 0801 	add.w	r8, r8, #1
 8008b06:	45d0      	cmp	r8, sl
 8008b08:	dbf3      	blt.n	8008af2 <_printf_float+0x3fa>
 8008b0a:	464b      	mov	r3, r9
 8008b0c:	f104 0250 	add.w	r2, r4, #80	@ 0x50
 8008b10:	e6df      	b.n	80088d2 <_printf_float+0x1da>
 8008b12:	f04f 0800 	mov.w	r8, #0
 8008b16:	f104 0b1a 	add.w	fp, r4, #26
 8008b1a:	e7f4      	b.n	8008b06 <_printf_float+0x40e>
 8008b1c:	2301      	movs	r3, #1
 8008b1e:	4642      	mov	r2, r8
 8008b20:	e7e1      	b.n	8008ae6 <_printf_float+0x3ee>
 8008b22:	2301      	movs	r3, #1
 8008b24:	464a      	mov	r2, r9
 8008b26:	4631      	mov	r1, r6
 8008b28:	4628      	mov	r0, r5
 8008b2a:	47b8      	blx	r7
 8008b2c:	3001      	adds	r0, #1
 8008b2e:	f43f ae3e 	beq.w	80087ae <_printf_float+0xb6>
 8008b32:	f108 0801 	add.w	r8, r8, #1
 8008b36:	68e3      	ldr	r3, [r4, #12]
 8008b38:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 8008b3a:	1a5b      	subs	r3, r3, r1
 8008b3c:	4543      	cmp	r3, r8
 8008b3e:	dcf0      	bgt.n	8008b22 <_printf_float+0x42a>
 8008b40:	e6fc      	b.n	800893c <_printf_float+0x244>
 8008b42:	f04f 0800 	mov.w	r8, #0
 8008b46:	f104 0919 	add.w	r9, r4, #25
 8008b4a:	e7f4      	b.n	8008b36 <_printf_float+0x43e>

08008b4c <_printf_common>:
 8008b4c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8008b50:	4616      	mov	r6, r2
 8008b52:	4698      	mov	r8, r3
 8008b54:	688a      	ldr	r2, [r1, #8]
 8008b56:	690b      	ldr	r3, [r1, #16]
 8008b58:	f8dd 9020 	ldr.w	r9, [sp, #32]
 8008b5c:	4293      	cmp	r3, r2
 8008b5e:	bfb8      	it	lt
 8008b60:	4613      	movlt	r3, r2
 8008b62:	6033      	str	r3, [r6, #0]
 8008b64:	f891 2043 	ldrb.w	r2, [r1, #67]	@ 0x43
 8008b68:	4607      	mov	r7, r0
 8008b6a:	460c      	mov	r4, r1
 8008b6c:	b10a      	cbz	r2, 8008b72 <_printf_common+0x26>
 8008b6e:	3301      	adds	r3, #1
 8008b70:	6033      	str	r3, [r6, #0]
 8008b72:	6823      	ldr	r3, [r4, #0]
 8008b74:	0699      	lsls	r1, r3, #26
 8008b76:	bf42      	ittt	mi
 8008b78:	6833      	ldrmi	r3, [r6, #0]
 8008b7a:	3302      	addmi	r3, #2
 8008b7c:	6033      	strmi	r3, [r6, #0]
 8008b7e:	6825      	ldr	r5, [r4, #0]
 8008b80:	f015 0506 	ands.w	r5, r5, #6
 8008b84:	d106      	bne.n	8008b94 <_printf_common+0x48>
 8008b86:	f104 0a19 	add.w	sl, r4, #25
 8008b8a:	68e3      	ldr	r3, [r4, #12]
 8008b8c:	6832      	ldr	r2, [r6, #0]
 8008b8e:	1a9b      	subs	r3, r3, r2
 8008b90:	42ab      	cmp	r3, r5
 8008b92:	dc26      	bgt.n	8008be2 <_printf_common+0x96>
 8008b94:	f894 3043 	ldrb.w	r3, [r4, #67]	@ 0x43
 8008b98:	6822      	ldr	r2, [r4, #0]
 8008b9a:	3b00      	subs	r3, #0
 8008b9c:	bf18      	it	ne
 8008b9e:	2301      	movne	r3, #1
 8008ba0:	0692      	lsls	r2, r2, #26
 8008ba2:	d42b      	bmi.n	8008bfc <_printf_common+0xb0>
 8008ba4:	f104 0243 	add.w	r2, r4, #67	@ 0x43
 8008ba8:	4641      	mov	r1, r8
 8008baa:	4638      	mov	r0, r7
 8008bac:	47c8      	blx	r9
 8008bae:	3001      	adds	r0, #1
 8008bb0:	d01e      	beq.n	8008bf0 <_printf_common+0xa4>
 8008bb2:	6823      	ldr	r3, [r4, #0]
 8008bb4:	6922      	ldr	r2, [r4, #16]
 8008bb6:	f003 0306 	and.w	r3, r3, #6
 8008bba:	2b04      	cmp	r3, #4
 8008bbc:	bf02      	ittt	eq
 8008bbe:	68e5      	ldreq	r5, [r4, #12]
 8008bc0:	6833      	ldreq	r3, [r6, #0]
 8008bc2:	1aed      	subeq	r5, r5, r3
 8008bc4:	68a3      	ldr	r3, [r4, #8]
 8008bc6:	bf0c      	ite	eq
 8008bc8:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8008bcc:	2500      	movne	r5, #0
 8008bce:	4293      	cmp	r3, r2
 8008bd0:	bfc4      	itt	gt
 8008bd2:	1a9b      	subgt	r3, r3, r2
 8008bd4:	18ed      	addgt	r5, r5, r3
 8008bd6:	2600      	movs	r6, #0
 8008bd8:	341a      	adds	r4, #26
 8008bda:	42b5      	cmp	r5, r6
 8008bdc:	d11a      	bne.n	8008c14 <_printf_common+0xc8>
 8008bde:	2000      	movs	r0, #0
 8008be0:	e008      	b.n	8008bf4 <_printf_common+0xa8>
 8008be2:	2301      	movs	r3, #1
 8008be4:	4652      	mov	r2, sl
 8008be6:	4641      	mov	r1, r8
 8008be8:	4638      	mov	r0, r7
 8008bea:	47c8      	blx	r9
 8008bec:	3001      	adds	r0, #1
 8008bee:	d103      	bne.n	8008bf8 <_printf_common+0xac>
 8008bf0:	f04f 30ff 	mov.w	r0, #4294967295
 8008bf4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8008bf8:	3501      	adds	r5, #1
 8008bfa:	e7c6      	b.n	8008b8a <_printf_common+0x3e>
 8008bfc:	18e1      	adds	r1, r4, r3
 8008bfe:	1c5a      	adds	r2, r3, #1
 8008c00:	2030      	movs	r0, #48	@ 0x30
 8008c02:	f881 0043 	strb.w	r0, [r1, #67]	@ 0x43
 8008c06:	4422      	add	r2, r4
 8008c08:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
 8008c0c:	f882 1043 	strb.w	r1, [r2, #67]	@ 0x43
 8008c10:	3302      	adds	r3, #2
 8008c12:	e7c7      	b.n	8008ba4 <_printf_common+0x58>
 8008c14:	2301      	movs	r3, #1
 8008c16:	4622      	mov	r2, r4
 8008c18:	4641      	mov	r1, r8
 8008c1a:	4638      	mov	r0, r7
 8008c1c:	47c8      	blx	r9
 8008c1e:	3001      	adds	r0, #1
 8008c20:	d0e6      	beq.n	8008bf0 <_printf_common+0xa4>
 8008c22:	3601      	adds	r6, #1
 8008c24:	e7d9      	b.n	8008bda <_printf_common+0x8e>
	...

08008c28 <_printf_i>:
 8008c28:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8008c2c:	7e0f      	ldrb	r7, [r1, #24]
 8008c2e:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 8008c30:	2f78      	cmp	r7, #120	@ 0x78
 8008c32:	4691      	mov	r9, r2
 8008c34:	4680      	mov	r8, r0
 8008c36:	460c      	mov	r4, r1
 8008c38:	469a      	mov	sl, r3
 8008c3a:	f101 0243 	add.w	r2, r1, #67	@ 0x43
 8008c3e:	d807      	bhi.n	8008c50 <_printf_i+0x28>
 8008c40:	2f62      	cmp	r7, #98	@ 0x62
 8008c42:	d80a      	bhi.n	8008c5a <_printf_i+0x32>
 8008c44:	2f00      	cmp	r7, #0
 8008c46:	f000 80d2 	beq.w	8008dee <_printf_i+0x1c6>
 8008c4a:	2f58      	cmp	r7, #88	@ 0x58
 8008c4c:	f000 80b9 	beq.w	8008dc2 <_printf_i+0x19a>
 8008c50:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8008c54:	f884 7042 	strb.w	r7, [r4, #66]	@ 0x42
 8008c58:	e03a      	b.n	8008cd0 <_printf_i+0xa8>
 8008c5a:	f1a7 0363 	sub.w	r3, r7, #99	@ 0x63
 8008c5e:	2b15      	cmp	r3, #21
 8008c60:	d8f6      	bhi.n	8008c50 <_printf_i+0x28>
 8008c62:	a101      	add	r1, pc, #4	@ (adr r1, 8008c68 <_printf_i+0x40>)
 8008c64:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8008c68:	08008cc1 	.word	0x08008cc1
 8008c6c:	08008cd5 	.word	0x08008cd5
 8008c70:	08008c51 	.word	0x08008c51
 8008c74:	08008c51 	.word	0x08008c51
 8008c78:	08008c51 	.word	0x08008c51
 8008c7c:	08008c51 	.word	0x08008c51
 8008c80:	08008cd5 	.word	0x08008cd5
 8008c84:	08008c51 	.word	0x08008c51
 8008c88:	08008c51 	.word	0x08008c51
 8008c8c:	08008c51 	.word	0x08008c51
 8008c90:	08008c51 	.word	0x08008c51
 8008c94:	08008dd5 	.word	0x08008dd5
 8008c98:	08008cff 	.word	0x08008cff
 8008c9c:	08008d8f 	.word	0x08008d8f
 8008ca0:	08008c51 	.word	0x08008c51
 8008ca4:	08008c51 	.word	0x08008c51
 8008ca8:	08008df7 	.word	0x08008df7
 8008cac:	08008c51 	.word	0x08008c51
 8008cb0:	08008cff 	.word	0x08008cff
 8008cb4:	08008c51 	.word	0x08008c51
 8008cb8:	08008c51 	.word	0x08008c51
 8008cbc:	08008d97 	.word	0x08008d97
 8008cc0:	6833      	ldr	r3, [r6, #0]
 8008cc2:	1d1a      	adds	r2, r3, #4
 8008cc4:	681b      	ldr	r3, [r3, #0]
 8008cc6:	6032      	str	r2, [r6, #0]
 8008cc8:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8008ccc:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 8008cd0:	2301      	movs	r3, #1
 8008cd2:	e09d      	b.n	8008e10 <_printf_i+0x1e8>
 8008cd4:	6833      	ldr	r3, [r6, #0]
 8008cd6:	6820      	ldr	r0, [r4, #0]
 8008cd8:	1d19      	adds	r1, r3, #4
 8008cda:	6031      	str	r1, [r6, #0]
 8008cdc:	0606      	lsls	r6, r0, #24
 8008cde:	d501      	bpl.n	8008ce4 <_printf_i+0xbc>
 8008ce0:	681d      	ldr	r5, [r3, #0]
 8008ce2:	e003      	b.n	8008cec <_printf_i+0xc4>
 8008ce4:	0645      	lsls	r5, r0, #25
 8008ce6:	d5fb      	bpl.n	8008ce0 <_printf_i+0xb8>
 8008ce8:	f9b3 5000 	ldrsh.w	r5, [r3]
 8008cec:	2d00      	cmp	r5, #0
 8008cee:	da03      	bge.n	8008cf8 <_printf_i+0xd0>
 8008cf0:	232d      	movs	r3, #45	@ 0x2d
 8008cf2:	426d      	negs	r5, r5
 8008cf4:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8008cf8:	4859      	ldr	r0, [pc, #356]	@ (8008e60 <_printf_i+0x238>)
 8008cfa:	230a      	movs	r3, #10
 8008cfc:	e011      	b.n	8008d22 <_printf_i+0xfa>
 8008cfe:	6821      	ldr	r1, [r4, #0]
 8008d00:	6833      	ldr	r3, [r6, #0]
 8008d02:	0608      	lsls	r0, r1, #24
 8008d04:	f853 5b04 	ldr.w	r5, [r3], #4
 8008d08:	d402      	bmi.n	8008d10 <_printf_i+0xe8>
 8008d0a:	0649      	lsls	r1, r1, #25
 8008d0c:	bf48      	it	mi
 8008d0e:	b2ad      	uxthmi	r5, r5
 8008d10:	2f6f      	cmp	r7, #111	@ 0x6f
 8008d12:	4853      	ldr	r0, [pc, #332]	@ (8008e60 <_printf_i+0x238>)
 8008d14:	6033      	str	r3, [r6, #0]
 8008d16:	bf14      	ite	ne
 8008d18:	230a      	movne	r3, #10
 8008d1a:	2308      	moveq	r3, #8
 8008d1c:	2100      	movs	r1, #0
 8008d1e:	f884 1043 	strb.w	r1, [r4, #67]	@ 0x43
 8008d22:	6866      	ldr	r6, [r4, #4]
 8008d24:	60a6      	str	r6, [r4, #8]
 8008d26:	2e00      	cmp	r6, #0
 8008d28:	bfa2      	ittt	ge
 8008d2a:	6821      	ldrge	r1, [r4, #0]
 8008d2c:	f021 0104 	bicge.w	r1, r1, #4
 8008d30:	6021      	strge	r1, [r4, #0]
 8008d32:	b90d      	cbnz	r5, 8008d38 <_printf_i+0x110>
 8008d34:	2e00      	cmp	r6, #0
 8008d36:	d04b      	beq.n	8008dd0 <_printf_i+0x1a8>
 8008d38:	4616      	mov	r6, r2
 8008d3a:	fbb5 f1f3 	udiv	r1, r5, r3
 8008d3e:	fb03 5711 	mls	r7, r3, r1, r5
 8008d42:	5dc7      	ldrb	r7, [r0, r7]
 8008d44:	f806 7d01 	strb.w	r7, [r6, #-1]!
 8008d48:	462f      	mov	r7, r5
 8008d4a:	42bb      	cmp	r3, r7
 8008d4c:	460d      	mov	r5, r1
 8008d4e:	d9f4      	bls.n	8008d3a <_printf_i+0x112>
 8008d50:	2b08      	cmp	r3, #8
 8008d52:	d10b      	bne.n	8008d6c <_printf_i+0x144>
 8008d54:	6823      	ldr	r3, [r4, #0]
 8008d56:	07df      	lsls	r7, r3, #31
 8008d58:	d508      	bpl.n	8008d6c <_printf_i+0x144>
 8008d5a:	6923      	ldr	r3, [r4, #16]
 8008d5c:	6861      	ldr	r1, [r4, #4]
 8008d5e:	4299      	cmp	r1, r3
 8008d60:	bfde      	ittt	le
 8008d62:	2330      	movle	r3, #48	@ 0x30
 8008d64:	f806 3c01 	strble.w	r3, [r6, #-1]
 8008d68:	f106 36ff 	addle.w	r6, r6, #4294967295
 8008d6c:	1b92      	subs	r2, r2, r6
 8008d6e:	6122      	str	r2, [r4, #16]
 8008d70:	f8cd a000 	str.w	sl, [sp]
 8008d74:	464b      	mov	r3, r9
 8008d76:	aa03      	add	r2, sp, #12
 8008d78:	4621      	mov	r1, r4
 8008d7a:	4640      	mov	r0, r8
 8008d7c:	f7ff fee6 	bl	8008b4c <_printf_common>
 8008d80:	3001      	adds	r0, #1
 8008d82:	d14a      	bne.n	8008e1a <_printf_i+0x1f2>
 8008d84:	f04f 30ff 	mov.w	r0, #4294967295
 8008d88:	b004      	add	sp, #16
 8008d8a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8008d8e:	6823      	ldr	r3, [r4, #0]
 8008d90:	f043 0320 	orr.w	r3, r3, #32
 8008d94:	6023      	str	r3, [r4, #0]
 8008d96:	4833      	ldr	r0, [pc, #204]	@ (8008e64 <_printf_i+0x23c>)
 8008d98:	2778      	movs	r7, #120	@ 0x78
 8008d9a:	f884 7045 	strb.w	r7, [r4, #69]	@ 0x45
 8008d9e:	6823      	ldr	r3, [r4, #0]
 8008da0:	6831      	ldr	r1, [r6, #0]
 8008da2:	061f      	lsls	r7, r3, #24
 8008da4:	f851 5b04 	ldr.w	r5, [r1], #4
 8008da8:	d402      	bmi.n	8008db0 <_printf_i+0x188>
 8008daa:	065f      	lsls	r7, r3, #25
 8008dac:	bf48      	it	mi
 8008dae:	b2ad      	uxthmi	r5, r5
 8008db0:	6031      	str	r1, [r6, #0]
 8008db2:	07d9      	lsls	r1, r3, #31
 8008db4:	bf44      	itt	mi
 8008db6:	f043 0320 	orrmi.w	r3, r3, #32
 8008dba:	6023      	strmi	r3, [r4, #0]
 8008dbc:	b11d      	cbz	r5, 8008dc6 <_printf_i+0x19e>
 8008dbe:	2310      	movs	r3, #16
 8008dc0:	e7ac      	b.n	8008d1c <_printf_i+0xf4>
 8008dc2:	4827      	ldr	r0, [pc, #156]	@ (8008e60 <_printf_i+0x238>)
 8008dc4:	e7e9      	b.n	8008d9a <_printf_i+0x172>
 8008dc6:	6823      	ldr	r3, [r4, #0]
 8008dc8:	f023 0320 	bic.w	r3, r3, #32
 8008dcc:	6023      	str	r3, [r4, #0]
 8008dce:	e7f6      	b.n	8008dbe <_printf_i+0x196>
 8008dd0:	4616      	mov	r6, r2
 8008dd2:	e7bd      	b.n	8008d50 <_printf_i+0x128>
 8008dd4:	6833      	ldr	r3, [r6, #0]
 8008dd6:	6825      	ldr	r5, [r4, #0]
 8008dd8:	6961      	ldr	r1, [r4, #20]
 8008dda:	1d18      	adds	r0, r3, #4
 8008ddc:	6030      	str	r0, [r6, #0]
 8008dde:	062e      	lsls	r6, r5, #24
 8008de0:	681b      	ldr	r3, [r3, #0]
 8008de2:	d501      	bpl.n	8008de8 <_printf_i+0x1c0>
 8008de4:	6019      	str	r1, [r3, #0]
 8008de6:	e002      	b.n	8008dee <_printf_i+0x1c6>
 8008de8:	0668      	lsls	r0, r5, #25
 8008dea:	d5fb      	bpl.n	8008de4 <_printf_i+0x1bc>
 8008dec:	8019      	strh	r1, [r3, #0]
 8008dee:	2300      	movs	r3, #0
 8008df0:	6123      	str	r3, [r4, #16]
 8008df2:	4616      	mov	r6, r2
 8008df4:	e7bc      	b.n	8008d70 <_printf_i+0x148>
 8008df6:	6833      	ldr	r3, [r6, #0]
 8008df8:	1d1a      	adds	r2, r3, #4
 8008dfa:	6032      	str	r2, [r6, #0]
 8008dfc:	681e      	ldr	r6, [r3, #0]
 8008dfe:	6862      	ldr	r2, [r4, #4]
 8008e00:	2100      	movs	r1, #0
 8008e02:	4630      	mov	r0, r6
 8008e04:	f7f7 fa04 	bl	8000210 <memchr>
 8008e08:	b108      	cbz	r0, 8008e0e <_printf_i+0x1e6>
 8008e0a:	1b80      	subs	r0, r0, r6
 8008e0c:	6060      	str	r0, [r4, #4]
 8008e0e:	6863      	ldr	r3, [r4, #4]
 8008e10:	6123      	str	r3, [r4, #16]
 8008e12:	2300      	movs	r3, #0
 8008e14:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8008e18:	e7aa      	b.n	8008d70 <_printf_i+0x148>
 8008e1a:	6923      	ldr	r3, [r4, #16]
 8008e1c:	4632      	mov	r2, r6
 8008e1e:	4649      	mov	r1, r9
 8008e20:	4640      	mov	r0, r8
 8008e22:	47d0      	blx	sl
 8008e24:	3001      	adds	r0, #1
 8008e26:	d0ad      	beq.n	8008d84 <_printf_i+0x15c>
 8008e28:	6823      	ldr	r3, [r4, #0]
 8008e2a:	079b      	lsls	r3, r3, #30
 8008e2c:	d413      	bmi.n	8008e56 <_printf_i+0x22e>
 8008e2e:	68e0      	ldr	r0, [r4, #12]
 8008e30:	9b03      	ldr	r3, [sp, #12]
 8008e32:	4298      	cmp	r0, r3
 8008e34:	bfb8      	it	lt
 8008e36:	4618      	movlt	r0, r3
 8008e38:	e7a6      	b.n	8008d88 <_printf_i+0x160>
 8008e3a:	2301      	movs	r3, #1
 8008e3c:	4632      	mov	r2, r6
 8008e3e:	4649      	mov	r1, r9
 8008e40:	4640      	mov	r0, r8
 8008e42:	47d0      	blx	sl
 8008e44:	3001      	adds	r0, #1
 8008e46:	d09d      	beq.n	8008d84 <_printf_i+0x15c>
 8008e48:	3501      	adds	r5, #1
 8008e4a:	68e3      	ldr	r3, [r4, #12]
 8008e4c:	9903      	ldr	r1, [sp, #12]
 8008e4e:	1a5b      	subs	r3, r3, r1
 8008e50:	42ab      	cmp	r3, r5
 8008e52:	dcf2      	bgt.n	8008e3a <_printf_i+0x212>
 8008e54:	e7eb      	b.n	8008e2e <_printf_i+0x206>
 8008e56:	2500      	movs	r5, #0
 8008e58:	f104 0619 	add.w	r6, r4, #25
 8008e5c:	e7f5      	b.n	8008e4a <_printf_i+0x222>
 8008e5e:	bf00      	nop
 8008e60:	0800d042 	.word	0x0800d042
 8008e64:	0800d053 	.word	0x0800d053

08008e68 <_scanf_float>:
 8008e68:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8008e6c:	b087      	sub	sp, #28
 8008e6e:	4617      	mov	r7, r2
 8008e70:	9303      	str	r3, [sp, #12]
 8008e72:	688b      	ldr	r3, [r1, #8]
 8008e74:	1e5a      	subs	r2, r3, #1
 8008e76:	f5b2 7fae 	cmp.w	r2, #348	@ 0x15c
 8008e7a:	bf81      	itttt	hi
 8008e7c:	f46f 75ae 	mvnhi.w	r5, #348	@ 0x15c
 8008e80:	eb03 0b05 	addhi.w	fp, r3, r5
 8008e84:	f240 135d 	movwhi	r3, #349	@ 0x15d
 8008e88:	608b      	strhi	r3, [r1, #8]
 8008e8a:	680b      	ldr	r3, [r1, #0]
 8008e8c:	460a      	mov	r2, r1
 8008e8e:	f04f 0500 	mov.w	r5, #0
 8008e92:	f443 63f0 	orr.w	r3, r3, #1920	@ 0x780
 8008e96:	f842 3b1c 	str.w	r3, [r2], #28
 8008e9a:	e9cd 5504 	strd	r5, r5, [sp, #16]
 8008e9e:	4680      	mov	r8, r0
 8008ea0:	460c      	mov	r4, r1
 8008ea2:	bf98      	it	ls
 8008ea4:	f04f 0b00 	movls.w	fp, #0
 8008ea8:	9201      	str	r2, [sp, #4]
 8008eaa:	4616      	mov	r6, r2
 8008eac:	46aa      	mov	sl, r5
 8008eae:	46a9      	mov	r9, r5
 8008eb0:	9502      	str	r5, [sp, #8]
 8008eb2:	68a2      	ldr	r2, [r4, #8]
 8008eb4:	b152      	cbz	r2, 8008ecc <_scanf_float+0x64>
 8008eb6:	683b      	ldr	r3, [r7, #0]
 8008eb8:	781b      	ldrb	r3, [r3, #0]
 8008eba:	2b4e      	cmp	r3, #78	@ 0x4e
 8008ebc:	d864      	bhi.n	8008f88 <_scanf_float+0x120>
 8008ebe:	2b40      	cmp	r3, #64	@ 0x40
 8008ec0:	d83c      	bhi.n	8008f3c <_scanf_float+0xd4>
 8008ec2:	f1a3 012b 	sub.w	r1, r3, #43	@ 0x2b
 8008ec6:	b2c8      	uxtb	r0, r1
 8008ec8:	280e      	cmp	r0, #14
 8008eca:	d93a      	bls.n	8008f42 <_scanf_float+0xda>
 8008ecc:	f1b9 0f00 	cmp.w	r9, #0
 8008ed0:	d003      	beq.n	8008eda <_scanf_float+0x72>
 8008ed2:	6823      	ldr	r3, [r4, #0]
 8008ed4:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 8008ed8:	6023      	str	r3, [r4, #0]
 8008eda:	f10a 3aff 	add.w	sl, sl, #4294967295
 8008ede:	f1ba 0f01 	cmp.w	sl, #1
 8008ee2:	f200 8117 	bhi.w	8009114 <_scanf_float+0x2ac>
 8008ee6:	9b01      	ldr	r3, [sp, #4]
 8008ee8:	429e      	cmp	r6, r3
 8008eea:	f200 8108 	bhi.w	80090fe <_scanf_float+0x296>
 8008eee:	2001      	movs	r0, #1
 8008ef0:	b007      	add	sp, #28
 8008ef2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8008ef6:	f1a3 0261 	sub.w	r2, r3, #97	@ 0x61
 8008efa:	2a0d      	cmp	r2, #13
 8008efc:	d8e6      	bhi.n	8008ecc <_scanf_float+0x64>
 8008efe:	a101      	add	r1, pc, #4	@ (adr r1, 8008f04 <_scanf_float+0x9c>)
 8008f00:	f851 f022 	ldr.w	pc, [r1, r2, lsl #2]
 8008f04:	0800904b 	.word	0x0800904b
 8008f08:	08008ecd 	.word	0x08008ecd
 8008f0c:	08008ecd 	.word	0x08008ecd
 8008f10:	08008ecd 	.word	0x08008ecd
 8008f14:	080090ab 	.word	0x080090ab
 8008f18:	08009083 	.word	0x08009083
 8008f1c:	08008ecd 	.word	0x08008ecd
 8008f20:	08008ecd 	.word	0x08008ecd
 8008f24:	08009059 	.word	0x08009059
 8008f28:	08008ecd 	.word	0x08008ecd
 8008f2c:	08008ecd 	.word	0x08008ecd
 8008f30:	08008ecd 	.word	0x08008ecd
 8008f34:	08008ecd 	.word	0x08008ecd
 8008f38:	08009011 	.word	0x08009011
 8008f3c:	f1a3 0241 	sub.w	r2, r3, #65	@ 0x41
 8008f40:	e7db      	b.n	8008efa <_scanf_float+0x92>
 8008f42:	290e      	cmp	r1, #14
 8008f44:	d8c2      	bhi.n	8008ecc <_scanf_float+0x64>
 8008f46:	a001      	add	r0, pc, #4	@ (adr r0, 8008f4c <_scanf_float+0xe4>)
 8008f48:	f850 f021 	ldr.w	pc, [r0, r1, lsl #2]
 8008f4c:	08009001 	.word	0x08009001
 8008f50:	08008ecd 	.word	0x08008ecd
 8008f54:	08009001 	.word	0x08009001
 8008f58:	08009097 	.word	0x08009097
 8008f5c:	08008ecd 	.word	0x08008ecd
 8008f60:	08008fa9 	.word	0x08008fa9
 8008f64:	08008fe7 	.word	0x08008fe7
 8008f68:	08008fe7 	.word	0x08008fe7
 8008f6c:	08008fe7 	.word	0x08008fe7
 8008f70:	08008fe7 	.word	0x08008fe7
 8008f74:	08008fe7 	.word	0x08008fe7
 8008f78:	08008fe7 	.word	0x08008fe7
 8008f7c:	08008fe7 	.word	0x08008fe7
 8008f80:	08008fe7 	.word	0x08008fe7
 8008f84:	08008fe7 	.word	0x08008fe7
 8008f88:	2b6e      	cmp	r3, #110	@ 0x6e
 8008f8a:	d809      	bhi.n	8008fa0 <_scanf_float+0x138>
 8008f8c:	2b60      	cmp	r3, #96	@ 0x60
 8008f8e:	d8b2      	bhi.n	8008ef6 <_scanf_float+0x8e>
 8008f90:	2b54      	cmp	r3, #84	@ 0x54
 8008f92:	d07b      	beq.n	800908c <_scanf_float+0x224>
 8008f94:	2b59      	cmp	r3, #89	@ 0x59
 8008f96:	d199      	bne.n	8008ecc <_scanf_float+0x64>
 8008f98:	2d07      	cmp	r5, #7
 8008f9a:	d197      	bne.n	8008ecc <_scanf_float+0x64>
 8008f9c:	2508      	movs	r5, #8
 8008f9e:	e02c      	b.n	8008ffa <_scanf_float+0x192>
 8008fa0:	2b74      	cmp	r3, #116	@ 0x74
 8008fa2:	d073      	beq.n	800908c <_scanf_float+0x224>
 8008fa4:	2b79      	cmp	r3, #121	@ 0x79
 8008fa6:	e7f6      	b.n	8008f96 <_scanf_float+0x12e>
 8008fa8:	6821      	ldr	r1, [r4, #0]
 8008faa:	05c8      	lsls	r0, r1, #23
 8008fac:	d51b      	bpl.n	8008fe6 <_scanf_float+0x17e>
 8008fae:	f021 0180 	bic.w	r1, r1, #128	@ 0x80
 8008fb2:	6021      	str	r1, [r4, #0]
 8008fb4:	f109 0901 	add.w	r9, r9, #1
 8008fb8:	f1bb 0f00 	cmp.w	fp, #0
 8008fbc:	d003      	beq.n	8008fc6 <_scanf_float+0x15e>
 8008fbe:	3201      	adds	r2, #1
 8008fc0:	f10b 3bff 	add.w	fp, fp, #4294967295
 8008fc4:	60a2      	str	r2, [r4, #8]
 8008fc6:	68a3      	ldr	r3, [r4, #8]
 8008fc8:	3b01      	subs	r3, #1
 8008fca:	60a3      	str	r3, [r4, #8]
 8008fcc:	6923      	ldr	r3, [r4, #16]
 8008fce:	3301      	adds	r3, #1
 8008fd0:	6123      	str	r3, [r4, #16]
 8008fd2:	687b      	ldr	r3, [r7, #4]
 8008fd4:	3b01      	subs	r3, #1
 8008fd6:	2b00      	cmp	r3, #0
 8008fd8:	607b      	str	r3, [r7, #4]
 8008fda:	f340 8087 	ble.w	80090ec <_scanf_float+0x284>
 8008fde:	683b      	ldr	r3, [r7, #0]
 8008fe0:	3301      	adds	r3, #1
 8008fe2:	603b      	str	r3, [r7, #0]
 8008fe4:	e765      	b.n	8008eb2 <_scanf_float+0x4a>
 8008fe6:	eb1a 0105 	adds.w	r1, sl, r5
 8008fea:	f47f af6f 	bne.w	8008ecc <_scanf_float+0x64>
 8008fee:	6822      	ldr	r2, [r4, #0]
 8008ff0:	f422 72c0 	bic.w	r2, r2, #384	@ 0x180
 8008ff4:	6022      	str	r2, [r4, #0]
 8008ff6:	460d      	mov	r5, r1
 8008ff8:	468a      	mov	sl, r1
 8008ffa:	f806 3b01 	strb.w	r3, [r6], #1
 8008ffe:	e7e2      	b.n	8008fc6 <_scanf_float+0x15e>
 8009000:	6822      	ldr	r2, [r4, #0]
 8009002:	0610      	lsls	r0, r2, #24
 8009004:	f57f af62 	bpl.w	8008ecc <_scanf_float+0x64>
 8009008:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
 800900c:	6022      	str	r2, [r4, #0]
 800900e:	e7f4      	b.n	8008ffa <_scanf_float+0x192>
 8009010:	f1ba 0f00 	cmp.w	sl, #0
 8009014:	d10e      	bne.n	8009034 <_scanf_float+0x1cc>
 8009016:	f1b9 0f00 	cmp.w	r9, #0
 800901a:	d10e      	bne.n	800903a <_scanf_float+0x1d2>
 800901c:	6822      	ldr	r2, [r4, #0]
 800901e:	f402 61e0 	and.w	r1, r2, #1792	@ 0x700
 8009022:	f5b1 6fe0 	cmp.w	r1, #1792	@ 0x700
 8009026:	d108      	bne.n	800903a <_scanf_float+0x1d2>
 8009028:	f422 62f0 	bic.w	r2, r2, #1920	@ 0x780
 800902c:	6022      	str	r2, [r4, #0]
 800902e:	f04f 0a01 	mov.w	sl, #1
 8009032:	e7e2      	b.n	8008ffa <_scanf_float+0x192>
 8009034:	f1ba 0f02 	cmp.w	sl, #2
 8009038:	d055      	beq.n	80090e6 <_scanf_float+0x27e>
 800903a:	2d01      	cmp	r5, #1
 800903c:	d002      	beq.n	8009044 <_scanf_float+0x1dc>
 800903e:	2d04      	cmp	r5, #4
 8009040:	f47f af44 	bne.w	8008ecc <_scanf_float+0x64>
 8009044:	3501      	adds	r5, #1
 8009046:	b2ed      	uxtb	r5, r5
 8009048:	e7d7      	b.n	8008ffa <_scanf_float+0x192>
 800904a:	f1ba 0f01 	cmp.w	sl, #1
 800904e:	f47f af3d 	bne.w	8008ecc <_scanf_float+0x64>
 8009052:	f04f 0a02 	mov.w	sl, #2
 8009056:	e7d0      	b.n	8008ffa <_scanf_float+0x192>
 8009058:	b97d      	cbnz	r5, 800907a <_scanf_float+0x212>
 800905a:	f1b9 0f00 	cmp.w	r9, #0
 800905e:	f47f af38 	bne.w	8008ed2 <_scanf_float+0x6a>
 8009062:	6822      	ldr	r2, [r4, #0]
 8009064:	f402 61e0 	and.w	r1, r2, #1792	@ 0x700
 8009068:	f5b1 6fe0 	cmp.w	r1, #1792	@ 0x700
 800906c:	f040 8108 	bne.w	8009280 <_scanf_float+0x418>
 8009070:	f422 62f0 	bic.w	r2, r2, #1920	@ 0x780
 8009074:	6022      	str	r2, [r4, #0]
 8009076:	2501      	movs	r5, #1
 8009078:	e7bf      	b.n	8008ffa <_scanf_float+0x192>
 800907a:	2d03      	cmp	r5, #3
 800907c:	d0e2      	beq.n	8009044 <_scanf_float+0x1dc>
 800907e:	2d05      	cmp	r5, #5
 8009080:	e7de      	b.n	8009040 <_scanf_float+0x1d8>
 8009082:	2d02      	cmp	r5, #2
 8009084:	f47f af22 	bne.w	8008ecc <_scanf_float+0x64>
 8009088:	2503      	movs	r5, #3
 800908a:	e7b6      	b.n	8008ffa <_scanf_float+0x192>
 800908c:	2d06      	cmp	r5, #6
 800908e:	f47f af1d 	bne.w	8008ecc <_scanf_float+0x64>
 8009092:	2507      	movs	r5, #7
 8009094:	e7b1      	b.n	8008ffa <_scanf_float+0x192>
 8009096:	6822      	ldr	r2, [r4, #0]
 8009098:	0591      	lsls	r1, r2, #22
 800909a:	f57f af17 	bpl.w	8008ecc <_scanf_float+0x64>
 800909e:	f422 7220 	bic.w	r2, r2, #640	@ 0x280
 80090a2:	6022      	str	r2, [r4, #0]
 80090a4:	f8cd 9008 	str.w	r9, [sp, #8]
 80090a8:	e7a7      	b.n	8008ffa <_scanf_float+0x192>
 80090aa:	6822      	ldr	r2, [r4, #0]
 80090ac:	f402 61a0 	and.w	r1, r2, #1280	@ 0x500
 80090b0:	f5b1 6f80 	cmp.w	r1, #1024	@ 0x400
 80090b4:	d006      	beq.n	80090c4 <_scanf_float+0x25c>
 80090b6:	0550      	lsls	r0, r2, #21
 80090b8:	f57f af08 	bpl.w	8008ecc <_scanf_float+0x64>
 80090bc:	f1b9 0f00 	cmp.w	r9, #0
 80090c0:	f000 80de 	beq.w	8009280 <_scanf_float+0x418>
 80090c4:	0591      	lsls	r1, r2, #22
 80090c6:	bf58      	it	pl
 80090c8:	9902      	ldrpl	r1, [sp, #8]
 80090ca:	f422 62f0 	bic.w	r2, r2, #1920	@ 0x780
 80090ce:	bf58      	it	pl
 80090d0:	eba9 0101 	subpl.w	r1, r9, r1
 80090d4:	f442 72c0 	orr.w	r2, r2, #384	@ 0x180
 80090d8:	bf58      	it	pl
 80090da:	e9cd 1604 	strdpl	r1, r6, [sp, #16]
 80090de:	6022      	str	r2, [r4, #0]
 80090e0:	f04f 0900 	mov.w	r9, #0
 80090e4:	e789      	b.n	8008ffa <_scanf_float+0x192>
 80090e6:	f04f 0a03 	mov.w	sl, #3
 80090ea:	e786      	b.n	8008ffa <_scanf_float+0x192>
 80090ec:	f8d4 3180 	ldr.w	r3, [r4, #384]	@ 0x180
 80090f0:	4639      	mov	r1, r7
 80090f2:	4640      	mov	r0, r8
 80090f4:	4798      	blx	r3
 80090f6:	2800      	cmp	r0, #0
 80090f8:	f43f aedb 	beq.w	8008eb2 <_scanf_float+0x4a>
 80090fc:	e6e6      	b.n	8008ecc <_scanf_float+0x64>
 80090fe:	f8d4 317c 	ldr.w	r3, [r4, #380]	@ 0x17c
 8009102:	f816 1d01 	ldrb.w	r1, [r6, #-1]!
 8009106:	463a      	mov	r2, r7
 8009108:	4640      	mov	r0, r8
 800910a:	4798      	blx	r3
 800910c:	6923      	ldr	r3, [r4, #16]
 800910e:	3b01      	subs	r3, #1
 8009110:	6123      	str	r3, [r4, #16]
 8009112:	e6e8      	b.n	8008ee6 <_scanf_float+0x7e>
 8009114:	1e6b      	subs	r3, r5, #1
 8009116:	2b06      	cmp	r3, #6
 8009118:	d824      	bhi.n	8009164 <_scanf_float+0x2fc>
 800911a:	2d02      	cmp	r5, #2
 800911c:	d836      	bhi.n	800918c <_scanf_float+0x324>
 800911e:	9b01      	ldr	r3, [sp, #4]
 8009120:	429e      	cmp	r6, r3
 8009122:	f67f aee4 	bls.w	8008eee <_scanf_float+0x86>
 8009126:	f8d4 317c 	ldr.w	r3, [r4, #380]	@ 0x17c
 800912a:	f816 1d01 	ldrb.w	r1, [r6, #-1]!
 800912e:	463a      	mov	r2, r7
 8009130:	4640      	mov	r0, r8
 8009132:	4798      	blx	r3
 8009134:	6923      	ldr	r3, [r4, #16]
 8009136:	3b01      	subs	r3, #1
 8009138:	6123      	str	r3, [r4, #16]
 800913a:	e7f0      	b.n	800911e <_scanf_float+0x2b6>
 800913c:	f8d4 317c 	ldr.w	r3, [r4, #380]	@ 0x17c
 8009140:	f81b 1d01 	ldrb.w	r1, [fp, #-1]!
 8009144:	463a      	mov	r2, r7
 8009146:	4640      	mov	r0, r8
 8009148:	4798      	blx	r3
 800914a:	6923      	ldr	r3, [r4, #16]
 800914c:	3b01      	subs	r3, #1
 800914e:	6123      	str	r3, [r4, #16]
 8009150:	f10a 3aff 	add.w	sl, sl, #4294967295
 8009154:	fa5f fa8a 	uxtb.w	sl, sl
 8009158:	f1ba 0f02 	cmp.w	sl, #2
 800915c:	d1ee      	bne.n	800913c <_scanf_float+0x2d4>
 800915e:	3d03      	subs	r5, #3
 8009160:	b2ed      	uxtb	r5, r5
 8009162:	1b76      	subs	r6, r6, r5
 8009164:	6823      	ldr	r3, [r4, #0]
 8009166:	05da      	lsls	r2, r3, #23
 8009168:	d530      	bpl.n	80091cc <_scanf_float+0x364>
 800916a:	055b      	lsls	r3, r3, #21
 800916c:	d511      	bpl.n	8009192 <_scanf_float+0x32a>
 800916e:	9b01      	ldr	r3, [sp, #4]
 8009170:	429e      	cmp	r6, r3
 8009172:	f67f aebc 	bls.w	8008eee <_scanf_float+0x86>
 8009176:	f8d4 317c 	ldr.w	r3, [r4, #380]	@ 0x17c
 800917a:	f816 1d01 	ldrb.w	r1, [r6, #-1]!
 800917e:	463a      	mov	r2, r7
 8009180:	4640      	mov	r0, r8
 8009182:	4798      	blx	r3
 8009184:	6923      	ldr	r3, [r4, #16]
 8009186:	3b01      	subs	r3, #1
 8009188:	6123      	str	r3, [r4, #16]
 800918a:	e7f0      	b.n	800916e <_scanf_float+0x306>
 800918c:	46aa      	mov	sl, r5
 800918e:	46b3      	mov	fp, r6
 8009190:	e7de      	b.n	8009150 <_scanf_float+0x2e8>
 8009192:	f816 1c01 	ldrb.w	r1, [r6, #-1]
 8009196:	6923      	ldr	r3, [r4, #16]
 8009198:	2965      	cmp	r1, #101	@ 0x65
 800919a:	f103 33ff 	add.w	r3, r3, #4294967295
 800919e:	f106 35ff 	add.w	r5, r6, #4294967295
 80091a2:	6123      	str	r3, [r4, #16]
 80091a4:	d00c      	beq.n	80091c0 <_scanf_float+0x358>
 80091a6:	2945      	cmp	r1, #69	@ 0x45
 80091a8:	d00a      	beq.n	80091c0 <_scanf_float+0x358>
 80091aa:	f8d4 317c 	ldr.w	r3, [r4, #380]	@ 0x17c
 80091ae:	463a      	mov	r2, r7
 80091b0:	4640      	mov	r0, r8
 80091b2:	4798      	blx	r3
 80091b4:	6923      	ldr	r3, [r4, #16]
 80091b6:	f816 1c02 	ldrb.w	r1, [r6, #-2]
 80091ba:	3b01      	subs	r3, #1
 80091bc:	1eb5      	subs	r5, r6, #2
 80091be:	6123      	str	r3, [r4, #16]
 80091c0:	f8d4 317c 	ldr.w	r3, [r4, #380]	@ 0x17c
 80091c4:	463a      	mov	r2, r7
 80091c6:	4640      	mov	r0, r8
 80091c8:	4798      	blx	r3
 80091ca:	462e      	mov	r6, r5
 80091cc:	6822      	ldr	r2, [r4, #0]
 80091ce:	f012 0210 	ands.w	r2, r2, #16
 80091d2:	d001      	beq.n	80091d8 <_scanf_float+0x370>
 80091d4:	2000      	movs	r0, #0
 80091d6:	e68b      	b.n	8008ef0 <_scanf_float+0x88>
 80091d8:	7032      	strb	r2, [r6, #0]
 80091da:	6823      	ldr	r3, [r4, #0]
 80091dc:	f403 63c0 	and.w	r3, r3, #1536	@ 0x600
 80091e0:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 80091e4:	d11c      	bne.n	8009220 <_scanf_float+0x3b8>
 80091e6:	9b02      	ldr	r3, [sp, #8]
 80091e8:	454b      	cmp	r3, r9
 80091ea:	eba3 0209 	sub.w	r2, r3, r9
 80091ee:	d123      	bne.n	8009238 <_scanf_float+0x3d0>
 80091f0:	9901      	ldr	r1, [sp, #4]
 80091f2:	2200      	movs	r2, #0
 80091f4:	4640      	mov	r0, r8
 80091f6:	f002 fd0b 	bl	800bc10 <_strtod_r>
 80091fa:	9b03      	ldr	r3, [sp, #12]
 80091fc:	6821      	ldr	r1, [r4, #0]
 80091fe:	681b      	ldr	r3, [r3, #0]
 8009200:	f011 0f02 	tst.w	r1, #2
 8009204:	ec57 6b10 	vmov	r6, r7, d0
 8009208:	f103 0204 	add.w	r2, r3, #4
 800920c:	d01f      	beq.n	800924e <_scanf_float+0x3e6>
 800920e:	9903      	ldr	r1, [sp, #12]
 8009210:	600a      	str	r2, [r1, #0]
 8009212:	681b      	ldr	r3, [r3, #0]
 8009214:	e9c3 6700 	strd	r6, r7, [r3]
 8009218:	68e3      	ldr	r3, [r4, #12]
 800921a:	3301      	adds	r3, #1
 800921c:	60e3      	str	r3, [r4, #12]
 800921e:	e7d9      	b.n	80091d4 <_scanf_float+0x36c>
 8009220:	9b04      	ldr	r3, [sp, #16]
 8009222:	2b00      	cmp	r3, #0
 8009224:	d0e4      	beq.n	80091f0 <_scanf_float+0x388>
 8009226:	9905      	ldr	r1, [sp, #20]
 8009228:	230a      	movs	r3, #10
 800922a:	3101      	adds	r1, #1
 800922c:	4640      	mov	r0, r8
 800922e:	f002 fd6f 	bl	800bd10 <_strtol_r>
 8009232:	9b04      	ldr	r3, [sp, #16]
 8009234:	9e05      	ldr	r6, [sp, #20]
 8009236:	1ac2      	subs	r2, r0, r3
 8009238:	f204 136f 	addw	r3, r4, #367	@ 0x16f
 800923c:	429e      	cmp	r6, r3
 800923e:	bf28      	it	cs
 8009240:	f504 76b7 	addcs.w	r6, r4, #366	@ 0x16e
 8009244:	4910      	ldr	r1, [pc, #64]	@ (8009288 <_scanf_float+0x420>)
 8009246:	4630      	mov	r0, r6
 8009248:	f000 f954 	bl	80094f4 <siprintf>
 800924c:	e7d0      	b.n	80091f0 <_scanf_float+0x388>
 800924e:	f011 0f04 	tst.w	r1, #4
 8009252:	9903      	ldr	r1, [sp, #12]
 8009254:	600a      	str	r2, [r1, #0]
 8009256:	d1dc      	bne.n	8009212 <_scanf_float+0x3aa>
 8009258:	681d      	ldr	r5, [r3, #0]
 800925a:	4632      	mov	r2, r6
 800925c:	463b      	mov	r3, r7
 800925e:	4630      	mov	r0, r6
 8009260:	4639      	mov	r1, r7
 8009262:	f7f7 fc83 	bl	8000b6c <__aeabi_dcmpun>
 8009266:	b128      	cbz	r0, 8009274 <_scanf_float+0x40c>
 8009268:	4808      	ldr	r0, [pc, #32]	@ (800928c <_scanf_float+0x424>)
 800926a:	f000 fac9 	bl	8009800 <nanf>
 800926e:	ed85 0a00 	vstr	s0, [r5]
 8009272:	e7d1      	b.n	8009218 <_scanf_float+0x3b0>
 8009274:	4630      	mov	r0, r6
 8009276:	4639      	mov	r1, r7
 8009278:	f7f7 fcd6 	bl	8000c28 <__aeabi_d2f>
 800927c:	6028      	str	r0, [r5, #0]
 800927e:	e7cb      	b.n	8009218 <_scanf_float+0x3b0>
 8009280:	f04f 0900 	mov.w	r9, #0
 8009284:	e629      	b.n	8008eda <_scanf_float+0x72>
 8009286:	bf00      	nop
 8009288:	0800d064 	.word	0x0800d064
 800928c:	0800d3fd 	.word	0x0800d3fd

08009290 <std>:
 8009290:	2300      	movs	r3, #0
 8009292:	b510      	push	{r4, lr}
 8009294:	4604      	mov	r4, r0
 8009296:	e9c0 3300 	strd	r3, r3, [r0]
 800929a:	e9c0 3304 	strd	r3, r3, [r0, #16]
 800929e:	6083      	str	r3, [r0, #8]
 80092a0:	8181      	strh	r1, [r0, #12]
 80092a2:	6643      	str	r3, [r0, #100]	@ 0x64
 80092a4:	81c2      	strh	r2, [r0, #14]
 80092a6:	6183      	str	r3, [r0, #24]
 80092a8:	4619      	mov	r1, r3
 80092aa:	2208      	movs	r2, #8
 80092ac:	305c      	adds	r0, #92	@ 0x5c
 80092ae:	f000 fa19 	bl	80096e4 <memset>
 80092b2:	4b0d      	ldr	r3, [pc, #52]	@ (80092e8 <std+0x58>)
 80092b4:	6263      	str	r3, [r4, #36]	@ 0x24
 80092b6:	4b0d      	ldr	r3, [pc, #52]	@ (80092ec <std+0x5c>)
 80092b8:	62a3      	str	r3, [r4, #40]	@ 0x28
 80092ba:	4b0d      	ldr	r3, [pc, #52]	@ (80092f0 <std+0x60>)
 80092bc:	62e3      	str	r3, [r4, #44]	@ 0x2c
 80092be:	4b0d      	ldr	r3, [pc, #52]	@ (80092f4 <std+0x64>)
 80092c0:	6323      	str	r3, [r4, #48]	@ 0x30
 80092c2:	4b0d      	ldr	r3, [pc, #52]	@ (80092f8 <std+0x68>)
 80092c4:	6224      	str	r4, [r4, #32]
 80092c6:	429c      	cmp	r4, r3
 80092c8:	d006      	beq.n	80092d8 <std+0x48>
 80092ca:	f103 0268 	add.w	r2, r3, #104	@ 0x68
 80092ce:	4294      	cmp	r4, r2
 80092d0:	d002      	beq.n	80092d8 <std+0x48>
 80092d2:	33d0      	adds	r3, #208	@ 0xd0
 80092d4:	429c      	cmp	r4, r3
 80092d6:	d105      	bne.n	80092e4 <std+0x54>
 80092d8:	f104 0058 	add.w	r0, r4, #88	@ 0x58
 80092dc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80092e0:	f000 ba7c 	b.w	80097dc <__retarget_lock_init_recursive>
 80092e4:	bd10      	pop	{r4, pc}
 80092e6:	bf00      	nop
 80092e8:	08009535 	.word	0x08009535
 80092ec:	08009557 	.word	0x08009557
 80092f0:	0800958f 	.word	0x0800958f
 80092f4:	080095b3 	.word	0x080095b3
 80092f8:	200006b4 	.word	0x200006b4

080092fc <stdio_exit_handler>:
 80092fc:	4a02      	ldr	r2, [pc, #8]	@ (8009308 <stdio_exit_handler+0xc>)
 80092fe:	4903      	ldr	r1, [pc, #12]	@ (800930c <stdio_exit_handler+0x10>)
 8009300:	4803      	ldr	r0, [pc, #12]	@ (8009310 <stdio_exit_handler+0x14>)
 8009302:	f000 b869 	b.w	80093d8 <_fwalk_sglue>
 8009306:	bf00      	nop
 8009308:	20000034 	.word	0x20000034
 800930c:	0800c351 	.word	0x0800c351
 8009310:	20000044 	.word	0x20000044

08009314 <cleanup_stdio>:
 8009314:	6841      	ldr	r1, [r0, #4]
 8009316:	4b0c      	ldr	r3, [pc, #48]	@ (8009348 <cleanup_stdio+0x34>)
 8009318:	4299      	cmp	r1, r3
 800931a:	b510      	push	{r4, lr}
 800931c:	4604      	mov	r4, r0
 800931e:	d001      	beq.n	8009324 <cleanup_stdio+0x10>
 8009320:	f003 f816 	bl	800c350 <_fflush_r>
 8009324:	68a1      	ldr	r1, [r4, #8]
 8009326:	4b09      	ldr	r3, [pc, #36]	@ (800934c <cleanup_stdio+0x38>)
 8009328:	4299      	cmp	r1, r3
 800932a:	d002      	beq.n	8009332 <cleanup_stdio+0x1e>
 800932c:	4620      	mov	r0, r4
 800932e:	f003 f80f 	bl	800c350 <_fflush_r>
 8009332:	68e1      	ldr	r1, [r4, #12]
 8009334:	4b06      	ldr	r3, [pc, #24]	@ (8009350 <cleanup_stdio+0x3c>)
 8009336:	4299      	cmp	r1, r3
 8009338:	d004      	beq.n	8009344 <cleanup_stdio+0x30>
 800933a:	4620      	mov	r0, r4
 800933c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8009340:	f003 b806 	b.w	800c350 <_fflush_r>
 8009344:	bd10      	pop	{r4, pc}
 8009346:	bf00      	nop
 8009348:	200006b4 	.word	0x200006b4
 800934c:	2000071c 	.word	0x2000071c
 8009350:	20000784 	.word	0x20000784

08009354 <global_stdio_init.part.0>:
 8009354:	b510      	push	{r4, lr}
 8009356:	4b0b      	ldr	r3, [pc, #44]	@ (8009384 <global_stdio_init.part.0+0x30>)
 8009358:	4c0b      	ldr	r4, [pc, #44]	@ (8009388 <global_stdio_init.part.0+0x34>)
 800935a:	4a0c      	ldr	r2, [pc, #48]	@ (800938c <global_stdio_init.part.0+0x38>)
 800935c:	601a      	str	r2, [r3, #0]
 800935e:	4620      	mov	r0, r4
 8009360:	2200      	movs	r2, #0
 8009362:	2104      	movs	r1, #4
 8009364:	f7ff ff94 	bl	8009290 <std>
 8009368:	f104 0068 	add.w	r0, r4, #104	@ 0x68
 800936c:	2201      	movs	r2, #1
 800936e:	2109      	movs	r1, #9
 8009370:	f7ff ff8e 	bl	8009290 <std>
 8009374:	f104 00d0 	add.w	r0, r4, #208	@ 0xd0
 8009378:	2202      	movs	r2, #2
 800937a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800937e:	2112      	movs	r1, #18
 8009380:	f7ff bf86 	b.w	8009290 <std>
 8009384:	200007ec 	.word	0x200007ec
 8009388:	200006b4 	.word	0x200006b4
 800938c:	080092fd 	.word	0x080092fd

08009390 <__sfp_lock_acquire>:
 8009390:	4801      	ldr	r0, [pc, #4]	@ (8009398 <__sfp_lock_acquire+0x8>)
 8009392:	f000 ba24 	b.w	80097de <__retarget_lock_acquire_recursive>
 8009396:	bf00      	nop
 8009398:	200007f5 	.word	0x200007f5

0800939c <__sfp_lock_release>:
 800939c:	4801      	ldr	r0, [pc, #4]	@ (80093a4 <__sfp_lock_release+0x8>)
 800939e:	f000 ba1f 	b.w	80097e0 <__retarget_lock_release_recursive>
 80093a2:	bf00      	nop
 80093a4:	200007f5 	.word	0x200007f5

080093a8 <__sinit>:
 80093a8:	b510      	push	{r4, lr}
 80093aa:	4604      	mov	r4, r0
 80093ac:	f7ff fff0 	bl	8009390 <__sfp_lock_acquire>
 80093b0:	6a23      	ldr	r3, [r4, #32]
 80093b2:	b11b      	cbz	r3, 80093bc <__sinit+0x14>
 80093b4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80093b8:	f7ff bff0 	b.w	800939c <__sfp_lock_release>
 80093bc:	4b04      	ldr	r3, [pc, #16]	@ (80093d0 <__sinit+0x28>)
 80093be:	6223      	str	r3, [r4, #32]
 80093c0:	4b04      	ldr	r3, [pc, #16]	@ (80093d4 <__sinit+0x2c>)
 80093c2:	681b      	ldr	r3, [r3, #0]
 80093c4:	2b00      	cmp	r3, #0
 80093c6:	d1f5      	bne.n	80093b4 <__sinit+0xc>
 80093c8:	f7ff ffc4 	bl	8009354 <global_stdio_init.part.0>
 80093cc:	e7f2      	b.n	80093b4 <__sinit+0xc>
 80093ce:	bf00      	nop
 80093d0:	08009315 	.word	0x08009315
 80093d4:	200007ec 	.word	0x200007ec

080093d8 <_fwalk_sglue>:
 80093d8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80093dc:	4607      	mov	r7, r0
 80093de:	4688      	mov	r8, r1
 80093e0:	4614      	mov	r4, r2
 80093e2:	2600      	movs	r6, #0
 80093e4:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 80093e8:	f1b9 0901 	subs.w	r9, r9, #1
 80093ec:	d505      	bpl.n	80093fa <_fwalk_sglue+0x22>
 80093ee:	6824      	ldr	r4, [r4, #0]
 80093f0:	2c00      	cmp	r4, #0
 80093f2:	d1f7      	bne.n	80093e4 <_fwalk_sglue+0xc>
 80093f4:	4630      	mov	r0, r6
 80093f6:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80093fa:	89ab      	ldrh	r3, [r5, #12]
 80093fc:	2b01      	cmp	r3, #1
 80093fe:	d907      	bls.n	8009410 <_fwalk_sglue+0x38>
 8009400:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8009404:	3301      	adds	r3, #1
 8009406:	d003      	beq.n	8009410 <_fwalk_sglue+0x38>
 8009408:	4629      	mov	r1, r5
 800940a:	4638      	mov	r0, r7
 800940c:	47c0      	blx	r8
 800940e:	4306      	orrs	r6, r0
 8009410:	3568      	adds	r5, #104	@ 0x68
 8009412:	e7e9      	b.n	80093e8 <_fwalk_sglue+0x10>

08009414 <iprintf>:
 8009414:	b40f      	push	{r0, r1, r2, r3}
 8009416:	b507      	push	{r0, r1, r2, lr}
 8009418:	4906      	ldr	r1, [pc, #24]	@ (8009434 <iprintf+0x20>)
 800941a:	ab04      	add	r3, sp, #16
 800941c:	6808      	ldr	r0, [r1, #0]
 800941e:	f853 2b04 	ldr.w	r2, [r3], #4
 8009422:	6881      	ldr	r1, [r0, #8]
 8009424:	9301      	str	r3, [sp, #4]
 8009426:	f002 fdf7 	bl	800c018 <_vfiprintf_r>
 800942a:	b003      	add	sp, #12
 800942c:	f85d eb04 	ldr.w	lr, [sp], #4
 8009430:	b004      	add	sp, #16
 8009432:	4770      	bx	lr
 8009434:	20000040 	.word	0x20000040

08009438 <_puts_r>:
 8009438:	6a03      	ldr	r3, [r0, #32]
 800943a:	b570      	push	{r4, r5, r6, lr}
 800943c:	6884      	ldr	r4, [r0, #8]
 800943e:	4605      	mov	r5, r0
 8009440:	460e      	mov	r6, r1
 8009442:	b90b      	cbnz	r3, 8009448 <_puts_r+0x10>
 8009444:	f7ff ffb0 	bl	80093a8 <__sinit>
 8009448:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 800944a:	07db      	lsls	r3, r3, #31
 800944c:	d405      	bmi.n	800945a <_puts_r+0x22>
 800944e:	89a3      	ldrh	r3, [r4, #12]
 8009450:	0598      	lsls	r0, r3, #22
 8009452:	d402      	bmi.n	800945a <_puts_r+0x22>
 8009454:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8009456:	f000 f9c2 	bl	80097de <__retarget_lock_acquire_recursive>
 800945a:	89a3      	ldrh	r3, [r4, #12]
 800945c:	0719      	lsls	r1, r3, #28
 800945e:	d502      	bpl.n	8009466 <_puts_r+0x2e>
 8009460:	6923      	ldr	r3, [r4, #16]
 8009462:	2b00      	cmp	r3, #0
 8009464:	d135      	bne.n	80094d2 <_puts_r+0x9a>
 8009466:	4621      	mov	r1, r4
 8009468:	4628      	mov	r0, r5
 800946a:	f000 f8e5 	bl	8009638 <__swsetup_r>
 800946e:	b380      	cbz	r0, 80094d2 <_puts_r+0x9a>
 8009470:	f04f 35ff 	mov.w	r5, #4294967295
 8009474:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 8009476:	07da      	lsls	r2, r3, #31
 8009478:	d405      	bmi.n	8009486 <_puts_r+0x4e>
 800947a:	89a3      	ldrh	r3, [r4, #12]
 800947c:	059b      	lsls	r3, r3, #22
 800947e:	d402      	bmi.n	8009486 <_puts_r+0x4e>
 8009480:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8009482:	f000 f9ad 	bl	80097e0 <__retarget_lock_release_recursive>
 8009486:	4628      	mov	r0, r5
 8009488:	bd70      	pop	{r4, r5, r6, pc}
 800948a:	2b00      	cmp	r3, #0
 800948c:	da04      	bge.n	8009498 <_puts_r+0x60>
 800948e:	69a2      	ldr	r2, [r4, #24]
 8009490:	429a      	cmp	r2, r3
 8009492:	dc17      	bgt.n	80094c4 <_puts_r+0x8c>
 8009494:	290a      	cmp	r1, #10
 8009496:	d015      	beq.n	80094c4 <_puts_r+0x8c>
 8009498:	6823      	ldr	r3, [r4, #0]
 800949a:	1c5a      	adds	r2, r3, #1
 800949c:	6022      	str	r2, [r4, #0]
 800949e:	7019      	strb	r1, [r3, #0]
 80094a0:	68a3      	ldr	r3, [r4, #8]
 80094a2:	f816 1f01 	ldrb.w	r1, [r6, #1]!
 80094a6:	3b01      	subs	r3, #1
 80094a8:	60a3      	str	r3, [r4, #8]
 80094aa:	2900      	cmp	r1, #0
 80094ac:	d1ed      	bne.n	800948a <_puts_r+0x52>
 80094ae:	2b00      	cmp	r3, #0
 80094b0:	da11      	bge.n	80094d6 <_puts_r+0x9e>
 80094b2:	4622      	mov	r2, r4
 80094b4:	210a      	movs	r1, #10
 80094b6:	4628      	mov	r0, r5
 80094b8:	f000 f87f 	bl	80095ba <__swbuf_r>
 80094bc:	3001      	adds	r0, #1
 80094be:	d0d7      	beq.n	8009470 <_puts_r+0x38>
 80094c0:	250a      	movs	r5, #10
 80094c2:	e7d7      	b.n	8009474 <_puts_r+0x3c>
 80094c4:	4622      	mov	r2, r4
 80094c6:	4628      	mov	r0, r5
 80094c8:	f000 f877 	bl	80095ba <__swbuf_r>
 80094cc:	3001      	adds	r0, #1
 80094ce:	d1e7      	bne.n	80094a0 <_puts_r+0x68>
 80094d0:	e7ce      	b.n	8009470 <_puts_r+0x38>
 80094d2:	3e01      	subs	r6, #1
 80094d4:	e7e4      	b.n	80094a0 <_puts_r+0x68>
 80094d6:	6823      	ldr	r3, [r4, #0]
 80094d8:	1c5a      	adds	r2, r3, #1
 80094da:	6022      	str	r2, [r4, #0]
 80094dc:	220a      	movs	r2, #10
 80094de:	701a      	strb	r2, [r3, #0]
 80094e0:	e7ee      	b.n	80094c0 <_puts_r+0x88>
	...

080094e4 <puts>:
 80094e4:	4b02      	ldr	r3, [pc, #8]	@ (80094f0 <puts+0xc>)
 80094e6:	4601      	mov	r1, r0
 80094e8:	6818      	ldr	r0, [r3, #0]
 80094ea:	f7ff bfa5 	b.w	8009438 <_puts_r>
 80094ee:	bf00      	nop
 80094f0:	20000040 	.word	0x20000040

080094f4 <siprintf>:
 80094f4:	b40e      	push	{r1, r2, r3}
 80094f6:	b500      	push	{lr}
 80094f8:	b09c      	sub	sp, #112	@ 0x70
 80094fa:	ab1d      	add	r3, sp, #116	@ 0x74
 80094fc:	9002      	str	r0, [sp, #8]
 80094fe:	9006      	str	r0, [sp, #24]
 8009500:	f06f 4100 	mvn.w	r1, #2147483648	@ 0x80000000
 8009504:	4809      	ldr	r0, [pc, #36]	@ (800952c <siprintf+0x38>)
 8009506:	9107      	str	r1, [sp, #28]
 8009508:	9104      	str	r1, [sp, #16]
 800950a:	4909      	ldr	r1, [pc, #36]	@ (8009530 <siprintf+0x3c>)
 800950c:	f853 2b04 	ldr.w	r2, [r3], #4
 8009510:	9105      	str	r1, [sp, #20]
 8009512:	6800      	ldr	r0, [r0, #0]
 8009514:	9301      	str	r3, [sp, #4]
 8009516:	a902      	add	r1, sp, #8
 8009518:	f002 fc58 	bl	800bdcc <_svfiprintf_r>
 800951c:	9b02      	ldr	r3, [sp, #8]
 800951e:	2200      	movs	r2, #0
 8009520:	701a      	strb	r2, [r3, #0]
 8009522:	b01c      	add	sp, #112	@ 0x70
 8009524:	f85d eb04 	ldr.w	lr, [sp], #4
 8009528:	b003      	add	sp, #12
 800952a:	4770      	bx	lr
 800952c:	20000040 	.word	0x20000040
 8009530:	ffff0208 	.word	0xffff0208

08009534 <__sread>:
 8009534:	b510      	push	{r4, lr}
 8009536:	460c      	mov	r4, r1
 8009538:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800953c:	f000 f900 	bl	8009740 <_read_r>
 8009540:	2800      	cmp	r0, #0
 8009542:	bfab      	itete	ge
 8009544:	6d63      	ldrge	r3, [r4, #84]	@ 0x54
 8009546:	89a3      	ldrhlt	r3, [r4, #12]
 8009548:	181b      	addge	r3, r3, r0
 800954a:	f423 5380 	biclt.w	r3, r3, #4096	@ 0x1000
 800954e:	bfac      	ite	ge
 8009550:	6563      	strge	r3, [r4, #84]	@ 0x54
 8009552:	81a3      	strhlt	r3, [r4, #12]
 8009554:	bd10      	pop	{r4, pc}

08009556 <__swrite>:
 8009556:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800955a:	461f      	mov	r7, r3
 800955c:	898b      	ldrh	r3, [r1, #12]
 800955e:	05db      	lsls	r3, r3, #23
 8009560:	4605      	mov	r5, r0
 8009562:	460c      	mov	r4, r1
 8009564:	4616      	mov	r6, r2
 8009566:	d505      	bpl.n	8009574 <__swrite+0x1e>
 8009568:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800956c:	2302      	movs	r3, #2
 800956e:	2200      	movs	r2, #0
 8009570:	f000 f8d4 	bl	800971c <_lseek_r>
 8009574:	89a3      	ldrh	r3, [r4, #12]
 8009576:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 800957a:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 800957e:	81a3      	strh	r3, [r4, #12]
 8009580:	4632      	mov	r2, r6
 8009582:	463b      	mov	r3, r7
 8009584:	4628      	mov	r0, r5
 8009586:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800958a:	f000 b8eb 	b.w	8009764 <_write_r>

0800958e <__sseek>:
 800958e:	b510      	push	{r4, lr}
 8009590:	460c      	mov	r4, r1
 8009592:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8009596:	f000 f8c1 	bl	800971c <_lseek_r>
 800959a:	1c43      	adds	r3, r0, #1
 800959c:	89a3      	ldrh	r3, [r4, #12]
 800959e:	bf15      	itete	ne
 80095a0:	6560      	strne	r0, [r4, #84]	@ 0x54
 80095a2:	f423 5380 	biceq.w	r3, r3, #4096	@ 0x1000
 80095a6:	f443 5380 	orrne.w	r3, r3, #4096	@ 0x1000
 80095aa:	81a3      	strheq	r3, [r4, #12]
 80095ac:	bf18      	it	ne
 80095ae:	81a3      	strhne	r3, [r4, #12]
 80095b0:	bd10      	pop	{r4, pc}

080095b2 <__sclose>:
 80095b2:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80095b6:	f000 b8a1 	b.w	80096fc <_close_r>

080095ba <__swbuf_r>:
 80095ba:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80095bc:	460e      	mov	r6, r1
 80095be:	4614      	mov	r4, r2
 80095c0:	4605      	mov	r5, r0
 80095c2:	b118      	cbz	r0, 80095cc <__swbuf_r+0x12>
 80095c4:	6a03      	ldr	r3, [r0, #32]
 80095c6:	b90b      	cbnz	r3, 80095cc <__swbuf_r+0x12>
 80095c8:	f7ff feee 	bl	80093a8 <__sinit>
 80095cc:	69a3      	ldr	r3, [r4, #24]
 80095ce:	60a3      	str	r3, [r4, #8]
 80095d0:	89a3      	ldrh	r3, [r4, #12]
 80095d2:	071a      	lsls	r2, r3, #28
 80095d4:	d501      	bpl.n	80095da <__swbuf_r+0x20>
 80095d6:	6923      	ldr	r3, [r4, #16]
 80095d8:	b943      	cbnz	r3, 80095ec <__swbuf_r+0x32>
 80095da:	4621      	mov	r1, r4
 80095dc:	4628      	mov	r0, r5
 80095de:	f000 f82b 	bl	8009638 <__swsetup_r>
 80095e2:	b118      	cbz	r0, 80095ec <__swbuf_r+0x32>
 80095e4:	f04f 37ff 	mov.w	r7, #4294967295
 80095e8:	4638      	mov	r0, r7
 80095ea:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80095ec:	6823      	ldr	r3, [r4, #0]
 80095ee:	6922      	ldr	r2, [r4, #16]
 80095f0:	1a98      	subs	r0, r3, r2
 80095f2:	6963      	ldr	r3, [r4, #20]
 80095f4:	b2f6      	uxtb	r6, r6
 80095f6:	4283      	cmp	r3, r0
 80095f8:	4637      	mov	r7, r6
 80095fa:	dc05      	bgt.n	8009608 <__swbuf_r+0x4e>
 80095fc:	4621      	mov	r1, r4
 80095fe:	4628      	mov	r0, r5
 8009600:	f002 fea6 	bl	800c350 <_fflush_r>
 8009604:	2800      	cmp	r0, #0
 8009606:	d1ed      	bne.n	80095e4 <__swbuf_r+0x2a>
 8009608:	68a3      	ldr	r3, [r4, #8]
 800960a:	3b01      	subs	r3, #1
 800960c:	60a3      	str	r3, [r4, #8]
 800960e:	6823      	ldr	r3, [r4, #0]
 8009610:	1c5a      	adds	r2, r3, #1
 8009612:	6022      	str	r2, [r4, #0]
 8009614:	701e      	strb	r6, [r3, #0]
 8009616:	6962      	ldr	r2, [r4, #20]
 8009618:	1c43      	adds	r3, r0, #1
 800961a:	429a      	cmp	r2, r3
 800961c:	d004      	beq.n	8009628 <__swbuf_r+0x6e>
 800961e:	89a3      	ldrh	r3, [r4, #12]
 8009620:	07db      	lsls	r3, r3, #31
 8009622:	d5e1      	bpl.n	80095e8 <__swbuf_r+0x2e>
 8009624:	2e0a      	cmp	r6, #10
 8009626:	d1df      	bne.n	80095e8 <__swbuf_r+0x2e>
 8009628:	4621      	mov	r1, r4
 800962a:	4628      	mov	r0, r5
 800962c:	f002 fe90 	bl	800c350 <_fflush_r>
 8009630:	2800      	cmp	r0, #0
 8009632:	d0d9      	beq.n	80095e8 <__swbuf_r+0x2e>
 8009634:	e7d6      	b.n	80095e4 <__swbuf_r+0x2a>
	...

08009638 <__swsetup_r>:
 8009638:	b538      	push	{r3, r4, r5, lr}
 800963a:	4b29      	ldr	r3, [pc, #164]	@ (80096e0 <__swsetup_r+0xa8>)
 800963c:	4605      	mov	r5, r0
 800963e:	6818      	ldr	r0, [r3, #0]
 8009640:	460c      	mov	r4, r1
 8009642:	b118      	cbz	r0, 800964c <__swsetup_r+0x14>
 8009644:	6a03      	ldr	r3, [r0, #32]
 8009646:	b90b      	cbnz	r3, 800964c <__swsetup_r+0x14>
 8009648:	f7ff feae 	bl	80093a8 <__sinit>
 800964c:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8009650:	0719      	lsls	r1, r3, #28
 8009652:	d422      	bmi.n	800969a <__swsetup_r+0x62>
 8009654:	06da      	lsls	r2, r3, #27
 8009656:	d407      	bmi.n	8009668 <__swsetup_r+0x30>
 8009658:	2209      	movs	r2, #9
 800965a:	602a      	str	r2, [r5, #0]
 800965c:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8009660:	81a3      	strh	r3, [r4, #12]
 8009662:	f04f 30ff 	mov.w	r0, #4294967295
 8009666:	e033      	b.n	80096d0 <__swsetup_r+0x98>
 8009668:	0758      	lsls	r0, r3, #29
 800966a:	d512      	bpl.n	8009692 <__swsetup_r+0x5a>
 800966c:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 800966e:	b141      	cbz	r1, 8009682 <__swsetup_r+0x4a>
 8009670:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 8009674:	4299      	cmp	r1, r3
 8009676:	d002      	beq.n	800967e <__swsetup_r+0x46>
 8009678:	4628      	mov	r0, r5
 800967a:	f000 ff15 	bl	800a4a8 <_free_r>
 800967e:	2300      	movs	r3, #0
 8009680:	6363      	str	r3, [r4, #52]	@ 0x34
 8009682:	89a3      	ldrh	r3, [r4, #12]
 8009684:	f023 0324 	bic.w	r3, r3, #36	@ 0x24
 8009688:	81a3      	strh	r3, [r4, #12]
 800968a:	2300      	movs	r3, #0
 800968c:	6063      	str	r3, [r4, #4]
 800968e:	6923      	ldr	r3, [r4, #16]
 8009690:	6023      	str	r3, [r4, #0]
 8009692:	89a3      	ldrh	r3, [r4, #12]
 8009694:	f043 0308 	orr.w	r3, r3, #8
 8009698:	81a3      	strh	r3, [r4, #12]
 800969a:	6923      	ldr	r3, [r4, #16]
 800969c:	b94b      	cbnz	r3, 80096b2 <__swsetup_r+0x7a>
 800969e:	89a3      	ldrh	r3, [r4, #12]
 80096a0:	f403 7320 	and.w	r3, r3, #640	@ 0x280
 80096a4:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 80096a8:	d003      	beq.n	80096b2 <__swsetup_r+0x7a>
 80096aa:	4621      	mov	r1, r4
 80096ac:	4628      	mov	r0, r5
 80096ae:	f002 fe9d 	bl	800c3ec <__smakebuf_r>
 80096b2:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80096b6:	f013 0201 	ands.w	r2, r3, #1
 80096ba:	d00a      	beq.n	80096d2 <__swsetup_r+0x9a>
 80096bc:	2200      	movs	r2, #0
 80096be:	60a2      	str	r2, [r4, #8]
 80096c0:	6962      	ldr	r2, [r4, #20]
 80096c2:	4252      	negs	r2, r2
 80096c4:	61a2      	str	r2, [r4, #24]
 80096c6:	6922      	ldr	r2, [r4, #16]
 80096c8:	b942      	cbnz	r2, 80096dc <__swsetup_r+0xa4>
 80096ca:	f013 0080 	ands.w	r0, r3, #128	@ 0x80
 80096ce:	d1c5      	bne.n	800965c <__swsetup_r+0x24>
 80096d0:	bd38      	pop	{r3, r4, r5, pc}
 80096d2:	0799      	lsls	r1, r3, #30
 80096d4:	bf58      	it	pl
 80096d6:	6962      	ldrpl	r2, [r4, #20]
 80096d8:	60a2      	str	r2, [r4, #8]
 80096da:	e7f4      	b.n	80096c6 <__swsetup_r+0x8e>
 80096dc:	2000      	movs	r0, #0
 80096de:	e7f7      	b.n	80096d0 <__swsetup_r+0x98>
 80096e0:	20000040 	.word	0x20000040

080096e4 <memset>:
 80096e4:	4402      	add	r2, r0
 80096e6:	4603      	mov	r3, r0
 80096e8:	4293      	cmp	r3, r2
 80096ea:	d100      	bne.n	80096ee <memset+0xa>
 80096ec:	4770      	bx	lr
 80096ee:	f803 1b01 	strb.w	r1, [r3], #1
 80096f2:	e7f9      	b.n	80096e8 <memset+0x4>

080096f4 <_localeconv_r>:
 80096f4:	4800      	ldr	r0, [pc, #0]	@ (80096f8 <_localeconv_r+0x4>)
 80096f6:	4770      	bx	lr
 80096f8:	20000180 	.word	0x20000180

080096fc <_close_r>:
 80096fc:	b538      	push	{r3, r4, r5, lr}
 80096fe:	4d06      	ldr	r5, [pc, #24]	@ (8009718 <_close_r+0x1c>)
 8009700:	2300      	movs	r3, #0
 8009702:	4604      	mov	r4, r0
 8009704:	4608      	mov	r0, r1
 8009706:	602b      	str	r3, [r5, #0]
 8009708:	f7f9 fec6 	bl	8003498 <_close>
 800970c:	1c43      	adds	r3, r0, #1
 800970e:	d102      	bne.n	8009716 <_close_r+0x1a>
 8009710:	682b      	ldr	r3, [r5, #0]
 8009712:	b103      	cbz	r3, 8009716 <_close_r+0x1a>
 8009714:	6023      	str	r3, [r4, #0]
 8009716:	bd38      	pop	{r3, r4, r5, pc}
 8009718:	200007f0 	.word	0x200007f0

0800971c <_lseek_r>:
 800971c:	b538      	push	{r3, r4, r5, lr}
 800971e:	4d07      	ldr	r5, [pc, #28]	@ (800973c <_lseek_r+0x20>)
 8009720:	4604      	mov	r4, r0
 8009722:	4608      	mov	r0, r1
 8009724:	4611      	mov	r1, r2
 8009726:	2200      	movs	r2, #0
 8009728:	602a      	str	r2, [r5, #0]
 800972a:	461a      	mov	r2, r3
 800972c:	f7f9 fedb 	bl	80034e6 <_lseek>
 8009730:	1c43      	adds	r3, r0, #1
 8009732:	d102      	bne.n	800973a <_lseek_r+0x1e>
 8009734:	682b      	ldr	r3, [r5, #0]
 8009736:	b103      	cbz	r3, 800973a <_lseek_r+0x1e>
 8009738:	6023      	str	r3, [r4, #0]
 800973a:	bd38      	pop	{r3, r4, r5, pc}
 800973c:	200007f0 	.word	0x200007f0

08009740 <_read_r>:
 8009740:	b538      	push	{r3, r4, r5, lr}
 8009742:	4d07      	ldr	r5, [pc, #28]	@ (8009760 <_read_r+0x20>)
 8009744:	4604      	mov	r4, r0
 8009746:	4608      	mov	r0, r1
 8009748:	4611      	mov	r1, r2
 800974a:	2200      	movs	r2, #0
 800974c:	602a      	str	r2, [r5, #0]
 800974e:	461a      	mov	r2, r3
 8009750:	f7f9 fe85 	bl	800345e <_read>
 8009754:	1c43      	adds	r3, r0, #1
 8009756:	d102      	bne.n	800975e <_read_r+0x1e>
 8009758:	682b      	ldr	r3, [r5, #0]
 800975a:	b103      	cbz	r3, 800975e <_read_r+0x1e>
 800975c:	6023      	str	r3, [r4, #0]
 800975e:	bd38      	pop	{r3, r4, r5, pc}
 8009760:	200007f0 	.word	0x200007f0

08009764 <_write_r>:
 8009764:	b538      	push	{r3, r4, r5, lr}
 8009766:	4d07      	ldr	r5, [pc, #28]	@ (8009784 <_write_r+0x20>)
 8009768:	4604      	mov	r4, r0
 800976a:	4608      	mov	r0, r1
 800976c:	4611      	mov	r1, r2
 800976e:	2200      	movs	r2, #0
 8009770:	602a      	str	r2, [r5, #0]
 8009772:	461a      	mov	r2, r3
 8009774:	f7f9 fa52 	bl	8002c1c <_write>
 8009778:	1c43      	adds	r3, r0, #1
 800977a:	d102      	bne.n	8009782 <_write_r+0x1e>
 800977c:	682b      	ldr	r3, [r5, #0]
 800977e:	b103      	cbz	r3, 8009782 <_write_r+0x1e>
 8009780:	6023      	str	r3, [r4, #0]
 8009782:	bd38      	pop	{r3, r4, r5, pc}
 8009784:	200007f0 	.word	0x200007f0

08009788 <__errno>:
 8009788:	4b01      	ldr	r3, [pc, #4]	@ (8009790 <__errno+0x8>)
 800978a:	6818      	ldr	r0, [r3, #0]
 800978c:	4770      	bx	lr
 800978e:	bf00      	nop
 8009790:	20000040 	.word	0x20000040

08009794 <__libc_init_array>:
 8009794:	b570      	push	{r4, r5, r6, lr}
 8009796:	4d0d      	ldr	r5, [pc, #52]	@ (80097cc <__libc_init_array+0x38>)
 8009798:	4c0d      	ldr	r4, [pc, #52]	@ (80097d0 <__libc_init_array+0x3c>)
 800979a:	1b64      	subs	r4, r4, r5
 800979c:	10a4      	asrs	r4, r4, #2
 800979e:	2600      	movs	r6, #0
 80097a0:	42a6      	cmp	r6, r4
 80097a2:	d109      	bne.n	80097b8 <__libc_init_array+0x24>
 80097a4:	4d0b      	ldr	r5, [pc, #44]	@ (80097d4 <__libc_init_array+0x40>)
 80097a6:	4c0c      	ldr	r4, [pc, #48]	@ (80097d8 <__libc_init_array+0x44>)
 80097a8:	f003 fae0 	bl	800cd6c <_init>
 80097ac:	1b64      	subs	r4, r4, r5
 80097ae:	10a4      	asrs	r4, r4, #2
 80097b0:	2600      	movs	r6, #0
 80097b2:	42a6      	cmp	r6, r4
 80097b4:	d105      	bne.n	80097c2 <__libc_init_array+0x2e>
 80097b6:	bd70      	pop	{r4, r5, r6, pc}
 80097b8:	f855 3b04 	ldr.w	r3, [r5], #4
 80097bc:	4798      	blx	r3
 80097be:	3601      	adds	r6, #1
 80097c0:	e7ee      	b.n	80097a0 <__libc_init_array+0xc>
 80097c2:	f855 3b04 	ldr.w	r3, [r5], #4
 80097c6:	4798      	blx	r3
 80097c8:	3601      	adds	r6, #1
 80097ca:	e7f2      	b.n	80097b2 <__libc_init_array+0x1e>
 80097cc:	0800d468 	.word	0x0800d468
 80097d0:	0800d468 	.word	0x0800d468
 80097d4:	0800d468 	.word	0x0800d468
 80097d8:	0800d46c 	.word	0x0800d46c

080097dc <__retarget_lock_init_recursive>:
 80097dc:	4770      	bx	lr

080097de <__retarget_lock_acquire_recursive>:
 80097de:	4770      	bx	lr

080097e0 <__retarget_lock_release_recursive>:
 80097e0:	4770      	bx	lr

080097e2 <memcpy>:
 80097e2:	440a      	add	r2, r1
 80097e4:	4291      	cmp	r1, r2
 80097e6:	f100 33ff 	add.w	r3, r0, #4294967295
 80097ea:	d100      	bne.n	80097ee <memcpy+0xc>
 80097ec:	4770      	bx	lr
 80097ee:	b510      	push	{r4, lr}
 80097f0:	f811 4b01 	ldrb.w	r4, [r1], #1
 80097f4:	f803 4f01 	strb.w	r4, [r3, #1]!
 80097f8:	4291      	cmp	r1, r2
 80097fa:	d1f9      	bne.n	80097f0 <memcpy+0xe>
 80097fc:	bd10      	pop	{r4, pc}
	...

08009800 <nanf>:
 8009800:	ed9f 0a01 	vldr	s0, [pc, #4]	@ 8009808 <nanf+0x8>
 8009804:	4770      	bx	lr
 8009806:	bf00      	nop
 8009808:	7fc00000 	.word	0x7fc00000

0800980c <quorem>:
 800980c:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8009810:	6903      	ldr	r3, [r0, #16]
 8009812:	690c      	ldr	r4, [r1, #16]
 8009814:	42a3      	cmp	r3, r4
 8009816:	4607      	mov	r7, r0
 8009818:	db7e      	blt.n	8009918 <quorem+0x10c>
 800981a:	3c01      	subs	r4, #1
 800981c:	f101 0814 	add.w	r8, r1, #20
 8009820:	00a3      	lsls	r3, r4, #2
 8009822:	f100 0514 	add.w	r5, r0, #20
 8009826:	9300      	str	r3, [sp, #0]
 8009828:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 800982c:	9301      	str	r3, [sp, #4]
 800982e:	f858 3024 	ldr.w	r3, [r8, r4, lsl #2]
 8009832:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 8009836:	3301      	adds	r3, #1
 8009838:	429a      	cmp	r2, r3
 800983a:	eb08 0984 	add.w	r9, r8, r4, lsl #2
 800983e:	fbb2 f6f3 	udiv	r6, r2, r3
 8009842:	d32e      	bcc.n	80098a2 <quorem+0x96>
 8009844:	f04f 0a00 	mov.w	sl, #0
 8009848:	46c4      	mov	ip, r8
 800984a:	46ae      	mov	lr, r5
 800984c:	46d3      	mov	fp, sl
 800984e:	f85c 3b04 	ldr.w	r3, [ip], #4
 8009852:	b298      	uxth	r0, r3
 8009854:	fb06 a000 	mla	r0, r6, r0, sl
 8009858:	0c02      	lsrs	r2, r0, #16
 800985a:	0c1b      	lsrs	r3, r3, #16
 800985c:	fb06 2303 	mla	r3, r6, r3, r2
 8009860:	f8de 2000 	ldr.w	r2, [lr]
 8009864:	b280      	uxth	r0, r0
 8009866:	b292      	uxth	r2, r2
 8009868:	1a12      	subs	r2, r2, r0
 800986a:	445a      	add	r2, fp
 800986c:	f8de 0000 	ldr.w	r0, [lr]
 8009870:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 8009874:	b29b      	uxth	r3, r3
 8009876:	ebc3 4322 	rsb	r3, r3, r2, asr #16
 800987a:	eb03 4310 	add.w	r3, r3, r0, lsr #16
 800987e:	b292      	uxth	r2, r2
 8009880:	ea42 4203 	orr.w	r2, r2, r3, lsl #16
 8009884:	45e1      	cmp	r9, ip
 8009886:	f84e 2b04 	str.w	r2, [lr], #4
 800988a:	ea4f 4b23 	mov.w	fp, r3, asr #16
 800988e:	d2de      	bcs.n	800984e <quorem+0x42>
 8009890:	9b00      	ldr	r3, [sp, #0]
 8009892:	58eb      	ldr	r3, [r5, r3]
 8009894:	b92b      	cbnz	r3, 80098a2 <quorem+0x96>
 8009896:	9b01      	ldr	r3, [sp, #4]
 8009898:	3b04      	subs	r3, #4
 800989a:	429d      	cmp	r5, r3
 800989c:	461a      	mov	r2, r3
 800989e:	d32f      	bcc.n	8009900 <quorem+0xf4>
 80098a0:	613c      	str	r4, [r7, #16]
 80098a2:	4638      	mov	r0, r7
 80098a4:	f001 f9c4 	bl	800ac30 <__mcmp>
 80098a8:	2800      	cmp	r0, #0
 80098aa:	db25      	blt.n	80098f8 <quorem+0xec>
 80098ac:	4629      	mov	r1, r5
 80098ae:	2000      	movs	r0, #0
 80098b0:	f858 2b04 	ldr.w	r2, [r8], #4
 80098b4:	f8d1 c000 	ldr.w	ip, [r1]
 80098b8:	fa1f fe82 	uxth.w	lr, r2
 80098bc:	fa1f f38c 	uxth.w	r3, ip
 80098c0:	eba3 030e 	sub.w	r3, r3, lr
 80098c4:	4403      	add	r3, r0
 80098c6:	0c12      	lsrs	r2, r2, #16
 80098c8:	ebc2 4223 	rsb	r2, r2, r3, asr #16
 80098cc:	eb02 421c 	add.w	r2, r2, ip, lsr #16
 80098d0:	b29b      	uxth	r3, r3
 80098d2:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 80098d6:	45c1      	cmp	r9, r8
 80098d8:	f841 3b04 	str.w	r3, [r1], #4
 80098dc:	ea4f 4022 	mov.w	r0, r2, asr #16
 80098e0:	d2e6      	bcs.n	80098b0 <quorem+0xa4>
 80098e2:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 80098e6:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 80098ea:	b922      	cbnz	r2, 80098f6 <quorem+0xea>
 80098ec:	3b04      	subs	r3, #4
 80098ee:	429d      	cmp	r5, r3
 80098f0:	461a      	mov	r2, r3
 80098f2:	d30b      	bcc.n	800990c <quorem+0x100>
 80098f4:	613c      	str	r4, [r7, #16]
 80098f6:	3601      	adds	r6, #1
 80098f8:	4630      	mov	r0, r6
 80098fa:	b003      	add	sp, #12
 80098fc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8009900:	6812      	ldr	r2, [r2, #0]
 8009902:	3b04      	subs	r3, #4
 8009904:	2a00      	cmp	r2, #0
 8009906:	d1cb      	bne.n	80098a0 <quorem+0x94>
 8009908:	3c01      	subs	r4, #1
 800990a:	e7c6      	b.n	800989a <quorem+0x8e>
 800990c:	6812      	ldr	r2, [r2, #0]
 800990e:	3b04      	subs	r3, #4
 8009910:	2a00      	cmp	r2, #0
 8009912:	d1ef      	bne.n	80098f4 <quorem+0xe8>
 8009914:	3c01      	subs	r4, #1
 8009916:	e7ea      	b.n	80098ee <quorem+0xe2>
 8009918:	2000      	movs	r0, #0
 800991a:	e7ee      	b.n	80098fa <quorem+0xee>
 800991c:	0000      	movs	r0, r0
	...

08009920 <_dtoa_r>:
 8009920:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8009924:	69c7      	ldr	r7, [r0, #28]
 8009926:	b099      	sub	sp, #100	@ 0x64
 8009928:	ed8d 0b02 	vstr	d0, [sp, #8]
 800992c:	ec55 4b10 	vmov	r4, r5, d0
 8009930:	9e22      	ldr	r6, [sp, #136]	@ 0x88
 8009932:	9109      	str	r1, [sp, #36]	@ 0x24
 8009934:	4683      	mov	fp, r0
 8009936:	920e      	str	r2, [sp, #56]	@ 0x38
 8009938:	9313      	str	r3, [sp, #76]	@ 0x4c
 800993a:	b97f      	cbnz	r7, 800995c <_dtoa_r+0x3c>
 800993c:	2010      	movs	r0, #16
 800993e:	f000 fdfd 	bl	800a53c <malloc>
 8009942:	4602      	mov	r2, r0
 8009944:	f8cb 001c 	str.w	r0, [fp, #28]
 8009948:	b920      	cbnz	r0, 8009954 <_dtoa_r+0x34>
 800994a:	4ba7      	ldr	r3, [pc, #668]	@ (8009be8 <_dtoa_r+0x2c8>)
 800994c:	21ef      	movs	r1, #239	@ 0xef
 800994e:	48a7      	ldr	r0, [pc, #668]	@ (8009bec <_dtoa_r+0x2cc>)
 8009950:	f002 fdee 	bl	800c530 <__assert_func>
 8009954:	e9c0 7701 	strd	r7, r7, [r0, #4]
 8009958:	6007      	str	r7, [r0, #0]
 800995a:	60c7      	str	r7, [r0, #12]
 800995c:	f8db 301c 	ldr.w	r3, [fp, #28]
 8009960:	6819      	ldr	r1, [r3, #0]
 8009962:	b159      	cbz	r1, 800997c <_dtoa_r+0x5c>
 8009964:	685a      	ldr	r2, [r3, #4]
 8009966:	604a      	str	r2, [r1, #4]
 8009968:	2301      	movs	r3, #1
 800996a:	4093      	lsls	r3, r2
 800996c:	608b      	str	r3, [r1, #8]
 800996e:	4658      	mov	r0, fp
 8009970:	f000 feda 	bl	800a728 <_Bfree>
 8009974:	f8db 301c 	ldr.w	r3, [fp, #28]
 8009978:	2200      	movs	r2, #0
 800997a:	601a      	str	r2, [r3, #0]
 800997c:	1e2b      	subs	r3, r5, #0
 800997e:	bfb9      	ittee	lt
 8009980:	f023 4300 	biclt.w	r3, r3, #2147483648	@ 0x80000000
 8009984:	9303      	strlt	r3, [sp, #12]
 8009986:	2300      	movge	r3, #0
 8009988:	6033      	strge	r3, [r6, #0]
 800998a:	9f03      	ldr	r7, [sp, #12]
 800998c:	4b98      	ldr	r3, [pc, #608]	@ (8009bf0 <_dtoa_r+0x2d0>)
 800998e:	bfbc      	itt	lt
 8009990:	2201      	movlt	r2, #1
 8009992:	6032      	strlt	r2, [r6, #0]
 8009994:	43bb      	bics	r3, r7
 8009996:	d112      	bne.n	80099be <_dtoa_r+0x9e>
 8009998:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 800999a:	f242 730f 	movw	r3, #9999	@ 0x270f
 800999e:	6013      	str	r3, [r2, #0]
 80099a0:	f3c7 0313 	ubfx	r3, r7, #0, #20
 80099a4:	4323      	orrs	r3, r4
 80099a6:	f000 854d 	beq.w	800a444 <_dtoa_r+0xb24>
 80099aa:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 80099ac:	f8df a254 	ldr.w	sl, [pc, #596]	@ 8009c04 <_dtoa_r+0x2e4>
 80099b0:	2b00      	cmp	r3, #0
 80099b2:	f000 854f 	beq.w	800a454 <_dtoa_r+0xb34>
 80099b6:	f10a 0303 	add.w	r3, sl, #3
 80099ba:	f000 bd49 	b.w	800a450 <_dtoa_r+0xb30>
 80099be:	ed9d 7b02 	vldr	d7, [sp, #8]
 80099c2:	2200      	movs	r2, #0
 80099c4:	ec51 0b17 	vmov	r0, r1, d7
 80099c8:	2300      	movs	r3, #0
 80099ca:	ed8d 7b0c 	vstr	d7, [sp, #48]	@ 0x30
 80099ce:	f7f7 f89b 	bl	8000b08 <__aeabi_dcmpeq>
 80099d2:	4680      	mov	r8, r0
 80099d4:	b158      	cbz	r0, 80099ee <_dtoa_r+0xce>
 80099d6:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 80099d8:	2301      	movs	r3, #1
 80099da:	6013      	str	r3, [r2, #0]
 80099dc:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 80099de:	b113      	cbz	r3, 80099e6 <_dtoa_r+0xc6>
 80099e0:	9a23      	ldr	r2, [sp, #140]	@ 0x8c
 80099e2:	4b84      	ldr	r3, [pc, #528]	@ (8009bf4 <_dtoa_r+0x2d4>)
 80099e4:	6013      	str	r3, [r2, #0]
 80099e6:	f8df a220 	ldr.w	sl, [pc, #544]	@ 8009c08 <_dtoa_r+0x2e8>
 80099ea:	f000 bd33 	b.w	800a454 <_dtoa_r+0xb34>
 80099ee:	ed9d 0b0c 	vldr	d0, [sp, #48]	@ 0x30
 80099f2:	aa16      	add	r2, sp, #88	@ 0x58
 80099f4:	a917      	add	r1, sp, #92	@ 0x5c
 80099f6:	4658      	mov	r0, fp
 80099f8:	f001 fa3a 	bl	800ae70 <__d2b>
 80099fc:	f3c7 560a 	ubfx	r6, r7, #20, #11
 8009a00:	4681      	mov	r9, r0
 8009a02:	2e00      	cmp	r6, #0
 8009a04:	d077      	beq.n	8009af6 <_dtoa_r+0x1d6>
 8009a06:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8009a08:	f8cd 8050 	str.w	r8, [sp, #80]	@ 0x50
 8009a0c:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8009a10:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 8009a14:	f043 537f 	orr.w	r3, r3, #1069547520	@ 0x3fc00000
 8009a18:	f443 1340 	orr.w	r3, r3, #3145728	@ 0x300000
 8009a1c:	f2a6 36ff 	subw	r6, r6, #1023	@ 0x3ff
 8009a20:	4619      	mov	r1, r3
 8009a22:	2200      	movs	r2, #0
 8009a24:	4b74      	ldr	r3, [pc, #464]	@ (8009bf8 <_dtoa_r+0x2d8>)
 8009a26:	f7f6 fc4f 	bl	80002c8 <__aeabi_dsub>
 8009a2a:	a369      	add	r3, pc, #420	@ (adr r3, 8009bd0 <_dtoa_r+0x2b0>)
 8009a2c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8009a30:	f7f6 fe02 	bl	8000638 <__aeabi_dmul>
 8009a34:	a368      	add	r3, pc, #416	@ (adr r3, 8009bd8 <_dtoa_r+0x2b8>)
 8009a36:	e9d3 2300 	ldrd	r2, r3, [r3]
 8009a3a:	f7f6 fc47 	bl	80002cc <__adddf3>
 8009a3e:	4604      	mov	r4, r0
 8009a40:	4630      	mov	r0, r6
 8009a42:	460d      	mov	r5, r1
 8009a44:	f7f6 fd8e 	bl	8000564 <__aeabi_i2d>
 8009a48:	a365      	add	r3, pc, #404	@ (adr r3, 8009be0 <_dtoa_r+0x2c0>)
 8009a4a:	e9d3 2300 	ldrd	r2, r3, [r3]
 8009a4e:	f7f6 fdf3 	bl	8000638 <__aeabi_dmul>
 8009a52:	4602      	mov	r2, r0
 8009a54:	460b      	mov	r3, r1
 8009a56:	4620      	mov	r0, r4
 8009a58:	4629      	mov	r1, r5
 8009a5a:	f7f6 fc37 	bl	80002cc <__adddf3>
 8009a5e:	4604      	mov	r4, r0
 8009a60:	460d      	mov	r5, r1
 8009a62:	f7f7 f899 	bl	8000b98 <__aeabi_d2iz>
 8009a66:	2200      	movs	r2, #0
 8009a68:	4607      	mov	r7, r0
 8009a6a:	2300      	movs	r3, #0
 8009a6c:	4620      	mov	r0, r4
 8009a6e:	4629      	mov	r1, r5
 8009a70:	f7f7 f854 	bl	8000b1c <__aeabi_dcmplt>
 8009a74:	b140      	cbz	r0, 8009a88 <_dtoa_r+0x168>
 8009a76:	4638      	mov	r0, r7
 8009a78:	f7f6 fd74 	bl	8000564 <__aeabi_i2d>
 8009a7c:	4622      	mov	r2, r4
 8009a7e:	462b      	mov	r3, r5
 8009a80:	f7f7 f842 	bl	8000b08 <__aeabi_dcmpeq>
 8009a84:	b900      	cbnz	r0, 8009a88 <_dtoa_r+0x168>
 8009a86:	3f01      	subs	r7, #1
 8009a88:	2f16      	cmp	r7, #22
 8009a8a:	d851      	bhi.n	8009b30 <_dtoa_r+0x210>
 8009a8c:	4b5b      	ldr	r3, [pc, #364]	@ (8009bfc <_dtoa_r+0x2dc>)
 8009a8e:	eb03 03c7 	add.w	r3, r3, r7, lsl #3
 8009a92:	e9d3 2300 	ldrd	r2, r3, [r3]
 8009a96:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 8009a9a:	f7f7 f83f 	bl	8000b1c <__aeabi_dcmplt>
 8009a9e:	2800      	cmp	r0, #0
 8009aa0:	d048      	beq.n	8009b34 <_dtoa_r+0x214>
 8009aa2:	3f01      	subs	r7, #1
 8009aa4:	2300      	movs	r3, #0
 8009aa6:	9312      	str	r3, [sp, #72]	@ 0x48
 8009aa8:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 8009aaa:	1b9b      	subs	r3, r3, r6
 8009aac:	1e5a      	subs	r2, r3, #1
 8009aae:	bf44      	itt	mi
 8009ab0:	f1c3 0801 	rsbmi	r8, r3, #1
 8009ab4:	2300      	movmi	r3, #0
 8009ab6:	9208      	str	r2, [sp, #32]
 8009ab8:	bf54      	ite	pl
 8009aba:	f04f 0800 	movpl.w	r8, #0
 8009abe:	9308      	strmi	r3, [sp, #32]
 8009ac0:	2f00      	cmp	r7, #0
 8009ac2:	db39      	blt.n	8009b38 <_dtoa_r+0x218>
 8009ac4:	9b08      	ldr	r3, [sp, #32]
 8009ac6:	970f      	str	r7, [sp, #60]	@ 0x3c
 8009ac8:	443b      	add	r3, r7
 8009aca:	9308      	str	r3, [sp, #32]
 8009acc:	2300      	movs	r3, #0
 8009ace:	930a      	str	r3, [sp, #40]	@ 0x28
 8009ad0:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8009ad2:	2b09      	cmp	r3, #9
 8009ad4:	d864      	bhi.n	8009ba0 <_dtoa_r+0x280>
 8009ad6:	2b05      	cmp	r3, #5
 8009ad8:	bfc4      	itt	gt
 8009ada:	3b04      	subgt	r3, #4
 8009adc:	9309      	strgt	r3, [sp, #36]	@ 0x24
 8009ade:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8009ae0:	f1a3 0302 	sub.w	r3, r3, #2
 8009ae4:	bfcc      	ite	gt
 8009ae6:	2400      	movgt	r4, #0
 8009ae8:	2401      	movle	r4, #1
 8009aea:	2b03      	cmp	r3, #3
 8009aec:	d863      	bhi.n	8009bb6 <_dtoa_r+0x296>
 8009aee:	e8df f003 	tbb	[pc, r3]
 8009af2:	372a      	.short	0x372a
 8009af4:	5535      	.short	0x5535
 8009af6:	e9dd 6316 	ldrd	r6, r3, [sp, #88]	@ 0x58
 8009afa:	441e      	add	r6, r3
 8009afc:	f206 4332 	addw	r3, r6, #1074	@ 0x432
 8009b00:	2b20      	cmp	r3, #32
 8009b02:	bfc1      	itttt	gt
 8009b04:	f1c3 0340 	rsbgt	r3, r3, #64	@ 0x40
 8009b08:	409f      	lslgt	r7, r3
 8009b0a:	f206 4312 	addwgt	r3, r6, #1042	@ 0x412
 8009b0e:	fa24 f303 	lsrgt.w	r3, r4, r3
 8009b12:	bfd6      	itet	le
 8009b14:	f1c3 0320 	rsble	r3, r3, #32
 8009b18:	ea47 0003 	orrgt.w	r0, r7, r3
 8009b1c:	fa04 f003 	lslle.w	r0, r4, r3
 8009b20:	f7f6 fd10 	bl	8000544 <__aeabi_ui2d>
 8009b24:	2201      	movs	r2, #1
 8009b26:	f1a1 73f8 	sub.w	r3, r1, #32505856	@ 0x1f00000
 8009b2a:	3e01      	subs	r6, #1
 8009b2c:	9214      	str	r2, [sp, #80]	@ 0x50
 8009b2e:	e777      	b.n	8009a20 <_dtoa_r+0x100>
 8009b30:	2301      	movs	r3, #1
 8009b32:	e7b8      	b.n	8009aa6 <_dtoa_r+0x186>
 8009b34:	9012      	str	r0, [sp, #72]	@ 0x48
 8009b36:	e7b7      	b.n	8009aa8 <_dtoa_r+0x188>
 8009b38:	427b      	negs	r3, r7
 8009b3a:	930a      	str	r3, [sp, #40]	@ 0x28
 8009b3c:	2300      	movs	r3, #0
 8009b3e:	eba8 0807 	sub.w	r8, r8, r7
 8009b42:	930f      	str	r3, [sp, #60]	@ 0x3c
 8009b44:	e7c4      	b.n	8009ad0 <_dtoa_r+0x1b0>
 8009b46:	2300      	movs	r3, #0
 8009b48:	930b      	str	r3, [sp, #44]	@ 0x2c
 8009b4a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8009b4c:	2b00      	cmp	r3, #0
 8009b4e:	dc35      	bgt.n	8009bbc <_dtoa_r+0x29c>
 8009b50:	2301      	movs	r3, #1
 8009b52:	9300      	str	r3, [sp, #0]
 8009b54:	9307      	str	r3, [sp, #28]
 8009b56:	461a      	mov	r2, r3
 8009b58:	920e      	str	r2, [sp, #56]	@ 0x38
 8009b5a:	e00b      	b.n	8009b74 <_dtoa_r+0x254>
 8009b5c:	2301      	movs	r3, #1
 8009b5e:	e7f3      	b.n	8009b48 <_dtoa_r+0x228>
 8009b60:	2300      	movs	r3, #0
 8009b62:	930b      	str	r3, [sp, #44]	@ 0x2c
 8009b64:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8009b66:	18fb      	adds	r3, r7, r3
 8009b68:	9300      	str	r3, [sp, #0]
 8009b6a:	3301      	adds	r3, #1
 8009b6c:	2b01      	cmp	r3, #1
 8009b6e:	9307      	str	r3, [sp, #28]
 8009b70:	bfb8      	it	lt
 8009b72:	2301      	movlt	r3, #1
 8009b74:	f8db 001c 	ldr.w	r0, [fp, #28]
 8009b78:	2100      	movs	r1, #0
 8009b7a:	2204      	movs	r2, #4
 8009b7c:	f102 0514 	add.w	r5, r2, #20
 8009b80:	429d      	cmp	r5, r3
 8009b82:	d91f      	bls.n	8009bc4 <_dtoa_r+0x2a4>
 8009b84:	6041      	str	r1, [r0, #4]
 8009b86:	4658      	mov	r0, fp
 8009b88:	f000 fd8e 	bl	800a6a8 <_Balloc>
 8009b8c:	4682      	mov	sl, r0
 8009b8e:	2800      	cmp	r0, #0
 8009b90:	d13c      	bne.n	8009c0c <_dtoa_r+0x2ec>
 8009b92:	4b1b      	ldr	r3, [pc, #108]	@ (8009c00 <_dtoa_r+0x2e0>)
 8009b94:	4602      	mov	r2, r0
 8009b96:	f240 11af 	movw	r1, #431	@ 0x1af
 8009b9a:	e6d8      	b.n	800994e <_dtoa_r+0x2e>
 8009b9c:	2301      	movs	r3, #1
 8009b9e:	e7e0      	b.n	8009b62 <_dtoa_r+0x242>
 8009ba0:	2401      	movs	r4, #1
 8009ba2:	2300      	movs	r3, #0
 8009ba4:	9309      	str	r3, [sp, #36]	@ 0x24
 8009ba6:	940b      	str	r4, [sp, #44]	@ 0x2c
 8009ba8:	f04f 33ff 	mov.w	r3, #4294967295
 8009bac:	9300      	str	r3, [sp, #0]
 8009bae:	9307      	str	r3, [sp, #28]
 8009bb0:	2200      	movs	r2, #0
 8009bb2:	2312      	movs	r3, #18
 8009bb4:	e7d0      	b.n	8009b58 <_dtoa_r+0x238>
 8009bb6:	2301      	movs	r3, #1
 8009bb8:	930b      	str	r3, [sp, #44]	@ 0x2c
 8009bba:	e7f5      	b.n	8009ba8 <_dtoa_r+0x288>
 8009bbc:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8009bbe:	9300      	str	r3, [sp, #0]
 8009bc0:	9307      	str	r3, [sp, #28]
 8009bc2:	e7d7      	b.n	8009b74 <_dtoa_r+0x254>
 8009bc4:	3101      	adds	r1, #1
 8009bc6:	0052      	lsls	r2, r2, #1
 8009bc8:	e7d8      	b.n	8009b7c <_dtoa_r+0x25c>
 8009bca:	bf00      	nop
 8009bcc:	f3af 8000 	nop.w
 8009bd0:	636f4361 	.word	0x636f4361
 8009bd4:	3fd287a7 	.word	0x3fd287a7
 8009bd8:	8b60c8b3 	.word	0x8b60c8b3
 8009bdc:	3fc68a28 	.word	0x3fc68a28
 8009be0:	509f79fb 	.word	0x509f79fb
 8009be4:	3fd34413 	.word	0x3fd34413
 8009be8:	0800d076 	.word	0x0800d076
 8009bec:	0800d08d 	.word	0x0800d08d
 8009bf0:	7ff00000 	.word	0x7ff00000
 8009bf4:	0800d041 	.word	0x0800d041
 8009bf8:	3ff80000 	.word	0x3ff80000
 8009bfc:	0800d188 	.word	0x0800d188
 8009c00:	0800d0e5 	.word	0x0800d0e5
 8009c04:	0800d072 	.word	0x0800d072
 8009c08:	0800d040 	.word	0x0800d040
 8009c0c:	f8db 301c 	ldr.w	r3, [fp, #28]
 8009c10:	6018      	str	r0, [r3, #0]
 8009c12:	9b07      	ldr	r3, [sp, #28]
 8009c14:	2b0e      	cmp	r3, #14
 8009c16:	f200 80a4 	bhi.w	8009d62 <_dtoa_r+0x442>
 8009c1a:	2c00      	cmp	r4, #0
 8009c1c:	f000 80a1 	beq.w	8009d62 <_dtoa_r+0x442>
 8009c20:	2f00      	cmp	r7, #0
 8009c22:	dd33      	ble.n	8009c8c <_dtoa_r+0x36c>
 8009c24:	4bad      	ldr	r3, [pc, #692]	@ (8009edc <_dtoa_r+0x5bc>)
 8009c26:	f007 020f 	and.w	r2, r7, #15
 8009c2a:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8009c2e:	ed93 7b00 	vldr	d7, [r3]
 8009c32:	05f8      	lsls	r0, r7, #23
 8009c34:	ed8d 7b04 	vstr	d7, [sp, #16]
 8009c38:	ea4f 1427 	mov.w	r4, r7, asr #4
 8009c3c:	d516      	bpl.n	8009c6c <_dtoa_r+0x34c>
 8009c3e:	4ba8      	ldr	r3, [pc, #672]	@ (8009ee0 <_dtoa_r+0x5c0>)
 8009c40:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 8009c44:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
 8009c48:	f7f6 fe20 	bl	800088c <__aeabi_ddiv>
 8009c4c:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8009c50:	f004 040f 	and.w	r4, r4, #15
 8009c54:	2603      	movs	r6, #3
 8009c56:	4da2      	ldr	r5, [pc, #648]	@ (8009ee0 <_dtoa_r+0x5c0>)
 8009c58:	b954      	cbnz	r4, 8009c70 <_dtoa_r+0x350>
 8009c5a:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8009c5e:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8009c62:	f7f6 fe13 	bl	800088c <__aeabi_ddiv>
 8009c66:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8009c6a:	e028      	b.n	8009cbe <_dtoa_r+0x39e>
 8009c6c:	2602      	movs	r6, #2
 8009c6e:	e7f2      	b.n	8009c56 <_dtoa_r+0x336>
 8009c70:	07e1      	lsls	r1, r4, #31
 8009c72:	d508      	bpl.n	8009c86 <_dtoa_r+0x366>
 8009c74:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8009c78:	e9d5 2300 	ldrd	r2, r3, [r5]
 8009c7c:	f7f6 fcdc 	bl	8000638 <__aeabi_dmul>
 8009c80:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8009c84:	3601      	adds	r6, #1
 8009c86:	1064      	asrs	r4, r4, #1
 8009c88:	3508      	adds	r5, #8
 8009c8a:	e7e5      	b.n	8009c58 <_dtoa_r+0x338>
 8009c8c:	f000 80d2 	beq.w	8009e34 <_dtoa_r+0x514>
 8009c90:	427c      	negs	r4, r7
 8009c92:	4b92      	ldr	r3, [pc, #584]	@ (8009edc <_dtoa_r+0x5bc>)
 8009c94:	4d92      	ldr	r5, [pc, #584]	@ (8009ee0 <_dtoa_r+0x5c0>)
 8009c96:	f004 020f 	and.w	r2, r4, #15
 8009c9a:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8009c9e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8009ca2:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 8009ca6:	f7f6 fcc7 	bl	8000638 <__aeabi_dmul>
 8009caa:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8009cae:	1124      	asrs	r4, r4, #4
 8009cb0:	2300      	movs	r3, #0
 8009cb2:	2602      	movs	r6, #2
 8009cb4:	2c00      	cmp	r4, #0
 8009cb6:	f040 80b2 	bne.w	8009e1e <_dtoa_r+0x4fe>
 8009cba:	2b00      	cmp	r3, #0
 8009cbc:	d1d3      	bne.n	8009c66 <_dtoa_r+0x346>
 8009cbe:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 8009cc0:	e9dd 4502 	ldrd	r4, r5, [sp, #8]
 8009cc4:	2b00      	cmp	r3, #0
 8009cc6:	f000 80b7 	beq.w	8009e38 <_dtoa_r+0x518>
 8009cca:	4b86      	ldr	r3, [pc, #536]	@ (8009ee4 <_dtoa_r+0x5c4>)
 8009ccc:	2200      	movs	r2, #0
 8009cce:	4620      	mov	r0, r4
 8009cd0:	4629      	mov	r1, r5
 8009cd2:	f7f6 ff23 	bl	8000b1c <__aeabi_dcmplt>
 8009cd6:	2800      	cmp	r0, #0
 8009cd8:	f000 80ae 	beq.w	8009e38 <_dtoa_r+0x518>
 8009cdc:	9b07      	ldr	r3, [sp, #28]
 8009cde:	2b00      	cmp	r3, #0
 8009ce0:	f000 80aa 	beq.w	8009e38 <_dtoa_r+0x518>
 8009ce4:	9b00      	ldr	r3, [sp, #0]
 8009ce6:	2b00      	cmp	r3, #0
 8009ce8:	dd37      	ble.n	8009d5a <_dtoa_r+0x43a>
 8009cea:	1e7b      	subs	r3, r7, #1
 8009cec:	9304      	str	r3, [sp, #16]
 8009cee:	4620      	mov	r0, r4
 8009cf0:	4b7d      	ldr	r3, [pc, #500]	@ (8009ee8 <_dtoa_r+0x5c8>)
 8009cf2:	2200      	movs	r2, #0
 8009cf4:	4629      	mov	r1, r5
 8009cf6:	f7f6 fc9f 	bl	8000638 <__aeabi_dmul>
 8009cfa:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8009cfe:	9c00      	ldr	r4, [sp, #0]
 8009d00:	3601      	adds	r6, #1
 8009d02:	4630      	mov	r0, r6
 8009d04:	f7f6 fc2e 	bl	8000564 <__aeabi_i2d>
 8009d08:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8009d0c:	f7f6 fc94 	bl	8000638 <__aeabi_dmul>
 8009d10:	4b76      	ldr	r3, [pc, #472]	@ (8009eec <_dtoa_r+0x5cc>)
 8009d12:	2200      	movs	r2, #0
 8009d14:	f7f6 fada 	bl	80002cc <__adddf3>
 8009d18:	4605      	mov	r5, r0
 8009d1a:	f1a1 7650 	sub.w	r6, r1, #54525952	@ 0x3400000
 8009d1e:	2c00      	cmp	r4, #0
 8009d20:	f040 808d 	bne.w	8009e3e <_dtoa_r+0x51e>
 8009d24:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8009d28:	4b71      	ldr	r3, [pc, #452]	@ (8009ef0 <_dtoa_r+0x5d0>)
 8009d2a:	2200      	movs	r2, #0
 8009d2c:	f7f6 facc 	bl	80002c8 <__aeabi_dsub>
 8009d30:	4602      	mov	r2, r0
 8009d32:	460b      	mov	r3, r1
 8009d34:	e9cd 2302 	strd	r2, r3, [sp, #8]
 8009d38:	462a      	mov	r2, r5
 8009d3a:	4633      	mov	r3, r6
 8009d3c:	f7f6 ff0c 	bl	8000b58 <__aeabi_dcmpgt>
 8009d40:	2800      	cmp	r0, #0
 8009d42:	f040 828b 	bne.w	800a25c <_dtoa_r+0x93c>
 8009d46:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8009d4a:	462a      	mov	r2, r5
 8009d4c:	f106 4300 	add.w	r3, r6, #2147483648	@ 0x80000000
 8009d50:	f7f6 fee4 	bl	8000b1c <__aeabi_dcmplt>
 8009d54:	2800      	cmp	r0, #0
 8009d56:	f040 8128 	bne.w	8009faa <_dtoa_r+0x68a>
 8009d5a:	e9dd 340c 	ldrd	r3, r4, [sp, #48]	@ 0x30
 8009d5e:	e9cd 3402 	strd	r3, r4, [sp, #8]
 8009d62:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 8009d64:	2b00      	cmp	r3, #0
 8009d66:	f2c0 815a 	blt.w	800a01e <_dtoa_r+0x6fe>
 8009d6a:	2f0e      	cmp	r7, #14
 8009d6c:	f300 8157 	bgt.w	800a01e <_dtoa_r+0x6fe>
 8009d70:	4b5a      	ldr	r3, [pc, #360]	@ (8009edc <_dtoa_r+0x5bc>)
 8009d72:	eb03 03c7 	add.w	r3, r3, r7, lsl #3
 8009d76:	ed93 7b00 	vldr	d7, [r3]
 8009d7a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8009d7c:	2b00      	cmp	r3, #0
 8009d7e:	ed8d 7b00 	vstr	d7, [sp]
 8009d82:	da03      	bge.n	8009d8c <_dtoa_r+0x46c>
 8009d84:	9b07      	ldr	r3, [sp, #28]
 8009d86:	2b00      	cmp	r3, #0
 8009d88:	f340 8101 	ble.w	8009f8e <_dtoa_r+0x66e>
 8009d8c:	e9dd 4502 	ldrd	r4, r5, [sp, #8]
 8009d90:	4656      	mov	r6, sl
 8009d92:	e9dd 2300 	ldrd	r2, r3, [sp]
 8009d96:	4620      	mov	r0, r4
 8009d98:	4629      	mov	r1, r5
 8009d9a:	f7f6 fd77 	bl	800088c <__aeabi_ddiv>
 8009d9e:	f7f6 fefb 	bl	8000b98 <__aeabi_d2iz>
 8009da2:	4680      	mov	r8, r0
 8009da4:	f7f6 fbde 	bl	8000564 <__aeabi_i2d>
 8009da8:	e9dd 2300 	ldrd	r2, r3, [sp]
 8009dac:	f7f6 fc44 	bl	8000638 <__aeabi_dmul>
 8009db0:	4602      	mov	r2, r0
 8009db2:	460b      	mov	r3, r1
 8009db4:	4620      	mov	r0, r4
 8009db6:	4629      	mov	r1, r5
 8009db8:	f108 0430 	add.w	r4, r8, #48	@ 0x30
 8009dbc:	f7f6 fa84 	bl	80002c8 <__aeabi_dsub>
 8009dc0:	f806 4b01 	strb.w	r4, [r6], #1
 8009dc4:	9d07      	ldr	r5, [sp, #28]
 8009dc6:	eba6 040a 	sub.w	r4, r6, sl
 8009dca:	42a5      	cmp	r5, r4
 8009dcc:	4602      	mov	r2, r0
 8009dce:	460b      	mov	r3, r1
 8009dd0:	f040 8117 	bne.w	800a002 <_dtoa_r+0x6e2>
 8009dd4:	f7f6 fa7a 	bl	80002cc <__adddf3>
 8009dd8:	e9dd 2300 	ldrd	r2, r3, [sp]
 8009ddc:	4604      	mov	r4, r0
 8009dde:	460d      	mov	r5, r1
 8009de0:	f7f6 feba 	bl	8000b58 <__aeabi_dcmpgt>
 8009de4:	2800      	cmp	r0, #0
 8009de6:	f040 80f9 	bne.w	8009fdc <_dtoa_r+0x6bc>
 8009dea:	e9dd 2300 	ldrd	r2, r3, [sp]
 8009dee:	4620      	mov	r0, r4
 8009df0:	4629      	mov	r1, r5
 8009df2:	f7f6 fe89 	bl	8000b08 <__aeabi_dcmpeq>
 8009df6:	b118      	cbz	r0, 8009e00 <_dtoa_r+0x4e0>
 8009df8:	f018 0f01 	tst.w	r8, #1
 8009dfc:	f040 80ee 	bne.w	8009fdc <_dtoa_r+0x6bc>
 8009e00:	4649      	mov	r1, r9
 8009e02:	4658      	mov	r0, fp
 8009e04:	f000 fc90 	bl	800a728 <_Bfree>
 8009e08:	2300      	movs	r3, #0
 8009e0a:	7033      	strb	r3, [r6, #0]
 8009e0c:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 8009e0e:	3701      	adds	r7, #1
 8009e10:	601f      	str	r7, [r3, #0]
 8009e12:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 8009e14:	2b00      	cmp	r3, #0
 8009e16:	f000 831d 	beq.w	800a454 <_dtoa_r+0xb34>
 8009e1a:	601e      	str	r6, [r3, #0]
 8009e1c:	e31a      	b.n	800a454 <_dtoa_r+0xb34>
 8009e1e:	07e2      	lsls	r2, r4, #31
 8009e20:	d505      	bpl.n	8009e2e <_dtoa_r+0x50e>
 8009e22:	e9d5 2300 	ldrd	r2, r3, [r5]
 8009e26:	f7f6 fc07 	bl	8000638 <__aeabi_dmul>
 8009e2a:	3601      	adds	r6, #1
 8009e2c:	2301      	movs	r3, #1
 8009e2e:	1064      	asrs	r4, r4, #1
 8009e30:	3508      	adds	r5, #8
 8009e32:	e73f      	b.n	8009cb4 <_dtoa_r+0x394>
 8009e34:	2602      	movs	r6, #2
 8009e36:	e742      	b.n	8009cbe <_dtoa_r+0x39e>
 8009e38:	9c07      	ldr	r4, [sp, #28]
 8009e3a:	9704      	str	r7, [sp, #16]
 8009e3c:	e761      	b.n	8009d02 <_dtoa_r+0x3e2>
 8009e3e:	4b27      	ldr	r3, [pc, #156]	@ (8009edc <_dtoa_r+0x5bc>)
 8009e40:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 8009e42:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
 8009e46:	e953 2302 	ldrd	r2, r3, [r3, #-8]
 8009e4a:	4454      	add	r4, sl
 8009e4c:	2900      	cmp	r1, #0
 8009e4e:	d053      	beq.n	8009ef8 <_dtoa_r+0x5d8>
 8009e50:	4928      	ldr	r1, [pc, #160]	@ (8009ef4 <_dtoa_r+0x5d4>)
 8009e52:	2000      	movs	r0, #0
 8009e54:	f7f6 fd1a 	bl	800088c <__aeabi_ddiv>
 8009e58:	4633      	mov	r3, r6
 8009e5a:	462a      	mov	r2, r5
 8009e5c:	f7f6 fa34 	bl	80002c8 <__aeabi_dsub>
 8009e60:	e9cd 0110 	strd	r0, r1, [sp, #64]	@ 0x40
 8009e64:	4656      	mov	r6, sl
 8009e66:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8009e6a:	f7f6 fe95 	bl	8000b98 <__aeabi_d2iz>
 8009e6e:	4605      	mov	r5, r0
 8009e70:	f7f6 fb78 	bl	8000564 <__aeabi_i2d>
 8009e74:	4602      	mov	r2, r0
 8009e76:	460b      	mov	r3, r1
 8009e78:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8009e7c:	f7f6 fa24 	bl	80002c8 <__aeabi_dsub>
 8009e80:	3530      	adds	r5, #48	@ 0x30
 8009e82:	4602      	mov	r2, r0
 8009e84:	460b      	mov	r3, r1
 8009e86:	e9cd 2302 	strd	r2, r3, [sp, #8]
 8009e8a:	f806 5b01 	strb.w	r5, [r6], #1
 8009e8e:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	@ 0x40
 8009e92:	f7f6 fe43 	bl	8000b1c <__aeabi_dcmplt>
 8009e96:	2800      	cmp	r0, #0
 8009e98:	d171      	bne.n	8009f7e <_dtoa_r+0x65e>
 8009e9a:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8009e9e:	4911      	ldr	r1, [pc, #68]	@ (8009ee4 <_dtoa_r+0x5c4>)
 8009ea0:	2000      	movs	r0, #0
 8009ea2:	f7f6 fa11 	bl	80002c8 <__aeabi_dsub>
 8009ea6:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	@ 0x40
 8009eaa:	f7f6 fe37 	bl	8000b1c <__aeabi_dcmplt>
 8009eae:	2800      	cmp	r0, #0
 8009eb0:	f040 8095 	bne.w	8009fde <_dtoa_r+0x6be>
 8009eb4:	42a6      	cmp	r6, r4
 8009eb6:	f43f af50 	beq.w	8009d5a <_dtoa_r+0x43a>
 8009eba:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	@ 0x40
 8009ebe:	4b0a      	ldr	r3, [pc, #40]	@ (8009ee8 <_dtoa_r+0x5c8>)
 8009ec0:	2200      	movs	r2, #0
 8009ec2:	f7f6 fbb9 	bl	8000638 <__aeabi_dmul>
 8009ec6:	4b08      	ldr	r3, [pc, #32]	@ (8009ee8 <_dtoa_r+0x5c8>)
 8009ec8:	e9cd 0110 	strd	r0, r1, [sp, #64]	@ 0x40
 8009ecc:	2200      	movs	r2, #0
 8009ece:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8009ed2:	f7f6 fbb1 	bl	8000638 <__aeabi_dmul>
 8009ed6:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8009eda:	e7c4      	b.n	8009e66 <_dtoa_r+0x546>
 8009edc:	0800d188 	.word	0x0800d188
 8009ee0:	0800d160 	.word	0x0800d160
 8009ee4:	3ff00000 	.word	0x3ff00000
 8009ee8:	40240000 	.word	0x40240000
 8009eec:	401c0000 	.word	0x401c0000
 8009ef0:	40140000 	.word	0x40140000
 8009ef4:	3fe00000 	.word	0x3fe00000
 8009ef8:	4631      	mov	r1, r6
 8009efa:	4628      	mov	r0, r5
 8009efc:	f7f6 fb9c 	bl	8000638 <__aeabi_dmul>
 8009f00:	e9cd 0110 	strd	r0, r1, [sp, #64]	@ 0x40
 8009f04:	9415      	str	r4, [sp, #84]	@ 0x54
 8009f06:	4656      	mov	r6, sl
 8009f08:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8009f0c:	f7f6 fe44 	bl	8000b98 <__aeabi_d2iz>
 8009f10:	4605      	mov	r5, r0
 8009f12:	f7f6 fb27 	bl	8000564 <__aeabi_i2d>
 8009f16:	4602      	mov	r2, r0
 8009f18:	460b      	mov	r3, r1
 8009f1a:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8009f1e:	f7f6 f9d3 	bl	80002c8 <__aeabi_dsub>
 8009f22:	3530      	adds	r5, #48	@ 0x30
 8009f24:	f806 5b01 	strb.w	r5, [r6], #1
 8009f28:	4602      	mov	r2, r0
 8009f2a:	460b      	mov	r3, r1
 8009f2c:	42a6      	cmp	r6, r4
 8009f2e:	e9cd 2302 	strd	r2, r3, [sp, #8]
 8009f32:	f04f 0200 	mov.w	r2, #0
 8009f36:	d124      	bne.n	8009f82 <_dtoa_r+0x662>
 8009f38:	4bac      	ldr	r3, [pc, #688]	@ (800a1ec <_dtoa_r+0x8cc>)
 8009f3a:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	@ 0x40
 8009f3e:	f7f6 f9c5 	bl	80002cc <__adddf3>
 8009f42:	4602      	mov	r2, r0
 8009f44:	460b      	mov	r3, r1
 8009f46:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8009f4a:	f7f6 fe05 	bl	8000b58 <__aeabi_dcmpgt>
 8009f4e:	2800      	cmp	r0, #0
 8009f50:	d145      	bne.n	8009fde <_dtoa_r+0x6be>
 8009f52:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	@ 0x40
 8009f56:	49a5      	ldr	r1, [pc, #660]	@ (800a1ec <_dtoa_r+0x8cc>)
 8009f58:	2000      	movs	r0, #0
 8009f5a:	f7f6 f9b5 	bl	80002c8 <__aeabi_dsub>
 8009f5e:	4602      	mov	r2, r0
 8009f60:	460b      	mov	r3, r1
 8009f62:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8009f66:	f7f6 fdd9 	bl	8000b1c <__aeabi_dcmplt>
 8009f6a:	2800      	cmp	r0, #0
 8009f6c:	f43f aef5 	beq.w	8009d5a <_dtoa_r+0x43a>
 8009f70:	9e15      	ldr	r6, [sp, #84]	@ 0x54
 8009f72:	1e73      	subs	r3, r6, #1
 8009f74:	9315      	str	r3, [sp, #84]	@ 0x54
 8009f76:	f816 3c01 	ldrb.w	r3, [r6, #-1]
 8009f7a:	2b30      	cmp	r3, #48	@ 0x30
 8009f7c:	d0f8      	beq.n	8009f70 <_dtoa_r+0x650>
 8009f7e:	9f04      	ldr	r7, [sp, #16]
 8009f80:	e73e      	b.n	8009e00 <_dtoa_r+0x4e0>
 8009f82:	4b9b      	ldr	r3, [pc, #620]	@ (800a1f0 <_dtoa_r+0x8d0>)
 8009f84:	f7f6 fb58 	bl	8000638 <__aeabi_dmul>
 8009f88:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8009f8c:	e7bc      	b.n	8009f08 <_dtoa_r+0x5e8>
 8009f8e:	d10c      	bne.n	8009faa <_dtoa_r+0x68a>
 8009f90:	4b98      	ldr	r3, [pc, #608]	@ (800a1f4 <_dtoa_r+0x8d4>)
 8009f92:	2200      	movs	r2, #0
 8009f94:	e9dd 0100 	ldrd	r0, r1, [sp]
 8009f98:	f7f6 fb4e 	bl	8000638 <__aeabi_dmul>
 8009f9c:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8009fa0:	f7f6 fdd0 	bl	8000b44 <__aeabi_dcmpge>
 8009fa4:	2800      	cmp	r0, #0
 8009fa6:	f000 8157 	beq.w	800a258 <_dtoa_r+0x938>
 8009faa:	2400      	movs	r4, #0
 8009fac:	4625      	mov	r5, r4
 8009fae:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8009fb0:	43db      	mvns	r3, r3
 8009fb2:	9304      	str	r3, [sp, #16]
 8009fb4:	4656      	mov	r6, sl
 8009fb6:	2700      	movs	r7, #0
 8009fb8:	4621      	mov	r1, r4
 8009fba:	4658      	mov	r0, fp
 8009fbc:	f000 fbb4 	bl	800a728 <_Bfree>
 8009fc0:	2d00      	cmp	r5, #0
 8009fc2:	d0dc      	beq.n	8009f7e <_dtoa_r+0x65e>
 8009fc4:	b12f      	cbz	r7, 8009fd2 <_dtoa_r+0x6b2>
 8009fc6:	42af      	cmp	r7, r5
 8009fc8:	d003      	beq.n	8009fd2 <_dtoa_r+0x6b2>
 8009fca:	4639      	mov	r1, r7
 8009fcc:	4658      	mov	r0, fp
 8009fce:	f000 fbab 	bl	800a728 <_Bfree>
 8009fd2:	4629      	mov	r1, r5
 8009fd4:	4658      	mov	r0, fp
 8009fd6:	f000 fba7 	bl	800a728 <_Bfree>
 8009fda:	e7d0      	b.n	8009f7e <_dtoa_r+0x65e>
 8009fdc:	9704      	str	r7, [sp, #16]
 8009fde:	4633      	mov	r3, r6
 8009fe0:	461e      	mov	r6, r3
 8009fe2:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 8009fe6:	2a39      	cmp	r2, #57	@ 0x39
 8009fe8:	d107      	bne.n	8009ffa <_dtoa_r+0x6da>
 8009fea:	459a      	cmp	sl, r3
 8009fec:	d1f8      	bne.n	8009fe0 <_dtoa_r+0x6c0>
 8009fee:	9a04      	ldr	r2, [sp, #16]
 8009ff0:	3201      	adds	r2, #1
 8009ff2:	9204      	str	r2, [sp, #16]
 8009ff4:	2230      	movs	r2, #48	@ 0x30
 8009ff6:	f88a 2000 	strb.w	r2, [sl]
 8009ffa:	781a      	ldrb	r2, [r3, #0]
 8009ffc:	3201      	adds	r2, #1
 8009ffe:	701a      	strb	r2, [r3, #0]
 800a000:	e7bd      	b.n	8009f7e <_dtoa_r+0x65e>
 800a002:	4b7b      	ldr	r3, [pc, #492]	@ (800a1f0 <_dtoa_r+0x8d0>)
 800a004:	2200      	movs	r2, #0
 800a006:	f7f6 fb17 	bl	8000638 <__aeabi_dmul>
 800a00a:	2200      	movs	r2, #0
 800a00c:	2300      	movs	r3, #0
 800a00e:	4604      	mov	r4, r0
 800a010:	460d      	mov	r5, r1
 800a012:	f7f6 fd79 	bl	8000b08 <__aeabi_dcmpeq>
 800a016:	2800      	cmp	r0, #0
 800a018:	f43f aebb 	beq.w	8009d92 <_dtoa_r+0x472>
 800a01c:	e6f0      	b.n	8009e00 <_dtoa_r+0x4e0>
 800a01e:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 800a020:	2a00      	cmp	r2, #0
 800a022:	f000 80db 	beq.w	800a1dc <_dtoa_r+0x8bc>
 800a026:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 800a028:	2a01      	cmp	r2, #1
 800a02a:	f300 80bf 	bgt.w	800a1ac <_dtoa_r+0x88c>
 800a02e:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 800a030:	2a00      	cmp	r2, #0
 800a032:	f000 80b7 	beq.w	800a1a4 <_dtoa_r+0x884>
 800a036:	f203 4333 	addw	r3, r3, #1075	@ 0x433
 800a03a:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 800a03c:	4646      	mov	r6, r8
 800a03e:	9a08      	ldr	r2, [sp, #32]
 800a040:	2101      	movs	r1, #1
 800a042:	441a      	add	r2, r3
 800a044:	4658      	mov	r0, fp
 800a046:	4498      	add	r8, r3
 800a048:	9208      	str	r2, [sp, #32]
 800a04a:	f000 fc6b 	bl	800a924 <__i2b>
 800a04e:	4605      	mov	r5, r0
 800a050:	b15e      	cbz	r6, 800a06a <_dtoa_r+0x74a>
 800a052:	9b08      	ldr	r3, [sp, #32]
 800a054:	2b00      	cmp	r3, #0
 800a056:	dd08      	ble.n	800a06a <_dtoa_r+0x74a>
 800a058:	42b3      	cmp	r3, r6
 800a05a:	9a08      	ldr	r2, [sp, #32]
 800a05c:	bfa8      	it	ge
 800a05e:	4633      	movge	r3, r6
 800a060:	eba8 0803 	sub.w	r8, r8, r3
 800a064:	1af6      	subs	r6, r6, r3
 800a066:	1ad3      	subs	r3, r2, r3
 800a068:	9308      	str	r3, [sp, #32]
 800a06a:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 800a06c:	b1f3      	cbz	r3, 800a0ac <_dtoa_r+0x78c>
 800a06e:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 800a070:	2b00      	cmp	r3, #0
 800a072:	f000 80b7 	beq.w	800a1e4 <_dtoa_r+0x8c4>
 800a076:	b18c      	cbz	r4, 800a09c <_dtoa_r+0x77c>
 800a078:	4629      	mov	r1, r5
 800a07a:	4622      	mov	r2, r4
 800a07c:	4658      	mov	r0, fp
 800a07e:	f000 fd11 	bl	800aaa4 <__pow5mult>
 800a082:	464a      	mov	r2, r9
 800a084:	4601      	mov	r1, r0
 800a086:	4605      	mov	r5, r0
 800a088:	4658      	mov	r0, fp
 800a08a:	f000 fc61 	bl	800a950 <__multiply>
 800a08e:	4649      	mov	r1, r9
 800a090:	9004      	str	r0, [sp, #16]
 800a092:	4658      	mov	r0, fp
 800a094:	f000 fb48 	bl	800a728 <_Bfree>
 800a098:	9b04      	ldr	r3, [sp, #16]
 800a09a:	4699      	mov	r9, r3
 800a09c:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 800a09e:	1b1a      	subs	r2, r3, r4
 800a0a0:	d004      	beq.n	800a0ac <_dtoa_r+0x78c>
 800a0a2:	4649      	mov	r1, r9
 800a0a4:	4658      	mov	r0, fp
 800a0a6:	f000 fcfd 	bl	800aaa4 <__pow5mult>
 800a0aa:	4681      	mov	r9, r0
 800a0ac:	2101      	movs	r1, #1
 800a0ae:	4658      	mov	r0, fp
 800a0b0:	f000 fc38 	bl	800a924 <__i2b>
 800a0b4:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 800a0b6:	4604      	mov	r4, r0
 800a0b8:	2b00      	cmp	r3, #0
 800a0ba:	f000 81cf 	beq.w	800a45c <_dtoa_r+0xb3c>
 800a0be:	461a      	mov	r2, r3
 800a0c0:	4601      	mov	r1, r0
 800a0c2:	4658      	mov	r0, fp
 800a0c4:	f000 fcee 	bl	800aaa4 <__pow5mult>
 800a0c8:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800a0ca:	2b01      	cmp	r3, #1
 800a0cc:	4604      	mov	r4, r0
 800a0ce:	f300 8095 	bgt.w	800a1fc <_dtoa_r+0x8dc>
 800a0d2:	9b02      	ldr	r3, [sp, #8]
 800a0d4:	2b00      	cmp	r3, #0
 800a0d6:	f040 8087 	bne.w	800a1e8 <_dtoa_r+0x8c8>
 800a0da:	9b03      	ldr	r3, [sp, #12]
 800a0dc:	f3c3 0313 	ubfx	r3, r3, #0, #20
 800a0e0:	2b00      	cmp	r3, #0
 800a0e2:	f040 8089 	bne.w	800a1f8 <_dtoa_r+0x8d8>
 800a0e6:	9b03      	ldr	r3, [sp, #12]
 800a0e8:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 800a0ec:	0d1b      	lsrs	r3, r3, #20
 800a0ee:	051b      	lsls	r3, r3, #20
 800a0f0:	b12b      	cbz	r3, 800a0fe <_dtoa_r+0x7de>
 800a0f2:	9b08      	ldr	r3, [sp, #32]
 800a0f4:	3301      	adds	r3, #1
 800a0f6:	9308      	str	r3, [sp, #32]
 800a0f8:	f108 0801 	add.w	r8, r8, #1
 800a0fc:	2301      	movs	r3, #1
 800a0fe:	930a      	str	r3, [sp, #40]	@ 0x28
 800a100:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 800a102:	2b00      	cmp	r3, #0
 800a104:	f000 81b0 	beq.w	800a468 <_dtoa_r+0xb48>
 800a108:	6923      	ldr	r3, [r4, #16]
 800a10a:	eb04 0383 	add.w	r3, r4, r3, lsl #2
 800a10e:	6918      	ldr	r0, [r3, #16]
 800a110:	f000 fbbc 	bl	800a88c <__hi0bits>
 800a114:	f1c0 0020 	rsb	r0, r0, #32
 800a118:	9b08      	ldr	r3, [sp, #32]
 800a11a:	4418      	add	r0, r3
 800a11c:	f010 001f 	ands.w	r0, r0, #31
 800a120:	d077      	beq.n	800a212 <_dtoa_r+0x8f2>
 800a122:	f1c0 0320 	rsb	r3, r0, #32
 800a126:	2b04      	cmp	r3, #4
 800a128:	dd6b      	ble.n	800a202 <_dtoa_r+0x8e2>
 800a12a:	9b08      	ldr	r3, [sp, #32]
 800a12c:	f1c0 001c 	rsb	r0, r0, #28
 800a130:	4403      	add	r3, r0
 800a132:	4480      	add	r8, r0
 800a134:	4406      	add	r6, r0
 800a136:	9308      	str	r3, [sp, #32]
 800a138:	f1b8 0f00 	cmp.w	r8, #0
 800a13c:	dd05      	ble.n	800a14a <_dtoa_r+0x82a>
 800a13e:	4649      	mov	r1, r9
 800a140:	4642      	mov	r2, r8
 800a142:	4658      	mov	r0, fp
 800a144:	f000 fd08 	bl	800ab58 <__lshift>
 800a148:	4681      	mov	r9, r0
 800a14a:	9b08      	ldr	r3, [sp, #32]
 800a14c:	2b00      	cmp	r3, #0
 800a14e:	dd05      	ble.n	800a15c <_dtoa_r+0x83c>
 800a150:	4621      	mov	r1, r4
 800a152:	461a      	mov	r2, r3
 800a154:	4658      	mov	r0, fp
 800a156:	f000 fcff 	bl	800ab58 <__lshift>
 800a15a:	4604      	mov	r4, r0
 800a15c:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 800a15e:	2b00      	cmp	r3, #0
 800a160:	d059      	beq.n	800a216 <_dtoa_r+0x8f6>
 800a162:	4621      	mov	r1, r4
 800a164:	4648      	mov	r0, r9
 800a166:	f000 fd63 	bl	800ac30 <__mcmp>
 800a16a:	2800      	cmp	r0, #0
 800a16c:	da53      	bge.n	800a216 <_dtoa_r+0x8f6>
 800a16e:	1e7b      	subs	r3, r7, #1
 800a170:	9304      	str	r3, [sp, #16]
 800a172:	4649      	mov	r1, r9
 800a174:	2300      	movs	r3, #0
 800a176:	220a      	movs	r2, #10
 800a178:	4658      	mov	r0, fp
 800a17a:	f000 faf7 	bl	800a76c <__multadd>
 800a17e:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 800a180:	4681      	mov	r9, r0
 800a182:	2b00      	cmp	r3, #0
 800a184:	f000 8172 	beq.w	800a46c <_dtoa_r+0xb4c>
 800a188:	2300      	movs	r3, #0
 800a18a:	4629      	mov	r1, r5
 800a18c:	220a      	movs	r2, #10
 800a18e:	4658      	mov	r0, fp
 800a190:	f000 faec 	bl	800a76c <__multadd>
 800a194:	9b00      	ldr	r3, [sp, #0]
 800a196:	2b00      	cmp	r3, #0
 800a198:	4605      	mov	r5, r0
 800a19a:	dc67      	bgt.n	800a26c <_dtoa_r+0x94c>
 800a19c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800a19e:	2b02      	cmp	r3, #2
 800a1a0:	dc41      	bgt.n	800a226 <_dtoa_r+0x906>
 800a1a2:	e063      	b.n	800a26c <_dtoa_r+0x94c>
 800a1a4:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 800a1a6:	f1c3 0336 	rsb	r3, r3, #54	@ 0x36
 800a1aa:	e746      	b.n	800a03a <_dtoa_r+0x71a>
 800a1ac:	9b07      	ldr	r3, [sp, #28]
 800a1ae:	1e5c      	subs	r4, r3, #1
 800a1b0:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 800a1b2:	42a3      	cmp	r3, r4
 800a1b4:	bfbf      	itttt	lt
 800a1b6:	9b0a      	ldrlt	r3, [sp, #40]	@ 0x28
 800a1b8:	9a0f      	ldrlt	r2, [sp, #60]	@ 0x3c
 800a1ba:	940a      	strlt	r4, [sp, #40]	@ 0x28
 800a1bc:	1ae3      	sublt	r3, r4, r3
 800a1be:	bfb4      	ite	lt
 800a1c0:	18d2      	addlt	r2, r2, r3
 800a1c2:	1b1c      	subge	r4, r3, r4
 800a1c4:	9b07      	ldr	r3, [sp, #28]
 800a1c6:	bfbc      	itt	lt
 800a1c8:	920f      	strlt	r2, [sp, #60]	@ 0x3c
 800a1ca:	2400      	movlt	r4, #0
 800a1cc:	2b00      	cmp	r3, #0
 800a1ce:	bfb5      	itete	lt
 800a1d0:	eba8 0603 	sublt.w	r6, r8, r3
 800a1d4:	9b07      	ldrge	r3, [sp, #28]
 800a1d6:	2300      	movlt	r3, #0
 800a1d8:	4646      	movge	r6, r8
 800a1da:	e730      	b.n	800a03e <_dtoa_r+0x71e>
 800a1dc:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 800a1de:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 800a1e0:	4646      	mov	r6, r8
 800a1e2:	e735      	b.n	800a050 <_dtoa_r+0x730>
 800a1e4:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 800a1e6:	e75c      	b.n	800a0a2 <_dtoa_r+0x782>
 800a1e8:	2300      	movs	r3, #0
 800a1ea:	e788      	b.n	800a0fe <_dtoa_r+0x7de>
 800a1ec:	3fe00000 	.word	0x3fe00000
 800a1f0:	40240000 	.word	0x40240000
 800a1f4:	40140000 	.word	0x40140000
 800a1f8:	9b02      	ldr	r3, [sp, #8]
 800a1fa:	e780      	b.n	800a0fe <_dtoa_r+0x7de>
 800a1fc:	2300      	movs	r3, #0
 800a1fe:	930a      	str	r3, [sp, #40]	@ 0x28
 800a200:	e782      	b.n	800a108 <_dtoa_r+0x7e8>
 800a202:	d099      	beq.n	800a138 <_dtoa_r+0x818>
 800a204:	9a08      	ldr	r2, [sp, #32]
 800a206:	331c      	adds	r3, #28
 800a208:	441a      	add	r2, r3
 800a20a:	4498      	add	r8, r3
 800a20c:	441e      	add	r6, r3
 800a20e:	9208      	str	r2, [sp, #32]
 800a210:	e792      	b.n	800a138 <_dtoa_r+0x818>
 800a212:	4603      	mov	r3, r0
 800a214:	e7f6      	b.n	800a204 <_dtoa_r+0x8e4>
 800a216:	9b07      	ldr	r3, [sp, #28]
 800a218:	9704      	str	r7, [sp, #16]
 800a21a:	2b00      	cmp	r3, #0
 800a21c:	dc20      	bgt.n	800a260 <_dtoa_r+0x940>
 800a21e:	9300      	str	r3, [sp, #0]
 800a220:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800a222:	2b02      	cmp	r3, #2
 800a224:	dd1e      	ble.n	800a264 <_dtoa_r+0x944>
 800a226:	9b00      	ldr	r3, [sp, #0]
 800a228:	2b00      	cmp	r3, #0
 800a22a:	f47f aec0 	bne.w	8009fae <_dtoa_r+0x68e>
 800a22e:	4621      	mov	r1, r4
 800a230:	2205      	movs	r2, #5
 800a232:	4658      	mov	r0, fp
 800a234:	f000 fa9a 	bl	800a76c <__multadd>
 800a238:	4601      	mov	r1, r0
 800a23a:	4604      	mov	r4, r0
 800a23c:	4648      	mov	r0, r9
 800a23e:	f000 fcf7 	bl	800ac30 <__mcmp>
 800a242:	2800      	cmp	r0, #0
 800a244:	f77f aeb3 	ble.w	8009fae <_dtoa_r+0x68e>
 800a248:	4656      	mov	r6, sl
 800a24a:	2331      	movs	r3, #49	@ 0x31
 800a24c:	f806 3b01 	strb.w	r3, [r6], #1
 800a250:	9b04      	ldr	r3, [sp, #16]
 800a252:	3301      	adds	r3, #1
 800a254:	9304      	str	r3, [sp, #16]
 800a256:	e6ae      	b.n	8009fb6 <_dtoa_r+0x696>
 800a258:	9c07      	ldr	r4, [sp, #28]
 800a25a:	9704      	str	r7, [sp, #16]
 800a25c:	4625      	mov	r5, r4
 800a25e:	e7f3      	b.n	800a248 <_dtoa_r+0x928>
 800a260:	9b07      	ldr	r3, [sp, #28]
 800a262:	9300      	str	r3, [sp, #0]
 800a264:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 800a266:	2b00      	cmp	r3, #0
 800a268:	f000 8104 	beq.w	800a474 <_dtoa_r+0xb54>
 800a26c:	2e00      	cmp	r6, #0
 800a26e:	dd05      	ble.n	800a27c <_dtoa_r+0x95c>
 800a270:	4629      	mov	r1, r5
 800a272:	4632      	mov	r2, r6
 800a274:	4658      	mov	r0, fp
 800a276:	f000 fc6f 	bl	800ab58 <__lshift>
 800a27a:	4605      	mov	r5, r0
 800a27c:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 800a27e:	2b00      	cmp	r3, #0
 800a280:	d05a      	beq.n	800a338 <_dtoa_r+0xa18>
 800a282:	6869      	ldr	r1, [r5, #4]
 800a284:	4658      	mov	r0, fp
 800a286:	f000 fa0f 	bl	800a6a8 <_Balloc>
 800a28a:	4606      	mov	r6, r0
 800a28c:	b928      	cbnz	r0, 800a29a <_dtoa_r+0x97a>
 800a28e:	4b84      	ldr	r3, [pc, #528]	@ (800a4a0 <_dtoa_r+0xb80>)
 800a290:	4602      	mov	r2, r0
 800a292:	f240 21ef 	movw	r1, #751	@ 0x2ef
 800a296:	f7ff bb5a 	b.w	800994e <_dtoa_r+0x2e>
 800a29a:	692a      	ldr	r2, [r5, #16]
 800a29c:	3202      	adds	r2, #2
 800a29e:	0092      	lsls	r2, r2, #2
 800a2a0:	f105 010c 	add.w	r1, r5, #12
 800a2a4:	300c      	adds	r0, #12
 800a2a6:	f7ff fa9c 	bl	80097e2 <memcpy>
 800a2aa:	2201      	movs	r2, #1
 800a2ac:	4631      	mov	r1, r6
 800a2ae:	4658      	mov	r0, fp
 800a2b0:	f000 fc52 	bl	800ab58 <__lshift>
 800a2b4:	f10a 0301 	add.w	r3, sl, #1
 800a2b8:	9307      	str	r3, [sp, #28]
 800a2ba:	9b00      	ldr	r3, [sp, #0]
 800a2bc:	4453      	add	r3, sl
 800a2be:	930b      	str	r3, [sp, #44]	@ 0x2c
 800a2c0:	9b02      	ldr	r3, [sp, #8]
 800a2c2:	f003 0301 	and.w	r3, r3, #1
 800a2c6:	462f      	mov	r7, r5
 800a2c8:	930a      	str	r3, [sp, #40]	@ 0x28
 800a2ca:	4605      	mov	r5, r0
 800a2cc:	9b07      	ldr	r3, [sp, #28]
 800a2ce:	4621      	mov	r1, r4
 800a2d0:	3b01      	subs	r3, #1
 800a2d2:	4648      	mov	r0, r9
 800a2d4:	9300      	str	r3, [sp, #0]
 800a2d6:	f7ff fa99 	bl	800980c <quorem>
 800a2da:	4639      	mov	r1, r7
 800a2dc:	9002      	str	r0, [sp, #8]
 800a2de:	f100 0830 	add.w	r8, r0, #48	@ 0x30
 800a2e2:	4648      	mov	r0, r9
 800a2e4:	f000 fca4 	bl	800ac30 <__mcmp>
 800a2e8:	462a      	mov	r2, r5
 800a2ea:	9008      	str	r0, [sp, #32]
 800a2ec:	4621      	mov	r1, r4
 800a2ee:	4658      	mov	r0, fp
 800a2f0:	f000 fcba 	bl	800ac68 <__mdiff>
 800a2f4:	68c2      	ldr	r2, [r0, #12]
 800a2f6:	4606      	mov	r6, r0
 800a2f8:	bb02      	cbnz	r2, 800a33c <_dtoa_r+0xa1c>
 800a2fa:	4601      	mov	r1, r0
 800a2fc:	4648      	mov	r0, r9
 800a2fe:	f000 fc97 	bl	800ac30 <__mcmp>
 800a302:	4602      	mov	r2, r0
 800a304:	4631      	mov	r1, r6
 800a306:	4658      	mov	r0, fp
 800a308:	920e      	str	r2, [sp, #56]	@ 0x38
 800a30a:	f000 fa0d 	bl	800a728 <_Bfree>
 800a30e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800a310:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 800a312:	9e07      	ldr	r6, [sp, #28]
 800a314:	ea43 0102 	orr.w	r1, r3, r2
 800a318:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 800a31a:	4319      	orrs	r1, r3
 800a31c:	d110      	bne.n	800a340 <_dtoa_r+0xa20>
 800a31e:	f1b8 0f39 	cmp.w	r8, #57	@ 0x39
 800a322:	d029      	beq.n	800a378 <_dtoa_r+0xa58>
 800a324:	9b08      	ldr	r3, [sp, #32]
 800a326:	2b00      	cmp	r3, #0
 800a328:	dd02      	ble.n	800a330 <_dtoa_r+0xa10>
 800a32a:	9b02      	ldr	r3, [sp, #8]
 800a32c:	f103 0831 	add.w	r8, r3, #49	@ 0x31
 800a330:	9b00      	ldr	r3, [sp, #0]
 800a332:	f883 8000 	strb.w	r8, [r3]
 800a336:	e63f      	b.n	8009fb8 <_dtoa_r+0x698>
 800a338:	4628      	mov	r0, r5
 800a33a:	e7bb      	b.n	800a2b4 <_dtoa_r+0x994>
 800a33c:	2201      	movs	r2, #1
 800a33e:	e7e1      	b.n	800a304 <_dtoa_r+0x9e4>
 800a340:	9b08      	ldr	r3, [sp, #32]
 800a342:	2b00      	cmp	r3, #0
 800a344:	db04      	blt.n	800a350 <_dtoa_r+0xa30>
 800a346:	9909      	ldr	r1, [sp, #36]	@ 0x24
 800a348:	430b      	orrs	r3, r1
 800a34a:	990a      	ldr	r1, [sp, #40]	@ 0x28
 800a34c:	430b      	orrs	r3, r1
 800a34e:	d120      	bne.n	800a392 <_dtoa_r+0xa72>
 800a350:	2a00      	cmp	r2, #0
 800a352:	dded      	ble.n	800a330 <_dtoa_r+0xa10>
 800a354:	4649      	mov	r1, r9
 800a356:	2201      	movs	r2, #1
 800a358:	4658      	mov	r0, fp
 800a35a:	f000 fbfd 	bl	800ab58 <__lshift>
 800a35e:	4621      	mov	r1, r4
 800a360:	4681      	mov	r9, r0
 800a362:	f000 fc65 	bl	800ac30 <__mcmp>
 800a366:	2800      	cmp	r0, #0
 800a368:	dc03      	bgt.n	800a372 <_dtoa_r+0xa52>
 800a36a:	d1e1      	bne.n	800a330 <_dtoa_r+0xa10>
 800a36c:	f018 0f01 	tst.w	r8, #1
 800a370:	d0de      	beq.n	800a330 <_dtoa_r+0xa10>
 800a372:	f1b8 0f39 	cmp.w	r8, #57	@ 0x39
 800a376:	d1d8      	bne.n	800a32a <_dtoa_r+0xa0a>
 800a378:	9a00      	ldr	r2, [sp, #0]
 800a37a:	2339      	movs	r3, #57	@ 0x39
 800a37c:	7013      	strb	r3, [r2, #0]
 800a37e:	4633      	mov	r3, r6
 800a380:	461e      	mov	r6, r3
 800a382:	3b01      	subs	r3, #1
 800a384:	f816 2c01 	ldrb.w	r2, [r6, #-1]
 800a388:	2a39      	cmp	r2, #57	@ 0x39
 800a38a:	d052      	beq.n	800a432 <_dtoa_r+0xb12>
 800a38c:	3201      	adds	r2, #1
 800a38e:	701a      	strb	r2, [r3, #0]
 800a390:	e612      	b.n	8009fb8 <_dtoa_r+0x698>
 800a392:	2a00      	cmp	r2, #0
 800a394:	dd07      	ble.n	800a3a6 <_dtoa_r+0xa86>
 800a396:	f1b8 0f39 	cmp.w	r8, #57	@ 0x39
 800a39a:	d0ed      	beq.n	800a378 <_dtoa_r+0xa58>
 800a39c:	9a00      	ldr	r2, [sp, #0]
 800a39e:	f108 0301 	add.w	r3, r8, #1
 800a3a2:	7013      	strb	r3, [r2, #0]
 800a3a4:	e608      	b.n	8009fb8 <_dtoa_r+0x698>
 800a3a6:	9b07      	ldr	r3, [sp, #28]
 800a3a8:	9a07      	ldr	r2, [sp, #28]
 800a3aa:	f803 8c01 	strb.w	r8, [r3, #-1]
 800a3ae:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 800a3b0:	4293      	cmp	r3, r2
 800a3b2:	d028      	beq.n	800a406 <_dtoa_r+0xae6>
 800a3b4:	4649      	mov	r1, r9
 800a3b6:	2300      	movs	r3, #0
 800a3b8:	220a      	movs	r2, #10
 800a3ba:	4658      	mov	r0, fp
 800a3bc:	f000 f9d6 	bl	800a76c <__multadd>
 800a3c0:	42af      	cmp	r7, r5
 800a3c2:	4681      	mov	r9, r0
 800a3c4:	f04f 0300 	mov.w	r3, #0
 800a3c8:	f04f 020a 	mov.w	r2, #10
 800a3cc:	4639      	mov	r1, r7
 800a3ce:	4658      	mov	r0, fp
 800a3d0:	d107      	bne.n	800a3e2 <_dtoa_r+0xac2>
 800a3d2:	f000 f9cb 	bl	800a76c <__multadd>
 800a3d6:	4607      	mov	r7, r0
 800a3d8:	4605      	mov	r5, r0
 800a3da:	9b07      	ldr	r3, [sp, #28]
 800a3dc:	3301      	adds	r3, #1
 800a3de:	9307      	str	r3, [sp, #28]
 800a3e0:	e774      	b.n	800a2cc <_dtoa_r+0x9ac>
 800a3e2:	f000 f9c3 	bl	800a76c <__multadd>
 800a3e6:	4629      	mov	r1, r5
 800a3e8:	4607      	mov	r7, r0
 800a3ea:	2300      	movs	r3, #0
 800a3ec:	220a      	movs	r2, #10
 800a3ee:	4658      	mov	r0, fp
 800a3f0:	f000 f9bc 	bl	800a76c <__multadd>
 800a3f4:	4605      	mov	r5, r0
 800a3f6:	e7f0      	b.n	800a3da <_dtoa_r+0xaba>
 800a3f8:	9b00      	ldr	r3, [sp, #0]
 800a3fa:	2b00      	cmp	r3, #0
 800a3fc:	bfcc      	ite	gt
 800a3fe:	461e      	movgt	r6, r3
 800a400:	2601      	movle	r6, #1
 800a402:	4456      	add	r6, sl
 800a404:	2700      	movs	r7, #0
 800a406:	4649      	mov	r1, r9
 800a408:	2201      	movs	r2, #1
 800a40a:	4658      	mov	r0, fp
 800a40c:	f000 fba4 	bl	800ab58 <__lshift>
 800a410:	4621      	mov	r1, r4
 800a412:	4681      	mov	r9, r0
 800a414:	f000 fc0c 	bl	800ac30 <__mcmp>
 800a418:	2800      	cmp	r0, #0
 800a41a:	dcb0      	bgt.n	800a37e <_dtoa_r+0xa5e>
 800a41c:	d102      	bne.n	800a424 <_dtoa_r+0xb04>
 800a41e:	f018 0f01 	tst.w	r8, #1
 800a422:	d1ac      	bne.n	800a37e <_dtoa_r+0xa5e>
 800a424:	4633      	mov	r3, r6
 800a426:	461e      	mov	r6, r3
 800a428:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 800a42c:	2a30      	cmp	r2, #48	@ 0x30
 800a42e:	d0fa      	beq.n	800a426 <_dtoa_r+0xb06>
 800a430:	e5c2      	b.n	8009fb8 <_dtoa_r+0x698>
 800a432:	459a      	cmp	sl, r3
 800a434:	d1a4      	bne.n	800a380 <_dtoa_r+0xa60>
 800a436:	9b04      	ldr	r3, [sp, #16]
 800a438:	3301      	adds	r3, #1
 800a43a:	9304      	str	r3, [sp, #16]
 800a43c:	2331      	movs	r3, #49	@ 0x31
 800a43e:	f88a 3000 	strb.w	r3, [sl]
 800a442:	e5b9      	b.n	8009fb8 <_dtoa_r+0x698>
 800a444:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 800a446:	f8df a05c 	ldr.w	sl, [pc, #92]	@ 800a4a4 <_dtoa_r+0xb84>
 800a44a:	b11b      	cbz	r3, 800a454 <_dtoa_r+0xb34>
 800a44c:	f10a 0308 	add.w	r3, sl, #8
 800a450:	9a23      	ldr	r2, [sp, #140]	@ 0x8c
 800a452:	6013      	str	r3, [r2, #0]
 800a454:	4650      	mov	r0, sl
 800a456:	b019      	add	sp, #100	@ 0x64
 800a458:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800a45c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800a45e:	2b01      	cmp	r3, #1
 800a460:	f77f ae37 	ble.w	800a0d2 <_dtoa_r+0x7b2>
 800a464:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 800a466:	930a      	str	r3, [sp, #40]	@ 0x28
 800a468:	2001      	movs	r0, #1
 800a46a:	e655      	b.n	800a118 <_dtoa_r+0x7f8>
 800a46c:	9b00      	ldr	r3, [sp, #0]
 800a46e:	2b00      	cmp	r3, #0
 800a470:	f77f aed6 	ble.w	800a220 <_dtoa_r+0x900>
 800a474:	4656      	mov	r6, sl
 800a476:	4621      	mov	r1, r4
 800a478:	4648      	mov	r0, r9
 800a47a:	f7ff f9c7 	bl	800980c <quorem>
 800a47e:	f100 0830 	add.w	r8, r0, #48	@ 0x30
 800a482:	f806 8b01 	strb.w	r8, [r6], #1
 800a486:	9b00      	ldr	r3, [sp, #0]
 800a488:	eba6 020a 	sub.w	r2, r6, sl
 800a48c:	4293      	cmp	r3, r2
 800a48e:	ddb3      	ble.n	800a3f8 <_dtoa_r+0xad8>
 800a490:	4649      	mov	r1, r9
 800a492:	2300      	movs	r3, #0
 800a494:	220a      	movs	r2, #10
 800a496:	4658      	mov	r0, fp
 800a498:	f000 f968 	bl	800a76c <__multadd>
 800a49c:	4681      	mov	r9, r0
 800a49e:	e7ea      	b.n	800a476 <_dtoa_r+0xb56>
 800a4a0:	0800d0e5 	.word	0x0800d0e5
 800a4a4:	0800d069 	.word	0x0800d069

0800a4a8 <_free_r>:
 800a4a8:	b538      	push	{r3, r4, r5, lr}
 800a4aa:	4605      	mov	r5, r0
 800a4ac:	2900      	cmp	r1, #0
 800a4ae:	d041      	beq.n	800a534 <_free_r+0x8c>
 800a4b0:	f851 3c04 	ldr.w	r3, [r1, #-4]
 800a4b4:	1f0c      	subs	r4, r1, #4
 800a4b6:	2b00      	cmp	r3, #0
 800a4b8:	bfb8      	it	lt
 800a4ba:	18e4      	addlt	r4, r4, r3
 800a4bc:	f000 f8e8 	bl	800a690 <__malloc_lock>
 800a4c0:	4a1d      	ldr	r2, [pc, #116]	@ (800a538 <_free_r+0x90>)
 800a4c2:	6813      	ldr	r3, [r2, #0]
 800a4c4:	b933      	cbnz	r3, 800a4d4 <_free_r+0x2c>
 800a4c6:	6063      	str	r3, [r4, #4]
 800a4c8:	6014      	str	r4, [r2, #0]
 800a4ca:	4628      	mov	r0, r5
 800a4cc:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800a4d0:	f000 b8e4 	b.w	800a69c <__malloc_unlock>
 800a4d4:	42a3      	cmp	r3, r4
 800a4d6:	d908      	bls.n	800a4ea <_free_r+0x42>
 800a4d8:	6820      	ldr	r0, [r4, #0]
 800a4da:	1821      	adds	r1, r4, r0
 800a4dc:	428b      	cmp	r3, r1
 800a4de:	bf01      	itttt	eq
 800a4e0:	6819      	ldreq	r1, [r3, #0]
 800a4e2:	685b      	ldreq	r3, [r3, #4]
 800a4e4:	1809      	addeq	r1, r1, r0
 800a4e6:	6021      	streq	r1, [r4, #0]
 800a4e8:	e7ed      	b.n	800a4c6 <_free_r+0x1e>
 800a4ea:	461a      	mov	r2, r3
 800a4ec:	685b      	ldr	r3, [r3, #4]
 800a4ee:	b10b      	cbz	r3, 800a4f4 <_free_r+0x4c>
 800a4f0:	42a3      	cmp	r3, r4
 800a4f2:	d9fa      	bls.n	800a4ea <_free_r+0x42>
 800a4f4:	6811      	ldr	r1, [r2, #0]
 800a4f6:	1850      	adds	r0, r2, r1
 800a4f8:	42a0      	cmp	r0, r4
 800a4fa:	d10b      	bne.n	800a514 <_free_r+0x6c>
 800a4fc:	6820      	ldr	r0, [r4, #0]
 800a4fe:	4401      	add	r1, r0
 800a500:	1850      	adds	r0, r2, r1
 800a502:	4283      	cmp	r3, r0
 800a504:	6011      	str	r1, [r2, #0]
 800a506:	d1e0      	bne.n	800a4ca <_free_r+0x22>
 800a508:	6818      	ldr	r0, [r3, #0]
 800a50a:	685b      	ldr	r3, [r3, #4]
 800a50c:	6053      	str	r3, [r2, #4]
 800a50e:	4408      	add	r0, r1
 800a510:	6010      	str	r0, [r2, #0]
 800a512:	e7da      	b.n	800a4ca <_free_r+0x22>
 800a514:	d902      	bls.n	800a51c <_free_r+0x74>
 800a516:	230c      	movs	r3, #12
 800a518:	602b      	str	r3, [r5, #0]
 800a51a:	e7d6      	b.n	800a4ca <_free_r+0x22>
 800a51c:	6820      	ldr	r0, [r4, #0]
 800a51e:	1821      	adds	r1, r4, r0
 800a520:	428b      	cmp	r3, r1
 800a522:	bf04      	itt	eq
 800a524:	6819      	ldreq	r1, [r3, #0]
 800a526:	685b      	ldreq	r3, [r3, #4]
 800a528:	6063      	str	r3, [r4, #4]
 800a52a:	bf04      	itt	eq
 800a52c:	1809      	addeq	r1, r1, r0
 800a52e:	6021      	streq	r1, [r4, #0]
 800a530:	6054      	str	r4, [r2, #4]
 800a532:	e7ca      	b.n	800a4ca <_free_r+0x22>
 800a534:	bd38      	pop	{r3, r4, r5, pc}
 800a536:	bf00      	nop
 800a538:	200007fc 	.word	0x200007fc

0800a53c <malloc>:
 800a53c:	4b02      	ldr	r3, [pc, #8]	@ (800a548 <malloc+0xc>)
 800a53e:	4601      	mov	r1, r0
 800a540:	6818      	ldr	r0, [r3, #0]
 800a542:	f000 b825 	b.w	800a590 <_malloc_r>
 800a546:	bf00      	nop
 800a548:	20000040 	.word	0x20000040

0800a54c <sbrk_aligned>:
 800a54c:	b570      	push	{r4, r5, r6, lr}
 800a54e:	4e0f      	ldr	r6, [pc, #60]	@ (800a58c <sbrk_aligned+0x40>)
 800a550:	460c      	mov	r4, r1
 800a552:	6831      	ldr	r1, [r6, #0]
 800a554:	4605      	mov	r5, r0
 800a556:	b911      	cbnz	r1, 800a55e <sbrk_aligned+0x12>
 800a558:	f001 ffd2 	bl	800c500 <_sbrk_r>
 800a55c:	6030      	str	r0, [r6, #0]
 800a55e:	4621      	mov	r1, r4
 800a560:	4628      	mov	r0, r5
 800a562:	f001 ffcd 	bl	800c500 <_sbrk_r>
 800a566:	1c43      	adds	r3, r0, #1
 800a568:	d103      	bne.n	800a572 <sbrk_aligned+0x26>
 800a56a:	f04f 34ff 	mov.w	r4, #4294967295
 800a56e:	4620      	mov	r0, r4
 800a570:	bd70      	pop	{r4, r5, r6, pc}
 800a572:	1cc4      	adds	r4, r0, #3
 800a574:	f024 0403 	bic.w	r4, r4, #3
 800a578:	42a0      	cmp	r0, r4
 800a57a:	d0f8      	beq.n	800a56e <sbrk_aligned+0x22>
 800a57c:	1a21      	subs	r1, r4, r0
 800a57e:	4628      	mov	r0, r5
 800a580:	f001 ffbe 	bl	800c500 <_sbrk_r>
 800a584:	3001      	adds	r0, #1
 800a586:	d1f2      	bne.n	800a56e <sbrk_aligned+0x22>
 800a588:	e7ef      	b.n	800a56a <sbrk_aligned+0x1e>
 800a58a:	bf00      	nop
 800a58c:	200007f8 	.word	0x200007f8

0800a590 <_malloc_r>:
 800a590:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800a594:	1ccd      	adds	r5, r1, #3
 800a596:	f025 0503 	bic.w	r5, r5, #3
 800a59a:	3508      	adds	r5, #8
 800a59c:	2d0c      	cmp	r5, #12
 800a59e:	bf38      	it	cc
 800a5a0:	250c      	movcc	r5, #12
 800a5a2:	2d00      	cmp	r5, #0
 800a5a4:	4606      	mov	r6, r0
 800a5a6:	db01      	blt.n	800a5ac <_malloc_r+0x1c>
 800a5a8:	42a9      	cmp	r1, r5
 800a5aa:	d904      	bls.n	800a5b6 <_malloc_r+0x26>
 800a5ac:	230c      	movs	r3, #12
 800a5ae:	6033      	str	r3, [r6, #0]
 800a5b0:	2000      	movs	r0, #0
 800a5b2:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800a5b6:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 800a68c <_malloc_r+0xfc>
 800a5ba:	f000 f869 	bl	800a690 <__malloc_lock>
 800a5be:	f8d8 3000 	ldr.w	r3, [r8]
 800a5c2:	461c      	mov	r4, r3
 800a5c4:	bb44      	cbnz	r4, 800a618 <_malloc_r+0x88>
 800a5c6:	4629      	mov	r1, r5
 800a5c8:	4630      	mov	r0, r6
 800a5ca:	f7ff ffbf 	bl	800a54c <sbrk_aligned>
 800a5ce:	1c43      	adds	r3, r0, #1
 800a5d0:	4604      	mov	r4, r0
 800a5d2:	d158      	bne.n	800a686 <_malloc_r+0xf6>
 800a5d4:	f8d8 4000 	ldr.w	r4, [r8]
 800a5d8:	4627      	mov	r7, r4
 800a5da:	2f00      	cmp	r7, #0
 800a5dc:	d143      	bne.n	800a666 <_malloc_r+0xd6>
 800a5de:	2c00      	cmp	r4, #0
 800a5e0:	d04b      	beq.n	800a67a <_malloc_r+0xea>
 800a5e2:	6823      	ldr	r3, [r4, #0]
 800a5e4:	4639      	mov	r1, r7
 800a5e6:	4630      	mov	r0, r6
 800a5e8:	eb04 0903 	add.w	r9, r4, r3
 800a5ec:	f001 ff88 	bl	800c500 <_sbrk_r>
 800a5f0:	4581      	cmp	r9, r0
 800a5f2:	d142      	bne.n	800a67a <_malloc_r+0xea>
 800a5f4:	6821      	ldr	r1, [r4, #0]
 800a5f6:	1a6d      	subs	r5, r5, r1
 800a5f8:	4629      	mov	r1, r5
 800a5fa:	4630      	mov	r0, r6
 800a5fc:	f7ff ffa6 	bl	800a54c <sbrk_aligned>
 800a600:	3001      	adds	r0, #1
 800a602:	d03a      	beq.n	800a67a <_malloc_r+0xea>
 800a604:	6823      	ldr	r3, [r4, #0]
 800a606:	442b      	add	r3, r5
 800a608:	6023      	str	r3, [r4, #0]
 800a60a:	f8d8 3000 	ldr.w	r3, [r8]
 800a60e:	685a      	ldr	r2, [r3, #4]
 800a610:	bb62      	cbnz	r2, 800a66c <_malloc_r+0xdc>
 800a612:	f8c8 7000 	str.w	r7, [r8]
 800a616:	e00f      	b.n	800a638 <_malloc_r+0xa8>
 800a618:	6822      	ldr	r2, [r4, #0]
 800a61a:	1b52      	subs	r2, r2, r5
 800a61c:	d420      	bmi.n	800a660 <_malloc_r+0xd0>
 800a61e:	2a0b      	cmp	r2, #11
 800a620:	d917      	bls.n	800a652 <_malloc_r+0xc2>
 800a622:	1961      	adds	r1, r4, r5
 800a624:	42a3      	cmp	r3, r4
 800a626:	6025      	str	r5, [r4, #0]
 800a628:	bf18      	it	ne
 800a62a:	6059      	strne	r1, [r3, #4]
 800a62c:	6863      	ldr	r3, [r4, #4]
 800a62e:	bf08      	it	eq
 800a630:	f8c8 1000 	streq.w	r1, [r8]
 800a634:	5162      	str	r2, [r4, r5]
 800a636:	604b      	str	r3, [r1, #4]
 800a638:	4630      	mov	r0, r6
 800a63a:	f000 f82f 	bl	800a69c <__malloc_unlock>
 800a63e:	f104 000b 	add.w	r0, r4, #11
 800a642:	1d23      	adds	r3, r4, #4
 800a644:	f020 0007 	bic.w	r0, r0, #7
 800a648:	1ac2      	subs	r2, r0, r3
 800a64a:	bf1c      	itt	ne
 800a64c:	1a1b      	subne	r3, r3, r0
 800a64e:	50a3      	strne	r3, [r4, r2]
 800a650:	e7af      	b.n	800a5b2 <_malloc_r+0x22>
 800a652:	6862      	ldr	r2, [r4, #4]
 800a654:	42a3      	cmp	r3, r4
 800a656:	bf0c      	ite	eq
 800a658:	f8c8 2000 	streq.w	r2, [r8]
 800a65c:	605a      	strne	r2, [r3, #4]
 800a65e:	e7eb      	b.n	800a638 <_malloc_r+0xa8>
 800a660:	4623      	mov	r3, r4
 800a662:	6864      	ldr	r4, [r4, #4]
 800a664:	e7ae      	b.n	800a5c4 <_malloc_r+0x34>
 800a666:	463c      	mov	r4, r7
 800a668:	687f      	ldr	r7, [r7, #4]
 800a66a:	e7b6      	b.n	800a5da <_malloc_r+0x4a>
 800a66c:	461a      	mov	r2, r3
 800a66e:	685b      	ldr	r3, [r3, #4]
 800a670:	42a3      	cmp	r3, r4
 800a672:	d1fb      	bne.n	800a66c <_malloc_r+0xdc>
 800a674:	2300      	movs	r3, #0
 800a676:	6053      	str	r3, [r2, #4]
 800a678:	e7de      	b.n	800a638 <_malloc_r+0xa8>
 800a67a:	230c      	movs	r3, #12
 800a67c:	6033      	str	r3, [r6, #0]
 800a67e:	4630      	mov	r0, r6
 800a680:	f000 f80c 	bl	800a69c <__malloc_unlock>
 800a684:	e794      	b.n	800a5b0 <_malloc_r+0x20>
 800a686:	6005      	str	r5, [r0, #0]
 800a688:	e7d6      	b.n	800a638 <_malloc_r+0xa8>
 800a68a:	bf00      	nop
 800a68c:	200007fc 	.word	0x200007fc

0800a690 <__malloc_lock>:
 800a690:	4801      	ldr	r0, [pc, #4]	@ (800a698 <__malloc_lock+0x8>)
 800a692:	f7ff b8a4 	b.w	80097de <__retarget_lock_acquire_recursive>
 800a696:	bf00      	nop
 800a698:	200007f4 	.word	0x200007f4

0800a69c <__malloc_unlock>:
 800a69c:	4801      	ldr	r0, [pc, #4]	@ (800a6a4 <__malloc_unlock+0x8>)
 800a69e:	f7ff b89f 	b.w	80097e0 <__retarget_lock_release_recursive>
 800a6a2:	bf00      	nop
 800a6a4:	200007f4 	.word	0x200007f4

0800a6a8 <_Balloc>:
 800a6a8:	b570      	push	{r4, r5, r6, lr}
 800a6aa:	69c6      	ldr	r6, [r0, #28]
 800a6ac:	4604      	mov	r4, r0
 800a6ae:	460d      	mov	r5, r1
 800a6b0:	b976      	cbnz	r6, 800a6d0 <_Balloc+0x28>
 800a6b2:	2010      	movs	r0, #16
 800a6b4:	f7ff ff42 	bl	800a53c <malloc>
 800a6b8:	4602      	mov	r2, r0
 800a6ba:	61e0      	str	r0, [r4, #28]
 800a6bc:	b920      	cbnz	r0, 800a6c8 <_Balloc+0x20>
 800a6be:	4b18      	ldr	r3, [pc, #96]	@ (800a720 <_Balloc+0x78>)
 800a6c0:	4818      	ldr	r0, [pc, #96]	@ (800a724 <_Balloc+0x7c>)
 800a6c2:	216b      	movs	r1, #107	@ 0x6b
 800a6c4:	f001 ff34 	bl	800c530 <__assert_func>
 800a6c8:	e9c0 6601 	strd	r6, r6, [r0, #4]
 800a6cc:	6006      	str	r6, [r0, #0]
 800a6ce:	60c6      	str	r6, [r0, #12]
 800a6d0:	69e6      	ldr	r6, [r4, #28]
 800a6d2:	68f3      	ldr	r3, [r6, #12]
 800a6d4:	b183      	cbz	r3, 800a6f8 <_Balloc+0x50>
 800a6d6:	69e3      	ldr	r3, [r4, #28]
 800a6d8:	68db      	ldr	r3, [r3, #12]
 800a6da:	f853 0025 	ldr.w	r0, [r3, r5, lsl #2]
 800a6de:	b9b8      	cbnz	r0, 800a710 <_Balloc+0x68>
 800a6e0:	2101      	movs	r1, #1
 800a6e2:	fa01 f605 	lsl.w	r6, r1, r5
 800a6e6:	1d72      	adds	r2, r6, #5
 800a6e8:	0092      	lsls	r2, r2, #2
 800a6ea:	4620      	mov	r0, r4
 800a6ec:	f001 ff3e 	bl	800c56c <_calloc_r>
 800a6f0:	b160      	cbz	r0, 800a70c <_Balloc+0x64>
 800a6f2:	e9c0 5601 	strd	r5, r6, [r0, #4]
 800a6f6:	e00e      	b.n	800a716 <_Balloc+0x6e>
 800a6f8:	2221      	movs	r2, #33	@ 0x21
 800a6fa:	2104      	movs	r1, #4
 800a6fc:	4620      	mov	r0, r4
 800a6fe:	f001 ff35 	bl	800c56c <_calloc_r>
 800a702:	69e3      	ldr	r3, [r4, #28]
 800a704:	60f0      	str	r0, [r6, #12]
 800a706:	68db      	ldr	r3, [r3, #12]
 800a708:	2b00      	cmp	r3, #0
 800a70a:	d1e4      	bne.n	800a6d6 <_Balloc+0x2e>
 800a70c:	2000      	movs	r0, #0
 800a70e:	bd70      	pop	{r4, r5, r6, pc}
 800a710:	6802      	ldr	r2, [r0, #0]
 800a712:	f843 2025 	str.w	r2, [r3, r5, lsl #2]
 800a716:	2300      	movs	r3, #0
 800a718:	e9c0 3303 	strd	r3, r3, [r0, #12]
 800a71c:	e7f7      	b.n	800a70e <_Balloc+0x66>
 800a71e:	bf00      	nop
 800a720:	0800d076 	.word	0x0800d076
 800a724:	0800d0f6 	.word	0x0800d0f6

0800a728 <_Bfree>:
 800a728:	b570      	push	{r4, r5, r6, lr}
 800a72a:	69c6      	ldr	r6, [r0, #28]
 800a72c:	4605      	mov	r5, r0
 800a72e:	460c      	mov	r4, r1
 800a730:	b976      	cbnz	r6, 800a750 <_Bfree+0x28>
 800a732:	2010      	movs	r0, #16
 800a734:	f7ff ff02 	bl	800a53c <malloc>
 800a738:	4602      	mov	r2, r0
 800a73a:	61e8      	str	r0, [r5, #28]
 800a73c:	b920      	cbnz	r0, 800a748 <_Bfree+0x20>
 800a73e:	4b09      	ldr	r3, [pc, #36]	@ (800a764 <_Bfree+0x3c>)
 800a740:	4809      	ldr	r0, [pc, #36]	@ (800a768 <_Bfree+0x40>)
 800a742:	218f      	movs	r1, #143	@ 0x8f
 800a744:	f001 fef4 	bl	800c530 <__assert_func>
 800a748:	e9c0 6601 	strd	r6, r6, [r0, #4]
 800a74c:	6006      	str	r6, [r0, #0]
 800a74e:	60c6      	str	r6, [r0, #12]
 800a750:	b13c      	cbz	r4, 800a762 <_Bfree+0x3a>
 800a752:	69eb      	ldr	r3, [r5, #28]
 800a754:	6862      	ldr	r2, [r4, #4]
 800a756:	68db      	ldr	r3, [r3, #12]
 800a758:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 800a75c:	6021      	str	r1, [r4, #0]
 800a75e:	f843 4022 	str.w	r4, [r3, r2, lsl #2]
 800a762:	bd70      	pop	{r4, r5, r6, pc}
 800a764:	0800d076 	.word	0x0800d076
 800a768:	0800d0f6 	.word	0x0800d0f6

0800a76c <__multadd>:
 800a76c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800a770:	690d      	ldr	r5, [r1, #16]
 800a772:	4607      	mov	r7, r0
 800a774:	460c      	mov	r4, r1
 800a776:	461e      	mov	r6, r3
 800a778:	f101 0c14 	add.w	ip, r1, #20
 800a77c:	2000      	movs	r0, #0
 800a77e:	f8dc 3000 	ldr.w	r3, [ip]
 800a782:	b299      	uxth	r1, r3
 800a784:	fb02 6101 	mla	r1, r2, r1, r6
 800a788:	0c1e      	lsrs	r6, r3, #16
 800a78a:	0c0b      	lsrs	r3, r1, #16
 800a78c:	fb02 3306 	mla	r3, r2, r6, r3
 800a790:	b289      	uxth	r1, r1
 800a792:	3001      	adds	r0, #1
 800a794:	eb01 4103 	add.w	r1, r1, r3, lsl #16
 800a798:	4285      	cmp	r5, r0
 800a79a:	f84c 1b04 	str.w	r1, [ip], #4
 800a79e:	ea4f 4613 	mov.w	r6, r3, lsr #16
 800a7a2:	dcec      	bgt.n	800a77e <__multadd+0x12>
 800a7a4:	b30e      	cbz	r6, 800a7ea <__multadd+0x7e>
 800a7a6:	68a3      	ldr	r3, [r4, #8]
 800a7a8:	42ab      	cmp	r3, r5
 800a7aa:	dc19      	bgt.n	800a7e0 <__multadd+0x74>
 800a7ac:	6861      	ldr	r1, [r4, #4]
 800a7ae:	4638      	mov	r0, r7
 800a7b0:	3101      	adds	r1, #1
 800a7b2:	f7ff ff79 	bl	800a6a8 <_Balloc>
 800a7b6:	4680      	mov	r8, r0
 800a7b8:	b928      	cbnz	r0, 800a7c6 <__multadd+0x5a>
 800a7ba:	4602      	mov	r2, r0
 800a7bc:	4b0c      	ldr	r3, [pc, #48]	@ (800a7f0 <__multadd+0x84>)
 800a7be:	480d      	ldr	r0, [pc, #52]	@ (800a7f4 <__multadd+0x88>)
 800a7c0:	21ba      	movs	r1, #186	@ 0xba
 800a7c2:	f001 feb5 	bl	800c530 <__assert_func>
 800a7c6:	6922      	ldr	r2, [r4, #16]
 800a7c8:	3202      	adds	r2, #2
 800a7ca:	f104 010c 	add.w	r1, r4, #12
 800a7ce:	0092      	lsls	r2, r2, #2
 800a7d0:	300c      	adds	r0, #12
 800a7d2:	f7ff f806 	bl	80097e2 <memcpy>
 800a7d6:	4621      	mov	r1, r4
 800a7d8:	4638      	mov	r0, r7
 800a7da:	f7ff ffa5 	bl	800a728 <_Bfree>
 800a7de:	4644      	mov	r4, r8
 800a7e0:	eb04 0385 	add.w	r3, r4, r5, lsl #2
 800a7e4:	3501      	adds	r5, #1
 800a7e6:	615e      	str	r6, [r3, #20]
 800a7e8:	6125      	str	r5, [r4, #16]
 800a7ea:	4620      	mov	r0, r4
 800a7ec:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800a7f0:	0800d0e5 	.word	0x0800d0e5
 800a7f4:	0800d0f6 	.word	0x0800d0f6

0800a7f8 <__s2b>:
 800a7f8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800a7fc:	460c      	mov	r4, r1
 800a7fe:	4615      	mov	r5, r2
 800a800:	461f      	mov	r7, r3
 800a802:	2209      	movs	r2, #9
 800a804:	3308      	adds	r3, #8
 800a806:	4606      	mov	r6, r0
 800a808:	fb93 f3f2 	sdiv	r3, r3, r2
 800a80c:	2100      	movs	r1, #0
 800a80e:	2201      	movs	r2, #1
 800a810:	429a      	cmp	r2, r3
 800a812:	db09      	blt.n	800a828 <__s2b+0x30>
 800a814:	4630      	mov	r0, r6
 800a816:	f7ff ff47 	bl	800a6a8 <_Balloc>
 800a81a:	b940      	cbnz	r0, 800a82e <__s2b+0x36>
 800a81c:	4602      	mov	r2, r0
 800a81e:	4b19      	ldr	r3, [pc, #100]	@ (800a884 <__s2b+0x8c>)
 800a820:	4819      	ldr	r0, [pc, #100]	@ (800a888 <__s2b+0x90>)
 800a822:	21d3      	movs	r1, #211	@ 0xd3
 800a824:	f001 fe84 	bl	800c530 <__assert_func>
 800a828:	0052      	lsls	r2, r2, #1
 800a82a:	3101      	adds	r1, #1
 800a82c:	e7f0      	b.n	800a810 <__s2b+0x18>
 800a82e:	9b08      	ldr	r3, [sp, #32]
 800a830:	6143      	str	r3, [r0, #20]
 800a832:	2d09      	cmp	r5, #9
 800a834:	f04f 0301 	mov.w	r3, #1
 800a838:	6103      	str	r3, [r0, #16]
 800a83a:	dd16      	ble.n	800a86a <__s2b+0x72>
 800a83c:	f104 0909 	add.w	r9, r4, #9
 800a840:	46c8      	mov	r8, r9
 800a842:	442c      	add	r4, r5
 800a844:	f818 3b01 	ldrb.w	r3, [r8], #1
 800a848:	4601      	mov	r1, r0
 800a84a:	3b30      	subs	r3, #48	@ 0x30
 800a84c:	220a      	movs	r2, #10
 800a84e:	4630      	mov	r0, r6
 800a850:	f7ff ff8c 	bl	800a76c <__multadd>
 800a854:	45a0      	cmp	r8, r4
 800a856:	d1f5      	bne.n	800a844 <__s2b+0x4c>
 800a858:	f1a5 0408 	sub.w	r4, r5, #8
 800a85c:	444c      	add	r4, r9
 800a85e:	1b2d      	subs	r5, r5, r4
 800a860:	1963      	adds	r3, r4, r5
 800a862:	42bb      	cmp	r3, r7
 800a864:	db04      	blt.n	800a870 <__s2b+0x78>
 800a866:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800a86a:	340a      	adds	r4, #10
 800a86c:	2509      	movs	r5, #9
 800a86e:	e7f6      	b.n	800a85e <__s2b+0x66>
 800a870:	f814 3b01 	ldrb.w	r3, [r4], #1
 800a874:	4601      	mov	r1, r0
 800a876:	3b30      	subs	r3, #48	@ 0x30
 800a878:	220a      	movs	r2, #10
 800a87a:	4630      	mov	r0, r6
 800a87c:	f7ff ff76 	bl	800a76c <__multadd>
 800a880:	e7ee      	b.n	800a860 <__s2b+0x68>
 800a882:	bf00      	nop
 800a884:	0800d0e5 	.word	0x0800d0e5
 800a888:	0800d0f6 	.word	0x0800d0f6

0800a88c <__hi0bits>:
 800a88c:	f5b0 3f80 	cmp.w	r0, #65536	@ 0x10000
 800a890:	4603      	mov	r3, r0
 800a892:	bf36      	itet	cc
 800a894:	0403      	lslcc	r3, r0, #16
 800a896:	2000      	movcs	r0, #0
 800a898:	2010      	movcc	r0, #16
 800a89a:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 800a89e:	bf3c      	itt	cc
 800a8a0:	021b      	lslcc	r3, r3, #8
 800a8a2:	3008      	addcc	r0, #8
 800a8a4:	f1b3 5f80 	cmp.w	r3, #268435456	@ 0x10000000
 800a8a8:	bf3c      	itt	cc
 800a8aa:	011b      	lslcc	r3, r3, #4
 800a8ac:	3004      	addcc	r0, #4
 800a8ae:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 800a8b2:	bf3c      	itt	cc
 800a8b4:	009b      	lslcc	r3, r3, #2
 800a8b6:	3002      	addcc	r0, #2
 800a8b8:	2b00      	cmp	r3, #0
 800a8ba:	db05      	blt.n	800a8c8 <__hi0bits+0x3c>
 800a8bc:	f013 4f80 	tst.w	r3, #1073741824	@ 0x40000000
 800a8c0:	f100 0001 	add.w	r0, r0, #1
 800a8c4:	bf08      	it	eq
 800a8c6:	2020      	moveq	r0, #32
 800a8c8:	4770      	bx	lr

0800a8ca <__lo0bits>:
 800a8ca:	6803      	ldr	r3, [r0, #0]
 800a8cc:	4602      	mov	r2, r0
 800a8ce:	f013 0007 	ands.w	r0, r3, #7
 800a8d2:	d00b      	beq.n	800a8ec <__lo0bits+0x22>
 800a8d4:	07d9      	lsls	r1, r3, #31
 800a8d6:	d421      	bmi.n	800a91c <__lo0bits+0x52>
 800a8d8:	0798      	lsls	r0, r3, #30
 800a8da:	bf49      	itett	mi
 800a8dc:	085b      	lsrmi	r3, r3, #1
 800a8de:	089b      	lsrpl	r3, r3, #2
 800a8e0:	2001      	movmi	r0, #1
 800a8e2:	6013      	strmi	r3, [r2, #0]
 800a8e4:	bf5c      	itt	pl
 800a8e6:	6013      	strpl	r3, [r2, #0]
 800a8e8:	2002      	movpl	r0, #2
 800a8ea:	4770      	bx	lr
 800a8ec:	b299      	uxth	r1, r3
 800a8ee:	b909      	cbnz	r1, 800a8f4 <__lo0bits+0x2a>
 800a8f0:	0c1b      	lsrs	r3, r3, #16
 800a8f2:	2010      	movs	r0, #16
 800a8f4:	b2d9      	uxtb	r1, r3
 800a8f6:	b909      	cbnz	r1, 800a8fc <__lo0bits+0x32>
 800a8f8:	3008      	adds	r0, #8
 800a8fa:	0a1b      	lsrs	r3, r3, #8
 800a8fc:	0719      	lsls	r1, r3, #28
 800a8fe:	bf04      	itt	eq
 800a900:	091b      	lsreq	r3, r3, #4
 800a902:	3004      	addeq	r0, #4
 800a904:	0799      	lsls	r1, r3, #30
 800a906:	bf04      	itt	eq
 800a908:	089b      	lsreq	r3, r3, #2
 800a90a:	3002      	addeq	r0, #2
 800a90c:	07d9      	lsls	r1, r3, #31
 800a90e:	d403      	bmi.n	800a918 <__lo0bits+0x4e>
 800a910:	085b      	lsrs	r3, r3, #1
 800a912:	f100 0001 	add.w	r0, r0, #1
 800a916:	d003      	beq.n	800a920 <__lo0bits+0x56>
 800a918:	6013      	str	r3, [r2, #0]
 800a91a:	4770      	bx	lr
 800a91c:	2000      	movs	r0, #0
 800a91e:	4770      	bx	lr
 800a920:	2020      	movs	r0, #32
 800a922:	4770      	bx	lr

0800a924 <__i2b>:
 800a924:	b510      	push	{r4, lr}
 800a926:	460c      	mov	r4, r1
 800a928:	2101      	movs	r1, #1
 800a92a:	f7ff febd 	bl	800a6a8 <_Balloc>
 800a92e:	4602      	mov	r2, r0
 800a930:	b928      	cbnz	r0, 800a93e <__i2b+0x1a>
 800a932:	4b05      	ldr	r3, [pc, #20]	@ (800a948 <__i2b+0x24>)
 800a934:	4805      	ldr	r0, [pc, #20]	@ (800a94c <__i2b+0x28>)
 800a936:	f240 1145 	movw	r1, #325	@ 0x145
 800a93a:	f001 fdf9 	bl	800c530 <__assert_func>
 800a93e:	2301      	movs	r3, #1
 800a940:	6144      	str	r4, [r0, #20]
 800a942:	6103      	str	r3, [r0, #16]
 800a944:	bd10      	pop	{r4, pc}
 800a946:	bf00      	nop
 800a948:	0800d0e5 	.word	0x0800d0e5
 800a94c:	0800d0f6 	.word	0x0800d0f6

0800a950 <__multiply>:
 800a950:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800a954:	4614      	mov	r4, r2
 800a956:	690a      	ldr	r2, [r1, #16]
 800a958:	6923      	ldr	r3, [r4, #16]
 800a95a:	429a      	cmp	r2, r3
 800a95c:	bfa8      	it	ge
 800a95e:	4623      	movge	r3, r4
 800a960:	460f      	mov	r7, r1
 800a962:	bfa4      	itt	ge
 800a964:	460c      	movge	r4, r1
 800a966:	461f      	movge	r7, r3
 800a968:	f8d4 a010 	ldr.w	sl, [r4, #16]
 800a96c:	f8d7 9010 	ldr.w	r9, [r7, #16]
 800a970:	68a3      	ldr	r3, [r4, #8]
 800a972:	6861      	ldr	r1, [r4, #4]
 800a974:	eb0a 0609 	add.w	r6, sl, r9
 800a978:	42b3      	cmp	r3, r6
 800a97a:	b085      	sub	sp, #20
 800a97c:	bfb8      	it	lt
 800a97e:	3101      	addlt	r1, #1
 800a980:	f7ff fe92 	bl	800a6a8 <_Balloc>
 800a984:	b930      	cbnz	r0, 800a994 <__multiply+0x44>
 800a986:	4602      	mov	r2, r0
 800a988:	4b44      	ldr	r3, [pc, #272]	@ (800aa9c <__multiply+0x14c>)
 800a98a:	4845      	ldr	r0, [pc, #276]	@ (800aaa0 <__multiply+0x150>)
 800a98c:	f44f 71b1 	mov.w	r1, #354	@ 0x162
 800a990:	f001 fdce 	bl	800c530 <__assert_func>
 800a994:	f100 0514 	add.w	r5, r0, #20
 800a998:	eb05 0886 	add.w	r8, r5, r6, lsl #2
 800a99c:	462b      	mov	r3, r5
 800a99e:	2200      	movs	r2, #0
 800a9a0:	4543      	cmp	r3, r8
 800a9a2:	d321      	bcc.n	800a9e8 <__multiply+0x98>
 800a9a4:	f107 0114 	add.w	r1, r7, #20
 800a9a8:	f104 0214 	add.w	r2, r4, #20
 800a9ac:	eb02 028a 	add.w	r2, r2, sl, lsl #2
 800a9b0:	eb01 0389 	add.w	r3, r1, r9, lsl #2
 800a9b4:	9302      	str	r3, [sp, #8]
 800a9b6:	1b13      	subs	r3, r2, r4
 800a9b8:	3b15      	subs	r3, #21
 800a9ba:	f023 0303 	bic.w	r3, r3, #3
 800a9be:	3304      	adds	r3, #4
 800a9c0:	f104 0715 	add.w	r7, r4, #21
 800a9c4:	42ba      	cmp	r2, r7
 800a9c6:	bf38      	it	cc
 800a9c8:	2304      	movcc	r3, #4
 800a9ca:	9301      	str	r3, [sp, #4]
 800a9cc:	9b02      	ldr	r3, [sp, #8]
 800a9ce:	9103      	str	r1, [sp, #12]
 800a9d0:	428b      	cmp	r3, r1
 800a9d2:	d80c      	bhi.n	800a9ee <__multiply+0x9e>
 800a9d4:	2e00      	cmp	r6, #0
 800a9d6:	dd03      	ble.n	800a9e0 <__multiply+0x90>
 800a9d8:	f858 3d04 	ldr.w	r3, [r8, #-4]!
 800a9dc:	2b00      	cmp	r3, #0
 800a9de:	d05b      	beq.n	800aa98 <__multiply+0x148>
 800a9e0:	6106      	str	r6, [r0, #16]
 800a9e2:	b005      	add	sp, #20
 800a9e4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800a9e8:	f843 2b04 	str.w	r2, [r3], #4
 800a9ec:	e7d8      	b.n	800a9a0 <__multiply+0x50>
 800a9ee:	f8b1 a000 	ldrh.w	sl, [r1]
 800a9f2:	f1ba 0f00 	cmp.w	sl, #0
 800a9f6:	d024      	beq.n	800aa42 <__multiply+0xf2>
 800a9f8:	f104 0e14 	add.w	lr, r4, #20
 800a9fc:	46a9      	mov	r9, r5
 800a9fe:	f04f 0c00 	mov.w	ip, #0
 800aa02:	f85e 7b04 	ldr.w	r7, [lr], #4
 800aa06:	f8d9 3000 	ldr.w	r3, [r9]
 800aa0a:	fa1f fb87 	uxth.w	fp, r7
 800aa0e:	b29b      	uxth	r3, r3
 800aa10:	fb0a 330b 	mla	r3, sl, fp, r3
 800aa14:	ea4f 4b17 	mov.w	fp, r7, lsr #16
 800aa18:	f8d9 7000 	ldr.w	r7, [r9]
 800aa1c:	4463      	add	r3, ip
 800aa1e:	ea4f 4c17 	mov.w	ip, r7, lsr #16
 800aa22:	fb0a c70b 	mla	r7, sl, fp, ip
 800aa26:	eb07 4713 	add.w	r7, r7, r3, lsr #16
 800aa2a:	b29b      	uxth	r3, r3
 800aa2c:	ea43 4307 	orr.w	r3, r3, r7, lsl #16
 800aa30:	4572      	cmp	r2, lr
 800aa32:	f849 3b04 	str.w	r3, [r9], #4
 800aa36:	ea4f 4c17 	mov.w	ip, r7, lsr #16
 800aa3a:	d8e2      	bhi.n	800aa02 <__multiply+0xb2>
 800aa3c:	9b01      	ldr	r3, [sp, #4]
 800aa3e:	f845 c003 	str.w	ip, [r5, r3]
 800aa42:	9b03      	ldr	r3, [sp, #12]
 800aa44:	f8b3 9002 	ldrh.w	r9, [r3, #2]
 800aa48:	3104      	adds	r1, #4
 800aa4a:	f1b9 0f00 	cmp.w	r9, #0
 800aa4e:	d021      	beq.n	800aa94 <__multiply+0x144>
 800aa50:	682b      	ldr	r3, [r5, #0]
 800aa52:	f104 0c14 	add.w	ip, r4, #20
 800aa56:	46ae      	mov	lr, r5
 800aa58:	f04f 0a00 	mov.w	sl, #0
 800aa5c:	f8bc b000 	ldrh.w	fp, [ip]
 800aa60:	f8be 7002 	ldrh.w	r7, [lr, #2]
 800aa64:	fb09 770b 	mla	r7, r9, fp, r7
 800aa68:	4457      	add	r7, sl
 800aa6a:	b29b      	uxth	r3, r3
 800aa6c:	ea43 4307 	orr.w	r3, r3, r7, lsl #16
 800aa70:	f84e 3b04 	str.w	r3, [lr], #4
 800aa74:	f85c 3b04 	ldr.w	r3, [ip], #4
 800aa78:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 800aa7c:	f8be 3000 	ldrh.w	r3, [lr]
 800aa80:	fb09 330a 	mla	r3, r9, sl, r3
 800aa84:	eb03 4317 	add.w	r3, r3, r7, lsr #16
 800aa88:	4562      	cmp	r2, ip
 800aa8a:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 800aa8e:	d8e5      	bhi.n	800aa5c <__multiply+0x10c>
 800aa90:	9f01      	ldr	r7, [sp, #4]
 800aa92:	51eb      	str	r3, [r5, r7]
 800aa94:	3504      	adds	r5, #4
 800aa96:	e799      	b.n	800a9cc <__multiply+0x7c>
 800aa98:	3e01      	subs	r6, #1
 800aa9a:	e79b      	b.n	800a9d4 <__multiply+0x84>
 800aa9c:	0800d0e5 	.word	0x0800d0e5
 800aaa0:	0800d0f6 	.word	0x0800d0f6

0800aaa4 <__pow5mult>:
 800aaa4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800aaa8:	4615      	mov	r5, r2
 800aaaa:	f012 0203 	ands.w	r2, r2, #3
 800aaae:	4607      	mov	r7, r0
 800aab0:	460e      	mov	r6, r1
 800aab2:	d007      	beq.n	800aac4 <__pow5mult+0x20>
 800aab4:	4c25      	ldr	r4, [pc, #148]	@ (800ab4c <__pow5mult+0xa8>)
 800aab6:	3a01      	subs	r2, #1
 800aab8:	2300      	movs	r3, #0
 800aaba:	f854 2022 	ldr.w	r2, [r4, r2, lsl #2]
 800aabe:	f7ff fe55 	bl	800a76c <__multadd>
 800aac2:	4606      	mov	r6, r0
 800aac4:	10ad      	asrs	r5, r5, #2
 800aac6:	d03d      	beq.n	800ab44 <__pow5mult+0xa0>
 800aac8:	69fc      	ldr	r4, [r7, #28]
 800aaca:	b97c      	cbnz	r4, 800aaec <__pow5mult+0x48>
 800aacc:	2010      	movs	r0, #16
 800aace:	f7ff fd35 	bl	800a53c <malloc>
 800aad2:	4602      	mov	r2, r0
 800aad4:	61f8      	str	r0, [r7, #28]
 800aad6:	b928      	cbnz	r0, 800aae4 <__pow5mult+0x40>
 800aad8:	4b1d      	ldr	r3, [pc, #116]	@ (800ab50 <__pow5mult+0xac>)
 800aada:	481e      	ldr	r0, [pc, #120]	@ (800ab54 <__pow5mult+0xb0>)
 800aadc:	f240 11b3 	movw	r1, #435	@ 0x1b3
 800aae0:	f001 fd26 	bl	800c530 <__assert_func>
 800aae4:	e9c0 4401 	strd	r4, r4, [r0, #4]
 800aae8:	6004      	str	r4, [r0, #0]
 800aaea:	60c4      	str	r4, [r0, #12]
 800aaec:	f8d7 801c 	ldr.w	r8, [r7, #28]
 800aaf0:	f8d8 4008 	ldr.w	r4, [r8, #8]
 800aaf4:	b94c      	cbnz	r4, 800ab0a <__pow5mult+0x66>
 800aaf6:	f240 2171 	movw	r1, #625	@ 0x271
 800aafa:	4638      	mov	r0, r7
 800aafc:	f7ff ff12 	bl	800a924 <__i2b>
 800ab00:	2300      	movs	r3, #0
 800ab02:	f8c8 0008 	str.w	r0, [r8, #8]
 800ab06:	4604      	mov	r4, r0
 800ab08:	6003      	str	r3, [r0, #0]
 800ab0a:	f04f 0900 	mov.w	r9, #0
 800ab0e:	07eb      	lsls	r3, r5, #31
 800ab10:	d50a      	bpl.n	800ab28 <__pow5mult+0x84>
 800ab12:	4631      	mov	r1, r6
 800ab14:	4622      	mov	r2, r4
 800ab16:	4638      	mov	r0, r7
 800ab18:	f7ff ff1a 	bl	800a950 <__multiply>
 800ab1c:	4631      	mov	r1, r6
 800ab1e:	4680      	mov	r8, r0
 800ab20:	4638      	mov	r0, r7
 800ab22:	f7ff fe01 	bl	800a728 <_Bfree>
 800ab26:	4646      	mov	r6, r8
 800ab28:	106d      	asrs	r5, r5, #1
 800ab2a:	d00b      	beq.n	800ab44 <__pow5mult+0xa0>
 800ab2c:	6820      	ldr	r0, [r4, #0]
 800ab2e:	b938      	cbnz	r0, 800ab40 <__pow5mult+0x9c>
 800ab30:	4622      	mov	r2, r4
 800ab32:	4621      	mov	r1, r4
 800ab34:	4638      	mov	r0, r7
 800ab36:	f7ff ff0b 	bl	800a950 <__multiply>
 800ab3a:	6020      	str	r0, [r4, #0]
 800ab3c:	f8c0 9000 	str.w	r9, [r0]
 800ab40:	4604      	mov	r4, r0
 800ab42:	e7e4      	b.n	800ab0e <__pow5mult+0x6a>
 800ab44:	4630      	mov	r0, r6
 800ab46:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800ab4a:	bf00      	nop
 800ab4c:	0800d150 	.word	0x0800d150
 800ab50:	0800d076 	.word	0x0800d076
 800ab54:	0800d0f6 	.word	0x0800d0f6

0800ab58 <__lshift>:
 800ab58:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800ab5c:	460c      	mov	r4, r1
 800ab5e:	6849      	ldr	r1, [r1, #4]
 800ab60:	6923      	ldr	r3, [r4, #16]
 800ab62:	eb03 1862 	add.w	r8, r3, r2, asr #5
 800ab66:	68a3      	ldr	r3, [r4, #8]
 800ab68:	4607      	mov	r7, r0
 800ab6a:	4691      	mov	r9, r2
 800ab6c:	ea4f 1a62 	mov.w	sl, r2, asr #5
 800ab70:	f108 0601 	add.w	r6, r8, #1
 800ab74:	42b3      	cmp	r3, r6
 800ab76:	db0b      	blt.n	800ab90 <__lshift+0x38>
 800ab78:	4638      	mov	r0, r7
 800ab7a:	f7ff fd95 	bl	800a6a8 <_Balloc>
 800ab7e:	4605      	mov	r5, r0
 800ab80:	b948      	cbnz	r0, 800ab96 <__lshift+0x3e>
 800ab82:	4602      	mov	r2, r0
 800ab84:	4b28      	ldr	r3, [pc, #160]	@ (800ac28 <__lshift+0xd0>)
 800ab86:	4829      	ldr	r0, [pc, #164]	@ (800ac2c <__lshift+0xd4>)
 800ab88:	f44f 71ef 	mov.w	r1, #478	@ 0x1de
 800ab8c:	f001 fcd0 	bl	800c530 <__assert_func>
 800ab90:	3101      	adds	r1, #1
 800ab92:	005b      	lsls	r3, r3, #1
 800ab94:	e7ee      	b.n	800ab74 <__lshift+0x1c>
 800ab96:	2300      	movs	r3, #0
 800ab98:	f100 0114 	add.w	r1, r0, #20
 800ab9c:	f100 0210 	add.w	r2, r0, #16
 800aba0:	4618      	mov	r0, r3
 800aba2:	4553      	cmp	r3, sl
 800aba4:	db33      	blt.n	800ac0e <__lshift+0xb6>
 800aba6:	6920      	ldr	r0, [r4, #16]
 800aba8:	ea2a 7aea 	bic.w	sl, sl, sl, asr #31
 800abac:	f104 0314 	add.w	r3, r4, #20
 800abb0:	f019 091f 	ands.w	r9, r9, #31
 800abb4:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 800abb8:	eb03 0c80 	add.w	ip, r3, r0, lsl #2
 800abbc:	d02b      	beq.n	800ac16 <__lshift+0xbe>
 800abbe:	f1c9 0e20 	rsb	lr, r9, #32
 800abc2:	468a      	mov	sl, r1
 800abc4:	2200      	movs	r2, #0
 800abc6:	6818      	ldr	r0, [r3, #0]
 800abc8:	fa00 f009 	lsl.w	r0, r0, r9
 800abcc:	4310      	orrs	r0, r2
 800abce:	f84a 0b04 	str.w	r0, [sl], #4
 800abd2:	f853 2b04 	ldr.w	r2, [r3], #4
 800abd6:	459c      	cmp	ip, r3
 800abd8:	fa22 f20e 	lsr.w	r2, r2, lr
 800abdc:	d8f3      	bhi.n	800abc6 <__lshift+0x6e>
 800abde:	ebac 0304 	sub.w	r3, ip, r4
 800abe2:	3b15      	subs	r3, #21
 800abe4:	f023 0303 	bic.w	r3, r3, #3
 800abe8:	3304      	adds	r3, #4
 800abea:	f104 0015 	add.w	r0, r4, #21
 800abee:	4584      	cmp	ip, r0
 800abf0:	bf38      	it	cc
 800abf2:	2304      	movcc	r3, #4
 800abf4:	50ca      	str	r2, [r1, r3]
 800abf6:	b10a      	cbz	r2, 800abfc <__lshift+0xa4>
 800abf8:	f108 0602 	add.w	r6, r8, #2
 800abfc:	3e01      	subs	r6, #1
 800abfe:	4638      	mov	r0, r7
 800ac00:	612e      	str	r6, [r5, #16]
 800ac02:	4621      	mov	r1, r4
 800ac04:	f7ff fd90 	bl	800a728 <_Bfree>
 800ac08:	4628      	mov	r0, r5
 800ac0a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800ac0e:	f842 0f04 	str.w	r0, [r2, #4]!
 800ac12:	3301      	adds	r3, #1
 800ac14:	e7c5      	b.n	800aba2 <__lshift+0x4a>
 800ac16:	3904      	subs	r1, #4
 800ac18:	f853 2b04 	ldr.w	r2, [r3], #4
 800ac1c:	f841 2f04 	str.w	r2, [r1, #4]!
 800ac20:	459c      	cmp	ip, r3
 800ac22:	d8f9      	bhi.n	800ac18 <__lshift+0xc0>
 800ac24:	e7ea      	b.n	800abfc <__lshift+0xa4>
 800ac26:	bf00      	nop
 800ac28:	0800d0e5 	.word	0x0800d0e5
 800ac2c:	0800d0f6 	.word	0x0800d0f6

0800ac30 <__mcmp>:
 800ac30:	690a      	ldr	r2, [r1, #16]
 800ac32:	4603      	mov	r3, r0
 800ac34:	6900      	ldr	r0, [r0, #16]
 800ac36:	1a80      	subs	r0, r0, r2
 800ac38:	b530      	push	{r4, r5, lr}
 800ac3a:	d10e      	bne.n	800ac5a <__mcmp+0x2a>
 800ac3c:	3314      	adds	r3, #20
 800ac3e:	3114      	adds	r1, #20
 800ac40:	eb03 0482 	add.w	r4, r3, r2, lsl #2
 800ac44:	eb01 0182 	add.w	r1, r1, r2, lsl #2
 800ac48:	f854 5d04 	ldr.w	r5, [r4, #-4]!
 800ac4c:	f851 2d04 	ldr.w	r2, [r1, #-4]!
 800ac50:	4295      	cmp	r5, r2
 800ac52:	d003      	beq.n	800ac5c <__mcmp+0x2c>
 800ac54:	d205      	bcs.n	800ac62 <__mcmp+0x32>
 800ac56:	f04f 30ff 	mov.w	r0, #4294967295
 800ac5a:	bd30      	pop	{r4, r5, pc}
 800ac5c:	42a3      	cmp	r3, r4
 800ac5e:	d3f3      	bcc.n	800ac48 <__mcmp+0x18>
 800ac60:	e7fb      	b.n	800ac5a <__mcmp+0x2a>
 800ac62:	2001      	movs	r0, #1
 800ac64:	e7f9      	b.n	800ac5a <__mcmp+0x2a>
	...

0800ac68 <__mdiff>:
 800ac68:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ac6c:	4689      	mov	r9, r1
 800ac6e:	4606      	mov	r6, r0
 800ac70:	4611      	mov	r1, r2
 800ac72:	4648      	mov	r0, r9
 800ac74:	4614      	mov	r4, r2
 800ac76:	f7ff ffdb 	bl	800ac30 <__mcmp>
 800ac7a:	1e05      	subs	r5, r0, #0
 800ac7c:	d112      	bne.n	800aca4 <__mdiff+0x3c>
 800ac7e:	4629      	mov	r1, r5
 800ac80:	4630      	mov	r0, r6
 800ac82:	f7ff fd11 	bl	800a6a8 <_Balloc>
 800ac86:	4602      	mov	r2, r0
 800ac88:	b928      	cbnz	r0, 800ac96 <__mdiff+0x2e>
 800ac8a:	4b3f      	ldr	r3, [pc, #252]	@ (800ad88 <__mdiff+0x120>)
 800ac8c:	f240 2137 	movw	r1, #567	@ 0x237
 800ac90:	483e      	ldr	r0, [pc, #248]	@ (800ad8c <__mdiff+0x124>)
 800ac92:	f001 fc4d 	bl	800c530 <__assert_func>
 800ac96:	2301      	movs	r3, #1
 800ac98:	e9c0 3504 	strd	r3, r5, [r0, #16]
 800ac9c:	4610      	mov	r0, r2
 800ac9e:	b003      	add	sp, #12
 800aca0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800aca4:	bfbc      	itt	lt
 800aca6:	464b      	movlt	r3, r9
 800aca8:	46a1      	movlt	r9, r4
 800acaa:	4630      	mov	r0, r6
 800acac:	f8d9 1004 	ldr.w	r1, [r9, #4]
 800acb0:	bfba      	itte	lt
 800acb2:	461c      	movlt	r4, r3
 800acb4:	2501      	movlt	r5, #1
 800acb6:	2500      	movge	r5, #0
 800acb8:	f7ff fcf6 	bl	800a6a8 <_Balloc>
 800acbc:	4602      	mov	r2, r0
 800acbe:	b918      	cbnz	r0, 800acc8 <__mdiff+0x60>
 800acc0:	4b31      	ldr	r3, [pc, #196]	@ (800ad88 <__mdiff+0x120>)
 800acc2:	f240 2145 	movw	r1, #581	@ 0x245
 800acc6:	e7e3      	b.n	800ac90 <__mdiff+0x28>
 800acc8:	f8d9 7010 	ldr.w	r7, [r9, #16]
 800accc:	6926      	ldr	r6, [r4, #16]
 800acce:	60c5      	str	r5, [r0, #12]
 800acd0:	f109 0310 	add.w	r3, r9, #16
 800acd4:	f109 0514 	add.w	r5, r9, #20
 800acd8:	f104 0e14 	add.w	lr, r4, #20
 800acdc:	f100 0b14 	add.w	fp, r0, #20
 800ace0:	eb05 0887 	add.w	r8, r5, r7, lsl #2
 800ace4:	eb0e 0686 	add.w	r6, lr, r6, lsl #2
 800ace8:	9301      	str	r3, [sp, #4]
 800acea:	46d9      	mov	r9, fp
 800acec:	f04f 0c00 	mov.w	ip, #0
 800acf0:	9b01      	ldr	r3, [sp, #4]
 800acf2:	f85e 0b04 	ldr.w	r0, [lr], #4
 800acf6:	f853 af04 	ldr.w	sl, [r3, #4]!
 800acfa:	9301      	str	r3, [sp, #4]
 800acfc:	fa1f f38a 	uxth.w	r3, sl
 800ad00:	4619      	mov	r1, r3
 800ad02:	b283      	uxth	r3, r0
 800ad04:	1acb      	subs	r3, r1, r3
 800ad06:	0c00      	lsrs	r0, r0, #16
 800ad08:	4463      	add	r3, ip
 800ad0a:	ebc0 401a 	rsb	r0, r0, sl, lsr #16
 800ad0e:	eb00 4023 	add.w	r0, r0, r3, asr #16
 800ad12:	b29b      	uxth	r3, r3
 800ad14:	ea43 4300 	orr.w	r3, r3, r0, lsl #16
 800ad18:	4576      	cmp	r6, lr
 800ad1a:	f849 3b04 	str.w	r3, [r9], #4
 800ad1e:	ea4f 4c20 	mov.w	ip, r0, asr #16
 800ad22:	d8e5      	bhi.n	800acf0 <__mdiff+0x88>
 800ad24:	1b33      	subs	r3, r6, r4
 800ad26:	3b15      	subs	r3, #21
 800ad28:	f023 0303 	bic.w	r3, r3, #3
 800ad2c:	3415      	adds	r4, #21
 800ad2e:	3304      	adds	r3, #4
 800ad30:	42a6      	cmp	r6, r4
 800ad32:	bf38      	it	cc
 800ad34:	2304      	movcc	r3, #4
 800ad36:	441d      	add	r5, r3
 800ad38:	445b      	add	r3, fp
 800ad3a:	461e      	mov	r6, r3
 800ad3c:	462c      	mov	r4, r5
 800ad3e:	4544      	cmp	r4, r8
 800ad40:	d30e      	bcc.n	800ad60 <__mdiff+0xf8>
 800ad42:	f108 0103 	add.w	r1, r8, #3
 800ad46:	1b49      	subs	r1, r1, r5
 800ad48:	f021 0103 	bic.w	r1, r1, #3
 800ad4c:	3d03      	subs	r5, #3
 800ad4e:	45a8      	cmp	r8, r5
 800ad50:	bf38      	it	cc
 800ad52:	2100      	movcc	r1, #0
 800ad54:	440b      	add	r3, r1
 800ad56:	f853 1d04 	ldr.w	r1, [r3, #-4]!
 800ad5a:	b191      	cbz	r1, 800ad82 <__mdiff+0x11a>
 800ad5c:	6117      	str	r7, [r2, #16]
 800ad5e:	e79d      	b.n	800ac9c <__mdiff+0x34>
 800ad60:	f854 1b04 	ldr.w	r1, [r4], #4
 800ad64:	46e6      	mov	lr, ip
 800ad66:	0c08      	lsrs	r0, r1, #16
 800ad68:	fa1c fc81 	uxtah	ip, ip, r1
 800ad6c:	4471      	add	r1, lr
 800ad6e:	eb00 402c 	add.w	r0, r0, ip, asr #16
 800ad72:	b289      	uxth	r1, r1
 800ad74:	ea41 4100 	orr.w	r1, r1, r0, lsl #16
 800ad78:	f846 1b04 	str.w	r1, [r6], #4
 800ad7c:	ea4f 4c20 	mov.w	ip, r0, asr #16
 800ad80:	e7dd      	b.n	800ad3e <__mdiff+0xd6>
 800ad82:	3f01      	subs	r7, #1
 800ad84:	e7e7      	b.n	800ad56 <__mdiff+0xee>
 800ad86:	bf00      	nop
 800ad88:	0800d0e5 	.word	0x0800d0e5
 800ad8c:	0800d0f6 	.word	0x0800d0f6

0800ad90 <__ulp>:
 800ad90:	b082      	sub	sp, #8
 800ad92:	ed8d 0b00 	vstr	d0, [sp]
 800ad96:	9a01      	ldr	r2, [sp, #4]
 800ad98:	4b0f      	ldr	r3, [pc, #60]	@ (800add8 <__ulp+0x48>)
 800ad9a:	4013      	ands	r3, r2
 800ad9c:	f1a3 7350 	sub.w	r3, r3, #54525952	@ 0x3400000
 800ada0:	2b00      	cmp	r3, #0
 800ada2:	dc08      	bgt.n	800adb6 <__ulp+0x26>
 800ada4:	425b      	negs	r3, r3
 800ada6:	f1b3 7fa0 	cmp.w	r3, #20971520	@ 0x1400000
 800adaa:	ea4f 5223 	mov.w	r2, r3, asr #20
 800adae:	da04      	bge.n	800adba <__ulp+0x2a>
 800adb0:	f44f 2300 	mov.w	r3, #524288	@ 0x80000
 800adb4:	4113      	asrs	r3, r2
 800adb6:	2200      	movs	r2, #0
 800adb8:	e008      	b.n	800adcc <__ulp+0x3c>
 800adba:	f1a2 0314 	sub.w	r3, r2, #20
 800adbe:	2b1e      	cmp	r3, #30
 800adc0:	bfda      	itte	le
 800adc2:	f04f 4200 	movle.w	r2, #2147483648	@ 0x80000000
 800adc6:	40da      	lsrle	r2, r3
 800adc8:	2201      	movgt	r2, #1
 800adca:	2300      	movs	r3, #0
 800adcc:	4619      	mov	r1, r3
 800adce:	4610      	mov	r0, r2
 800add0:	ec41 0b10 	vmov	d0, r0, r1
 800add4:	b002      	add	sp, #8
 800add6:	4770      	bx	lr
 800add8:	7ff00000 	.word	0x7ff00000

0800addc <__b2d>:
 800addc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800ade0:	6906      	ldr	r6, [r0, #16]
 800ade2:	f100 0814 	add.w	r8, r0, #20
 800ade6:	eb08 0686 	add.w	r6, r8, r6, lsl #2
 800adea:	1f37      	subs	r7, r6, #4
 800adec:	f856 2c04 	ldr.w	r2, [r6, #-4]
 800adf0:	4610      	mov	r0, r2
 800adf2:	f7ff fd4b 	bl	800a88c <__hi0bits>
 800adf6:	f1c0 0320 	rsb	r3, r0, #32
 800adfa:	280a      	cmp	r0, #10
 800adfc:	600b      	str	r3, [r1, #0]
 800adfe:	491b      	ldr	r1, [pc, #108]	@ (800ae6c <__b2d+0x90>)
 800ae00:	dc15      	bgt.n	800ae2e <__b2d+0x52>
 800ae02:	f1c0 0c0b 	rsb	ip, r0, #11
 800ae06:	fa22 f30c 	lsr.w	r3, r2, ip
 800ae0a:	45b8      	cmp	r8, r7
 800ae0c:	ea43 0501 	orr.w	r5, r3, r1
 800ae10:	bf34      	ite	cc
 800ae12:	f856 3c08 	ldrcc.w	r3, [r6, #-8]
 800ae16:	2300      	movcs	r3, #0
 800ae18:	3015      	adds	r0, #21
 800ae1a:	fa02 f000 	lsl.w	r0, r2, r0
 800ae1e:	fa23 f30c 	lsr.w	r3, r3, ip
 800ae22:	4303      	orrs	r3, r0
 800ae24:	461c      	mov	r4, r3
 800ae26:	ec45 4b10 	vmov	d0, r4, r5
 800ae2a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800ae2e:	45b8      	cmp	r8, r7
 800ae30:	bf3a      	itte	cc
 800ae32:	f856 3c08 	ldrcc.w	r3, [r6, #-8]
 800ae36:	f1a6 0708 	subcc.w	r7, r6, #8
 800ae3a:	2300      	movcs	r3, #0
 800ae3c:	380b      	subs	r0, #11
 800ae3e:	d012      	beq.n	800ae66 <__b2d+0x8a>
 800ae40:	f1c0 0120 	rsb	r1, r0, #32
 800ae44:	fa23 f401 	lsr.w	r4, r3, r1
 800ae48:	4082      	lsls	r2, r0
 800ae4a:	4322      	orrs	r2, r4
 800ae4c:	4547      	cmp	r7, r8
 800ae4e:	f042 557f 	orr.w	r5, r2, #1069547520	@ 0x3fc00000
 800ae52:	bf8c      	ite	hi
 800ae54:	f857 2c04 	ldrhi.w	r2, [r7, #-4]
 800ae58:	2200      	movls	r2, #0
 800ae5a:	4083      	lsls	r3, r0
 800ae5c:	40ca      	lsrs	r2, r1
 800ae5e:	f445 1540 	orr.w	r5, r5, #3145728	@ 0x300000
 800ae62:	4313      	orrs	r3, r2
 800ae64:	e7de      	b.n	800ae24 <__b2d+0x48>
 800ae66:	ea42 0501 	orr.w	r5, r2, r1
 800ae6a:	e7db      	b.n	800ae24 <__b2d+0x48>
 800ae6c:	3ff00000 	.word	0x3ff00000

0800ae70 <__d2b>:
 800ae70:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800ae74:	460f      	mov	r7, r1
 800ae76:	2101      	movs	r1, #1
 800ae78:	ec59 8b10 	vmov	r8, r9, d0
 800ae7c:	4616      	mov	r6, r2
 800ae7e:	f7ff fc13 	bl	800a6a8 <_Balloc>
 800ae82:	4604      	mov	r4, r0
 800ae84:	b930      	cbnz	r0, 800ae94 <__d2b+0x24>
 800ae86:	4602      	mov	r2, r0
 800ae88:	4b23      	ldr	r3, [pc, #140]	@ (800af18 <__d2b+0xa8>)
 800ae8a:	4824      	ldr	r0, [pc, #144]	@ (800af1c <__d2b+0xac>)
 800ae8c:	f240 310f 	movw	r1, #783	@ 0x30f
 800ae90:	f001 fb4e 	bl	800c530 <__assert_func>
 800ae94:	f3c9 550a 	ubfx	r5, r9, #20, #11
 800ae98:	f3c9 0313 	ubfx	r3, r9, #0, #20
 800ae9c:	b10d      	cbz	r5, 800aea2 <__d2b+0x32>
 800ae9e:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 800aea2:	9301      	str	r3, [sp, #4]
 800aea4:	f1b8 0300 	subs.w	r3, r8, #0
 800aea8:	d023      	beq.n	800aef2 <__d2b+0x82>
 800aeaa:	4668      	mov	r0, sp
 800aeac:	9300      	str	r3, [sp, #0]
 800aeae:	f7ff fd0c 	bl	800a8ca <__lo0bits>
 800aeb2:	e9dd 1200 	ldrd	r1, r2, [sp]
 800aeb6:	b1d0      	cbz	r0, 800aeee <__d2b+0x7e>
 800aeb8:	f1c0 0320 	rsb	r3, r0, #32
 800aebc:	fa02 f303 	lsl.w	r3, r2, r3
 800aec0:	430b      	orrs	r3, r1
 800aec2:	40c2      	lsrs	r2, r0
 800aec4:	6163      	str	r3, [r4, #20]
 800aec6:	9201      	str	r2, [sp, #4]
 800aec8:	9b01      	ldr	r3, [sp, #4]
 800aeca:	61a3      	str	r3, [r4, #24]
 800aecc:	2b00      	cmp	r3, #0
 800aece:	bf0c      	ite	eq
 800aed0:	2201      	moveq	r2, #1
 800aed2:	2202      	movne	r2, #2
 800aed4:	6122      	str	r2, [r4, #16]
 800aed6:	b1a5      	cbz	r5, 800af02 <__d2b+0x92>
 800aed8:	f2a5 4533 	subw	r5, r5, #1075	@ 0x433
 800aedc:	4405      	add	r5, r0
 800aede:	603d      	str	r5, [r7, #0]
 800aee0:	f1c0 0035 	rsb	r0, r0, #53	@ 0x35
 800aee4:	6030      	str	r0, [r6, #0]
 800aee6:	4620      	mov	r0, r4
 800aee8:	b003      	add	sp, #12
 800aeea:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800aeee:	6161      	str	r1, [r4, #20]
 800aef0:	e7ea      	b.n	800aec8 <__d2b+0x58>
 800aef2:	a801      	add	r0, sp, #4
 800aef4:	f7ff fce9 	bl	800a8ca <__lo0bits>
 800aef8:	9b01      	ldr	r3, [sp, #4]
 800aefa:	6163      	str	r3, [r4, #20]
 800aefc:	3020      	adds	r0, #32
 800aefe:	2201      	movs	r2, #1
 800af00:	e7e8      	b.n	800aed4 <__d2b+0x64>
 800af02:	eb04 0382 	add.w	r3, r4, r2, lsl #2
 800af06:	f2a0 4032 	subw	r0, r0, #1074	@ 0x432
 800af0a:	6038      	str	r0, [r7, #0]
 800af0c:	6918      	ldr	r0, [r3, #16]
 800af0e:	f7ff fcbd 	bl	800a88c <__hi0bits>
 800af12:	ebc0 1042 	rsb	r0, r0, r2, lsl #5
 800af16:	e7e5      	b.n	800aee4 <__d2b+0x74>
 800af18:	0800d0e5 	.word	0x0800d0e5
 800af1c:	0800d0f6 	.word	0x0800d0f6

0800af20 <__ratio>:
 800af20:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800af24:	b085      	sub	sp, #20
 800af26:	e9cd 1000 	strd	r1, r0, [sp]
 800af2a:	a902      	add	r1, sp, #8
 800af2c:	f7ff ff56 	bl	800addc <__b2d>
 800af30:	9800      	ldr	r0, [sp, #0]
 800af32:	a903      	add	r1, sp, #12
 800af34:	ec55 4b10 	vmov	r4, r5, d0
 800af38:	f7ff ff50 	bl	800addc <__b2d>
 800af3c:	9b01      	ldr	r3, [sp, #4]
 800af3e:	6919      	ldr	r1, [r3, #16]
 800af40:	9b00      	ldr	r3, [sp, #0]
 800af42:	691b      	ldr	r3, [r3, #16]
 800af44:	1ac9      	subs	r1, r1, r3
 800af46:	e9dd 3202 	ldrd	r3, r2, [sp, #8]
 800af4a:	1a9b      	subs	r3, r3, r2
 800af4c:	ec5b ab10 	vmov	sl, fp, d0
 800af50:	eb03 1341 	add.w	r3, r3, r1, lsl #5
 800af54:	2b00      	cmp	r3, #0
 800af56:	bfce      	itee	gt
 800af58:	462a      	movgt	r2, r5
 800af5a:	ebc3 3303 	rsble	r3, r3, r3, lsl #12
 800af5e:	465a      	movle	r2, fp
 800af60:	462f      	mov	r7, r5
 800af62:	46d9      	mov	r9, fp
 800af64:	bfcc      	ite	gt
 800af66:	eb02 5703 	addgt.w	r7, r2, r3, lsl #20
 800af6a:	eb02 5903 	addle.w	r9, r2, r3, lsl #20
 800af6e:	464b      	mov	r3, r9
 800af70:	4652      	mov	r2, sl
 800af72:	4620      	mov	r0, r4
 800af74:	4639      	mov	r1, r7
 800af76:	f7f5 fc89 	bl	800088c <__aeabi_ddiv>
 800af7a:	ec41 0b10 	vmov	d0, r0, r1
 800af7e:	b005      	add	sp, #20
 800af80:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800af84 <__copybits>:
 800af84:	3901      	subs	r1, #1
 800af86:	b570      	push	{r4, r5, r6, lr}
 800af88:	1149      	asrs	r1, r1, #5
 800af8a:	6914      	ldr	r4, [r2, #16]
 800af8c:	3101      	adds	r1, #1
 800af8e:	f102 0314 	add.w	r3, r2, #20
 800af92:	eb00 0181 	add.w	r1, r0, r1, lsl #2
 800af96:	eb03 0484 	add.w	r4, r3, r4, lsl #2
 800af9a:	1f05      	subs	r5, r0, #4
 800af9c:	42a3      	cmp	r3, r4
 800af9e:	d30c      	bcc.n	800afba <__copybits+0x36>
 800afa0:	1aa3      	subs	r3, r4, r2
 800afa2:	3b11      	subs	r3, #17
 800afa4:	f023 0303 	bic.w	r3, r3, #3
 800afa8:	3211      	adds	r2, #17
 800afaa:	42a2      	cmp	r2, r4
 800afac:	bf88      	it	hi
 800afae:	2300      	movhi	r3, #0
 800afb0:	4418      	add	r0, r3
 800afb2:	2300      	movs	r3, #0
 800afb4:	4288      	cmp	r0, r1
 800afb6:	d305      	bcc.n	800afc4 <__copybits+0x40>
 800afb8:	bd70      	pop	{r4, r5, r6, pc}
 800afba:	f853 6b04 	ldr.w	r6, [r3], #4
 800afbe:	f845 6f04 	str.w	r6, [r5, #4]!
 800afc2:	e7eb      	b.n	800af9c <__copybits+0x18>
 800afc4:	f840 3b04 	str.w	r3, [r0], #4
 800afc8:	e7f4      	b.n	800afb4 <__copybits+0x30>

0800afca <__any_on>:
 800afca:	f100 0214 	add.w	r2, r0, #20
 800afce:	6900      	ldr	r0, [r0, #16]
 800afd0:	114b      	asrs	r3, r1, #5
 800afd2:	4298      	cmp	r0, r3
 800afd4:	b510      	push	{r4, lr}
 800afd6:	db11      	blt.n	800affc <__any_on+0x32>
 800afd8:	dd0a      	ble.n	800aff0 <__any_on+0x26>
 800afda:	f011 011f 	ands.w	r1, r1, #31
 800afde:	d007      	beq.n	800aff0 <__any_on+0x26>
 800afe0:	f852 4023 	ldr.w	r4, [r2, r3, lsl #2]
 800afe4:	fa24 f001 	lsr.w	r0, r4, r1
 800afe8:	fa00 f101 	lsl.w	r1, r0, r1
 800afec:	428c      	cmp	r4, r1
 800afee:	d10b      	bne.n	800b008 <__any_on+0x3e>
 800aff0:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 800aff4:	4293      	cmp	r3, r2
 800aff6:	d803      	bhi.n	800b000 <__any_on+0x36>
 800aff8:	2000      	movs	r0, #0
 800affa:	bd10      	pop	{r4, pc}
 800affc:	4603      	mov	r3, r0
 800affe:	e7f7      	b.n	800aff0 <__any_on+0x26>
 800b000:	f853 1d04 	ldr.w	r1, [r3, #-4]!
 800b004:	2900      	cmp	r1, #0
 800b006:	d0f5      	beq.n	800aff4 <__any_on+0x2a>
 800b008:	2001      	movs	r0, #1
 800b00a:	e7f6      	b.n	800affa <__any_on+0x30>

0800b00c <sulp>:
 800b00c:	b570      	push	{r4, r5, r6, lr}
 800b00e:	4604      	mov	r4, r0
 800b010:	460d      	mov	r5, r1
 800b012:	ec45 4b10 	vmov	d0, r4, r5
 800b016:	4616      	mov	r6, r2
 800b018:	f7ff feba 	bl	800ad90 <__ulp>
 800b01c:	ec51 0b10 	vmov	r0, r1, d0
 800b020:	b17e      	cbz	r6, 800b042 <sulp+0x36>
 800b022:	f3c5 530a 	ubfx	r3, r5, #20, #11
 800b026:	f1c3 036b 	rsb	r3, r3, #107	@ 0x6b
 800b02a:	2b00      	cmp	r3, #0
 800b02c:	dd09      	ble.n	800b042 <sulp+0x36>
 800b02e:	051b      	lsls	r3, r3, #20
 800b030:	f103 557f 	add.w	r5, r3, #1069547520	@ 0x3fc00000
 800b034:	2400      	movs	r4, #0
 800b036:	f505 1540 	add.w	r5, r5, #3145728	@ 0x300000
 800b03a:	4622      	mov	r2, r4
 800b03c:	462b      	mov	r3, r5
 800b03e:	f7f5 fafb 	bl	8000638 <__aeabi_dmul>
 800b042:	ec41 0b10 	vmov	d0, r0, r1
 800b046:	bd70      	pop	{r4, r5, r6, pc}

0800b048 <_strtod_l>:
 800b048:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b04c:	b09f      	sub	sp, #124	@ 0x7c
 800b04e:	460c      	mov	r4, r1
 800b050:	9217      	str	r2, [sp, #92]	@ 0x5c
 800b052:	2200      	movs	r2, #0
 800b054:	921a      	str	r2, [sp, #104]	@ 0x68
 800b056:	9005      	str	r0, [sp, #20]
 800b058:	f04f 0a00 	mov.w	sl, #0
 800b05c:	f04f 0b00 	mov.w	fp, #0
 800b060:	460a      	mov	r2, r1
 800b062:	9219      	str	r2, [sp, #100]	@ 0x64
 800b064:	7811      	ldrb	r1, [r2, #0]
 800b066:	292b      	cmp	r1, #43	@ 0x2b
 800b068:	d04a      	beq.n	800b100 <_strtod_l+0xb8>
 800b06a:	d838      	bhi.n	800b0de <_strtod_l+0x96>
 800b06c:	290d      	cmp	r1, #13
 800b06e:	d832      	bhi.n	800b0d6 <_strtod_l+0x8e>
 800b070:	2908      	cmp	r1, #8
 800b072:	d832      	bhi.n	800b0da <_strtod_l+0x92>
 800b074:	2900      	cmp	r1, #0
 800b076:	d03b      	beq.n	800b0f0 <_strtod_l+0xa8>
 800b078:	2200      	movs	r2, #0
 800b07a:	920b      	str	r2, [sp, #44]	@ 0x2c
 800b07c:	9d19      	ldr	r5, [sp, #100]	@ 0x64
 800b07e:	782a      	ldrb	r2, [r5, #0]
 800b080:	2a30      	cmp	r2, #48	@ 0x30
 800b082:	f040 80b3 	bne.w	800b1ec <_strtod_l+0x1a4>
 800b086:	786a      	ldrb	r2, [r5, #1]
 800b088:	f002 02df 	and.w	r2, r2, #223	@ 0xdf
 800b08c:	2a58      	cmp	r2, #88	@ 0x58
 800b08e:	d16e      	bne.n	800b16e <_strtod_l+0x126>
 800b090:	9302      	str	r3, [sp, #8]
 800b092:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 800b094:	9301      	str	r3, [sp, #4]
 800b096:	ab1a      	add	r3, sp, #104	@ 0x68
 800b098:	9300      	str	r3, [sp, #0]
 800b09a:	4a8e      	ldr	r2, [pc, #568]	@ (800b2d4 <_strtod_l+0x28c>)
 800b09c:	9805      	ldr	r0, [sp, #20]
 800b09e:	ab1b      	add	r3, sp, #108	@ 0x6c
 800b0a0:	a919      	add	r1, sp, #100	@ 0x64
 800b0a2:	f001 fadf 	bl	800c664 <__gethex>
 800b0a6:	f010 060f 	ands.w	r6, r0, #15
 800b0aa:	4604      	mov	r4, r0
 800b0ac:	d005      	beq.n	800b0ba <_strtod_l+0x72>
 800b0ae:	2e06      	cmp	r6, #6
 800b0b0:	d128      	bne.n	800b104 <_strtod_l+0xbc>
 800b0b2:	3501      	adds	r5, #1
 800b0b4:	2300      	movs	r3, #0
 800b0b6:	9519      	str	r5, [sp, #100]	@ 0x64
 800b0b8:	930b      	str	r3, [sp, #44]	@ 0x2c
 800b0ba:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 800b0bc:	2b00      	cmp	r3, #0
 800b0be:	f040 858e 	bne.w	800bbde <_strtod_l+0xb96>
 800b0c2:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 800b0c4:	b1cb      	cbz	r3, 800b0fa <_strtod_l+0xb2>
 800b0c6:	4652      	mov	r2, sl
 800b0c8:	f10b 4300 	add.w	r3, fp, #2147483648	@ 0x80000000
 800b0cc:	ec43 2b10 	vmov	d0, r2, r3
 800b0d0:	b01f      	add	sp, #124	@ 0x7c
 800b0d2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800b0d6:	2920      	cmp	r1, #32
 800b0d8:	d1ce      	bne.n	800b078 <_strtod_l+0x30>
 800b0da:	3201      	adds	r2, #1
 800b0dc:	e7c1      	b.n	800b062 <_strtod_l+0x1a>
 800b0de:	292d      	cmp	r1, #45	@ 0x2d
 800b0e0:	d1ca      	bne.n	800b078 <_strtod_l+0x30>
 800b0e2:	2101      	movs	r1, #1
 800b0e4:	910b      	str	r1, [sp, #44]	@ 0x2c
 800b0e6:	1c51      	adds	r1, r2, #1
 800b0e8:	9119      	str	r1, [sp, #100]	@ 0x64
 800b0ea:	7852      	ldrb	r2, [r2, #1]
 800b0ec:	2a00      	cmp	r2, #0
 800b0ee:	d1c5      	bne.n	800b07c <_strtod_l+0x34>
 800b0f0:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 800b0f2:	9419      	str	r4, [sp, #100]	@ 0x64
 800b0f4:	2b00      	cmp	r3, #0
 800b0f6:	f040 8570 	bne.w	800bbda <_strtod_l+0xb92>
 800b0fa:	4652      	mov	r2, sl
 800b0fc:	465b      	mov	r3, fp
 800b0fe:	e7e5      	b.n	800b0cc <_strtod_l+0x84>
 800b100:	2100      	movs	r1, #0
 800b102:	e7ef      	b.n	800b0e4 <_strtod_l+0x9c>
 800b104:	9a1a      	ldr	r2, [sp, #104]	@ 0x68
 800b106:	b13a      	cbz	r2, 800b118 <_strtod_l+0xd0>
 800b108:	2135      	movs	r1, #53	@ 0x35
 800b10a:	a81c      	add	r0, sp, #112	@ 0x70
 800b10c:	f7ff ff3a 	bl	800af84 <__copybits>
 800b110:	991a      	ldr	r1, [sp, #104]	@ 0x68
 800b112:	9805      	ldr	r0, [sp, #20]
 800b114:	f7ff fb08 	bl	800a728 <_Bfree>
 800b118:	3e01      	subs	r6, #1
 800b11a:	9a1b      	ldr	r2, [sp, #108]	@ 0x6c
 800b11c:	2e04      	cmp	r6, #4
 800b11e:	d806      	bhi.n	800b12e <_strtod_l+0xe6>
 800b120:	e8df f006 	tbb	[pc, r6]
 800b124:	201d0314 	.word	0x201d0314
 800b128:	14          	.byte	0x14
 800b129:	00          	.byte	0x00
 800b12a:	e9dd ab1c 	ldrd	sl, fp, [sp, #112]	@ 0x70
 800b12e:	05e1      	lsls	r1, r4, #23
 800b130:	bf48      	it	mi
 800b132:	f04b 4b00 	orrmi.w	fp, fp, #2147483648	@ 0x80000000
 800b136:	f02b 4300 	bic.w	r3, fp, #2147483648	@ 0x80000000
 800b13a:	0d1b      	lsrs	r3, r3, #20
 800b13c:	051b      	lsls	r3, r3, #20
 800b13e:	2b00      	cmp	r3, #0
 800b140:	d1bb      	bne.n	800b0ba <_strtod_l+0x72>
 800b142:	f7fe fb21 	bl	8009788 <__errno>
 800b146:	2322      	movs	r3, #34	@ 0x22
 800b148:	6003      	str	r3, [r0, #0]
 800b14a:	e7b6      	b.n	800b0ba <_strtod_l+0x72>
 800b14c:	e9dd a31c 	ldrd	sl, r3, [sp, #112]	@ 0x70
 800b150:	f202 4233 	addw	r2, r2, #1075	@ 0x433
 800b154:	f423 1380 	bic.w	r3, r3, #1048576	@ 0x100000
 800b158:	ea43 5b02 	orr.w	fp, r3, r2, lsl #20
 800b15c:	e7e7      	b.n	800b12e <_strtod_l+0xe6>
 800b15e:	f8df b17c 	ldr.w	fp, [pc, #380]	@ 800b2dc <_strtod_l+0x294>
 800b162:	e7e4      	b.n	800b12e <_strtod_l+0xe6>
 800b164:	f06f 4b00 	mvn.w	fp, #2147483648	@ 0x80000000
 800b168:	f04f 3aff 	mov.w	sl, #4294967295
 800b16c:	e7df      	b.n	800b12e <_strtod_l+0xe6>
 800b16e:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 800b170:	1c5a      	adds	r2, r3, #1
 800b172:	9219      	str	r2, [sp, #100]	@ 0x64
 800b174:	785b      	ldrb	r3, [r3, #1]
 800b176:	2b30      	cmp	r3, #48	@ 0x30
 800b178:	d0f9      	beq.n	800b16e <_strtod_l+0x126>
 800b17a:	2b00      	cmp	r3, #0
 800b17c:	d09d      	beq.n	800b0ba <_strtod_l+0x72>
 800b17e:	2301      	movs	r3, #1
 800b180:	9309      	str	r3, [sp, #36]	@ 0x24
 800b182:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 800b184:	930c      	str	r3, [sp, #48]	@ 0x30
 800b186:	2300      	movs	r3, #0
 800b188:	9308      	str	r3, [sp, #32]
 800b18a:	930a      	str	r3, [sp, #40]	@ 0x28
 800b18c:	461f      	mov	r7, r3
 800b18e:	220a      	movs	r2, #10
 800b190:	9819      	ldr	r0, [sp, #100]	@ 0x64
 800b192:	7805      	ldrb	r5, [r0, #0]
 800b194:	f1a5 0330 	sub.w	r3, r5, #48	@ 0x30
 800b198:	b2d9      	uxtb	r1, r3
 800b19a:	2909      	cmp	r1, #9
 800b19c:	d928      	bls.n	800b1f0 <_strtod_l+0x1a8>
 800b19e:	494e      	ldr	r1, [pc, #312]	@ (800b2d8 <_strtod_l+0x290>)
 800b1a0:	2201      	movs	r2, #1
 800b1a2:	f001 f979 	bl	800c498 <strncmp>
 800b1a6:	2800      	cmp	r0, #0
 800b1a8:	d032      	beq.n	800b210 <_strtod_l+0x1c8>
 800b1aa:	2000      	movs	r0, #0
 800b1ac:	462a      	mov	r2, r5
 800b1ae:	4681      	mov	r9, r0
 800b1b0:	463d      	mov	r5, r7
 800b1b2:	4603      	mov	r3, r0
 800b1b4:	2a65      	cmp	r2, #101	@ 0x65
 800b1b6:	d001      	beq.n	800b1bc <_strtod_l+0x174>
 800b1b8:	2a45      	cmp	r2, #69	@ 0x45
 800b1ba:	d114      	bne.n	800b1e6 <_strtod_l+0x19e>
 800b1bc:	b91d      	cbnz	r5, 800b1c6 <_strtod_l+0x17e>
 800b1be:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 800b1c0:	4302      	orrs	r2, r0
 800b1c2:	d095      	beq.n	800b0f0 <_strtod_l+0xa8>
 800b1c4:	2500      	movs	r5, #0
 800b1c6:	9c19      	ldr	r4, [sp, #100]	@ 0x64
 800b1c8:	1c62      	adds	r2, r4, #1
 800b1ca:	9219      	str	r2, [sp, #100]	@ 0x64
 800b1cc:	7862      	ldrb	r2, [r4, #1]
 800b1ce:	2a2b      	cmp	r2, #43	@ 0x2b
 800b1d0:	d077      	beq.n	800b2c2 <_strtod_l+0x27a>
 800b1d2:	2a2d      	cmp	r2, #45	@ 0x2d
 800b1d4:	d07b      	beq.n	800b2ce <_strtod_l+0x286>
 800b1d6:	f04f 0c00 	mov.w	ip, #0
 800b1da:	f1a2 0130 	sub.w	r1, r2, #48	@ 0x30
 800b1de:	2909      	cmp	r1, #9
 800b1e0:	f240 8082 	bls.w	800b2e8 <_strtod_l+0x2a0>
 800b1e4:	9419      	str	r4, [sp, #100]	@ 0x64
 800b1e6:	f04f 0800 	mov.w	r8, #0
 800b1ea:	e0a2      	b.n	800b332 <_strtod_l+0x2ea>
 800b1ec:	2300      	movs	r3, #0
 800b1ee:	e7c7      	b.n	800b180 <_strtod_l+0x138>
 800b1f0:	2f08      	cmp	r7, #8
 800b1f2:	bfd5      	itete	le
 800b1f4:	990a      	ldrle	r1, [sp, #40]	@ 0x28
 800b1f6:	9908      	ldrgt	r1, [sp, #32]
 800b1f8:	fb02 3301 	mlale	r3, r2, r1, r3
 800b1fc:	fb02 3301 	mlagt	r3, r2, r1, r3
 800b200:	f100 0001 	add.w	r0, r0, #1
 800b204:	bfd4      	ite	le
 800b206:	930a      	strle	r3, [sp, #40]	@ 0x28
 800b208:	9308      	strgt	r3, [sp, #32]
 800b20a:	3701      	adds	r7, #1
 800b20c:	9019      	str	r0, [sp, #100]	@ 0x64
 800b20e:	e7bf      	b.n	800b190 <_strtod_l+0x148>
 800b210:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 800b212:	1c5a      	adds	r2, r3, #1
 800b214:	9219      	str	r2, [sp, #100]	@ 0x64
 800b216:	785a      	ldrb	r2, [r3, #1]
 800b218:	b37f      	cbz	r7, 800b27a <_strtod_l+0x232>
 800b21a:	4681      	mov	r9, r0
 800b21c:	463d      	mov	r5, r7
 800b21e:	f1a2 0330 	sub.w	r3, r2, #48	@ 0x30
 800b222:	2b09      	cmp	r3, #9
 800b224:	d912      	bls.n	800b24c <_strtod_l+0x204>
 800b226:	2301      	movs	r3, #1
 800b228:	e7c4      	b.n	800b1b4 <_strtod_l+0x16c>
 800b22a:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 800b22c:	1c5a      	adds	r2, r3, #1
 800b22e:	9219      	str	r2, [sp, #100]	@ 0x64
 800b230:	785a      	ldrb	r2, [r3, #1]
 800b232:	3001      	adds	r0, #1
 800b234:	2a30      	cmp	r2, #48	@ 0x30
 800b236:	d0f8      	beq.n	800b22a <_strtod_l+0x1e2>
 800b238:	f1a2 0331 	sub.w	r3, r2, #49	@ 0x31
 800b23c:	2b08      	cmp	r3, #8
 800b23e:	f200 84d3 	bhi.w	800bbe8 <_strtod_l+0xba0>
 800b242:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 800b244:	930c      	str	r3, [sp, #48]	@ 0x30
 800b246:	4681      	mov	r9, r0
 800b248:	2000      	movs	r0, #0
 800b24a:	4605      	mov	r5, r0
 800b24c:	3a30      	subs	r2, #48	@ 0x30
 800b24e:	f100 0301 	add.w	r3, r0, #1
 800b252:	d02a      	beq.n	800b2aa <_strtod_l+0x262>
 800b254:	4499      	add	r9, r3
 800b256:	eb00 0c05 	add.w	ip, r0, r5
 800b25a:	462b      	mov	r3, r5
 800b25c:	210a      	movs	r1, #10
 800b25e:	4563      	cmp	r3, ip
 800b260:	d10d      	bne.n	800b27e <_strtod_l+0x236>
 800b262:	1c69      	adds	r1, r5, #1
 800b264:	4401      	add	r1, r0
 800b266:	4428      	add	r0, r5
 800b268:	2808      	cmp	r0, #8
 800b26a:	dc16      	bgt.n	800b29a <_strtod_l+0x252>
 800b26c:	980a      	ldr	r0, [sp, #40]	@ 0x28
 800b26e:	230a      	movs	r3, #10
 800b270:	fb03 2300 	mla	r3, r3, r0, r2
 800b274:	930a      	str	r3, [sp, #40]	@ 0x28
 800b276:	2300      	movs	r3, #0
 800b278:	e018      	b.n	800b2ac <_strtod_l+0x264>
 800b27a:	4638      	mov	r0, r7
 800b27c:	e7da      	b.n	800b234 <_strtod_l+0x1ec>
 800b27e:	2b08      	cmp	r3, #8
 800b280:	f103 0301 	add.w	r3, r3, #1
 800b284:	dc03      	bgt.n	800b28e <_strtod_l+0x246>
 800b286:	9e0a      	ldr	r6, [sp, #40]	@ 0x28
 800b288:	434e      	muls	r6, r1
 800b28a:	960a      	str	r6, [sp, #40]	@ 0x28
 800b28c:	e7e7      	b.n	800b25e <_strtod_l+0x216>
 800b28e:	2b10      	cmp	r3, #16
 800b290:	bfde      	ittt	le
 800b292:	9e08      	ldrle	r6, [sp, #32]
 800b294:	434e      	mulle	r6, r1
 800b296:	9608      	strle	r6, [sp, #32]
 800b298:	e7e1      	b.n	800b25e <_strtod_l+0x216>
 800b29a:	280f      	cmp	r0, #15
 800b29c:	dceb      	bgt.n	800b276 <_strtod_l+0x22e>
 800b29e:	9808      	ldr	r0, [sp, #32]
 800b2a0:	230a      	movs	r3, #10
 800b2a2:	fb03 2300 	mla	r3, r3, r0, r2
 800b2a6:	9308      	str	r3, [sp, #32]
 800b2a8:	e7e5      	b.n	800b276 <_strtod_l+0x22e>
 800b2aa:	4629      	mov	r1, r5
 800b2ac:	9a19      	ldr	r2, [sp, #100]	@ 0x64
 800b2ae:	1c50      	adds	r0, r2, #1
 800b2b0:	9019      	str	r0, [sp, #100]	@ 0x64
 800b2b2:	7852      	ldrb	r2, [r2, #1]
 800b2b4:	4618      	mov	r0, r3
 800b2b6:	460d      	mov	r5, r1
 800b2b8:	e7b1      	b.n	800b21e <_strtod_l+0x1d6>
 800b2ba:	f04f 0900 	mov.w	r9, #0
 800b2be:	2301      	movs	r3, #1
 800b2c0:	e77d      	b.n	800b1be <_strtod_l+0x176>
 800b2c2:	f04f 0c00 	mov.w	ip, #0
 800b2c6:	1ca2      	adds	r2, r4, #2
 800b2c8:	9219      	str	r2, [sp, #100]	@ 0x64
 800b2ca:	78a2      	ldrb	r2, [r4, #2]
 800b2cc:	e785      	b.n	800b1da <_strtod_l+0x192>
 800b2ce:	f04f 0c01 	mov.w	ip, #1
 800b2d2:	e7f8      	b.n	800b2c6 <_strtod_l+0x27e>
 800b2d4:	0800d268 	.word	0x0800d268
 800b2d8:	0800d250 	.word	0x0800d250
 800b2dc:	7ff00000 	.word	0x7ff00000
 800b2e0:	9a19      	ldr	r2, [sp, #100]	@ 0x64
 800b2e2:	1c51      	adds	r1, r2, #1
 800b2e4:	9119      	str	r1, [sp, #100]	@ 0x64
 800b2e6:	7852      	ldrb	r2, [r2, #1]
 800b2e8:	2a30      	cmp	r2, #48	@ 0x30
 800b2ea:	d0f9      	beq.n	800b2e0 <_strtod_l+0x298>
 800b2ec:	f1a2 0131 	sub.w	r1, r2, #49	@ 0x31
 800b2f0:	2908      	cmp	r1, #8
 800b2f2:	f63f af78 	bhi.w	800b1e6 <_strtod_l+0x19e>
 800b2f6:	3a30      	subs	r2, #48	@ 0x30
 800b2f8:	920e      	str	r2, [sp, #56]	@ 0x38
 800b2fa:	9a19      	ldr	r2, [sp, #100]	@ 0x64
 800b2fc:	920f      	str	r2, [sp, #60]	@ 0x3c
 800b2fe:	f04f 080a 	mov.w	r8, #10
 800b302:	9a19      	ldr	r2, [sp, #100]	@ 0x64
 800b304:	1c56      	adds	r6, r2, #1
 800b306:	9619      	str	r6, [sp, #100]	@ 0x64
 800b308:	7852      	ldrb	r2, [r2, #1]
 800b30a:	f1a2 0e30 	sub.w	lr, r2, #48	@ 0x30
 800b30e:	f1be 0f09 	cmp.w	lr, #9
 800b312:	d939      	bls.n	800b388 <_strtod_l+0x340>
 800b314:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 800b316:	1a76      	subs	r6, r6, r1
 800b318:	2e08      	cmp	r6, #8
 800b31a:	f644 681f 	movw	r8, #19999	@ 0x4e1f
 800b31e:	dc03      	bgt.n	800b328 <_strtod_l+0x2e0>
 800b320:	990e      	ldr	r1, [sp, #56]	@ 0x38
 800b322:	4588      	cmp	r8, r1
 800b324:	bfa8      	it	ge
 800b326:	4688      	movge	r8, r1
 800b328:	f1bc 0f00 	cmp.w	ip, #0
 800b32c:	d001      	beq.n	800b332 <_strtod_l+0x2ea>
 800b32e:	f1c8 0800 	rsb	r8, r8, #0
 800b332:	2d00      	cmp	r5, #0
 800b334:	d14e      	bne.n	800b3d4 <_strtod_l+0x38c>
 800b336:	9909      	ldr	r1, [sp, #36]	@ 0x24
 800b338:	4308      	orrs	r0, r1
 800b33a:	f47f aebe 	bne.w	800b0ba <_strtod_l+0x72>
 800b33e:	2b00      	cmp	r3, #0
 800b340:	f47f aed6 	bne.w	800b0f0 <_strtod_l+0xa8>
 800b344:	2a69      	cmp	r2, #105	@ 0x69
 800b346:	d028      	beq.n	800b39a <_strtod_l+0x352>
 800b348:	dc25      	bgt.n	800b396 <_strtod_l+0x34e>
 800b34a:	2a49      	cmp	r2, #73	@ 0x49
 800b34c:	d025      	beq.n	800b39a <_strtod_l+0x352>
 800b34e:	2a4e      	cmp	r2, #78	@ 0x4e
 800b350:	f47f aece 	bne.w	800b0f0 <_strtod_l+0xa8>
 800b354:	499b      	ldr	r1, [pc, #620]	@ (800b5c4 <_strtod_l+0x57c>)
 800b356:	a819      	add	r0, sp, #100	@ 0x64
 800b358:	f001 fba6 	bl	800caa8 <__match>
 800b35c:	2800      	cmp	r0, #0
 800b35e:	f43f aec7 	beq.w	800b0f0 <_strtod_l+0xa8>
 800b362:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 800b364:	781b      	ldrb	r3, [r3, #0]
 800b366:	2b28      	cmp	r3, #40	@ 0x28
 800b368:	d12e      	bne.n	800b3c8 <_strtod_l+0x380>
 800b36a:	4997      	ldr	r1, [pc, #604]	@ (800b5c8 <_strtod_l+0x580>)
 800b36c:	aa1c      	add	r2, sp, #112	@ 0x70
 800b36e:	a819      	add	r0, sp, #100	@ 0x64
 800b370:	f001 fbae 	bl	800cad0 <__hexnan>
 800b374:	2805      	cmp	r0, #5
 800b376:	d127      	bne.n	800b3c8 <_strtod_l+0x380>
 800b378:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 800b37a:	f8dd a070 	ldr.w	sl, [sp, #112]	@ 0x70
 800b37e:	f043 4bff 	orr.w	fp, r3, #2139095040	@ 0x7f800000
 800b382:	f44b 0be0 	orr.w	fp, fp, #7340032	@ 0x700000
 800b386:	e698      	b.n	800b0ba <_strtod_l+0x72>
 800b388:	990e      	ldr	r1, [sp, #56]	@ 0x38
 800b38a:	fb08 2101 	mla	r1, r8, r1, r2
 800b38e:	f1a1 0230 	sub.w	r2, r1, #48	@ 0x30
 800b392:	920e      	str	r2, [sp, #56]	@ 0x38
 800b394:	e7b5      	b.n	800b302 <_strtod_l+0x2ba>
 800b396:	2a6e      	cmp	r2, #110	@ 0x6e
 800b398:	e7da      	b.n	800b350 <_strtod_l+0x308>
 800b39a:	498c      	ldr	r1, [pc, #560]	@ (800b5cc <_strtod_l+0x584>)
 800b39c:	a819      	add	r0, sp, #100	@ 0x64
 800b39e:	f001 fb83 	bl	800caa8 <__match>
 800b3a2:	2800      	cmp	r0, #0
 800b3a4:	f43f aea4 	beq.w	800b0f0 <_strtod_l+0xa8>
 800b3a8:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 800b3aa:	4989      	ldr	r1, [pc, #548]	@ (800b5d0 <_strtod_l+0x588>)
 800b3ac:	3b01      	subs	r3, #1
 800b3ae:	a819      	add	r0, sp, #100	@ 0x64
 800b3b0:	9319      	str	r3, [sp, #100]	@ 0x64
 800b3b2:	f001 fb79 	bl	800caa8 <__match>
 800b3b6:	b910      	cbnz	r0, 800b3be <_strtod_l+0x376>
 800b3b8:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 800b3ba:	3301      	adds	r3, #1
 800b3bc:	9319      	str	r3, [sp, #100]	@ 0x64
 800b3be:	f8df b220 	ldr.w	fp, [pc, #544]	@ 800b5e0 <_strtod_l+0x598>
 800b3c2:	f04f 0a00 	mov.w	sl, #0
 800b3c6:	e678      	b.n	800b0ba <_strtod_l+0x72>
 800b3c8:	4882      	ldr	r0, [pc, #520]	@ (800b5d4 <_strtod_l+0x58c>)
 800b3ca:	f001 f8a9 	bl	800c520 <nan>
 800b3ce:	ec5b ab10 	vmov	sl, fp, d0
 800b3d2:	e672      	b.n	800b0ba <_strtod_l+0x72>
 800b3d4:	eba8 0309 	sub.w	r3, r8, r9
 800b3d8:	980a      	ldr	r0, [sp, #40]	@ 0x28
 800b3da:	9309      	str	r3, [sp, #36]	@ 0x24
 800b3dc:	2f00      	cmp	r7, #0
 800b3de:	bf08      	it	eq
 800b3e0:	462f      	moveq	r7, r5
 800b3e2:	2d10      	cmp	r5, #16
 800b3e4:	462c      	mov	r4, r5
 800b3e6:	bfa8      	it	ge
 800b3e8:	2410      	movge	r4, #16
 800b3ea:	f7f5 f8ab 	bl	8000544 <__aeabi_ui2d>
 800b3ee:	2d09      	cmp	r5, #9
 800b3f0:	4682      	mov	sl, r0
 800b3f2:	468b      	mov	fp, r1
 800b3f4:	dc13      	bgt.n	800b41e <_strtod_l+0x3d6>
 800b3f6:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800b3f8:	2b00      	cmp	r3, #0
 800b3fa:	f43f ae5e 	beq.w	800b0ba <_strtod_l+0x72>
 800b3fe:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800b400:	dd78      	ble.n	800b4f4 <_strtod_l+0x4ac>
 800b402:	2b16      	cmp	r3, #22
 800b404:	dc5f      	bgt.n	800b4c6 <_strtod_l+0x47e>
 800b406:	4974      	ldr	r1, [pc, #464]	@ (800b5d8 <_strtod_l+0x590>)
 800b408:	eb01 01c3 	add.w	r1, r1, r3, lsl #3
 800b40c:	e9d1 0100 	ldrd	r0, r1, [r1]
 800b410:	4652      	mov	r2, sl
 800b412:	465b      	mov	r3, fp
 800b414:	f7f5 f910 	bl	8000638 <__aeabi_dmul>
 800b418:	4682      	mov	sl, r0
 800b41a:	468b      	mov	fp, r1
 800b41c:	e64d      	b.n	800b0ba <_strtod_l+0x72>
 800b41e:	4b6e      	ldr	r3, [pc, #440]	@ (800b5d8 <_strtod_l+0x590>)
 800b420:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
 800b424:	e953 2312 	ldrd	r2, r3, [r3, #-72]	@ 0x48
 800b428:	f7f5 f906 	bl	8000638 <__aeabi_dmul>
 800b42c:	4682      	mov	sl, r0
 800b42e:	9808      	ldr	r0, [sp, #32]
 800b430:	468b      	mov	fp, r1
 800b432:	f7f5 f887 	bl	8000544 <__aeabi_ui2d>
 800b436:	4602      	mov	r2, r0
 800b438:	460b      	mov	r3, r1
 800b43a:	4650      	mov	r0, sl
 800b43c:	4659      	mov	r1, fp
 800b43e:	f7f4 ff45 	bl	80002cc <__adddf3>
 800b442:	2d0f      	cmp	r5, #15
 800b444:	4682      	mov	sl, r0
 800b446:	468b      	mov	fp, r1
 800b448:	ddd5      	ble.n	800b3f6 <_strtod_l+0x3ae>
 800b44a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800b44c:	1b2c      	subs	r4, r5, r4
 800b44e:	441c      	add	r4, r3
 800b450:	2c00      	cmp	r4, #0
 800b452:	f340 8096 	ble.w	800b582 <_strtod_l+0x53a>
 800b456:	f014 030f 	ands.w	r3, r4, #15
 800b45a:	d00a      	beq.n	800b472 <_strtod_l+0x42a>
 800b45c:	495e      	ldr	r1, [pc, #376]	@ (800b5d8 <_strtod_l+0x590>)
 800b45e:	eb01 01c3 	add.w	r1, r1, r3, lsl #3
 800b462:	4652      	mov	r2, sl
 800b464:	465b      	mov	r3, fp
 800b466:	e9d1 0100 	ldrd	r0, r1, [r1]
 800b46a:	f7f5 f8e5 	bl	8000638 <__aeabi_dmul>
 800b46e:	4682      	mov	sl, r0
 800b470:	468b      	mov	fp, r1
 800b472:	f034 040f 	bics.w	r4, r4, #15
 800b476:	d073      	beq.n	800b560 <_strtod_l+0x518>
 800b478:	f5b4 7f9a 	cmp.w	r4, #308	@ 0x134
 800b47c:	dd48      	ble.n	800b510 <_strtod_l+0x4c8>
 800b47e:	2400      	movs	r4, #0
 800b480:	46a0      	mov	r8, r4
 800b482:	940a      	str	r4, [sp, #40]	@ 0x28
 800b484:	46a1      	mov	r9, r4
 800b486:	9a05      	ldr	r2, [sp, #20]
 800b488:	f8df b154 	ldr.w	fp, [pc, #340]	@ 800b5e0 <_strtod_l+0x598>
 800b48c:	2322      	movs	r3, #34	@ 0x22
 800b48e:	6013      	str	r3, [r2, #0]
 800b490:	f04f 0a00 	mov.w	sl, #0
 800b494:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 800b496:	2b00      	cmp	r3, #0
 800b498:	f43f ae0f 	beq.w	800b0ba <_strtod_l+0x72>
 800b49c:	991a      	ldr	r1, [sp, #104]	@ 0x68
 800b49e:	9805      	ldr	r0, [sp, #20]
 800b4a0:	f7ff f942 	bl	800a728 <_Bfree>
 800b4a4:	9805      	ldr	r0, [sp, #20]
 800b4a6:	4649      	mov	r1, r9
 800b4a8:	f7ff f93e 	bl	800a728 <_Bfree>
 800b4ac:	9805      	ldr	r0, [sp, #20]
 800b4ae:	4641      	mov	r1, r8
 800b4b0:	f7ff f93a 	bl	800a728 <_Bfree>
 800b4b4:	990a      	ldr	r1, [sp, #40]	@ 0x28
 800b4b6:	9805      	ldr	r0, [sp, #20]
 800b4b8:	f7ff f936 	bl	800a728 <_Bfree>
 800b4bc:	9805      	ldr	r0, [sp, #20]
 800b4be:	4621      	mov	r1, r4
 800b4c0:	f7ff f932 	bl	800a728 <_Bfree>
 800b4c4:	e5f9      	b.n	800b0ba <_strtod_l+0x72>
 800b4c6:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 800b4c8:	f1c5 0325 	rsb	r3, r5, #37	@ 0x25
 800b4cc:	4293      	cmp	r3, r2
 800b4ce:	dbbc      	blt.n	800b44a <_strtod_l+0x402>
 800b4d0:	4c41      	ldr	r4, [pc, #260]	@ (800b5d8 <_strtod_l+0x590>)
 800b4d2:	f1c5 050f 	rsb	r5, r5, #15
 800b4d6:	eb04 01c5 	add.w	r1, r4, r5, lsl #3
 800b4da:	4652      	mov	r2, sl
 800b4dc:	465b      	mov	r3, fp
 800b4de:	e9d1 0100 	ldrd	r0, r1, [r1]
 800b4e2:	f7f5 f8a9 	bl	8000638 <__aeabi_dmul>
 800b4e6:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800b4e8:	1b5d      	subs	r5, r3, r5
 800b4ea:	eb04 04c5 	add.w	r4, r4, r5, lsl #3
 800b4ee:	e9d4 2300 	ldrd	r2, r3, [r4]
 800b4f2:	e78f      	b.n	800b414 <_strtod_l+0x3cc>
 800b4f4:	3316      	adds	r3, #22
 800b4f6:	dba8      	blt.n	800b44a <_strtod_l+0x402>
 800b4f8:	4b37      	ldr	r3, [pc, #220]	@ (800b5d8 <_strtod_l+0x590>)
 800b4fa:	eba9 0808 	sub.w	r8, r9, r8
 800b4fe:	eb03 08c8 	add.w	r8, r3, r8, lsl #3
 800b502:	e9d8 2300 	ldrd	r2, r3, [r8]
 800b506:	4650      	mov	r0, sl
 800b508:	4659      	mov	r1, fp
 800b50a:	f7f5 f9bf 	bl	800088c <__aeabi_ddiv>
 800b50e:	e783      	b.n	800b418 <_strtod_l+0x3d0>
 800b510:	4b32      	ldr	r3, [pc, #200]	@ (800b5dc <_strtod_l+0x594>)
 800b512:	9308      	str	r3, [sp, #32]
 800b514:	2300      	movs	r3, #0
 800b516:	1124      	asrs	r4, r4, #4
 800b518:	4650      	mov	r0, sl
 800b51a:	4659      	mov	r1, fp
 800b51c:	461e      	mov	r6, r3
 800b51e:	2c01      	cmp	r4, #1
 800b520:	dc21      	bgt.n	800b566 <_strtod_l+0x51e>
 800b522:	b10b      	cbz	r3, 800b528 <_strtod_l+0x4e0>
 800b524:	4682      	mov	sl, r0
 800b526:	468b      	mov	fp, r1
 800b528:	492c      	ldr	r1, [pc, #176]	@ (800b5dc <_strtod_l+0x594>)
 800b52a:	f1ab 7b54 	sub.w	fp, fp, #55574528	@ 0x3500000
 800b52e:	eb01 01c6 	add.w	r1, r1, r6, lsl #3
 800b532:	4652      	mov	r2, sl
 800b534:	465b      	mov	r3, fp
 800b536:	e9d1 0100 	ldrd	r0, r1, [r1]
 800b53a:	f7f5 f87d 	bl	8000638 <__aeabi_dmul>
 800b53e:	4b28      	ldr	r3, [pc, #160]	@ (800b5e0 <_strtod_l+0x598>)
 800b540:	460a      	mov	r2, r1
 800b542:	400b      	ands	r3, r1
 800b544:	4927      	ldr	r1, [pc, #156]	@ (800b5e4 <_strtod_l+0x59c>)
 800b546:	428b      	cmp	r3, r1
 800b548:	4682      	mov	sl, r0
 800b54a:	d898      	bhi.n	800b47e <_strtod_l+0x436>
 800b54c:	f5a1 1180 	sub.w	r1, r1, #1048576	@ 0x100000
 800b550:	428b      	cmp	r3, r1
 800b552:	bf86      	itte	hi
 800b554:	f8df b090 	ldrhi.w	fp, [pc, #144]	@ 800b5e8 <_strtod_l+0x5a0>
 800b558:	f04f 3aff 	movhi.w	sl, #4294967295
 800b55c:	f102 7b54 	addls.w	fp, r2, #55574528	@ 0x3500000
 800b560:	2300      	movs	r3, #0
 800b562:	9308      	str	r3, [sp, #32]
 800b564:	e07a      	b.n	800b65c <_strtod_l+0x614>
 800b566:	07e2      	lsls	r2, r4, #31
 800b568:	d505      	bpl.n	800b576 <_strtod_l+0x52e>
 800b56a:	9b08      	ldr	r3, [sp, #32]
 800b56c:	e9d3 2300 	ldrd	r2, r3, [r3]
 800b570:	f7f5 f862 	bl	8000638 <__aeabi_dmul>
 800b574:	2301      	movs	r3, #1
 800b576:	9a08      	ldr	r2, [sp, #32]
 800b578:	3208      	adds	r2, #8
 800b57a:	3601      	adds	r6, #1
 800b57c:	1064      	asrs	r4, r4, #1
 800b57e:	9208      	str	r2, [sp, #32]
 800b580:	e7cd      	b.n	800b51e <_strtod_l+0x4d6>
 800b582:	d0ed      	beq.n	800b560 <_strtod_l+0x518>
 800b584:	4264      	negs	r4, r4
 800b586:	f014 020f 	ands.w	r2, r4, #15
 800b58a:	d00a      	beq.n	800b5a2 <_strtod_l+0x55a>
 800b58c:	4b12      	ldr	r3, [pc, #72]	@ (800b5d8 <_strtod_l+0x590>)
 800b58e:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 800b592:	4650      	mov	r0, sl
 800b594:	4659      	mov	r1, fp
 800b596:	e9d3 2300 	ldrd	r2, r3, [r3]
 800b59a:	f7f5 f977 	bl	800088c <__aeabi_ddiv>
 800b59e:	4682      	mov	sl, r0
 800b5a0:	468b      	mov	fp, r1
 800b5a2:	1124      	asrs	r4, r4, #4
 800b5a4:	d0dc      	beq.n	800b560 <_strtod_l+0x518>
 800b5a6:	2c1f      	cmp	r4, #31
 800b5a8:	dd20      	ble.n	800b5ec <_strtod_l+0x5a4>
 800b5aa:	2400      	movs	r4, #0
 800b5ac:	46a0      	mov	r8, r4
 800b5ae:	940a      	str	r4, [sp, #40]	@ 0x28
 800b5b0:	46a1      	mov	r9, r4
 800b5b2:	9a05      	ldr	r2, [sp, #20]
 800b5b4:	2322      	movs	r3, #34	@ 0x22
 800b5b6:	f04f 0a00 	mov.w	sl, #0
 800b5ba:	f04f 0b00 	mov.w	fp, #0
 800b5be:	6013      	str	r3, [r2, #0]
 800b5c0:	e768      	b.n	800b494 <_strtod_l+0x44c>
 800b5c2:	bf00      	nop
 800b5c4:	0800d03d 	.word	0x0800d03d
 800b5c8:	0800d254 	.word	0x0800d254
 800b5cc:	0800d035 	.word	0x0800d035
 800b5d0:	0800d06c 	.word	0x0800d06c
 800b5d4:	0800d3fd 	.word	0x0800d3fd
 800b5d8:	0800d188 	.word	0x0800d188
 800b5dc:	0800d160 	.word	0x0800d160
 800b5e0:	7ff00000 	.word	0x7ff00000
 800b5e4:	7ca00000 	.word	0x7ca00000
 800b5e8:	7fefffff 	.word	0x7fefffff
 800b5ec:	f014 0310 	ands.w	r3, r4, #16
 800b5f0:	bf18      	it	ne
 800b5f2:	236a      	movne	r3, #106	@ 0x6a
 800b5f4:	4ea9      	ldr	r6, [pc, #676]	@ (800b89c <_strtod_l+0x854>)
 800b5f6:	9308      	str	r3, [sp, #32]
 800b5f8:	4650      	mov	r0, sl
 800b5fa:	4659      	mov	r1, fp
 800b5fc:	2300      	movs	r3, #0
 800b5fe:	07e2      	lsls	r2, r4, #31
 800b600:	d504      	bpl.n	800b60c <_strtod_l+0x5c4>
 800b602:	e9d6 2300 	ldrd	r2, r3, [r6]
 800b606:	f7f5 f817 	bl	8000638 <__aeabi_dmul>
 800b60a:	2301      	movs	r3, #1
 800b60c:	1064      	asrs	r4, r4, #1
 800b60e:	f106 0608 	add.w	r6, r6, #8
 800b612:	d1f4      	bne.n	800b5fe <_strtod_l+0x5b6>
 800b614:	b10b      	cbz	r3, 800b61a <_strtod_l+0x5d2>
 800b616:	4682      	mov	sl, r0
 800b618:	468b      	mov	fp, r1
 800b61a:	9b08      	ldr	r3, [sp, #32]
 800b61c:	b1b3      	cbz	r3, 800b64c <_strtod_l+0x604>
 800b61e:	f3cb 520a 	ubfx	r2, fp, #20, #11
 800b622:	f1c2 036b 	rsb	r3, r2, #107	@ 0x6b
 800b626:	2b00      	cmp	r3, #0
 800b628:	4659      	mov	r1, fp
 800b62a:	dd0f      	ble.n	800b64c <_strtod_l+0x604>
 800b62c:	2b1f      	cmp	r3, #31
 800b62e:	dd55      	ble.n	800b6dc <_strtod_l+0x694>
 800b630:	2b34      	cmp	r3, #52	@ 0x34
 800b632:	bfde      	ittt	le
 800b634:	f04f 33ff 	movle.w	r3, #4294967295
 800b638:	f1c2 024b 	rsble	r2, r2, #75	@ 0x4b
 800b63c:	4093      	lslle	r3, r2
 800b63e:	f04f 0a00 	mov.w	sl, #0
 800b642:	bfcc      	ite	gt
 800b644:	f04f 7b5c 	movgt.w	fp, #57671680	@ 0x3700000
 800b648:	ea03 0b01 	andle.w	fp, r3, r1
 800b64c:	2200      	movs	r2, #0
 800b64e:	2300      	movs	r3, #0
 800b650:	4650      	mov	r0, sl
 800b652:	4659      	mov	r1, fp
 800b654:	f7f5 fa58 	bl	8000b08 <__aeabi_dcmpeq>
 800b658:	2800      	cmp	r0, #0
 800b65a:	d1a6      	bne.n	800b5aa <_strtod_l+0x562>
 800b65c:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 800b65e:	9300      	str	r3, [sp, #0]
 800b660:	990c      	ldr	r1, [sp, #48]	@ 0x30
 800b662:	9805      	ldr	r0, [sp, #20]
 800b664:	462b      	mov	r3, r5
 800b666:	463a      	mov	r2, r7
 800b668:	f7ff f8c6 	bl	800a7f8 <__s2b>
 800b66c:	900a      	str	r0, [sp, #40]	@ 0x28
 800b66e:	2800      	cmp	r0, #0
 800b670:	f43f af05 	beq.w	800b47e <_strtod_l+0x436>
 800b674:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 800b676:	2a00      	cmp	r2, #0
 800b678:	eba9 0308 	sub.w	r3, r9, r8
 800b67c:	bfa8      	it	ge
 800b67e:	2300      	movge	r3, #0
 800b680:	9312      	str	r3, [sp, #72]	@ 0x48
 800b682:	2400      	movs	r4, #0
 800b684:	ea22 73e2 	bic.w	r3, r2, r2, asr #31
 800b688:	9316      	str	r3, [sp, #88]	@ 0x58
 800b68a:	46a0      	mov	r8, r4
 800b68c:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 800b68e:	9805      	ldr	r0, [sp, #20]
 800b690:	6859      	ldr	r1, [r3, #4]
 800b692:	f7ff f809 	bl	800a6a8 <_Balloc>
 800b696:	4681      	mov	r9, r0
 800b698:	2800      	cmp	r0, #0
 800b69a:	f43f aef4 	beq.w	800b486 <_strtod_l+0x43e>
 800b69e:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 800b6a0:	691a      	ldr	r2, [r3, #16]
 800b6a2:	3202      	adds	r2, #2
 800b6a4:	f103 010c 	add.w	r1, r3, #12
 800b6a8:	0092      	lsls	r2, r2, #2
 800b6aa:	300c      	adds	r0, #12
 800b6ac:	f7fe f899 	bl	80097e2 <memcpy>
 800b6b0:	ec4b ab10 	vmov	d0, sl, fp
 800b6b4:	9805      	ldr	r0, [sp, #20]
 800b6b6:	aa1c      	add	r2, sp, #112	@ 0x70
 800b6b8:	a91b      	add	r1, sp, #108	@ 0x6c
 800b6ba:	e9cd ab0c 	strd	sl, fp, [sp, #48]	@ 0x30
 800b6be:	f7ff fbd7 	bl	800ae70 <__d2b>
 800b6c2:	901a      	str	r0, [sp, #104]	@ 0x68
 800b6c4:	2800      	cmp	r0, #0
 800b6c6:	f43f aede 	beq.w	800b486 <_strtod_l+0x43e>
 800b6ca:	9805      	ldr	r0, [sp, #20]
 800b6cc:	2101      	movs	r1, #1
 800b6ce:	f7ff f929 	bl	800a924 <__i2b>
 800b6d2:	4680      	mov	r8, r0
 800b6d4:	b948      	cbnz	r0, 800b6ea <_strtod_l+0x6a2>
 800b6d6:	f04f 0800 	mov.w	r8, #0
 800b6da:	e6d4      	b.n	800b486 <_strtod_l+0x43e>
 800b6dc:	f04f 32ff 	mov.w	r2, #4294967295
 800b6e0:	fa02 f303 	lsl.w	r3, r2, r3
 800b6e4:	ea03 0a0a 	and.w	sl, r3, sl
 800b6e8:	e7b0      	b.n	800b64c <_strtod_l+0x604>
 800b6ea:	9d1b      	ldr	r5, [sp, #108]	@ 0x6c
 800b6ec:	9a1c      	ldr	r2, [sp, #112]	@ 0x70
 800b6ee:	2d00      	cmp	r5, #0
 800b6f0:	bfab      	itete	ge
 800b6f2:	9b12      	ldrge	r3, [sp, #72]	@ 0x48
 800b6f4:	9b16      	ldrlt	r3, [sp, #88]	@ 0x58
 800b6f6:	9e16      	ldrge	r6, [sp, #88]	@ 0x58
 800b6f8:	9f12      	ldrlt	r7, [sp, #72]	@ 0x48
 800b6fa:	bfac      	ite	ge
 800b6fc:	18ef      	addge	r7, r5, r3
 800b6fe:	1b5e      	sublt	r6, r3, r5
 800b700:	9b08      	ldr	r3, [sp, #32]
 800b702:	1aed      	subs	r5, r5, r3
 800b704:	4415      	add	r5, r2
 800b706:	4b66      	ldr	r3, [pc, #408]	@ (800b8a0 <_strtod_l+0x858>)
 800b708:	3d01      	subs	r5, #1
 800b70a:	429d      	cmp	r5, r3
 800b70c:	f1c2 0236 	rsb	r2, r2, #54	@ 0x36
 800b710:	da50      	bge.n	800b7b4 <_strtod_l+0x76c>
 800b712:	1b5b      	subs	r3, r3, r5
 800b714:	2b1f      	cmp	r3, #31
 800b716:	eba2 0203 	sub.w	r2, r2, r3
 800b71a:	f04f 0101 	mov.w	r1, #1
 800b71e:	dc3d      	bgt.n	800b79c <_strtod_l+0x754>
 800b720:	fa01 f303 	lsl.w	r3, r1, r3
 800b724:	9313      	str	r3, [sp, #76]	@ 0x4c
 800b726:	2300      	movs	r3, #0
 800b728:	9310      	str	r3, [sp, #64]	@ 0x40
 800b72a:	18bd      	adds	r5, r7, r2
 800b72c:	9b08      	ldr	r3, [sp, #32]
 800b72e:	42af      	cmp	r7, r5
 800b730:	4416      	add	r6, r2
 800b732:	441e      	add	r6, r3
 800b734:	463b      	mov	r3, r7
 800b736:	bfa8      	it	ge
 800b738:	462b      	movge	r3, r5
 800b73a:	42b3      	cmp	r3, r6
 800b73c:	bfa8      	it	ge
 800b73e:	4633      	movge	r3, r6
 800b740:	2b00      	cmp	r3, #0
 800b742:	bfc2      	ittt	gt
 800b744:	1aed      	subgt	r5, r5, r3
 800b746:	1af6      	subgt	r6, r6, r3
 800b748:	1aff      	subgt	r7, r7, r3
 800b74a:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 800b74c:	2b00      	cmp	r3, #0
 800b74e:	dd16      	ble.n	800b77e <_strtod_l+0x736>
 800b750:	4641      	mov	r1, r8
 800b752:	9805      	ldr	r0, [sp, #20]
 800b754:	461a      	mov	r2, r3
 800b756:	f7ff f9a5 	bl	800aaa4 <__pow5mult>
 800b75a:	4680      	mov	r8, r0
 800b75c:	2800      	cmp	r0, #0
 800b75e:	d0ba      	beq.n	800b6d6 <_strtod_l+0x68e>
 800b760:	4601      	mov	r1, r0
 800b762:	9a1a      	ldr	r2, [sp, #104]	@ 0x68
 800b764:	9805      	ldr	r0, [sp, #20]
 800b766:	f7ff f8f3 	bl	800a950 <__multiply>
 800b76a:	900e      	str	r0, [sp, #56]	@ 0x38
 800b76c:	2800      	cmp	r0, #0
 800b76e:	f43f ae8a 	beq.w	800b486 <_strtod_l+0x43e>
 800b772:	991a      	ldr	r1, [sp, #104]	@ 0x68
 800b774:	9805      	ldr	r0, [sp, #20]
 800b776:	f7fe ffd7 	bl	800a728 <_Bfree>
 800b77a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 800b77c:	931a      	str	r3, [sp, #104]	@ 0x68
 800b77e:	2d00      	cmp	r5, #0
 800b780:	dc1d      	bgt.n	800b7be <_strtod_l+0x776>
 800b782:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800b784:	2b00      	cmp	r3, #0
 800b786:	dd23      	ble.n	800b7d0 <_strtod_l+0x788>
 800b788:	4649      	mov	r1, r9
 800b78a:	9a16      	ldr	r2, [sp, #88]	@ 0x58
 800b78c:	9805      	ldr	r0, [sp, #20]
 800b78e:	f7ff f989 	bl	800aaa4 <__pow5mult>
 800b792:	4681      	mov	r9, r0
 800b794:	b9e0      	cbnz	r0, 800b7d0 <_strtod_l+0x788>
 800b796:	f04f 0900 	mov.w	r9, #0
 800b79a:	e674      	b.n	800b486 <_strtod_l+0x43e>
 800b79c:	f1c5 457f 	rsb	r5, r5, #4278190080	@ 0xff000000
 800b7a0:	f505 057f 	add.w	r5, r5, #16711680	@ 0xff0000
 800b7a4:	f505 457b 	add.w	r5, r5, #64256	@ 0xfb00
 800b7a8:	35e2      	adds	r5, #226	@ 0xe2
 800b7aa:	fa01 f305 	lsl.w	r3, r1, r5
 800b7ae:	9310      	str	r3, [sp, #64]	@ 0x40
 800b7b0:	9113      	str	r1, [sp, #76]	@ 0x4c
 800b7b2:	e7ba      	b.n	800b72a <_strtod_l+0x6e2>
 800b7b4:	2300      	movs	r3, #0
 800b7b6:	9310      	str	r3, [sp, #64]	@ 0x40
 800b7b8:	2301      	movs	r3, #1
 800b7ba:	9313      	str	r3, [sp, #76]	@ 0x4c
 800b7bc:	e7b5      	b.n	800b72a <_strtod_l+0x6e2>
 800b7be:	991a      	ldr	r1, [sp, #104]	@ 0x68
 800b7c0:	9805      	ldr	r0, [sp, #20]
 800b7c2:	462a      	mov	r2, r5
 800b7c4:	f7ff f9c8 	bl	800ab58 <__lshift>
 800b7c8:	901a      	str	r0, [sp, #104]	@ 0x68
 800b7ca:	2800      	cmp	r0, #0
 800b7cc:	d1d9      	bne.n	800b782 <_strtod_l+0x73a>
 800b7ce:	e65a      	b.n	800b486 <_strtod_l+0x43e>
 800b7d0:	2e00      	cmp	r6, #0
 800b7d2:	dd07      	ble.n	800b7e4 <_strtod_l+0x79c>
 800b7d4:	4649      	mov	r1, r9
 800b7d6:	9805      	ldr	r0, [sp, #20]
 800b7d8:	4632      	mov	r2, r6
 800b7da:	f7ff f9bd 	bl	800ab58 <__lshift>
 800b7de:	4681      	mov	r9, r0
 800b7e0:	2800      	cmp	r0, #0
 800b7e2:	d0d8      	beq.n	800b796 <_strtod_l+0x74e>
 800b7e4:	2f00      	cmp	r7, #0
 800b7e6:	dd08      	ble.n	800b7fa <_strtod_l+0x7b2>
 800b7e8:	4641      	mov	r1, r8
 800b7ea:	9805      	ldr	r0, [sp, #20]
 800b7ec:	463a      	mov	r2, r7
 800b7ee:	f7ff f9b3 	bl	800ab58 <__lshift>
 800b7f2:	4680      	mov	r8, r0
 800b7f4:	2800      	cmp	r0, #0
 800b7f6:	f43f ae46 	beq.w	800b486 <_strtod_l+0x43e>
 800b7fa:	991a      	ldr	r1, [sp, #104]	@ 0x68
 800b7fc:	9805      	ldr	r0, [sp, #20]
 800b7fe:	464a      	mov	r2, r9
 800b800:	f7ff fa32 	bl	800ac68 <__mdiff>
 800b804:	4604      	mov	r4, r0
 800b806:	2800      	cmp	r0, #0
 800b808:	f43f ae3d 	beq.w	800b486 <_strtod_l+0x43e>
 800b80c:	68c3      	ldr	r3, [r0, #12]
 800b80e:	930f      	str	r3, [sp, #60]	@ 0x3c
 800b810:	2300      	movs	r3, #0
 800b812:	60c3      	str	r3, [r0, #12]
 800b814:	4641      	mov	r1, r8
 800b816:	f7ff fa0b 	bl	800ac30 <__mcmp>
 800b81a:	2800      	cmp	r0, #0
 800b81c:	da46      	bge.n	800b8ac <_strtod_l+0x864>
 800b81e:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 800b820:	ea53 030a 	orrs.w	r3, r3, sl
 800b824:	d16c      	bne.n	800b900 <_strtod_l+0x8b8>
 800b826:	f3cb 0313 	ubfx	r3, fp, #0, #20
 800b82a:	2b00      	cmp	r3, #0
 800b82c:	d168      	bne.n	800b900 <_strtod_l+0x8b8>
 800b82e:	f02b 4300 	bic.w	r3, fp, #2147483648	@ 0x80000000
 800b832:	0d1b      	lsrs	r3, r3, #20
 800b834:	051b      	lsls	r3, r3, #20
 800b836:	f1b3 6fd6 	cmp.w	r3, #112197632	@ 0x6b00000
 800b83a:	d961      	bls.n	800b900 <_strtod_l+0x8b8>
 800b83c:	6963      	ldr	r3, [r4, #20]
 800b83e:	b913      	cbnz	r3, 800b846 <_strtod_l+0x7fe>
 800b840:	6923      	ldr	r3, [r4, #16]
 800b842:	2b01      	cmp	r3, #1
 800b844:	dd5c      	ble.n	800b900 <_strtod_l+0x8b8>
 800b846:	4621      	mov	r1, r4
 800b848:	2201      	movs	r2, #1
 800b84a:	9805      	ldr	r0, [sp, #20]
 800b84c:	f7ff f984 	bl	800ab58 <__lshift>
 800b850:	4641      	mov	r1, r8
 800b852:	4604      	mov	r4, r0
 800b854:	f7ff f9ec 	bl	800ac30 <__mcmp>
 800b858:	2800      	cmp	r0, #0
 800b85a:	dd51      	ble.n	800b900 <_strtod_l+0x8b8>
 800b85c:	f02b 4300 	bic.w	r3, fp, #2147483648	@ 0x80000000
 800b860:	9a08      	ldr	r2, [sp, #32]
 800b862:	0d1b      	lsrs	r3, r3, #20
 800b864:	051b      	lsls	r3, r3, #20
 800b866:	2a00      	cmp	r2, #0
 800b868:	d06b      	beq.n	800b942 <_strtod_l+0x8fa>
 800b86a:	f1b3 6fd6 	cmp.w	r3, #112197632	@ 0x6b00000
 800b86e:	d868      	bhi.n	800b942 <_strtod_l+0x8fa>
 800b870:	f1b3 7f5c 	cmp.w	r3, #57671680	@ 0x3700000
 800b874:	f67f ae9d 	bls.w	800b5b2 <_strtod_l+0x56a>
 800b878:	4b0a      	ldr	r3, [pc, #40]	@ (800b8a4 <_strtod_l+0x85c>)
 800b87a:	4650      	mov	r0, sl
 800b87c:	4659      	mov	r1, fp
 800b87e:	2200      	movs	r2, #0
 800b880:	f7f4 feda 	bl	8000638 <__aeabi_dmul>
 800b884:	4b08      	ldr	r3, [pc, #32]	@ (800b8a8 <_strtod_l+0x860>)
 800b886:	400b      	ands	r3, r1
 800b888:	4682      	mov	sl, r0
 800b88a:	468b      	mov	fp, r1
 800b88c:	2b00      	cmp	r3, #0
 800b88e:	f47f ae05 	bne.w	800b49c <_strtod_l+0x454>
 800b892:	9a05      	ldr	r2, [sp, #20]
 800b894:	2322      	movs	r3, #34	@ 0x22
 800b896:	6013      	str	r3, [r2, #0]
 800b898:	e600      	b.n	800b49c <_strtod_l+0x454>
 800b89a:	bf00      	nop
 800b89c:	0800d280 	.word	0x0800d280
 800b8a0:	fffffc02 	.word	0xfffffc02
 800b8a4:	39500000 	.word	0x39500000
 800b8a8:	7ff00000 	.word	0x7ff00000
 800b8ac:	f8cd b038 	str.w	fp, [sp, #56]	@ 0x38
 800b8b0:	d165      	bne.n	800b97e <_strtod_l+0x936>
 800b8b2:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 800b8b4:	f3cb 0313 	ubfx	r3, fp, #0, #20
 800b8b8:	b35a      	cbz	r2, 800b912 <_strtod_l+0x8ca>
 800b8ba:	4a9f      	ldr	r2, [pc, #636]	@ (800bb38 <_strtod_l+0xaf0>)
 800b8bc:	4293      	cmp	r3, r2
 800b8be:	d12b      	bne.n	800b918 <_strtod_l+0x8d0>
 800b8c0:	9b08      	ldr	r3, [sp, #32]
 800b8c2:	4651      	mov	r1, sl
 800b8c4:	b303      	cbz	r3, 800b908 <_strtod_l+0x8c0>
 800b8c6:	4b9d      	ldr	r3, [pc, #628]	@ (800bb3c <_strtod_l+0xaf4>)
 800b8c8:	465a      	mov	r2, fp
 800b8ca:	4013      	ands	r3, r2
 800b8cc:	f1b3 6fd4 	cmp.w	r3, #111149056	@ 0x6a00000
 800b8d0:	f04f 32ff 	mov.w	r2, #4294967295
 800b8d4:	d81b      	bhi.n	800b90e <_strtod_l+0x8c6>
 800b8d6:	0d1b      	lsrs	r3, r3, #20
 800b8d8:	f1c3 036b 	rsb	r3, r3, #107	@ 0x6b
 800b8dc:	fa02 f303 	lsl.w	r3, r2, r3
 800b8e0:	4299      	cmp	r1, r3
 800b8e2:	d119      	bne.n	800b918 <_strtod_l+0x8d0>
 800b8e4:	4b96      	ldr	r3, [pc, #600]	@ (800bb40 <_strtod_l+0xaf8>)
 800b8e6:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 800b8e8:	429a      	cmp	r2, r3
 800b8ea:	d102      	bne.n	800b8f2 <_strtod_l+0x8aa>
 800b8ec:	3101      	adds	r1, #1
 800b8ee:	f43f adca 	beq.w	800b486 <_strtod_l+0x43e>
 800b8f2:	4b92      	ldr	r3, [pc, #584]	@ (800bb3c <_strtod_l+0xaf4>)
 800b8f4:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 800b8f6:	401a      	ands	r2, r3
 800b8f8:	f502 1b80 	add.w	fp, r2, #1048576	@ 0x100000
 800b8fc:	f04f 0a00 	mov.w	sl, #0
 800b900:	9b08      	ldr	r3, [sp, #32]
 800b902:	2b00      	cmp	r3, #0
 800b904:	d1b8      	bne.n	800b878 <_strtod_l+0x830>
 800b906:	e5c9      	b.n	800b49c <_strtod_l+0x454>
 800b908:	f04f 33ff 	mov.w	r3, #4294967295
 800b90c:	e7e8      	b.n	800b8e0 <_strtod_l+0x898>
 800b90e:	4613      	mov	r3, r2
 800b910:	e7e6      	b.n	800b8e0 <_strtod_l+0x898>
 800b912:	ea53 030a 	orrs.w	r3, r3, sl
 800b916:	d0a1      	beq.n	800b85c <_strtod_l+0x814>
 800b918:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 800b91a:	b1db      	cbz	r3, 800b954 <_strtod_l+0x90c>
 800b91c:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 800b91e:	4213      	tst	r3, r2
 800b920:	d0ee      	beq.n	800b900 <_strtod_l+0x8b8>
 800b922:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 800b924:	9a08      	ldr	r2, [sp, #32]
 800b926:	4650      	mov	r0, sl
 800b928:	4659      	mov	r1, fp
 800b92a:	b1bb      	cbz	r3, 800b95c <_strtod_l+0x914>
 800b92c:	f7ff fb6e 	bl	800b00c <sulp>
 800b930:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 800b934:	ec53 2b10 	vmov	r2, r3, d0
 800b938:	f7f4 fcc8 	bl	80002cc <__adddf3>
 800b93c:	4682      	mov	sl, r0
 800b93e:	468b      	mov	fp, r1
 800b940:	e7de      	b.n	800b900 <_strtod_l+0x8b8>
 800b942:	f5a3 1380 	sub.w	r3, r3, #1048576	@ 0x100000
 800b946:	ea6f 5b13 	mvn.w	fp, r3, lsr #20
 800b94a:	ea6f 5b0b 	mvn.w	fp, fp, lsl #20
 800b94e:	f04f 3aff 	mov.w	sl, #4294967295
 800b952:	e7d5      	b.n	800b900 <_strtod_l+0x8b8>
 800b954:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 800b956:	ea13 0f0a 	tst.w	r3, sl
 800b95a:	e7e1      	b.n	800b920 <_strtod_l+0x8d8>
 800b95c:	f7ff fb56 	bl	800b00c <sulp>
 800b960:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 800b964:	ec53 2b10 	vmov	r2, r3, d0
 800b968:	f7f4 fcae 	bl	80002c8 <__aeabi_dsub>
 800b96c:	2200      	movs	r2, #0
 800b96e:	2300      	movs	r3, #0
 800b970:	4682      	mov	sl, r0
 800b972:	468b      	mov	fp, r1
 800b974:	f7f5 f8c8 	bl	8000b08 <__aeabi_dcmpeq>
 800b978:	2800      	cmp	r0, #0
 800b97a:	d0c1      	beq.n	800b900 <_strtod_l+0x8b8>
 800b97c:	e619      	b.n	800b5b2 <_strtod_l+0x56a>
 800b97e:	4641      	mov	r1, r8
 800b980:	4620      	mov	r0, r4
 800b982:	f7ff facd 	bl	800af20 <__ratio>
 800b986:	ec57 6b10 	vmov	r6, r7, d0
 800b98a:	2200      	movs	r2, #0
 800b98c:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 800b990:	4630      	mov	r0, r6
 800b992:	4639      	mov	r1, r7
 800b994:	f7f5 f8cc 	bl	8000b30 <__aeabi_dcmple>
 800b998:	2800      	cmp	r0, #0
 800b99a:	d06f      	beq.n	800ba7c <_strtod_l+0xa34>
 800b99c:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 800b99e:	2b00      	cmp	r3, #0
 800b9a0:	d17a      	bne.n	800ba98 <_strtod_l+0xa50>
 800b9a2:	f1ba 0f00 	cmp.w	sl, #0
 800b9a6:	d158      	bne.n	800ba5a <_strtod_l+0xa12>
 800b9a8:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 800b9aa:	f3c3 0313 	ubfx	r3, r3, #0, #20
 800b9ae:	2b00      	cmp	r3, #0
 800b9b0:	d15a      	bne.n	800ba68 <_strtod_l+0xa20>
 800b9b2:	4b64      	ldr	r3, [pc, #400]	@ (800bb44 <_strtod_l+0xafc>)
 800b9b4:	2200      	movs	r2, #0
 800b9b6:	4630      	mov	r0, r6
 800b9b8:	4639      	mov	r1, r7
 800b9ba:	f7f5 f8af 	bl	8000b1c <__aeabi_dcmplt>
 800b9be:	2800      	cmp	r0, #0
 800b9c0:	d159      	bne.n	800ba76 <_strtod_l+0xa2e>
 800b9c2:	4630      	mov	r0, r6
 800b9c4:	4639      	mov	r1, r7
 800b9c6:	4b60      	ldr	r3, [pc, #384]	@ (800bb48 <_strtod_l+0xb00>)
 800b9c8:	2200      	movs	r2, #0
 800b9ca:	f7f4 fe35 	bl	8000638 <__aeabi_dmul>
 800b9ce:	4606      	mov	r6, r0
 800b9d0:	460f      	mov	r7, r1
 800b9d2:	f107 4300 	add.w	r3, r7, #2147483648	@ 0x80000000
 800b9d6:	9606      	str	r6, [sp, #24]
 800b9d8:	9307      	str	r3, [sp, #28]
 800b9da:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 800b9de:	4d57      	ldr	r5, [pc, #348]	@ (800bb3c <_strtod_l+0xaf4>)
 800b9e0:	e9cd 2310 	strd	r2, r3, [sp, #64]	@ 0x40
 800b9e4:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 800b9e6:	401d      	ands	r5, r3
 800b9e8:	4b58      	ldr	r3, [pc, #352]	@ (800bb4c <_strtod_l+0xb04>)
 800b9ea:	429d      	cmp	r5, r3
 800b9ec:	f040 80b2 	bne.w	800bb54 <_strtod_l+0xb0c>
 800b9f0:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 800b9f2:	f1a3 7b54 	sub.w	fp, r3, #55574528	@ 0x3500000
 800b9f6:	ec4b ab10 	vmov	d0, sl, fp
 800b9fa:	f7ff f9c9 	bl	800ad90 <__ulp>
 800b9fe:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 800ba02:	ec51 0b10 	vmov	r0, r1, d0
 800ba06:	f7f4 fe17 	bl	8000638 <__aeabi_dmul>
 800ba0a:	4652      	mov	r2, sl
 800ba0c:	465b      	mov	r3, fp
 800ba0e:	f7f4 fc5d 	bl	80002cc <__adddf3>
 800ba12:	460b      	mov	r3, r1
 800ba14:	4949      	ldr	r1, [pc, #292]	@ (800bb3c <_strtod_l+0xaf4>)
 800ba16:	4a4e      	ldr	r2, [pc, #312]	@ (800bb50 <_strtod_l+0xb08>)
 800ba18:	4019      	ands	r1, r3
 800ba1a:	4291      	cmp	r1, r2
 800ba1c:	4682      	mov	sl, r0
 800ba1e:	d942      	bls.n	800baa6 <_strtod_l+0xa5e>
 800ba20:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 800ba22:	4b47      	ldr	r3, [pc, #284]	@ (800bb40 <_strtod_l+0xaf8>)
 800ba24:	429a      	cmp	r2, r3
 800ba26:	d103      	bne.n	800ba30 <_strtod_l+0x9e8>
 800ba28:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 800ba2a:	3301      	adds	r3, #1
 800ba2c:	f43f ad2b 	beq.w	800b486 <_strtod_l+0x43e>
 800ba30:	f8df b10c 	ldr.w	fp, [pc, #268]	@ 800bb40 <_strtod_l+0xaf8>
 800ba34:	f04f 3aff 	mov.w	sl, #4294967295
 800ba38:	991a      	ldr	r1, [sp, #104]	@ 0x68
 800ba3a:	9805      	ldr	r0, [sp, #20]
 800ba3c:	f7fe fe74 	bl	800a728 <_Bfree>
 800ba40:	9805      	ldr	r0, [sp, #20]
 800ba42:	4649      	mov	r1, r9
 800ba44:	f7fe fe70 	bl	800a728 <_Bfree>
 800ba48:	9805      	ldr	r0, [sp, #20]
 800ba4a:	4641      	mov	r1, r8
 800ba4c:	f7fe fe6c 	bl	800a728 <_Bfree>
 800ba50:	9805      	ldr	r0, [sp, #20]
 800ba52:	4621      	mov	r1, r4
 800ba54:	f7fe fe68 	bl	800a728 <_Bfree>
 800ba58:	e618      	b.n	800b68c <_strtod_l+0x644>
 800ba5a:	f1ba 0f01 	cmp.w	sl, #1
 800ba5e:	d103      	bne.n	800ba68 <_strtod_l+0xa20>
 800ba60:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 800ba62:	2b00      	cmp	r3, #0
 800ba64:	f43f ada5 	beq.w	800b5b2 <_strtod_l+0x56a>
 800ba68:	ed9f 7b2b 	vldr	d7, [pc, #172]	@ 800bb18 <_strtod_l+0xad0>
 800ba6c:	4f35      	ldr	r7, [pc, #212]	@ (800bb44 <_strtod_l+0xafc>)
 800ba6e:	ed8d 7b06 	vstr	d7, [sp, #24]
 800ba72:	2600      	movs	r6, #0
 800ba74:	e7b1      	b.n	800b9da <_strtod_l+0x992>
 800ba76:	4f34      	ldr	r7, [pc, #208]	@ (800bb48 <_strtod_l+0xb00>)
 800ba78:	2600      	movs	r6, #0
 800ba7a:	e7aa      	b.n	800b9d2 <_strtod_l+0x98a>
 800ba7c:	4b32      	ldr	r3, [pc, #200]	@ (800bb48 <_strtod_l+0xb00>)
 800ba7e:	4630      	mov	r0, r6
 800ba80:	4639      	mov	r1, r7
 800ba82:	2200      	movs	r2, #0
 800ba84:	f7f4 fdd8 	bl	8000638 <__aeabi_dmul>
 800ba88:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 800ba8a:	4606      	mov	r6, r0
 800ba8c:	460f      	mov	r7, r1
 800ba8e:	2b00      	cmp	r3, #0
 800ba90:	d09f      	beq.n	800b9d2 <_strtod_l+0x98a>
 800ba92:	e9cd 6706 	strd	r6, r7, [sp, #24]
 800ba96:	e7a0      	b.n	800b9da <_strtod_l+0x992>
 800ba98:	ed9f 7b21 	vldr	d7, [pc, #132]	@ 800bb20 <_strtod_l+0xad8>
 800ba9c:	ed8d 7b06 	vstr	d7, [sp, #24]
 800baa0:	ec57 6b17 	vmov	r6, r7, d7
 800baa4:	e799      	b.n	800b9da <_strtod_l+0x992>
 800baa6:	f103 7b54 	add.w	fp, r3, #55574528	@ 0x3500000
 800baaa:	9b08      	ldr	r3, [sp, #32]
 800baac:	f8cd b038 	str.w	fp, [sp, #56]	@ 0x38
 800bab0:	2b00      	cmp	r3, #0
 800bab2:	d1c1      	bne.n	800ba38 <_strtod_l+0x9f0>
 800bab4:	f02b 4300 	bic.w	r3, fp, #2147483648	@ 0x80000000
 800bab8:	0d1b      	lsrs	r3, r3, #20
 800baba:	051b      	lsls	r3, r3, #20
 800babc:	429d      	cmp	r5, r3
 800babe:	d1bb      	bne.n	800ba38 <_strtod_l+0x9f0>
 800bac0:	4630      	mov	r0, r6
 800bac2:	4639      	mov	r1, r7
 800bac4:	f7f5 f918 	bl	8000cf8 <__aeabi_d2lz>
 800bac8:	f7f4 fd88 	bl	80005dc <__aeabi_l2d>
 800bacc:	4602      	mov	r2, r0
 800bace:	460b      	mov	r3, r1
 800bad0:	4630      	mov	r0, r6
 800bad2:	4639      	mov	r1, r7
 800bad4:	f7f4 fbf8 	bl	80002c8 <__aeabi_dsub>
 800bad8:	460b      	mov	r3, r1
 800bada:	4602      	mov	r2, r0
 800badc:	e9cd 230c 	strd	r2, r3, [sp, #48]	@ 0x30
 800bae0:	f3cb 0613 	ubfx	r6, fp, #0, #20
 800bae4:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 800bae6:	ea46 060a 	orr.w	r6, r6, sl
 800baea:	431e      	orrs	r6, r3
 800baec:	d06f      	beq.n	800bbce <_strtod_l+0xb86>
 800baee:	a30e      	add	r3, pc, #56	@ (adr r3, 800bb28 <_strtod_l+0xae0>)
 800baf0:	e9d3 2300 	ldrd	r2, r3, [r3]
 800baf4:	f7f5 f812 	bl	8000b1c <__aeabi_dcmplt>
 800baf8:	2800      	cmp	r0, #0
 800bafa:	f47f accf 	bne.w	800b49c <_strtod_l+0x454>
 800bafe:	a30c      	add	r3, pc, #48	@ (adr r3, 800bb30 <_strtod_l+0xae8>)
 800bb00:	e9d3 2300 	ldrd	r2, r3, [r3]
 800bb04:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 800bb08:	f7f5 f826 	bl	8000b58 <__aeabi_dcmpgt>
 800bb0c:	2800      	cmp	r0, #0
 800bb0e:	d093      	beq.n	800ba38 <_strtod_l+0x9f0>
 800bb10:	e4c4      	b.n	800b49c <_strtod_l+0x454>
 800bb12:	bf00      	nop
 800bb14:	f3af 8000 	nop.w
 800bb18:	00000000 	.word	0x00000000
 800bb1c:	bff00000 	.word	0xbff00000
 800bb20:	00000000 	.word	0x00000000
 800bb24:	3ff00000 	.word	0x3ff00000
 800bb28:	94a03595 	.word	0x94a03595
 800bb2c:	3fdfffff 	.word	0x3fdfffff
 800bb30:	35afe535 	.word	0x35afe535
 800bb34:	3fe00000 	.word	0x3fe00000
 800bb38:	000fffff 	.word	0x000fffff
 800bb3c:	7ff00000 	.word	0x7ff00000
 800bb40:	7fefffff 	.word	0x7fefffff
 800bb44:	3ff00000 	.word	0x3ff00000
 800bb48:	3fe00000 	.word	0x3fe00000
 800bb4c:	7fe00000 	.word	0x7fe00000
 800bb50:	7c9fffff 	.word	0x7c9fffff
 800bb54:	9b08      	ldr	r3, [sp, #32]
 800bb56:	b323      	cbz	r3, 800bba2 <_strtod_l+0xb5a>
 800bb58:	f1b5 6fd4 	cmp.w	r5, #111149056	@ 0x6a00000
 800bb5c:	d821      	bhi.n	800bba2 <_strtod_l+0xb5a>
 800bb5e:	a328      	add	r3, pc, #160	@ (adr r3, 800bc00 <_strtod_l+0xbb8>)
 800bb60:	e9d3 2300 	ldrd	r2, r3, [r3]
 800bb64:	4630      	mov	r0, r6
 800bb66:	4639      	mov	r1, r7
 800bb68:	f7f4 ffe2 	bl	8000b30 <__aeabi_dcmple>
 800bb6c:	b1a0      	cbz	r0, 800bb98 <_strtod_l+0xb50>
 800bb6e:	4639      	mov	r1, r7
 800bb70:	4630      	mov	r0, r6
 800bb72:	f7f5 f839 	bl	8000be8 <__aeabi_d2uiz>
 800bb76:	2801      	cmp	r0, #1
 800bb78:	bf38      	it	cc
 800bb7a:	2001      	movcc	r0, #1
 800bb7c:	f7f4 fce2 	bl	8000544 <__aeabi_ui2d>
 800bb80:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 800bb82:	4606      	mov	r6, r0
 800bb84:	460f      	mov	r7, r1
 800bb86:	b9fb      	cbnz	r3, 800bbc8 <_strtod_l+0xb80>
 800bb88:	f101 4300 	add.w	r3, r1, #2147483648	@ 0x80000000
 800bb8c:	9014      	str	r0, [sp, #80]	@ 0x50
 800bb8e:	9315      	str	r3, [sp, #84]	@ 0x54
 800bb90:	e9dd 2314 	ldrd	r2, r3, [sp, #80]	@ 0x50
 800bb94:	e9cd 2310 	strd	r2, r3, [sp, #64]	@ 0x40
 800bb98:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 800bb9a:	f103 63d6 	add.w	r3, r3, #112197632	@ 0x6b00000
 800bb9e:	1b5b      	subs	r3, r3, r5
 800bba0:	9311      	str	r3, [sp, #68]	@ 0x44
 800bba2:	ed9d 0b0c 	vldr	d0, [sp, #48]	@ 0x30
 800bba6:	e9dd ab10 	ldrd	sl, fp, [sp, #64]	@ 0x40
 800bbaa:	f7ff f8f1 	bl	800ad90 <__ulp>
 800bbae:	4650      	mov	r0, sl
 800bbb0:	ec53 2b10 	vmov	r2, r3, d0
 800bbb4:	4659      	mov	r1, fp
 800bbb6:	f7f4 fd3f 	bl	8000638 <__aeabi_dmul>
 800bbba:	e9dd 230c 	ldrd	r2, r3, [sp, #48]	@ 0x30
 800bbbe:	f7f4 fb85 	bl	80002cc <__adddf3>
 800bbc2:	4682      	mov	sl, r0
 800bbc4:	468b      	mov	fp, r1
 800bbc6:	e770      	b.n	800baaa <_strtod_l+0xa62>
 800bbc8:	e9cd 6714 	strd	r6, r7, [sp, #80]	@ 0x50
 800bbcc:	e7e0      	b.n	800bb90 <_strtod_l+0xb48>
 800bbce:	a30e      	add	r3, pc, #56	@ (adr r3, 800bc08 <_strtod_l+0xbc0>)
 800bbd0:	e9d3 2300 	ldrd	r2, r3, [r3]
 800bbd4:	f7f4 ffa2 	bl	8000b1c <__aeabi_dcmplt>
 800bbd8:	e798      	b.n	800bb0c <_strtod_l+0xac4>
 800bbda:	2300      	movs	r3, #0
 800bbdc:	930b      	str	r3, [sp, #44]	@ 0x2c
 800bbde:	9a17      	ldr	r2, [sp, #92]	@ 0x5c
 800bbe0:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 800bbe2:	6013      	str	r3, [r2, #0]
 800bbe4:	f7ff ba6d 	b.w	800b0c2 <_strtod_l+0x7a>
 800bbe8:	2a65      	cmp	r2, #101	@ 0x65
 800bbea:	f43f ab66 	beq.w	800b2ba <_strtod_l+0x272>
 800bbee:	2a45      	cmp	r2, #69	@ 0x45
 800bbf0:	f43f ab63 	beq.w	800b2ba <_strtod_l+0x272>
 800bbf4:	2301      	movs	r3, #1
 800bbf6:	f7ff bb9e 	b.w	800b336 <_strtod_l+0x2ee>
 800bbfa:	bf00      	nop
 800bbfc:	f3af 8000 	nop.w
 800bc00:	ffc00000 	.word	0xffc00000
 800bc04:	41dfffff 	.word	0x41dfffff
 800bc08:	94a03595 	.word	0x94a03595
 800bc0c:	3fcfffff 	.word	0x3fcfffff

0800bc10 <_strtod_r>:
 800bc10:	4b01      	ldr	r3, [pc, #4]	@ (800bc18 <_strtod_r+0x8>)
 800bc12:	f7ff ba19 	b.w	800b048 <_strtod_l>
 800bc16:	bf00      	nop
 800bc18:	20000090 	.word	0x20000090

0800bc1c <_strtol_l.constprop.0>:
 800bc1c:	2b24      	cmp	r3, #36	@ 0x24
 800bc1e:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800bc22:	4686      	mov	lr, r0
 800bc24:	4690      	mov	r8, r2
 800bc26:	d801      	bhi.n	800bc2c <_strtol_l.constprop.0+0x10>
 800bc28:	2b01      	cmp	r3, #1
 800bc2a:	d106      	bne.n	800bc3a <_strtol_l.constprop.0+0x1e>
 800bc2c:	f7fd fdac 	bl	8009788 <__errno>
 800bc30:	2316      	movs	r3, #22
 800bc32:	6003      	str	r3, [r0, #0]
 800bc34:	2000      	movs	r0, #0
 800bc36:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800bc3a:	4834      	ldr	r0, [pc, #208]	@ (800bd0c <_strtol_l.constprop.0+0xf0>)
 800bc3c:	460d      	mov	r5, r1
 800bc3e:	462a      	mov	r2, r5
 800bc40:	f815 4b01 	ldrb.w	r4, [r5], #1
 800bc44:	5d06      	ldrb	r6, [r0, r4]
 800bc46:	f016 0608 	ands.w	r6, r6, #8
 800bc4a:	d1f8      	bne.n	800bc3e <_strtol_l.constprop.0+0x22>
 800bc4c:	2c2d      	cmp	r4, #45	@ 0x2d
 800bc4e:	d12d      	bne.n	800bcac <_strtol_l.constprop.0+0x90>
 800bc50:	782c      	ldrb	r4, [r5, #0]
 800bc52:	2601      	movs	r6, #1
 800bc54:	1c95      	adds	r5, r2, #2
 800bc56:	f033 0210 	bics.w	r2, r3, #16
 800bc5a:	d109      	bne.n	800bc70 <_strtol_l.constprop.0+0x54>
 800bc5c:	2c30      	cmp	r4, #48	@ 0x30
 800bc5e:	d12a      	bne.n	800bcb6 <_strtol_l.constprop.0+0x9a>
 800bc60:	782a      	ldrb	r2, [r5, #0]
 800bc62:	f002 02df 	and.w	r2, r2, #223	@ 0xdf
 800bc66:	2a58      	cmp	r2, #88	@ 0x58
 800bc68:	d125      	bne.n	800bcb6 <_strtol_l.constprop.0+0x9a>
 800bc6a:	786c      	ldrb	r4, [r5, #1]
 800bc6c:	2310      	movs	r3, #16
 800bc6e:	3502      	adds	r5, #2
 800bc70:	f106 4c00 	add.w	ip, r6, #2147483648	@ 0x80000000
 800bc74:	f10c 3cff 	add.w	ip, ip, #4294967295
 800bc78:	2200      	movs	r2, #0
 800bc7a:	fbbc f9f3 	udiv	r9, ip, r3
 800bc7e:	4610      	mov	r0, r2
 800bc80:	fb03 ca19 	mls	sl, r3, r9, ip
 800bc84:	f1a4 0730 	sub.w	r7, r4, #48	@ 0x30
 800bc88:	2f09      	cmp	r7, #9
 800bc8a:	d81b      	bhi.n	800bcc4 <_strtol_l.constprop.0+0xa8>
 800bc8c:	463c      	mov	r4, r7
 800bc8e:	42a3      	cmp	r3, r4
 800bc90:	dd27      	ble.n	800bce2 <_strtol_l.constprop.0+0xc6>
 800bc92:	1c57      	adds	r7, r2, #1
 800bc94:	d007      	beq.n	800bca6 <_strtol_l.constprop.0+0x8a>
 800bc96:	4581      	cmp	r9, r0
 800bc98:	d320      	bcc.n	800bcdc <_strtol_l.constprop.0+0xc0>
 800bc9a:	d101      	bne.n	800bca0 <_strtol_l.constprop.0+0x84>
 800bc9c:	45a2      	cmp	sl, r4
 800bc9e:	db1d      	blt.n	800bcdc <_strtol_l.constprop.0+0xc0>
 800bca0:	fb00 4003 	mla	r0, r0, r3, r4
 800bca4:	2201      	movs	r2, #1
 800bca6:	f815 4b01 	ldrb.w	r4, [r5], #1
 800bcaa:	e7eb      	b.n	800bc84 <_strtol_l.constprop.0+0x68>
 800bcac:	2c2b      	cmp	r4, #43	@ 0x2b
 800bcae:	bf04      	itt	eq
 800bcb0:	782c      	ldrbeq	r4, [r5, #0]
 800bcb2:	1c95      	addeq	r5, r2, #2
 800bcb4:	e7cf      	b.n	800bc56 <_strtol_l.constprop.0+0x3a>
 800bcb6:	2b00      	cmp	r3, #0
 800bcb8:	d1da      	bne.n	800bc70 <_strtol_l.constprop.0+0x54>
 800bcba:	2c30      	cmp	r4, #48	@ 0x30
 800bcbc:	bf0c      	ite	eq
 800bcbe:	2308      	moveq	r3, #8
 800bcc0:	230a      	movne	r3, #10
 800bcc2:	e7d5      	b.n	800bc70 <_strtol_l.constprop.0+0x54>
 800bcc4:	f1a4 0741 	sub.w	r7, r4, #65	@ 0x41
 800bcc8:	2f19      	cmp	r7, #25
 800bcca:	d801      	bhi.n	800bcd0 <_strtol_l.constprop.0+0xb4>
 800bccc:	3c37      	subs	r4, #55	@ 0x37
 800bcce:	e7de      	b.n	800bc8e <_strtol_l.constprop.0+0x72>
 800bcd0:	f1a4 0761 	sub.w	r7, r4, #97	@ 0x61
 800bcd4:	2f19      	cmp	r7, #25
 800bcd6:	d804      	bhi.n	800bce2 <_strtol_l.constprop.0+0xc6>
 800bcd8:	3c57      	subs	r4, #87	@ 0x57
 800bcda:	e7d8      	b.n	800bc8e <_strtol_l.constprop.0+0x72>
 800bcdc:	f04f 32ff 	mov.w	r2, #4294967295
 800bce0:	e7e1      	b.n	800bca6 <_strtol_l.constprop.0+0x8a>
 800bce2:	1c53      	adds	r3, r2, #1
 800bce4:	d108      	bne.n	800bcf8 <_strtol_l.constprop.0+0xdc>
 800bce6:	2322      	movs	r3, #34	@ 0x22
 800bce8:	f8ce 3000 	str.w	r3, [lr]
 800bcec:	4660      	mov	r0, ip
 800bcee:	f1b8 0f00 	cmp.w	r8, #0
 800bcf2:	d0a0      	beq.n	800bc36 <_strtol_l.constprop.0+0x1a>
 800bcf4:	1e69      	subs	r1, r5, #1
 800bcf6:	e006      	b.n	800bd06 <_strtol_l.constprop.0+0xea>
 800bcf8:	b106      	cbz	r6, 800bcfc <_strtol_l.constprop.0+0xe0>
 800bcfa:	4240      	negs	r0, r0
 800bcfc:	f1b8 0f00 	cmp.w	r8, #0
 800bd00:	d099      	beq.n	800bc36 <_strtol_l.constprop.0+0x1a>
 800bd02:	2a00      	cmp	r2, #0
 800bd04:	d1f6      	bne.n	800bcf4 <_strtol_l.constprop.0+0xd8>
 800bd06:	f8c8 1000 	str.w	r1, [r8]
 800bd0a:	e794      	b.n	800bc36 <_strtol_l.constprop.0+0x1a>
 800bd0c:	0800d2a9 	.word	0x0800d2a9

0800bd10 <_strtol_r>:
 800bd10:	f7ff bf84 	b.w	800bc1c <_strtol_l.constprop.0>

0800bd14 <__ssputs_r>:
 800bd14:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800bd18:	688e      	ldr	r6, [r1, #8]
 800bd1a:	461f      	mov	r7, r3
 800bd1c:	42be      	cmp	r6, r7
 800bd1e:	680b      	ldr	r3, [r1, #0]
 800bd20:	4682      	mov	sl, r0
 800bd22:	460c      	mov	r4, r1
 800bd24:	4690      	mov	r8, r2
 800bd26:	d82d      	bhi.n	800bd84 <__ssputs_r+0x70>
 800bd28:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 800bd2c:	f412 6f90 	tst.w	r2, #1152	@ 0x480
 800bd30:	d026      	beq.n	800bd80 <__ssputs_r+0x6c>
 800bd32:	6965      	ldr	r5, [r4, #20]
 800bd34:	6909      	ldr	r1, [r1, #16]
 800bd36:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 800bd3a:	eba3 0901 	sub.w	r9, r3, r1
 800bd3e:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
 800bd42:	1c7b      	adds	r3, r7, #1
 800bd44:	444b      	add	r3, r9
 800bd46:	106d      	asrs	r5, r5, #1
 800bd48:	429d      	cmp	r5, r3
 800bd4a:	bf38      	it	cc
 800bd4c:	461d      	movcc	r5, r3
 800bd4e:	0553      	lsls	r3, r2, #21
 800bd50:	d527      	bpl.n	800bda2 <__ssputs_r+0x8e>
 800bd52:	4629      	mov	r1, r5
 800bd54:	f7fe fc1c 	bl	800a590 <_malloc_r>
 800bd58:	4606      	mov	r6, r0
 800bd5a:	b360      	cbz	r0, 800bdb6 <__ssputs_r+0xa2>
 800bd5c:	6921      	ldr	r1, [r4, #16]
 800bd5e:	464a      	mov	r2, r9
 800bd60:	f7fd fd3f 	bl	80097e2 <memcpy>
 800bd64:	89a3      	ldrh	r3, [r4, #12]
 800bd66:	f423 6390 	bic.w	r3, r3, #1152	@ 0x480
 800bd6a:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 800bd6e:	81a3      	strh	r3, [r4, #12]
 800bd70:	6126      	str	r6, [r4, #16]
 800bd72:	6165      	str	r5, [r4, #20]
 800bd74:	444e      	add	r6, r9
 800bd76:	eba5 0509 	sub.w	r5, r5, r9
 800bd7a:	6026      	str	r6, [r4, #0]
 800bd7c:	60a5      	str	r5, [r4, #8]
 800bd7e:	463e      	mov	r6, r7
 800bd80:	42be      	cmp	r6, r7
 800bd82:	d900      	bls.n	800bd86 <__ssputs_r+0x72>
 800bd84:	463e      	mov	r6, r7
 800bd86:	6820      	ldr	r0, [r4, #0]
 800bd88:	4632      	mov	r2, r6
 800bd8a:	4641      	mov	r1, r8
 800bd8c:	f000 fb6a 	bl	800c464 <memmove>
 800bd90:	68a3      	ldr	r3, [r4, #8]
 800bd92:	1b9b      	subs	r3, r3, r6
 800bd94:	60a3      	str	r3, [r4, #8]
 800bd96:	6823      	ldr	r3, [r4, #0]
 800bd98:	4433      	add	r3, r6
 800bd9a:	6023      	str	r3, [r4, #0]
 800bd9c:	2000      	movs	r0, #0
 800bd9e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800bda2:	462a      	mov	r2, r5
 800bda4:	f000 ff41 	bl	800cc2a <_realloc_r>
 800bda8:	4606      	mov	r6, r0
 800bdaa:	2800      	cmp	r0, #0
 800bdac:	d1e0      	bne.n	800bd70 <__ssputs_r+0x5c>
 800bdae:	6921      	ldr	r1, [r4, #16]
 800bdb0:	4650      	mov	r0, sl
 800bdb2:	f7fe fb79 	bl	800a4a8 <_free_r>
 800bdb6:	230c      	movs	r3, #12
 800bdb8:	f8ca 3000 	str.w	r3, [sl]
 800bdbc:	89a3      	ldrh	r3, [r4, #12]
 800bdbe:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 800bdc2:	81a3      	strh	r3, [r4, #12]
 800bdc4:	f04f 30ff 	mov.w	r0, #4294967295
 800bdc8:	e7e9      	b.n	800bd9e <__ssputs_r+0x8a>
	...

0800bdcc <_svfiprintf_r>:
 800bdcc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800bdd0:	4698      	mov	r8, r3
 800bdd2:	898b      	ldrh	r3, [r1, #12]
 800bdd4:	061b      	lsls	r3, r3, #24
 800bdd6:	b09d      	sub	sp, #116	@ 0x74
 800bdd8:	4607      	mov	r7, r0
 800bdda:	460d      	mov	r5, r1
 800bddc:	4614      	mov	r4, r2
 800bdde:	d510      	bpl.n	800be02 <_svfiprintf_r+0x36>
 800bde0:	690b      	ldr	r3, [r1, #16]
 800bde2:	b973      	cbnz	r3, 800be02 <_svfiprintf_r+0x36>
 800bde4:	2140      	movs	r1, #64	@ 0x40
 800bde6:	f7fe fbd3 	bl	800a590 <_malloc_r>
 800bdea:	6028      	str	r0, [r5, #0]
 800bdec:	6128      	str	r0, [r5, #16]
 800bdee:	b930      	cbnz	r0, 800bdfe <_svfiprintf_r+0x32>
 800bdf0:	230c      	movs	r3, #12
 800bdf2:	603b      	str	r3, [r7, #0]
 800bdf4:	f04f 30ff 	mov.w	r0, #4294967295
 800bdf8:	b01d      	add	sp, #116	@ 0x74
 800bdfa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800bdfe:	2340      	movs	r3, #64	@ 0x40
 800be00:	616b      	str	r3, [r5, #20]
 800be02:	2300      	movs	r3, #0
 800be04:	9309      	str	r3, [sp, #36]	@ 0x24
 800be06:	2320      	movs	r3, #32
 800be08:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 800be0c:	f8cd 800c 	str.w	r8, [sp, #12]
 800be10:	2330      	movs	r3, #48	@ 0x30
 800be12:	f8df 819c 	ldr.w	r8, [pc, #412]	@ 800bfb0 <_svfiprintf_r+0x1e4>
 800be16:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 800be1a:	f04f 0901 	mov.w	r9, #1
 800be1e:	4623      	mov	r3, r4
 800be20:	469a      	mov	sl, r3
 800be22:	f813 2b01 	ldrb.w	r2, [r3], #1
 800be26:	b10a      	cbz	r2, 800be2c <_svfiprintf_r+0x60>
 800be28:	2a25      	cmp	r2, #37	@ 0x25
 800be2a:	d1f9      	bne.n	800be20 <_svfiprintf_r+0x54>
 800be2c:	ebba 0b04 	subs.w	fp, sl, r4
 800be30:	d00b      	beq.n	800be4a <_svfiprintf_r+0x7e>
 800be32:	465b      	mov	r3, fp
 800be34:	4622      	mov	r2, r4
 800be36:	4629      	mov	r1, r5
 800be38:	4638      	mov	r0, r7
 800be3a:	f7ff ff6b 	bl	800bd14 <__ssputs_r>
 800be3e:	3001      	adds	r0, #1
 800be40:	f000 80a7 	beq.w	800bf92 <_svfiprintf_r+0x1c6>
 800be44:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 800be46:	445a      	add	r2, fp
 800be48:	9209      	str	r2, [sp, #36]	@ 0x24
 800be4a:	f89a 3000 	ldrb.w	r3, [sl]
 800be4e:	2b00      	cmp	r3, #0
 800be50:	f000 809f 	beq.w	800bf92 <_svfiprintf_r+0x1c6>
 800be54:	2300      	movs	r3, #0
 800be56:	f04f 32ff 	mov.w	r2, #4294967295
 800be5a:	e9cd 2305 	strd	r2, r3, [sp, #20]
 800be5e:	f10a 0a01 	add.w	sl, sl, #1
 800be62:	9304      	str	r3, [sp, #16]
 800be64:	9307      	str	r3, [sp, #28]
 800be66:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 800be6a:	931a      	str	r3, [sp, #104]	@ 0x68
 800be6c:	4654      	mov	r4, sl
 800be6e:	2205      	movs	r2, #5
 800be70:	f814 1b01 	ldrb.w	r1, [r4], #1
 800be74:	484e      	ldr	r0, [pc, #312]	@ (800bfb0 <_svfiprintf_r+0x1e4>)
 800be76:	f7f4 f9cb 	bl	8000210 <memchr>
 800be7a:	9a04      	ldr	r2, [sp, #16]
 800be7c:	b9d8      	cbnz	r0, 800beb6 <_svfiprintf_r+0xea>
 800be7e:	06d0      	lsls	r0, r2, #27
 800be80:	bf44      	itt	mi
 800be82:	2320      	movmi	r3, #32
 800be84:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 800be88:	0711      	lsls	r1, r2, #28
 800be8a:	bf44      	itt	mi
 800be8c:	232b      	movmi	r3, #43	@ 0x2b
 800be8e:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 800be92:	f89a 3000 	ldrb.w	r3, [sl]
 800be96:	2b2a      	cmp	r3, #42	@ 0x2a
 800be98:	d015      	beq.n	800bec6 <_svfiprintf_r+0xfa>
 800be9a:	9a07      	ldr	r2, [sp, #28]
 800be9c:	4654      	mov	r4, sl
 800be9e:	2000      	movs	r0, #0
 800bea0:	f04f 0c0a 	mov.w	ip, #10
 800bea4:	4621      	mov	r1, r4
 800bea6:	f811 3b01 	ldrb.w	r3, [r1], #1
 800beaa:	3b30      	subs	r3, #48	@ 0x30
 800beac:	2b09      	cmp	r3, #9
 800beae:	d94b      	bls.n	800bf48 <_svfiprintf_r+0x17c>
 800beb0:	b1b0      	cbz	r0, 800bee0 <_svfiprintf_r+0x114>
 800beb2:	9207      	str	r2, [sp, #28]
 800beb4:	e014      	b.n	800bee0 <_svfiprintf_r+0x114>
 800beb6:	eba0 0308 	sub.w	r3, r0, r8
 800beba:	fa09 f303 	lsl.w	r3, r9, r3
 800bebe:	4313      	orrs	r3, r2
 800bec0:	9304      	str	r3, [sp, #16]
 800bec2:	46a2      	mov	sl, r4
 800bec4:	e7d2      	b.n	800be6c <_svfiprintf_r+0xa0>
 800bec6:	9b03      	ldr	r3, [sp, #12]
 800bec8:	1d19      	adds	r1, r3, #4
 800beca:	681b      	ldr	r3, [r3, #0]
 800becc:	9103      	str	r1, [sp, #12]
 800bece:	2b00      	cmp	r3, #0
 800bed0:	bfbb      	ittet	lt
 800bed2:	425b      	neglt	r3, r3
 800bed4:	f042 0202 	orrlt.w	r2, r2, #2
 800bed8:	9307      	strge	r3, [sp, #28]
 800beda:	9307      	strlt	r3, [sp, #28]
 800bedc:	bfb8      	it	lt
 800bede:	9204      	strlt	r2, [sp, #16]
 800bee0:	7823      	ldrb	r3, [r4, #0]
 800bee2:	2b2e      	cmp	r3, #46	@ 0x2e
 800bee4:	d10a      	bne.n	800befc <_svfiprintf_r+0x130>
 800bee6:	7863      	ldrb	r3, [r4, #1]
 800bee8:	2b2a      	cmp	r3, #42	@ 0x2a
 800beea:	d132      	bne.n	800bf52 <_svfiprintf_r+0x186>
 800beec:	9b03      	ldr	r3, [sp, #12]
 800beee:	1d1a      	adds	r2, r3, #4
 800bef0:	681b      	ldr	r3, [r3, #0]
 800bef2:	9203      	str	r2, [sp, #12]
 800bef4:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 800bef8:	3402      	adds	r4, #2
 800befa:	9305      	str	r3, [sp, #20]
 800befc:	f8df a0c0 	ldr.w	sl, [pc, #192]	@ 800bfc0 <_svfiprintf_r+0x1f4>
 800bf00:	7821      	ldrb	r1, [r4, #0]
 800bf02:	2203      	movs	r2, #3
 800bf04:	4650      	mov	r0, sl
 800bf06:	f7f4 f983 	bl	8000210 <memchr>
 800bf0a:	b138      	cbz	r0, 800bf1c <_svfiprintf_r+0x150>
 800bf0c:	9b04      	ldr	r3, [sp, #16]
 800bf0e:	eba0 000a 	sub.w	r0, r0, sl
 800bf12:	2240      	movs	r2, #64	@ 0x40
 800bf14:	4082      	lsls	r2, r0
 800bf16:	4313      	orrs	r3, r2
 800bf18:	3401      	adds	r4, #1
 800bf1a:	9304      	str	r3, [sp, #16]
 800bf1c:	f814 1b01 	ldrb.w	r1, [r4], #1
 800bf20:	4824      	ldr	r0, [pc, #144]	@ (800bfb4 <_svfiprintf_r+0x1e8>)
 800bf22:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 800bf26:	2206      	movs	r2, #6
 800bf28:	f7f4 f972 	bl	8000210 <memchr>
 800bf2c:	2800      	cmp	r0, #0
 800bf2e:	d036      	beq.n	800bf9e <_svfiprintf_r+0x1d2>
 800bf30:	4b21      	ldr	r3, [pc, #132]	@ (800bfb8 <_svfiprintf_r+0x1ec>)
 800bf32:	bb1b      	cbnz	r3, 800bf7c <_svfiprintf_r+0x1b0>
 800bf34:	9b03      	ldr	r3, [sp, #12]
 800bf36:	3307      	adds	r3, #7
 800bf38:	f023 0307 	bic.w	r3, r3, #7
 800bf3c:	3308      	adds	r3, #8
 800bf3e:	9303      	str	r3, [sp, #12]
 800bf40:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800bf42:	4433      	add	r3, r6
 800bf44:	9309      	str	r3, [sp, #36]	@ 0x24
 800bf46:	e76a      	b.n	800be1e <_svfiprintf_r+0x52>
 800bf48:	fb0c 3202 	mla	r2, ip, r2, r3
 800bf4c:	460c      	mov	r4, r1
 800bf4e:	2001      	movs	r0, #1
 800bf50:	e7a8      	b.n	800bea4 <_svfiprintf_r+0xd8>
 800bf52:	2300      	movs	r3, #0
 800bf54:	3401      	adds	r4, #1
 800bf56:	9305      	str	r3, [sp, #20]
 800bf58:	4619      	mov	r1, r3
 800bf5a:	f04f 0c0a 	mov.w	ip, #10
 800bf5e:	4620      	mov	r0, r4
 800bf60:	f810 2b01 	ldrb.w	r2, [r0], #1
 800bf64:	3a30      	subs	r2, #48	@ 0x30
 800bf66:	2a09      	cmp	r2, #9
 800bf68:	d903      	bls.n	800bf72 <_svfiprintf_r+0x1a6>
 800bf6a:	2b00      	cmp	r3, #0
 800bf6c:	d0c6      	beq.n	800befc <_svfiprintf_r+0x130>
 800bf6e:	9105      	str	r1, [sp, #20]
 800bf70:	e7c4      	b.n	800befc <_svfiprintf_r+0x130>
 800bf72:	fb0c 2101 	mla	r1, ip, r1, r2
 800bf76:	4604      	mov	r4, r0
 800bf78:	2301      	movs	r3, #1
 800bf7a:	e7f0      	b.n	800bf5e <_svfiprintf_r+0x192>
 800bf7c:	ab03      	add	r3, sp, #12
 800bf7e:	9300      	str	r3, [sp, #0]
 800bf80:	462a      	mov	r2, r5
 800bf82:	4b0e      	ldr	r3, [pc, #56]	@ (800bfbc <_svfiprintf_r+0x1f0>)
 800bf84:	a904      	add	r1, sp, #16
 800bf86:	4638      	mov	r0, r7
 800bf88:	f7fc fbb6 	bl	80086f8 <_printf_float>
 800bf8c:	1c42      	adds	r2, r0, #1
 800bf8e:	4606      	mov	r6, r0
 800bf90:	d1d6      	bne.n	800bf40 <_svfiprintf_r+0x174>
 800bf92:	89ab      	ldrh	r3, [r5, #12]
 800bf94:	065b      	lsls	r3, r3, #25
 800bf96:	f53f af2d 	bmi.w	800bdf4 <_svfiprintf_r+0x28>
 800bf9a:	9809      	ldr	r0, [sp, #36]	@ 0x24
 800bf9c:	e72c      	b.n	800bdf8 <_svfiprintf_r+0x2c>
 800bf9e:	ab03      	add	r3, sp, #12
 800bfa0:	9300      	str	r3, [sp, #0]
 800bfa2:	462a      	mov	r2, r5
 800bfa4:	4b05      	ldr	r3, [pc, #20]	@ (800bfbc <_svfiprintf_r+0x1f0>)
 800bfa6:	a904      	add	r1, sp, #16
 800bfa8:	4638      	mov	r0, r7
 800bfaa:	f7fc fe3d 	bl	8008c28 <_printf_i>
 800bfae:	e7ed      	b.n	800bf8c <_svfiprintf_r+0x1c0>
 800bfb0:	0800d3a9 	.word	0x0800d3a9
 800bfb4:	0800d3b3 	.word	0x0800d3b3
 800bfb8:	080086f9 	.word	0x080086f9
 800bfbc:	0800bd15 	.word	0x0800bd15
 800bfc0:	0800d3af 	.word	0x0800d3af

0800bfc4 <__sfputc_r>:
 800bfc4:	6893      	ldr	r3, [r2, #8]
 800bfc6:	3b01      	subs	r3, #1
 800bfc8:	2b00      	cmp	r3, #0
 800bfca:	b410      	push	{r4}
 800bfcc:	6093      	str	r3, [r2, #8]
 800bfce:	da08      	bge.n	800bfe2 <__sfputc_r+0x1e>
 800bfd0:	6994      	ldr	r4, [r2, #24]
 800bfd2:	42a3      	cmp	r3, r4
 800bfd4:	db01      	blt.n	800bfda <__sfputc_r+0x16>
 800bfd6:	290a      	cmp	r1, #10
 800bfd8:	d103      	bne.n	800bfe2 <__sfputc_r+0x1e>
 800bfda:	f85d 4b04 	ldr.w	r4, [sp], #4
 800bfde:	f7fd baec 	b.w	80095ba <__swbuf_r>
 800bfe2:	6813      	ldr	r3, [r2, #0]
 800bfe4:	1c58      	adds	r0, r3, #1
 800bfe6:	6010      	str	r0, [r2, #0]
 800bfe8:	7019      	strb	r1, [r3, #0]
 800bfea:	4608      	mov	r0, r1
 800bfec:	f85d 4b04 	ldr.w	r4, [sp], #4
 800bff0:	4770      	bx	lr

0800bff2 <__sfputs_r>:
 800bff2:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800bff4:	4606      	mov	r6, r0
 800bff6:	460f      	mov	r7, r1
 800bff8:	4614      	mov	r4, r2
 800bffa:	18d5      	adds	r5, r2, r3
 800bffc:	42ac      	cmp	r4, r5
 800bffe:	d101      	bne.n	800c004 <__sfputs_r+0x12>
 800c000:	2000      	movs	r0, #0
 800c002:	e007      	b.n	800c014 <__sfputs_r+0x22>
 800c004:	f814 1b01 	ldrb.w	r1, [r4], #1
 800c008:	463a      	mov	r2, r7
 800c00a:	4630      	mov	r0, r6
 800c00c:	f7ff ffda 	bl	800bfc4 <__sfputc_r>
 800c010:	1c43      	adds	r3, r0, #1
 800c012:	d1f3      	bne.n	800bffc <__sfputs_r+0xa>
 800c014:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

0800c018 <_vfiprintf_r>:
 800c018:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c01c:	460d      	mov	r5, r1
 800c01e:	b09d      	sub	sp, #116	@ 0x74
 800c020:	4614      	mov	r4, r2
 800c022:	4698      	mov	r8, r3
 800c024:	4606      	mov	r6, r0
 800c026:	b118      	cbz	r0, 800c030 <_vfiprintf_r+0x18>
 800c028:	6a03      	ldr	r3, [r0, #32]
 800c02a:	b90b      	cbnz	r3, 800c030 <_vfiprintf_r+0x18>
 800c02c:	f7fd f9bc 	bl	80093a8 <__sinit>
 800c030:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 800c032:	07d9      	lsls	r1, r3, #31
 800c034:	d405      	bmi.n	800c042 <_vfiprintf_r+0x2a>
 800c036:	89ab      	ldrh	r3, [r5, #12]
 800c038:	059a      	lsls	r2, r3, #22
 800c03a:	d402      	bmi.n	800c042 <_vfiprintf_r+0x2a>
 800c03c:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 800c03e:	f7fd fbce 	bl	80097de <__retarget_lock_acquire_recursive>
 800c042:	89ab      	ldrh	r3, [r5, #12]
 800c044:	071b      	lsls	r3, r3, #28
 800c046:	d501      	bpl.n	800c04c <_vfiprintf_r+0x34>
 800c048:	692b      	ldr	r3, [r5, #16]
 800c04a:	b99b      	cbnz	r3, 800c074 <_vfiprintf_r+0x5c>
 800c04c:	4629      	mov	r1, r5
 800c04e:	4630      	mov	r0, r6
 800c050:	f7fd faf2 	bl	8009638 <__swsetup_r>
 800c054:	b170      	cbz	r0, 800c074 <_vfiprintf_r+0x5c>
 800c056:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 800c058:	07dc      	lsls	r4, r3, #31
 800c05a:	d504      	bpl.n	800c066 <_vfiprintf_r+0x4e>
 800c05c:	f04f 30ff 	mov.w	r0, #4294967295
 800c060:	b01d      	add	sp, #116	@ 0x74
 800c062:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c066:	89ab      	ldrh	r3, [r5, #12]
 800c068:	0598      	lsls	r0, r3, #22
 800c06a:	d4f7      	bmi.n	800c05c <_vfiprintf_r+0x44>
 800c06c:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 800c06e:	f7fd fbb7 	bl	80097e0 <__retarget_lock_release_recursive>
 800c072:	e7f3      	b.n	800c05c <_vfiprintf_r+0x44>
 800c074:	2300      	movs	r3, #0
 800c076:	9309      	str	r3, [sp, #36]	@ 0x24
 800c078:	2320      	movs	r3, #32
 800c07a:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 800c07e:	f8cd 800c 	str.w	r8, [sp, #12]
 800c082:	2330      	movs	r3, #48	@ 0x30
 800c084:	f8df 81ac 	ldr.w	r8, [pc, #428]	@ 800c234 <_vfiprintf_r+0x21c>
 800c088:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 800c08c:	f04f 0901 	mov.w	r9, #1
 800c090:	4623      	mov	r3, r4
 800c092:	469a      	mov	sl, r3
 800c094:	f813 2b01 	ldrb.w	r2, [r3], #1
 800c098:	b10a      	cbz	r2, 800c09e <_vfiprintf_r+0x86>
 800c09a:	2a25      	cmp	r2, #37	@ 0x25
 800c09c:	d1f9      	bne.n	800c092 <_vfiprintf_r+0x7a>
 800c09e:	ebba 0b04 	subs.w	fp, sl, r4
 800c0a2:	d00b      	beq.n	800c0bc <_vfiprintf_r+0xa4>
 800c0a4:	465b      	mov	r3, fp
 800c0a6:	4622      	mov	r2, r4
 800c0a8:	4629      	mov	r1, r5
 800c0aa:	4630      	mov	r0, r6
 800c0ac:	f7ff ffa1 	bl	800bff2 <__sfputs_r>
 800c0b0:	3001      	adds	r0, #1
 800c0b2:	f000 80a7 	beq.w	800c204 <_vfiprintf_r+0x1ec>
 800c0b6:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 800c0b8:	445a      	add	r2, fp
 800c0ba:	9209      	str	r2, [sp, #36]	@ 0x24
 800c0bc:	f89a 3000 	ldrb.w	r3, [sl]
 800c0c0:	2b00      	cmp	r3, #0
 800c0c2:	f000 809f 	beq.w	800c204 <_vfiprintf_r+0x1ec>
 800c0c6:	2300      	movs	r3, #0
 800c0c8:	f04f 32ff 	mov.w	r2, #4294967295
 800c0cc:	e9cd 2305 	strd	r2, r3, [sp, #20]
 800c0d0:	f10a 0a01 	add.w	sl, sl, #1
 800c0d4:	9304      	str	r3, [sp, #16]
 800c0d6:	9307      	str	r3, [sp, #28]
 800c0d8:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 800c0dc:	931a      	str	r3, [sp, #104]	@ 0x68
 800c0de:	4654      	mov	r4, sl
 800c0e0:	2205      	movs	r2, #5
 800c0e2:	f814 1b01 	ldrb.w	r1, [r4], #1
 800c0e6:	4853      	ldr	r0, [pc, #332]	@ (800c234 <_vfiprintf_r+0x21c>)
 800c0e8:	f7f4 f892 	bl	8000210 <memchr>
 800c0ec:	9a04      	ldr	r2, [sp, #16]
 800c0ee:	b9d8      	cbnz	r0, 800c128 <_vfiprintf_r+0x110>
 800c0f0:	06d1      	lsls	r1, r2, #27
 800c0f2:	bf44      	itt	mi
 800c0f4:	2320      	movmi	r3, #32
 800c0f6:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 800c0fa:	0713      	lsls	r3, r2, #28
 800c0fc:	bf44      	itt	mi
 800c0fe:	232b      	movmi	r3, #43	@ 0x2b
 800c100:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 800c104:	f89a 3000 	ldrb.w	r3, [sl]
 800c108:	2b2a      	cmp	r3, #42	@ 0x2a
 800c10a:	d015      	beq.n	800c138 <_vfiprintf_r+0x120>
 800c10c:	9a07      	ldr	r2, [sp, #28]
 800c10e:	4654      	mov	r4, sl
 800c110:	2000      	movs	r0, #0
 800c112:	f04f 0c0a 	mov.w	ip, #10
 800c116:	4621      	mov	r1, r4
 800c118:	f811 3b01 	ldrb.w	r3, [r1], #1
 800c11c:	3b30      	subs	r3, #48	@ 0x30
 800c11e:	2b09      	cmp	r3, #9
 800c120:	d94b      	bls.n	800c1ba <_vfiprintf_r+0x1a2>
 800c122:	b1b0      	cbz	r0, 800c152 <_vfiprintf_r+0x13a>
 800c124:	9207      	str	r2, [sp, #28]
 800c126:	e014      	b.n	800c152 <_vfiprintf_r+0x13a>
 800c128:	eba0 0308 	sub.w	r3, r0, r8
 800c12c:	fa09 f303 	lsl.w	r3, r9, r3
 800c130:	4313      	orrs	r3, r2
 800c132:	9304      	str	r3, [sp, #16]
 800c134:	46a2      	mov	sl, r4
 800c136:	e7d2      	b.n	800c0de <_vfiprintf_r+0xc6>
 800c138:	9b03      	ldr	r3, [sp, #12]
 800c13a:	1d19      	adds	r1, r3, #4
 800c13c:	681b      	ldr	r3, [r3, #0]
 800c13e:	9103      	str	r1, [sp, #12]
 800c140:	2b00      	cmp	r3, #0
 800c142:	bfbb      	ittet	lt
 800c144:	425b      	neglt	r3, r3
 800c146:	f042 0202 	orrlt.w	r2, r2, #2
 800c14a:	9307      	strge	r3, [sp, #28]
 800c14c:	9307      	strlt	r3, [sp, #28]
 800c14e:	bfb8      	it	lt
 800c150:	9204      	strlt	r2, [sp, #16]
 800c152:	7823      	ldrb	r3, [r4, #0]
 800c154:	2b2e      	cmp	r3, #46	@ 0x2e
 800c156:	d10a      	bne.n	800c16e <_vfiprintf_r+0x156>
 800c158:	7863      	ldrb	r3, [r4, #1]
 800c15a:	2b2a      	cmp	r3, #42	@ 0x2a
 800c15c:	d132      	bne.n	800c1c4 <_vfiprintf_r+0x1ac>
 800c15e:	9b03      	ldr	r3, [sp, #12]
 800c160:	1d1a      	adds	r2, r3, #4
 800c162:	681b      	ldr	r3, [r3, #0]
 800c164:	9203      	str	r2, [sp, #12]
 800c166:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 800c16a:	3402      	adds	r4, #2
 800c16c:	9305      	str	r3, [sp, #20]
 800c16e:	f8df a0d4 	ldr.w	sl, [pc, #212]	@ 800c244 <_vfiprintf_r+0x22c>
 800c172:	7821      	ldrb	r1, [r4, #0]
 800c174:	2203      	movs	r2, #3
 800c176:	4650      	mov	r0, sl
 800c178:	f7f4 f84a 	bl	8000210 <memchr>
 800c17c:	b138      	cbz	r0, 800c18e <_vfiprintf_r+0x176>
 800c17e:	9b04      	ldr	r3, [sp, #16]
 800c180:	eba0 000a 	sub.w	r0, r0, sl
 800c184:	2240      	movs	r2, #64	@ 0x40
 800c186:	4082      	lsls	r2, r0
 800c188:	4313      	orrs	r3, r2
 800c18a:	3401      	adds	r4, #1
 800c18c:	9304      	str	r3, [sp, #16]
 800c18e:	f814 1b01 	ldrb.w	r1, [r4], #1
 800c192:	4829      	ldr	r0, [pc, #164]	@ (800c238 <_vfiprintf_r+0x220>)
 800c194:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 800c198:	2206      	movs	r2, #6
 800c19a:	f7f4 f839 	bl	8000210 <memchr>
 800c19e:	2800      	cmp	r0, #0
 800c1a0:	d03f      	beq.n	800c222 <_vfiprintf_r+0x20a>
 800c1a2:	4b26      	ldr	r3, [pc, #152]	@ (800c23c <_vfiprintf_r+0x224>)
 800c1a4:	bb1b      	cbnz	r3, 800c1ee <_vfiprintf_r+0x1d6>
 800c1a6:	9b03      	ldr	r3, [sp, #12]
 800c1a8:	3307      	adds	r3, #7
 800c1aa:	f023 0307 	bic.w	r3, r3, #7
 800c1ae:	3308      	adds	r3, #8
 800c1b0:	9303      	str	r3, [sp, #12]
 800c1b2:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800c1b4:	443b      	add	r3, r7
 800c1b6:	9309      	str	r3, [sp, #36]	@ 0x24
 800c1b8:	e76a      	b.n	800c090 <_vfiprintf_r+0x78>
 800c1ba:	fb0c 3202 	mla	r2, ip, r2, r3
 800c1be:	460c      	mov	r4, r1
 800c1c0:	2001      	movs	r0, #1
 800c1c2:	e7a8      	b.n	800c116 <_vfiprintf_r+0xfe>
 800c1c4:	2300      	movs	r3, #0
 800c1c6:	3401      	adds	r4, #1
 800c1c8:	9305      	str	r3, [sp, #20]
 800c1ca:	4619      	mov	r1, r3
 800c1cc:	f04f 0c0a 	mov.w	ip, #10
 800c1d0:	4620      	mov	r0, r4
 800c1d2:	f810 2b01 	ldrb.w	r2, [r0], #1
 800c1d6:	3a30      	subs	r2, #48	@ 0x30
 800c1d8:	2a09      	cmp	r2, #9
 800c1da:	d903      	bls.n	800c1e4 <_vfiprintf_r+0x1cc>
 800c1dc:	2b00      	cmp	r3, #0
 800c1de:	d0c6      	beq.n	800c16e <_vfiprintf_r+0x156>
 800c1e0:	9105      	str	r1, [sp, #20]
 800c1e2:	e7c4      	b.n	800c16e <_vfiprintf_r+0x156>
 800c1e4:	fb0c 2101 	mla	r1, ip, r1, r2
 800c1e8:	4604      	mov	r4, r0
 800c1ea:	2301      	movs	r3, #1
 800c1ec:	e7f0      	b.n	800c1d0 <_vfiprintf_r+0x1b8>
 800c1ee:	ab03      	add	r3, sp, #12
 800c1f0:	9300      	str	r3, [sp, #0]
 800c1f2:	462a      	mov	r2, r5
 800c1f4:	4b12      	ldr	r3, [pc, #72]	@ (800c240 <_vfiprintf_r+0x228>)
 800c1f6:	a904      	add	r1, sp, #16
 800c1f8:	4630      	mov	r0, r6
 800c1fa:	f7fc fa7d 	bl	80086f8 <_printf_float>
 800c1fe:	4607      	mov	r7, r0
 800c200:	1c78      	adds	r0, r7, #1
 800c202:	d1d6      	bne.n	800c1b2 <_vfiprintf_r+0x19a>
 800c204:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 800c206:	07d9      	lsls	r1, r3, #31
 800c208:	d405      	bmi.n	800c216 <_vfiprintf_r+0x1fe>
 800c20a:	89ab      	ldrh	r3, [r5, #12]
 800c20c:	059a      	lsls	r2, r3, #22
 800c20e:	d402      	bmi.n	800c216 <_vfiprintf_r+0x1fe>
 800c210:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 800c212:	f7fd fae5 	bl	80097e0 <__retarget_lock_release_recursive>
 800c216:	89ab      	ldrh	r3, [r5, #12]
 800c218:	065b      	lsls	r3, r3, #25
 800c21a:	f53f af1f 	bmi.w	800c05c <_vfiprintf_r+0x44>
 800c21e:	9809      	ldr	r0, [sp, #36]	@ 0x24
 800c220:	e71e      	b.n	800c060 <_vfiprintf_r+0x48>
 800c222:	ab03      	add	r3, sp, #12
 800c224:	9300      	str	r3, [sp, #0]
 800c226:	462a      	mov	r2, r5
 800c228:	4b05      	ldr	r3, [pc, #20]	@ (800c240 <_vfiprintf_r+0x228>)
 800c22a:	a904      	add	r1, sp, #16
 800c22c:	4630      	mov	r0, r6
 800c22e:	f7fc fcfb 	bl	8008c28 <_printf_i>
 800c232:	e7e4      	b.n	800c1fe <_vfiprintf_r+0x1e6>
 800c234:	0800d3a9 	.word	0x0800d3a9
 800c238:	0800d3b3 	.word	0x0800d3b3
 800c23c:	080086f9 	.word	0x080086f9
 800c240:	0800bff3 	.word	0x0800bff3
 800c244:	0800d3af 	.word	0x0800d3af

0800c248 <__sflush_r>:
 800c248:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 800c24c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800c250:	0716      	lsls	r6, r2, #28
 800c252:	4605      	mov	r5, r0
 800c254:	460c      	mov	r4, r1
 800c256:	d454      	bmi.n	800c302 <__sflush_r+0xba>
 800c258:	684b      	ldr	r3, [r1, #4]
 800c25a:	2b00      	cmp	r3, #0
 800c25c:	dc02      	bgt.n	800c264 <__sflush_r+0x1c>
 800c25e:	6c0b      	ldr	r3, [r1, #64]	@ 0x40
 800c260:	2b00      	cmp	r3, #0
 800c262:	dd48      	ble.n	800c2f6 <__sflush_r+0xae>
 800c264:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 800c266:	2e00      	cmp	r6, #0
 800c268:	d045      	beq.n	800c2f6 <__sflush_r+0xae>
 800c26a:	2300      	movs	r3, #0
 800c26c:	f412 5280 	ands.w	r2, r2, #4096	@ 0x1000
 800c270:	682f      	ldr	r7, [r5, #0]
 800c272:	6a21      	ldr	r1, [r4, #32]
 800c274:	602b      	str	r3, [r5, #0]
 800c276:	d030      	beq.n	800c2da <__sflush_r+0x92>
 800c278:	6d62      	ldr	r2, [r4, #84]	@ 0x54
 800c27a:	89a3      	ldrh	r3, [r4, #12]
 800c27c:	0759      	lsls	r1, r3, #29
 800c27e:	d505      	bpl.n	800c28c <__sflush_r+0x44>
 800c280:	6863      	ldr	r3, [r4, #4]
 800c282:	1ad2      	subs	r2, r2, r3
 800c284:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 800c286:	b10b      	cbz	r3, 800c28c <__sflush_r+0x44>
 800c288:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 800c28a:	1ad2      	subs	r2, r2, r3
 800c28c:	2300      	movs	r3, #0
 800c28e:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 800c290:	6a21      	ldr	r1, [r4, #32]
 800c292:	4628      	mov	r0, r5
 800c294:	47b0      	blx	r6
 800c296:	1c43      	adds	r3, r0, #1
 800c298:	89a3      	ldrh	r3, [r4, #12]
 800c29a:	d106      	bne.n	800c2aa <__sflush_r+0x62>
 800c29c:	6829      	ldr	r1, [r5, #0]
 800c29e:	291d      	cmp	r1, #29
 800c2a0:	d82b      	bhi.n	800c2fa <__sflush_r+0xb2>
 800c2a2:	4a2a      	ldr	r2, [pc, #168]	@ (800c34c <__sflush_r+0x104>)
 800c2a4:	410a      	asrs	r2, r1
 800c2a6:	07d6      	lsls	r6, r2, #31
 800c2a8:	d427      	bmi.n	800c2fa <__sflush_r+0xb2>
 800c2aa:	2200      	movs	r2, #0
 800c2ac:	6062      	str	r2, [r4, #4]
 800c2ae:	04d9      	lsls	r1, r3, #19
 800c2b0:	6922      	ldr	r2, [r4, #16]
 800c2b2:	6022      	str	r2, [r4, #0]
 800c2b4:	d504      	bpl.n	800c2c0 <__sflush_r+0x78>
 800c2b6:	1c42      	adds	r2, r0, #1
 800c2b8:	d101      	bne.n	800c2be <__sflush_r+0x76>
 800c2ba:	682b      	ldr	r3, [r5, #0]
 800c2bc:	b903      	cbnz	r3, 800c2c0 <__sflush_r+0x78>
 800c2be:	6560      	str	r0, [r4, #84]	@ 0x54
 800c2c0:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 800c2c2:	602f      	str	r7, [r5, #0]
 800c2c4:	b1b9      	cbz	r1, 800c2f6 <__sflush_r+0xae>
 800c2c6:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 800c2ca:	4299      	cmp	r1, r3
 800c2cc:	d002      	beq.n	800c2d4 <__sflush_r+0x8c>
 800c2ce:	4628      	mov	r0, r5
 800c2d0:	f7fe f8ea 	bl	800a4a8 <_free_r>
 800c2d4:	2300      	movs	r3, #0
 800c2d6:	6363      	str	r3, [r4, #52]	@ 0x34
 800c2d8:	e00d      	b.n	800c2f6 <__sflush_r+0xae>
 800c2da:	2301      	movs	r3, #1
 800c2dc:	4628      	mov	r0, r5
 800c2de:	47b0      	blx	r6
 800c2e0:	4602      	mov	r2, r0
 800c2e2:	1c50      	adds	r0, r2, #1
 800c2e4:	d1c9      	bne.n	800c27a <__sflush_r+0x32>
 800c2e6:	682b      	ldr	r3, [r5, #0]
 800c2e8:	2b00      	cmp	r3, #0
 800c2ea:	d0c6      	beq.n	800c27a <__sflush_r+0x32>
 800c2ec:	2b1d      	cmp	r3, #29
 800c2ee:	d001      	beq.n	800c2f4 <__sflush_r+0xac>
 800c2f0:	2b16      	cmp	r3, #22
 800c2f2:	d11e      	bne.n	800c332 <__sflush_r+0xea>
 800c2f4:	602f      	str	r7, [r5, #0]
 800c2f6:	2000      	movs	r0, #0
 800c2f8:	e022      	b.n	800c340 <__sflush_r+0xf8>
 800c2fa:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 800c2fe:	b21b      	sxth	r3, r3
 800c300:	e01b      	b.n	800c33a <__sflush_r+0xf2>
 800c302:	690f      	ldr	r7, [r1, #16]
 800c304:	2f00      	cmp	r7, #0
 800c306:	d0f6      	beq.n	800c2f6 <__sflush_r+0xae>
 800c308:	0793      	lsls	r3, r2, #30
 800c30a:	680e      	ldr	r6, [r1, #0]
 800c30c:	bf08      	it	eq
 800c30e:	694b      	ldreq	r3, [r1, #20]
 800c310:	600f      	str	r7, [r1, #0]
 800c312:	bf18      	it	ne
 800c314:	2300      	movne	r3, #0
 800c316:	eba6 0807 	sub.w	r8, r6, r7
 800c31a:	608b      	str	r3, [r1, #8]
 800c31c:	f1b8 0f00 	cmp.w	r8, #0
 800c320:	dde9      	ble.n	800c2f6 <__sflush_r+0xae>
 800c322:	6a21      	ldr	r1, [r4, #32]
 800c324:	6aa6      	ldr	r6, [r4, #40]	@ 0x28
 800c326:	4643      	mov	r3, r8
 800c328:	463a      	mov	r2, r7
 800c32a:	4628      	mov	r0, r5
 800c32c:	47b0      	blx	r6
 800c32e:	2800      	cmp	r0, #0
 800c330:	dc08      	bgt.n	800c344 <__sflush_r+0xfc>
 800c332:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800c336:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 800c33a:	81a3      	strh	r3, [r4, #12]
 800c33c:	f04f 30ff 	mov.w	r0, #4294967295
 800c340:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800c344:	4407      	add	r7, r0
 800c346:	eba8 0800 	sub.w	r8, r8, r0
 800c34a:	e7e7      	b.n	800c31c <__sflush_r+0xd4>
 800c34c:	dfbffffe 	.word	0xdfbffffe

0800c350 <_fflush_r>:
 800c350:	b538      	push	{r3, r4, r5, lr}
 800c352:	690b      	ldr	r3, [r1, #16]
 800c354:	4605      	mov	r5, r0
 800c356:	460c      	mov	r4, r1
 800c358:	b913      	cbnz	r3, 800c360 <_fflush_r+0x10>
 800c35a:	2500      	movs	r5, #0
 800c35c:	4628      	mov	r0, r5
 800c35e:	bd38      	pop	{r3, r4, r5, pc}
 800c360:	b118      	cbz	r0, 800c36a <_fflush_r+0x1a>
 800c362:	6a03      	ldr	r3, [r0, #32]
 800c364:	b90b      	cbnz	r3, 800c36a <_fflush_r+0x1a>
 800c366:	f7fd f81f 	bl	80093a8 <__sinit>
 800c36a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800c36e:	2b00      	cmp	r3, #0
 800c370:	d0f3      	beq.n	800c35a <_fflush_r+0xa>
 800c372:	6e62      	ldr	r2, [r4, #100]	@ 0x64
 800c374:	07d0      	lsls	r0, r2, #31
 800c376:	d404      	bmi.n	800c382 <_fflush_r+0x32>
 800c378:	0599      	lsls	r1, r3, #22
 800c37a:	d402      	bmi.n	800c382 <_fflush_r+0x32>
 800c37c:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 800c37e:	f7fd fa2e 	bl	80097de <__retarget_lock_acquire_recursive>
 800c382:	4628      	mov	r0, r5
 800c384:	4621      	mov	r1, r4
 800c386:	f7ff ff5f 	bl	800c248 <__sflush_r>
 800c38a:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 800c38c:	07da      	lsls	r2, r3, #31
 800c38e:	4605      	mov	r5, r0
 800c390:	d4e4      	bmi.n	800c35c <_fflush_r+0xc>
 800c392:	89a3      	ldrh	r3, [r4, #12]
 800c394:	059b      	lsls	r3, r3, #22
 800c396:	d4e1      	bmi.n	800c35c <_fflush_r+0xc>
 800c398:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 800c39a:	f7fd fa21 	bl	80097e0 <__retarget_lock_release_recursive>
 800c39e:	e7dd      	b.n	800c35c <_fflush_r+0xc>

0800c3a0 <__swhatbuf_r>:
 800c3a0:	b570      	push	{r4, r5, r6, lr}
 800c3a2:	460c      	mov	r4, r1
 800c3a4:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800c3a8:	2900      	cmp	r1, #0
 800c3aa:	b096      	sub	sp, #88	@ 0x58
 800c3ac:	4615      	mov	r5, r2
 800c3ae:	461e      	mov	r6, r3
 800c3b0:	da0d      	bge.n	800c3ce <__swhatbuf_r+0x2e>
 800c3b2:	89a3      	ldrh	r3, [r4, #12]
 800c3b4:	f013 0f80 	tst.w	r3, #128	@ 0x80
 800c3b8:	f04f 0100 	mov.w	r1, #0
 800c3bc:	bf14      	ite	ne
 800c3be:	2340      	movne	r3, #64	@ 0x40
 800c3c0:	f44f 6380 	moveq.w	r3, #1024	@ 0x400
 800c3c4:	2000      	movs	r0, #0
 800c3c6:	6031      	str	r1, [r6, #0]
 800c3c8:	602b      	str	r3, [r5, #0]
 800c3ca:	b016      	add	sp, #88	@ 0x58
 800c3cc:	bd70      	pop	{r4, r5, r6, pc}
 800c3ce:	466a      	mov	r2, sp
 800c3d0:	f000 f874 	bl	800c4bc <_fstat_r>
 800c3d4:	2800      	cmp	r0, #0
 800c3d6:	dbec      	blt.n	800c3b2 <__swhatbuf_r+0x12>
 800c3d8:	9901      	ldr	r1, [sp, #4]
 800c3da:	f401 4170 	and.w	r1, r1, #61440	@ 0xf000
 800c3de:	f5a1 5300 	sub.w	r3, r1, #8192	@ 0x2000
 800c3e2:	4259      	negs	r1, r3
 800c3e4:	4159      	adcs	r1, r3
 800c3e6:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 800c3ea:	e7eb      	b.n	800c3c4 <__swhatbuf_r+0x24>

0800c3ec <__smakebuf_r>:
 800c3ec:	898b      	ldrh	r3, [r1, #12]
 800c3ee:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800c3f0:	079d      	lsls	r5, r3, #30
 800c3f2:	4606      	mov	r6, r0
 800c3f4:	460c      	mov	r4, r1
 800c3f6:	d507      	bpl.n	800c408 <__smakebuf_r+0x1c>
 800c3f8:	f104 0347 	add.w	r3, r4, #71	@ 0x47
 800c3fc:	6023      	str	r3, [r4, #0]
 800c3fe:	6123      	str	r3, [r4, #16]
 800c400:	2301      	movs	r3, #1
 800c402:	6163      	str	r3, [r4, #20]
 800c404:	b003      	add	sp, #12
 800c406:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800c408:	ab01      	add	r3, sp, #4
 800c40a:	466a      	mov	r2, sp
 800c40c:	f7ff ffc8 	bl	800c3a0 <__swhatbuf_r>
 800c410:	9f00      	ldr	r7, [sp, #0]
 800c412:	4605      	mov	r5, r0
 800c414:	4639      	mov	r1, r7
 800c416:	4630      	mov	r0, r6
 800c418:	f7fe f8ba 	bl	800a590 <_malloc_r>
 800c41c:	b948      	cbnz	r0, 800c432 <__smakebuf_r+0x46>
 800c41e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800c422:	059a      	lsls	r2, r3, #22
 800c424:	d4ee      	bmi.n	800c404 <__smakebuf_r+0x18>
 800c426:	f023 0303 	bic.w	r3, r3, #3
 800c42a:	f043 0302 	orr.w	r3, r3, #2
 800c42e:	81a3      	strh	r3, [r4, #12]
 800c430:	e7e2      	b.n	800c3f8 <__smakebuf_r+0xc>
 800c432:	89a3      	ldrh	r3, [r4, #12]
 800c434:	6020      	str	r0, [r4, #0]
 800c436:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 800c43a:	81a3      	strh	r3, [r4, #12]
 800c43c:	9b01      	ldr	r3, [sp, #4]
 800c43e:	e9c4 0704 	strd	r0, r7, [r4, #16]
 800c442:	b15b      	cbz	r3, 800c45c <__smakebuf_r+0x70>
 800c444:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 800c448:	4630      	mov	r0, r6
 800c44a:	f000 f849 	bl	800c4e0 <_isatty_r>
 800c44e:	b128      	cbz	r0, 800c45c <__smakebuf_r+0x70>
 800c450:	89a3      	ldrh	r3, [r4, #12]
 800c452:	f023 0303 	bic.w	r3, r3, #3
 800c456:	f043 0301 	orr.w	r3, r3, #1
 800c45a:	81a3      	strh	r3, [r4, #12]
 800c45c:	89a3      	ldrh	r3, [r4, #12]
 800c45e:	431d      	orrs	r5, r3
 800c460:	81a5      	strh	r5, [r4, #12]
 800c462:	e7cf      	b.n	800c404 <__smakebuf_r+0x18>

0800c464 <memmove>:
 800c464:	4288      	cmp	r0, r1
 800c466:	b510      	push	{r4, lr}
 800c468:	eb01 0402 	add.w	r4, r1, r2
 800c46c:	d902      	bls.n	800c474 <memmove+0x10>
 800c46e:	4284      	cmp	r4, r0
 800c470:	4623      	mov	r3, r4
 800c472:	d807      	bhi.n	800c484 <memmove+0x20>
 800c474:	1e43      	subs	r3, r0, #1
 800c476:	42a1      	cmp	r1, r4
 800c478:	d008      	beq.n	800c48c <memmove+0x28>
 800c47a:	f811 2b01 	ldrb.w	r2, [r1], #1
 800c47e:	f803 2f01 	strb.w	r2, [r3, #1]!
 800c482:	e7f8      	b.n	800c476 <memmove+0x12>
 800c484:	4402      	add	r2, r0
 800c486:	4601      	mov	r1, r0
 800c488:	428a      	cmp	r2, r1
 800c48a:	d100      	bne.n	800c48e <memmove+0x2a>
 800c48c:	bd10      	pop	{r4, pc}
 800c48e:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 800c492:	f802 4d01 	strb.w	r4, [r2, #-1]!
 800c496:	e7f7      	b.n	800c488 <memmove+0x24>

0800c498 <strncmp>:
 800c498:	b510      	push	{r4, lr}
 800c49a:	b16a      	cbz	r2, 800c4b8 <strncmp+0x20>
 800c49c:	3901      	subs	r1, #1
 800c49e:	1884      	adds	r4, r0, r2
 800c4a0:	f810 2b01 	ldrb.w	r2, [r0], #1
 800c4a4:	f811 3f01 	ldrb.w	r3, [r1, #1]!
 800c4a8:	429a      	cmp	r2, r3
 800c4aa:	d103      	bne.n	800c4b4 <strncmp+0x1c>
 800c4ac:	42a0      	cmp	r0, r4
 800c4ae:	d001      	beq.n	800c4b4 <strncmp+0x1c>
 800c4b0:	2a00      	cmp	r2, #0
 800c4b2:	d1f5      	bne.n	800c4a0 <strncmp+0x8>
 800c4b4:	1ad0      	subs	r0, r2, r3
 800c4b6:	bd10      	pop	{r4, pc}
 800c4b8:	4610      	mov	r0, r2
 800c4ba:	e7fc      	b.n	800c4b6 <strncmp+0x1e>

0800c4bc <_fstat_r>:
 800c4bc:	b538      	push	{r3, r4, r5, lr}
 800c4be:	4d07      	ldr	r5, [pc, #28]	@ (800c4dc <_fstat_r+0x20>)
 800c4c0:	2300      	movs	r3, #0
 800c4c2:	4604      	mov	r4, r0
 800c4c4:	4608      	mov	r0, r1
 800c4c6:	4611      	mov	r1, r2
 800c4c8:	602b      	str	r3, [r5, #0]
 800c4ca:	f7f6 fff1 	bl	80034b0 <_fstat>
 800c4ce:	1c43      	adds	r3, r0, #1
 800c4d0:	d102      	bne.n	800c4d8 <_fstat_r+0x1c>
 800c4d2:	682b      	ldr	r3, [r5, #0]
 800c4d4:	b103      	cbz	r3, 800c4d8 <_fstat_r+0x1c>
 800c4d6:	6023      	str	r3, [r4, #0]
 800c4d8:	bd38      	pop	{r3, r4, r5, pc}
 800c4da:	bf00      	nop
 800c4dc:	200007f0 	.word	0x200007f0

0800c4e0 <_isatty_r>:
 800c4e0:	b538      	push	{r3, r4, r5, lr}
 800c4e2:	4d06      	ldr	r5, [pc, #24]	@ (800c4fc <_isatty_r+0x1c>)
 800c4e4:	2300      	movs	r3, #0
 800c4e6:	4604      	mov	r4, r0
 800c4e8:	4608      	mov	r0, r1
 800c4ea:	602b      	str	r3, [r5, #0]
 800c4ec:	f7f6 fff0 	bl	80034d0 <_isatty>
 800c4f0:	1c43      	adds	r3, r0, #1
 800c4f2:	d102      	bne.n	800c4fa <_isatty_r+0x1a>
 800c4f4:	682b      	ldr	r3, [r5, #0]
 800c4f6:	b103      	cbz	r3, 800c4fa <_isatty_r+0x1a>
 800c4f8:	6023      	str	r3, [r4, #0]
 800c4fa:	bd38      	pop	{r3, r4, r5, pc}
 800c4fc:	200007f0 	.word	0x200007f0

0800c500 <_sbrk_r>:
 800c500:	b538      	push	{r3, r4, r5, lr}
 800c502:	4d06      	ldr	r5, [pc, #24]	@ (800c51c <_sbrk_r+0x1c>)
 800c504:	2300      	movs	r3, #0
 800c506:	4604      	mov	r4, r0
 800c508:	4608      	mov	r0, r1
 800c50a:	602b      	str	r3, [r5, #0]
 800c50c:	f7f6 fff8 	bl	8003500 <_sbrk>
 800c510:	1c43      	adds	r3, r0, #1
 800c512:	d102      	bne.n	800c51a <_sbrk_r+0x1a>
 800c514:	682b      	ldr	r3, [r5, #0]
 800c516:	b103      	cbz	r3, 800c51a <_sbrk_r+0x1a>
 800c518:	6023      	str	r3, [r4, #0]
 800c51a:	bd38      	pop	{r3, r4, r5, pc}
 800c51c:	200007f0 	.word	0x200007f0

0800c520 <nan>:
 800c520:	ed9f 0b01 	vldr	d0, [pc, #4]	@ 800c528 <nan+0x8>
 800c524:	4770      	bx	lr
 800c526:	bf00      	nop
 800c528:	00000000 	.word	0x00000000
 800c52c:	7ff80000 	.word	0x7ff80000

0800c530 <__assert_func>:
 800c530:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800c532:	4614      	mov	r4, r2
 800c534:	461a      	mov	r2, r3
 800c536:	4b09      	ldr	r3, [pc, #36]	@ (800c55c <__assert_func+0x2c>)
 800c538:	681b      	ldr	r3, [r3, #0]
 800c53a:	4605      	mov	r5, r0
 800c53c:	68d8      	ldr	r0, [r3, #12]
 800c53e:	b954      	cbnz	r4, 800c556 <__assert_func+0x26>
 800c540:	4b07      	ldr	r3, [pc, #28]	@ (800c560 <__assert_func+0x30>)
 800c542:	461c      	mov	r4, r3
 800c544:	e9cd 3401 	strd	r3, r4, [sp, #4]
 800c548:	9100      	str	r1, [sp, #0]
 800c54a:	462b      	mov	r3, r5
 800c54c:	4905      	ldr	r1, [pc, #20]	@ (800c564 <__assert_func+0x34>)
 800c54e:	f000 fba7 	bl	800cca0 <fiprintf>
 800c552:	f000 fbb7 	bl	800ccc4 <abort>
 800c556:	4b04      	ldr	r3, [pc, #16]	@ (800c568 <__assert_func+0x38>)
 800c558:	e7f4      	b.n	800c544 <__assert_func+0x14>
 800c55a:	bf00      	nop
 800c55c:	20000040 	.word	0x20000040
 800c560:	0800d3fd 	.word	0x0800d3fd
 800c564:	0800d3cf 	.word	0x0800d3cf
 800c568:	0800d3c2 	.word	0x0800d3c2

0800c56c <_calloc_r>:
 800c56c:	b570      	push	{r4, r5, r6, lr}
 800c56e:	fba1 5402 	umull	r5, r4, r1, r2
 800c572:	b93c      	cbnz	r4, 800c584 <_calloc_r+0x18>
 800c574:	4629      	mov	r1, r5
 800c576:	f7fe f80b 	bl	800a590 <_malloc_r>
 800c57a:	4606      	mov	r6, r0
 800c57c:	b928      	cbnz	r0, 800c58a <_calloc_r+0x1e>
 800c57e:	2600      	movs	r6, #0
 800c580:	4630      	mov	r0, r6
 800c582:	bd70      	pop	{r4, r5, r6, pc}
 800c584:	220c      	movs	r2, #12
 800c586:	6002      	str	r2, [r0, #0]
 800c588:	e7f9      	b.n	800c57e <_calloc_r+0x12>
 800c58a:	462a      	mov	r2, r5
 800c58c:	4621      	mov	r1, r4
 800c58e:	f7fd f8a9 	bl	80096e4 <memset>
 800c592:	e7f5      	b.n	800c580 <_calloc_r+0x14>

0800c594 <rshift>:
 800c594:	6903      	ldr	r3, [r0, #16]
 800c596:	ebb3 1f61 	cmp.w	r3, r1, asr #5
 800c59a:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800c59e:	ea4f 1261 	mov.w	r2, r1, asr #5
 800c5a2:	f100 0414 	add.w	r4, r0, #20
 800c5a6:	dd45      	ble.n	800c634 <rshift+0xa0>
 800c5a8:	f011 011f 	ands.w	r1, r1, #31
 800c5ac:	eb04 0683 	add.w	r6, r4, r3, lsl #2
 800c5b0:	eb04 0582 	add.w	r5, r4, r2, lsl #2
 800c5b4:	d10c      	bne.n	800c5d0 <rshift+0x3c>
 800c5b6:	f100 0710 	add.w	r7, r0, #16
 800c5ba:	4629      	mov	r1, r5
 800c5bc:	42b1      	cmp	r1, r6
 800c5be:	d334      	bcc.n	800c62a <rshift+0x96>
 800c5c0:	1a9b      	subs	r3, r3, r2
 800c5c2:	009b      	lsls	r3, r3, #2
 800c5c4:	1eea      	subs	r2, r5, #3
 800c5c6:	4296      	cmp	r6, r2
 800c5c8:	bf38      	it	cc
 800c5ca:	2300      	movcc	r3, #0
 800c5cc:	4423      	add	r3, r4
 800c5ce:	e015      	b.n	800c5fc <rshift+0x68>
 800c5d0:	f854 7022 	ldr.w	r7, [r4, r2, lsl #2]
 800c5d4:	f1c1 0820 	rsb	r8, r1, #32
 800c5d8:	40cf      	lsrs	r7, r1
 800c5da:	f105 0e04 	add.w	lr, r5, #4
 800c5de:	46a1      	mov	r9, r4
 800c5e0:	4576      	cmp	r6, lr
 800c5e2:	46f4      	mov	ip, lr
 800c5e4:	d815      	bhi.n	800c612 <rshift+0x7e>
 800c5e6:	1a9a      	subs	r2, r3, r2
 800c5e8:	0092      	lsls	r2, r2, #2
 800c5ea:	3a04      	subs	r2, #4
 800c5ec:	3501      	adds	r5, #1
 800c5ee:	42ae      	cmp	r6, r5
 800c5f0:	bf38      	it	cc
 800c5f2:	2200      	movcc	r2, #0
 800c5f4:	18a3      	adds	r3, r4, r2
 800c5f6:	50a7      	str	r7, [r4, r2]
 800c5f8:	b107      	cbz	r7, 800c5fc <rshift+0x68>
 800c5fa:	3304      	adds	r3, #4
 800c5fc:	1b1a      	subs	r2, r3, r4
 800c5fe:	42a3      	cmp	r3, r4
 800c600:	ea4f 02a2 	mov.w	r2, r2, asr #2
 800c604:	bf08      	it	eq
 800c606:	2300      	moveq	r3, #0
 800c608:	6102      	str	r2, [r0, #16]
 800c60a:	bf08      	it	eq
 800c60c:	6143      	streq	r3, [r0, #20]
 800c60e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800c612:	f8dc c000 	ldr.w	ip, [ip]
 800c616:	fa0c fc08 	lsl.w	ip, ip, r8
 800c61a:	ea4c 0707 	orr.w	r7, ip, r7
 800c61e:	f849 7b04 	str.w	r7, [r9], #4
 800c622:	f85e 7b04 	ldr.w	r7, [lr], #4
 800c626:	40cf      	lsrs	r7, r1
 800c628:	e7da      	b.n	800c5e0 <rshift+0x4c>
 800c62a:	f851 cb04 	ldr.w	ip, [r1], #4
 800c62e:	f847 cf04 	str.w	ip, [r7, #4]!
 800c632:	e7c3      	b.n	800c5bc <rshift+0x28>
 800c634:	4623      	mov	r3, r4
 800c636:	e7e1      	b.n	800c5fc <rshift+0x68>

0800c638 <__hexdig_fun>:
 800c638:	f1a0 0330 	sub.w	r3, r0, #48	@ 0x30
 800c63c:	2b09      	cmp	r3, #9
 800c63e:	d802      	bhi.n	800c646 <__hexdig_fun+0xe>
 800c640:	3820      	subs	r0, #32
 800c642:	b2c0      	uxtb	r0, r0
 800c644:	4770      	bx	lr
 800c646:	f1a0 0361 	sub.w	r3, r0, #97	@ 0x61
 800c64a:	2b05      	cmp	r3, #5
 800c64c:	d801      	bhi.n	800c652 <__hexdig_fun+0x1a>
 800c64e:	3847      	subs	r0, #71	@ 0x47
 800c650:	e7f7      	b.n	800c642 <__hexdig_fun+0xa>
 800c652:	f1a0 0341 	sub.w	r3, r0, #65	@ 0x41
 800c656:	2b05      	cmp	r3, #5
 800c658:	d801      	bhi.n	800c65e <__hexdig_fun+0x26>
 800c65a:	3827      	subs	r0, #39	@ 0x27
 800c65c:	e7f1      	b.n	800c642 <__hexdig_fun+0xa>
 800c65e:	2000      	movs	r0, #0
 800c660:	4770      	bx	lr
	...

0800c664 <__gethex>:
 800c664:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c668:	b085      	sub	sp, #20
 800c66a:	468a      	mov	sl, r1
 800c66c:	9302      	str	r3, [sp, #8]
 800c66e:	680b      	ldr	r3, [r1, #0]
 800c670:	9001      	str	r0, [sp, #4]
 800c672:	4690      	mov	r8, r2
 800c674:	1c9c      	adds	r4, r3, #2
 800c676:	46a1      	mov	r9, r4
 800c678:	f814 0b01 	ldrb.w	r0, [r4], #1
 800c67c:	2830      	cmp	r0, #48	@ 0x30
 800c67e:	d0fa      	beq.n	800c676 <__gethex+0x12>
 800c680:	eba9 0303 	sub.w	r3, r9, r3
 800c684:	f1a3 0b02 	sub.w	fp, r3, #2
 800c688:	f7ff ffd6 	bl	800c638 <__hexdig_fun>
 800c68c:	4605      	mov	r5, r0
 800c68e:	2800      	cmp	r0, #0
 800c690:	d168      	bne.n	800c764 <__gethex+0x100>
 800c692:	49a0      	ldr	r1, [pc, #640]	@ (800c914 <__gethex+0x2b0>)
 800c694:	2201      	movs	r2, #1
 800c696:	4648      	mov	r0, r9
 800c698:	f7ff fefe 	bl	800c498 <strncmp>
 800c69c:	4607      	mov	r7, r0
 800c69e:	2800      	cmp	r0, #0
 800c6a0:	d167      	bne.n	800c772 <__gethex+0x10e>
 800c6a2:	f899 0001 	ldrb.w	r0, [r9, #1]
 800c6a6:	4626      	mov	r6, r4
 800c6a8:	f7ff ffc6 	bl	800c638 <__hexdig_fun>
 800c6ac:	2800      	cmp	r0, #0
 800c6ae:	d062      	beq.n	800c776 <__gethex+0x112>
 800c6b0:	4623      	mov	r3, r4
 800c6b2:	7818      	ldrb	r0, [r3, #0]
 800c6b4:	2830      	cmp	r0, #48	@ 0x30
 800c6b6:	4699      	mov	r9, r3
 800c6b8:	f103 0301 	add.w	r3, r3, #1
 800c6bc:	d0f9      	beq.n	800c6b2 <__gethex+0x4e>
 800c6be:	f7ff ffbb 	bl	800c638 <__hexdig_fun>
 800c6c2:	fab0 f580 	clz	r5, r0
 800c6c6:	096d      	lsrs	r5, r5, #5
 800c6c8:	f04f 0b01 	mov.w	fp, #1
 800c6cc:	464a      	mov	r2, r9
 800c6ce:	4616      	mov	r6, r2
 800c6d0:	3201      	adds	r2, #1
 800c6d2:	7830      	ldrb	r0, [r6, #0]
 800c6d4:	f7ff ffb0 	bl	800c638 <__hexdig_fun>
 800c6d8:	2800      	cmp	r0, #0
 800c6da:	d1f8      	bne.n	800c6ce <__gethex+0x6a>
 800c6dc:	498d      	ldr	r1, [pc, #564]	@ (800c914 <__gethex+0x2b0>)
 800c6de:	2201      	movs	r2, #1
 800c6e0:	4630      	mov	r0, r6
 800c6e2:	f7ff fed9 	bl	800c498 <strncmp>
 800c6e6:	2800      	cmp	r0, #0
 800c6e8:	d13f      	bne.n	800c76a <__gethex+0x106>
 800c6ea:	b944      	cbnz	r4, 800c6fe <__gethex+0x9a>
 800c6ec:	1c74      	adds	r4, r6, #1
 800c6ee:	4622      	mov	r2, r4
 800c6f0:	4616      	mov	r6, r2
 800c6f2:	3201      	adds	r2, #1
 800c6f4:	7830      	ldrb	r0, [r6, #0]
 800c6f6:	f7ff ff9f 	bl	800c638 <__hexdig_fun>
 800c6fa:	2800      	cmp	r0, #0
 800c6fc:	d1f8      	bne.n	800c6f0 <__gethex+0x8c>
 800c6fe:	1ba4      	subs	r4, r4, r6
 800c700:	00a7      	lsls	r7, r4, #2
 800c702:	7833      	ldrb	r3, [r6, #0]
 800c704:	f003 03df 	and.w	r3, r3, #223	@ 0xdf
 800c708:	2b50      	cmp	r3, #80	@ 0x50
 800c70a:	d13e      	bne.n	800c78a <__gethex+0x126>
 800c70c:	7873      	ldrb	r3, [r6, #1]
 800c70e:	2b2b      	cmp	r3, #43	@ 0x2b
 800c710:	d033      	beq.n	800c77a <__gethex+0x116>
 800c712:	2b2d      	cmp	r3, #45	@ 0x2d
 800c714:	d034      	beq.n	800c780 <__gethex+0x11c>
 800c716:	1c71      	adds	r1, r6, #1
 800c718:	2400      	movs	r4, #0
 800c71a:	7808      	ldrb	r0, [r1, #0]
 800c71c:	f7ff ff8c 	bl	800c638 <__hexdig_fun>
 800c720:	1e43      	subs	r3, r0, #1
 800c722:	b2db      	uxtb	r3, r3
 800c724:	2b18      	cmp	r3, #24
 800c726:	d830      	bhi.n	800c78a <__gethex+0x126>
 800c728:	f1a0 0210 	sub.w	r2, r0, #16
 800c72c:	f811 0f01 	ldrb.w	r0, [r1, #1]!
 800c730:	f7ff ff82 	bl	800c638 <__hexdig_fun>
 800c734:	f100 3cff 	add.w	ip, r0, #4294967295
 800c738:	fa5f fc8c 	uxtb.w	ip, ip
 800c73c:	f1bc 0f18 	cmp.w	ip, #24
 800c740:	f04f 030a 	mov.w	r3, #10
 800c744:	d91e      	bls.n	800c784 <__gethex+0x120>
 800c746:	b104      	cbz	r4, 800c74a <__gethex+0xe6>
 800c748:	4252      	negs	r2, r2
 800c74a:	4417      	add	r7, r2
 800c74c:	f8ca 1000 	str.w	r1, [sl]
 800c750:	b1ed      	cbz	r5, 800c78e <__gethex+0x12a>
 800c752:	f1bb 0f00 	cmp.w	fp, #0
 800c756:	bf0c      	ite	eq
 800c758:	2506      	moveq	r5, #6
 800c75a:	2500      	movne	r5, #0
 800c75c:	4628      	mov	r0, r5
 800c75e:	b005      	add	sp, #20
 800c760:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c764:	2500      	movs	r5, #0
 800c766:	462c      	mov	r4, r5
 800c768:	e7b0      	b.n	800c6cc <__gethex+0x68>
 800c76a:	2c00      	cmp	r4, #0
 800c76c:	d1c7      	bne.n	800c6fe <__gethex+0x9a>
 800c76e:	4627      	mov	r7, r4
 800c770:	e7c7      	b.n	800c702 <__gethex+0x9e>
 800c772:	464e      	mov	r6, r9
 800c774:	462f      	mov	r7, r5
 800c776:	2501      	movs	r5, #1
 800c778:	e7c3      	b.n	800c702 <__gethex+0x9e>
 800c77a:	2400      	movs	r4, #0
 800c77c:	1cb1      	adds	r1, r6, #2
 800c77e:	e7cc      	b.n	800c71a <__gethex+0xb6>
 800c780:	2401      	movs	r4, #1
 800c782:	e7fb      	b.n	800c77c <__gethex+0x118>
 800c784:	fb03 0002 	mla	r0, r3, r2, r0
 800c788:	e7ce      	b.n	800c728 <__gethex+0xc4>
 800c78a:	4631      	mov	r1, r6
 800c78c:	e7de      	b.n	800c74c <__gethex+0xe8>
 800c78e:	eba6 0309 	sub.w	r3, r6, r9
 800c792:	3b01      	subs	r3, #1
 800c794:	4629      	mov	r1, r5
 800c796:	2b07      	cmp	r3, #7
 800c798:	dc0a      	bgt.n	800c7b0 <__gethex+0x14c>
 800c79a:	9801      	ldr	r0, [sp, #4]
 800c79c:	f7fd ff84 	bl	800a6a8 <_Balloc>
 800c7a0:	4604      	mov	r4, r0
 800c7a2:	b940      	cbnz	r0, 800c7b6 <__gethex+0x152>
 800c7a4:	4b5c      	ldr	r3, [pc, #368]	@ (800c918 <__gethex+0x2b4>)
 800c7a6:	4602      	mov	r2, r0
 800c7a8:	21e4      	movs	r1, #228	@ 0xe4
 800c7aa:	485c      	ldr	r0, [pc, #368]	@ (800c91c <__gethex+0x2b8>)
 800c7ac:	f7ff fec0 	bl	800c530 <__assert_func>
 800c7b0:	3101      	adds	r1, #1
 800c7b2:	105b      	asrs	r3, r3, #1
 800c7b4:	e7ef      	b.n	800c796 <__gethex+0x132>
 800c7b6:	f100 0a14 	add.w	sl, r0, #20
 800c7ba:	2300      	movs	r3, #0
 800c7bc:	4655      	mov	r5, sl
 800c7be:	469b      	mov	fp, r3
 800c7c0:	45b1      	cmp	r9, r6
 800c7c2:	d337      	bcc.n	800c834 <__gethex+0x1d0>
 800c7c4:	f845 bb04 	str.w	fp, [r5], #4
 800c7c8:	eba5 050a 	sub.w	r5, r5, sl
 800c7cc:	10ad      	asrs	r5, r5, #2
 800c7ce:	6125      	str	r5, [r4, #16]
 800c7d0:	4658      	mov	r0, fp
 800c7d2:	f7fe f85b 	bl	800a88c <__hi0bits>
 800c7d6:	016d      	lsls	r5, r5, #5
 800c7d8:	f8d8 6000 	ldr.w	r6, [r8]
 800c7dc:	1a2d      	subs	r5, r5, r0
 800c7de:	42b5      	cmp	r5, r6
 800c7e0:	dd54      	ble.n	800c88c <__gethex+0x228>
 800c7e2:	1bad      	subs	r5, r5, r6
 800c7e4:	4629      	mov	r1, r5
 800c7e6:	4620      	mov	r0, r4
 800c7e8:	f7fe fbef 	bl	800afca <__any_on>
 800c7ec:	4681      	mov	r9, r0
 800c7ee:	b178      	cbz	r0, 800c810 <__gethex+0x1ac>
 800c7f0:	1e6b      	subs	r3, r5, #1
 800c7f2:	1159      	asrs	r1, r3, #5
 800c7f4:	f003 021f 	and.w	r2, r3, #31
 800c7f8:	f85a 1021 	ldr.w	r1, [sl, r1, lsl #2]
 800c7fc:	f04f 0901 	mov.w	r9, #1
 800c800:	fa09 f202 	lsl.w	r2, r9, r2
 800c804:	420a      	tst	r2, r1
 800c806:	d003      	beq.n	800c810 <__gethex+0x1ac>
 800c808:	454b      	cmp	r3, r9
 800c80a:	dc36      	bgt.n	800c87a <__gethex+0x216>
 800c80c:	f04f 0902 	mov.w	r9, #2
 800c810:	4629      	mov	r1, r5
 800c812:	4620      	mov	r0, r4
 800c814:	f7ff febe 	bl	800c594 <rshift>
 800c818:	442f      	add	r7, r5
 800c81a:	f8d8 3008 	ldr.w	r3, [r8, #8]
 800c81e:	42bb      	cmp	r3, r7
 800c820:	da42      	bge.n	800c8a8 <__gethex+0x244>
 800c822:	9801      	ldr	r0, [sp, #4]
 800c824:	4621      	mov	r1, r4
 800c826:	f7fd ff7f 	bl	800a728 <_Bfree>
 800c82a:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 800c82c:	2300      	movs	r3, #0
 800c82e:	6013      	str	r3, [r2, #0]
 800c830:	25a3      	movs	r5, #163	@ 0xa3
 800c832:	e793      	b.n	800c75c <__gethex+0xf8>
 800c834:	f816 2d01 	ldrb.w	r2, [r6, #-1]!
 800c838:	2a2e      	cmp	r2, #46	@ 0x2e
 800c83a:	d012      	beq.n	800c862 <__gethex+0x1fe>
 800c83c:	2b20      	cmp	r3, #32
 800c83e:	d104      	bne.n	800c84a <__gethex+0x1e6>
 800c840:	f845 bb04 	str.w	fp, [r5], #4
 800c844:	f04f 0b00 	mov.w	fp, #0
 800c848:	465b      	mov	r3, fp
 800c84a:	7830      	ldrb	r0, [r6, #0]
 800c84c:	9303      	str	r3, [sp, #12]
 800c84e:	f7ff fef3 	bl	800c638 <__hexdig_fun>
 800c852:	9b03      	ldr	r3, [sp, #12]
 800c854:	f000 000f 	and.w	r0, r0, #15
 800c858:	4098      	lsls	r0, r3
 800c85a:	ea4b 0b00 	orr.w	fp, fp, r0
 800c85e:	3304      	adds	r3, #4
 800c860:	e7ae      	b.n	800c7c0 <__gethex+0x15c>
 800c862:	45b1      	cmp	r9, r6
 800c864:	d8ea      	bhi.n	800c83c <__gethex+0x1d8>
 800c866:	492b      	ldr	r1, [pc, #172]	@ (800c914 <__gethex+0x2b0>)
 800c868:	9303      	str	r3, [sp, #12]
 800c86a:	2201      	movs	r2, #1
 800c86c:	4630      	mov	r0, r6
 800c86e:	f7ff fe13 	bl	800c498 <strncmp>
 800c872:	9b03      	ldr	r3, [sp, #12]
 800c874:	2800      	cmp	r0, #0
 800c876:	d1e1      	bne.n	800c83c <__gethex+0x1d8>
 800c878:	e7a2      	b.n	800c7c0 <__gethex+0x15c>
 800c87a:	1ea9      	subs	r1, r5, #2
 800c87c:	4620      	mov	r0, r4
 800c87e:	f7fe fba4 	bl	800afca <__any_on>
 800c882:	2800      	cmp	r0, #0
 800c884:	d0c2      	beq.n	800c80c <__gethex+0x1a8>
 800c886:	f04f 0903 	mov.w	r9, #3
 800c88a:	e7c1      	b.n	800c810 <__gethex+0x1ac>
 800c88c:	da09      	bge.n	800c8a2 <__gethex+0x23e>
 800c88e:	1b75      	subs	r5, r6, r5
 800c890:	4621      	mov	r1, r4
 800c892:	9801      	ldr	r0, [sp, #4]
 800c894:	462a      	mov	r2, r5
 800c896:	f7fe f95f 	bl	800ab58 <__lshift>
 800c89a:	1b7f      	subs	r7, r7, r5
 800c89c:	4604      	mov	r4, r0
 800c89e:	f100 0a14 	add.w	sl, r0, #20
 800c8a2:	f04f 0900 	mov.w	r9, #0
 800c8a6:	e7b8      	b.n	800c81a <__gethex+0x1b6>
 800c8a8:	f8d8 5004 	ldr.w	r5, [r8, #4]
 800c8ac:	42bd      	cmp	r5, r7
 800c8ae:	dd6f      	ble.n	800c990 <__gethex+0x32c>
 800c8b0:	1bed      	subs	r5, r5, r7
 800c8b2:	42ae      	cmp	r6, r5
 800c8b4:	dc34      	bgt.n	800c920 <__gethex+0x2bc>
 800c8b6:	f8d8 300c 	ldr.w	r3, [r8, #12]
 800c8ba:	2b02      	cmp	r3, #2
 800c8bc:	d022      	beq.n	800c904 <__gethex+0x2a0>
 800c8be:	2b03      	cmp	r3, #3
 800c8c0:	d024      	beq.n	800c90c <__gethex+0x2a8>
 800c8c2:	2b01      	cmp	r3, #1
 800c8c4:	d115      	bne.n	800c8f2 <__gethex+0x28e>
 800c8c6:	42ae      	cmp	r6, r5
 800c8c8:	d113      	bne.n	800c8f2 <__gethex+0x28e>
 800c8ca:	2e01      	cmp	r6, #1
 800c8cc:	d10b      	bne.n	800c8e6 <__gethex+0x282>
 800c8ce:	9a02      	ldr	r2, [sp, #8]
 800c8d0:	f8d8 3004 	ldr.w	r3, [r8, #4]
 800c8d4:	6013      	str	r3, [r2, #0]
 800c8d6:	2301      	movs	r3, #1
 800c8d8:	6123      	str	r3, [r4, #16]
 800c8da:	f8ca 3000 	str.w	r3, [sl]
 800c8de:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 800c8e0:	2562      	movs	r5, #98	@ 0x62
 800c8e2:	601c      	str	r4, [r3, #0]
 800c8e4:	e73a      	b.n	800c75c <__gethex+0xf8>
 800c8e6:	1e71      	subs	r1, r6, #1
 800c8e8:	4620      	mov	r0, r4
 800c8ea:	f7fe fb6e 	bl	800afca <__any_on>
 800c8ee:	2800      	cmp	r0, #0
 800c8f0:	d1ed      	bne.n	800c8ce <__gethex+0x26a>
 800c8f2:	9801      	ldr	r0, [sp, #4]
 800c8f4:	4621      	mov	r1, r4
 800c8f6:	f7fd ff17 	bl	800a728 <_Bfree>
 800c8fa:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 800c8fc:	2300      	movs	r3, #0
 800c8fe:	6013      	str	r3, [r2, #0]
 800c900:	2550      	movs	r5, #80	@ 0x50
 800c902:	e72b      	b.n	800c75c <__gethex+0xf8>
 800c904:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 800c906:	2b00      	cmp	r3, #0
 800c908:	d1f3      	bne.n	800c8f2 <__gethex+0x28e>
 800c90a:	e7e0      	b.n	800c8ce <__gethex+0x26a>
 800c90c:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 800c90e:	2b00      	cmp	r3, #0
 800c910:	d1dd      	bne.n	800c8ce <__gethex+0x26a>
 800c912:	e7ee      	b.n	800c8f2 <__gethex+0x28e>
 800c914:	0800d250 	.word	0x0800d250
 800c918:	0800d0e5 	.word	0x0800d0e5
 800c91c:	0800d3fe 	.word	0x0800d3fe
 800c920:	1e6f      	subs	r7, r5, #1
 800c922:	f1b9 0f00 	cmp.w	r9, #0
 800c926:	d130      	bne.n	800c98a <__gethex+0x326>
 800c928:	b127      	cbz	r7, 800c934 <__gethex+0x2d0>
 800c92a:	4639      	mov	r1, r7
 800c92c:	4620      	mov	r0, r4
 800c92e:	f7fe fb4c 	bl	800afca <__any_on>
 800c932:	4681      	mov	r9, r0
 800c934:	117a      	asrs	r2, r7, #5
 800c936:	2301      	movs	r3, #1
 800c938:	f85a 2022 	ldr.w	r2, [sl, r2, lsl #2]
 800c93c:	f007 071f 	and.w	r7, r7, #31
 800c940:	40bb      	lsls	r3, r7
 800c942:	4213      	tst	r3, r2
 800c944:	4629      	mov	r1, r5
 800c946:	4620      	mov	r0, r4
 800c948:	bf18      	it	ne
 800c94a:	f049 0902 	orrne.w	r9, r9, #2
 800c94e:	f7ff fe21 	bl	800c594 <rshift>
 800c952:	f8d8 7004 	ldr.w	r7, [r8, #4]
 800c956:	1b76      	subs	r6, r6, r5
 800c958:	2502      	movs	r5, #2
 800c95a:	f1b9 0f00 	cmp.w	r9, #0
 800c95e:	d047      	beq.n	800c9f0 <__gethex+0x38c>
 800c960:	f8d8 300c 	ldr.w	r3, [r8, #12]
 800c964:	2b02      	cmp	r3, #2
 800c966:	d015      	beq.n	800c994 <__gethex+0x330>
 800c968:	2b03      	cmp	r3, #3
 800c96a:	d017      	beq.n	800c99c <__gethex+0x338>
 800c96c:	2b01      	cmp	r3, #1
 800c96e:	d109      	bne.n	800c984 <__gethex+0x320>
 800c970:	f019 0f02 	tst.w	r9, #2
 800c974:	d006      	beq.n	800c984 <__gethex+0x320>
 800c976:	f8da 3000 	ldr.w	r3, [sl]
 800c97a:	ea49 0903 	orr.w	r9, r9, r3
 800c97e:	f019 0f01 	tst.w	r9, #1
 800c982:	d10e      	bne.n	800c9a2 <__gethex+0x33e>
 800c984:	f045 0510 	orr.w	r5, r5, #16
 800c988:	e032      	b.n	800c9f0 <__gethex+0x38c>
 800c98a:	f04f 0901 	mov.w	r9, #1
 800c98e:	e7d1      	b.n	800c934 <__gethex+0x2d0>
 800c990:	2501      	movs	r5, #1
 800c992:	e7e2      	b.n	800c95a <__gethex+0x2f6>
 800c994:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 800c996:	f1c3 0301 	rsb	r3, r3, #1
 800c99a:	930f      	str	r3, [sp, #60]	@ 0x3c
 800c99c:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 800c99e:	2b00      	cmp	r3, #0
 800c9a0:	d0f0      	beq.n	800c984 <__gethex+0x320>
 800c9a2:	f8d4 b010 	ldr.w	fp, [r4, #16]
 800c9a6:	f104 0314 	add.w	r3, r4, #20
 800c9aa:	ea4f 0a8b 	mov.w	sl, fp, lsl #2
 800c9ae:	eb03 018b 	add.w	r1, r3, fp, lsl #2
 800c9b2:	f04f 0c00 	mov.w	ip, #0
 800c9b6:	4618      	mov	r0, r3
 800c9b8:	f853 2b04 	ldr.w	r2, [r3], #4
 800c9bc:	f1b2 3fff 	cmp.w	r2, #4294967295
 800c9c0:	d01b      	beq.n	800c9fa <__gethex+0x396>
 800c9c2:	3201      	adds	r2, #1
 800c9c4:	6002      	str	r2, [r0, #0]
 800c9c6:	2d02      	cmp	r5, #2
 800c9c8:	f104 0314 	add.w	r3, r4, #20
 800c9cc:	d13c      	bne.n	800ca48 <__gethex+0x3e4>
 800c9ce:	f8d8 2000 	ldr.w	r2, [r8]
 800c9d2:	3a01      	subs	r2, #1
 800c9d4:	42b2      	cmp	r2, r6
 800c9d6:	d109      	bne.n	800c9ec <__gethex+0x388>
 800c9d8:	1171      	asrs	r1, r6, #5
 800c9da:	2201      	movs	r2, #1
 800c9dc:	f853 3021 	ldr.w	r3, [r3, r1, lsl #2]
 800c9e0:	f006 061f 	and.w	r6, r6, #31
 800c9e4:	fa02 f606 	lsl.w	r6, r2, r6
 800c9e8:	421e      	tst	r6, r3
 800c9ea:	d13a      	bne.n	800ca62 <__gethex+0x3fe>
 800c9ec:	f045 0520 	orr.w	r5, r5, #32
 800c9f0:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 800c9f2:	601c      	str	r4, [r3, #0]
 800c9f4:	9b02      	ldr	r3, [sp, #8]
 800c9f6:	601f      	str	r7, [r3, #0]
 800c9f8:	e6b0      	b.n	800c75c <__gethex+0xf8>
 800c9fa:	4299      	cmp	r1, r3
 800c9fc:	f843 cc04 	str.w	ip, [r3, #-4]
 800ca00:	d8d9      	bhi.n	800c9b6 <__gethex+0x352>
 800ca02:	68a3      	ldr	r3, [r4, #8]
 800ca04:	459b      	cmp	fp, r3
 800ca06:	db17      	blt.n	800ca38 <__gethex+0x3d4>
 800ca08:	6861      	ldr	r1, [r4, #4]
 800ca0a:	9801      	ldr	r0, [sp, #4]
 800ca0c:	3101      	adds	r1, #1
 800ca0e:	f7fd fe4b 	bl	800a6a8 <_Balloc>
 800ca12:	4681      	mov	r9, r0
 800ca14:	b918      	cbnz	r0, 800ca1e <__gethex+0x3ba>
 800ca16:	4b1a      	ldr	r3, [pc, #104]	@ (800ca80 <__gethex+0x41c>)
 800ca18:	4602      	mov	r2, r0
 800ca1a:	2184      	movs	r1, #132	@ 0x84
 800ca1c:	e6c5      	b.n	800c7aa <__gethex+0x146>
 800ca1e:	6922      	ldr	r2, [r4, #16]
 800ca20:	3202      	adds	r2, #2
 800ca22:	f104 010c 	add.w	r1, r4, #12
 800ca26:	0092      	lsls	r2, r2, #2
 800ca28:	300c      	adds	r0, #12
 800ca2a:	f7fc feda 	bl	80097e2 <memcpy>
 800ca2e:	4621      	mov	r1, r4
 800ca30:	9801      	ldr	r0, [sp, #4]
 800ca32:	f7fd fe79 	bl	800a728 <_Bfree>
 800ca36:	464c      	mov	r4, r9
 800ca38:	6923      	ldr	r3, [r4, #16]
 800ca3a:	1c5a      	adds	r2, r3, #1
 800ca3c:	eb04 0383 	add.w	r3, r4, r3, lsl #2
 800ca40:	6122      	str	r2, [r4, #16]
 800ca42:	2201      	movs	r2, #1
 800ca44:	615a      	str	r2, [r3, #20]
 800ca46:	e7be      	b.n	800c9c6 <__gethex+0x362>
 800ca48:	6922      	ldr	r2, [r4, #16]
 800ca4a:	455a      	cmp	r2, fp
 800ca4c:	dd0b      	ble.n	800ca66 <__gethex+0x402>
 800ca4e:	2101      	movs	r1, #1
 800ca50:	4620      	mov	r0, r4
 800ca52:	f7ff fd9f 	bl	800c594 <rshift>
 800ca56:	f8d8 3008 	ldr.w	r3, [r8, #8]
 800ca5a:	3701      	adds	r7, #1
 800ca5c:	42bb      	cmp	r3, r7
 800ca5e:	f6ff aee0 	blt.w	800c822 <__gethex+0x1be>
 800ca62:	2501      	movs	r5, #1
 800ca64:	e7c2      	b.n	800c9ec <__gethex+0x388>
 800ca66:	f016 061f 	ands.w	r6, r6, #31
 800ca6a:	d0fa      	beq.n	800ca62 <__gethex+0x3fe>
 800ca6c:	4453      	add	r3, sl
 800ca6e:	f1c6 0620 	rsb	r6, r6, #32
 800ca72:	f853 0c04 	ldr.w	r0, [r3, #-4]
 800ca76:	f7fd ff09 	bl	800a88c <__hi0bits>
 800ca7a:	42b0      	cmp	r0, r6
 800ca7c:	dbe7      	blt.n	800ca4e <__gethex+0x3ea>
 800ca7e:	e7f0      	b.n	800ca62 <__gethex+0x3fe>
 800ca80:	0800d0e5 	.word	0x0800d0e5

0800ca84 <L_shift>:
 800ca84:	f1c2 0208 	rsb	r2, r2, #8
 800ca88:	0092      	lsls	r2, r2, #2
 800ca8a:	b570      	push	{r4, r5, r6, lr}
 800ca8c:	f1c2 0620 	rsb	r6, r2, #32
 800ca90:	6843      	ldr	r3, [r0, #4]
 800ca92:	6804      	ldr	r4, [r0, #0]
 800ca94:	fa03 f506 	lsl.w	r5, r3, r6
 800ca98:	432c      	orrs	r4, r5
 800ca9a:	40d3      	lsrs	r3, r2
 800ca9c:	6004      	str	r4, [r0, #0]
 800ca9e:	f840 3f04 	str.w	r3, [r0, #4]!
 800caa2:	4288      	cmp	r0, r1
 800caa4:	d3f4      	bcc.n	800ca90 <L_shift+0xc>
 800caa6:	bd70      	pop	{r4, r5, r6, pc}

0800caa8 <__match>:
 800caa8:	b530      	push	{r4, r5, lr}
 800caaa:	6803      	ldr	r3, [r0, #0]
 800caac:	3301      	adds	r3, #1
 800caae:	f811 4b01 	ldrb.w	r4, [r1], #1
 800cab2:	b914      	cbnz	r4, 800caba <__match+0x12>
 800cab4:	6003      	str	r3, [r0, #0]
 800cab6:	2001      	movs	r0, #1
 800cab8:	bd30      	pop	{r4, r5, pc}
 800caba:	f813 2b01 	ldrb.w	r2, [r3], #1
 800cabe:	f1a2 0541 	sub.w	r5, r2, #65	@ 0x41
 800cac2:	2d19      	cmp	r5, #25
 800cac4:	bf98      	it	ls
 800cac6:	3220      	addls	r2, #32
 800cac8:	42a2      	cmp	r2, r4
 800caca:	d0f0      	beq.n	800caae <__match+0x6>
 800cacc:	2000      	movs	r0, #0
 800cace:	e7f3      	b.n	800cab8 <__match+0x10>

0800cad0 <__hexnan>:
 800cad0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800cad4:	680b      	ldr	r3, [r1, #0]
 800cad6:	6801      	ldr	r1, [r0, #0]
 800cad8:	115e      	asrs	r6, r3, #5
 800cada:	eb02 0686 	add.w	r6, r2, r6, lsl #2
 800cade:	f013 031f 	ands.w	r3, r3, #31
 800cae2:	b087      	sub	sp, #28
 800cae4:	bf18      	it	ne
 800cae6:	3604      	addne	r6, #4
 800cae8:	2500      	movs	r5, #0
 800caea:	1f37      	subs	r7, r6, #4
 800caec:	4682      	mov	sl, r0
 800caee:	4690      	mov	r8, r2
 800caf0:	9301      	str	r3, [sp, #4]
 800caf2:	f846 5c04 	str.w	r5, [r6, #-4]
 800caf6:	46b9      	mov	r9, r7
 800caf8:	463c      	mov	r4, r7
 800cafa:	9502      	str	r5, [sp, #8]
 800cafc:	46ab      	mov	fp, r5
 800cafe:	784a      	ldrb	r2, [r1, #1]
 800cb00:	1c4b      	adds	r3, r1, #1
 800cb02:	9303      	str	r3, [sp, #12]
 800cb04:	b342      	cbz	r2, 800cb58 <__hexnan+0x88>
 800cb06:	4610      	mov	r0, r2
 800cb08:	9105      	str	r1, [sp, #20]
 800cb0a:	9204      	str	r2, [sp, #16]
 800cb0c:	f7ff fd94 	bl	800c638 <__hexdig_fun>
 800cb10:	2800      	cmp	r0, #0
 800cb12:	d151      	bne.n	800cbb8 <__hexnan+0xe8>
 800cb14:	9a04      	ldr	r2, [sp, #16]
 800cb16:	9905      	ldr	r1, [sp, #20]
 800cb18:	2a20      	cmp	r2, #32
 800cb1a:	d818      	bhi.n	800cb4e <__hexnan+0x7e>
 800cb1c:	9b02      	ldr	r3, [sp, #8]
 800cb1e:	459b      	cmp	fp, r3
 800cb20:	dd13      	ble.n	800cb4a <__hexnan+0x7a>
 800cb22:	454c      	cmp	r4, r9
 800cb24:	d206      	bcs.n	800cb34 <__hexnan+0x64>
 800cb26:	2d07      	cmp	r5, #7
 800cb28:	dc04      	bgt.n	800cb34 <__hexnan+0x64>
 800cb2a:	462a      	mov	r2, r5
 800cb2c:	4649      	mov	r1, r9
 800cb2e:	4620      	mov	r0, r4
 800cb30:	f7ff ffa8 	bl	800ca84 <L_shift>
 800cb34:	4544      	cmp	r4, r8
 800cb36:	d952      	bls.n	800cbde <__hexnan+0x10e>
 800cb38:	2300      	movs	r3, #0
 800cb3a:	f1a4 0904 	sub.w	r9, r4, #4
 800cb3e:	f844 3c04 	str.w	r3, [r4, #-4]
 800cb42:	f8cd b008 	str.w	fp, [sp, #8]
 800cb46:	464c      	mov	r4, r9
 800cb48:	461d      	mov	r5, r3
 800cb4a:	9903      	ldr	r1, [sp, #12]
 800cb4c:	e7d7      	b.n	800cafe <__hexnan+0x2e>
 800cb4e:	2a29      	cmp	r2, #41	@ 0x29
 800cb50:	d157      	bne.n	800cc02 <__hexnan+0x132>
 800cb52:	3102      	adds	r1, #2
 800cb54:	f8ca 1000 	str.w	r1, [sl]
 800cb58:	f1bb 0f00 	cmp.w	fp, #0
 800cb5c:	d051      	beq.n	800cc02 <__hexnan+0x132>
 800cb5e:	454c      	cmp	r4, r9
 800cb60:	d206      	bcs.n	800cb70 <__hexnan+0xa0>
 800cb62:	2d07      	cmp	r5, #7
 800cb64:	dc04      	bgt.n	800cb70 <__hexnan+0xa0>
 800cb66:	462a      	mov	r2, r5
 800cb68:	4649      	mov	r1, r9
 800cb6a:	4620      	mov	r0, r4
 800cb6c:	f7ff ff8a 	bl	800ca84 <L_shift>
 800cb70:	4544      	cmp	r4, r8
 800cb72:	d936      	bls.n	800cbe2 <__hexnan+0x112>
 800cb74:	f1a8 0204 	sub.w	r2, r8, #4
 800cb78:	4623      	mov	r3, r4
 800cb7a:	f853 1b04 	ldr.w	r1, [r3], #4
 800cb7e:	f842 1f04 	str.w	r1, [r2, #4]!
 800cb82:	429f      	cmp	r7, r3
 800cb84:	d2f9      	bcs.n	800cb7a <__hexnan+0xaa>
 800cb86:	1b3b      	subs	r3, r7, r4
 800cb88:	f023 0303 	bic.w	r3, r3, #3
 800cb8c:	3304      	adds	r3, #4
 800cb8e:	3401      	adds	r4, #1
 800cb90:	3e03      	subs	r6, #3
 800cb92:	42b4      	cmp	r4, r6
 800cb94:	bf88      	it	hi
 800cb96:	2304      	movhi	r3, #4
 800cb98:	4443      	add	r3, r8
 800cb9a:	2200      	movs	r2, #0
 800cb9c:	f843 2b04 	str.w	r2, [r3], #4
 800cba0:	429f      	cmp	r7, r3
 800cba2:	d2fb      	bcs.n	800cb9c <__hexnan+0xcc>
 800cba4:	683b      	ldr	r3, [r7, #0]
 800cba6:	b91b      	cbnz	r3, 800cbb0 <__hexnan+0xe0>
 800cba8:	4547      	cmp	r7, r8
 800cbaa:	d128      	bne.n	800cbfe <__hexnan+0x12e>
 800cbac:	2301      	movs	r3, #1
 800cbae:	603b      	str	r3, [r7, #0]
 800cbb0:	2005      	movs	r0, #5
 800cbb2:	b007      	add	sp, #28
 800cbb4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800cbb8:	3501      	adds	r5, #1
 800cbba:	2d08      	cmp	r5, #8
 800cbbc:	f10b 0b01 	add.w	fp, fp, #1
 800cbc0:	dd06      	ble.n	800cbd0 <__hexnan+0x100>
 800cbc2:	4544      	cmp	r4, r8
 800cbc4:	d9c1      	bls.n	800cb4a <__hexnan+0x7a>
 800cbc6:	2300      	movs	r3, #0
 800cbc8:	f844 3c04 	str.w	r3, [r4, #-4]
 800cbcc:	2501      	movs	r5, #1
 800cbce:	3c04      	subs	r4, #4
 800cbd0:	6822      	ldr	r2, [r4, #0]
 800cbd2:	f000 000f 	and.w	r0, r0, #15
 800cbd6:	ea40 1002 	orr.w	r0, r0, r2, lsl #4
 800cbda:	6020      	str	r0, [r4, #0]
 800cbdc:	e7b5      	b.n	800cb4a <__hexnan+0x7a>
 800cbde:	2508      	movs	r5, #8
 800cbe0:	e7b3      	b.n	800cb4a <__hexnan+0x7a>
 800cbe2:	9b01      	ldr	r3, [sp, #4]
 800cbe4:	2b00      	cmp	r3, #0
 800cbe6:	d0dd      	beq.n	800cba4 <__hexnan+0xd4>
 800cbe8:	f1c3 0320 	rsb	r3, r3, #32
 800cbec:	f04f 32ff 	mov.w	r2, #4294967295
 800cbf0:	40da      	lsrs	r2, r3
 800cbf2:	f856 3c04 	ldr.w	r3, [r6, #-4]
 800cbf6:	4013      	ands	r3, r2
 800cbf8:	f846 3c04 	str.w	r3, [r6, #-4]
 800cbfc:	e7d2      	b.n	800cba4 <__hexnan+0xd4>
 800cbfe:	3f04      	subs	r7, #4
 800cc00:	e7d0      	b.n	800cba4 <__hexnan+0xd4>
 800cc02:	2004      	movs	r0, #4
 800cc04:	e7d5      	b.n	800cbb2 <__hexnan+0xe2>

0800cc06 <__ascii_mbtowc>:
 800cc06:	b082      	sub	sp, #8
 800cc08:	b901      	cbnz	r1, 800cc0c <__ascii_mbtowc+0x6>
 800cc0a:	a901      	add	r1, sp, #4
 800cc0c:	b142      	cbz	r2, 800cc20 <__ascii_mbtowc+0x1a>
 800cc0e:	b14b      	cbz	r3, 800cc24 <__ascii_mbtowc+0x1e>
 800cc10:	7813      	ldrb	r3, [r2, #0]
 800cc12:	600b      	str	r3, [r1, #0]
 800cc14:	7812      	ldrb	r2, [r2, #0]
 800cc16:	1e10      	subs	r0, r2, #0
 800cc18:	bf18      	it	ne
 800cc1a:	2001      	movne	r0, #1
 800cc1c:	b002      	add	sp, #8
 800cc1e:	4770      	bx	lr
 800cc20:	4610      	mov	r0, r2
 800cc22:	e7fb      	b.n	800cc1c <__ascii_mbtowc+0x16>
 800cc24:	f06f 0001 	mvn.w	r0, #1
 800cc28:	e7f8      	b.n	800cc1c <__ascii_mbtowc+0x16>

0800cc2a <_realloc_r>:
 800cc2a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800cc2e:	4680      	mov	r8, r0
 800cc30:	4615      	mov	r5, r2
 800cc32:	460c      	mov	r4, r1
 800cc34:	b921      	cbnz	r1, 800cc40 <_realloc_r+0x16>
 800cc36:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800cc3a:	4611      	mov	r1, r2
 800cc3c:	f7fd bca8 	b.w	800a590 <_malloc_r>
 800cc40:	b92a      	cbnz	r2, 800cc4e <_realloc_r+0x24>
 800cc42:	f7fd fc31 	bl	800a4a8 <_free_r>
 800cc46:	2400      	movs	r4, #0
 800cc48:	4620      	mov	r0, r4
 800cc4a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800cc4e:	f000 f840 	bl	800ccd2 <_malloc_usable_size_r>
 800cc52:	4285      	cmp	r5, r0
 800cc54:	4606      	mov	r6, r0
 800cc56:	d802      	bhi.n	800cc5e <_realloc_r+0x34>
 800cc58:	ebb5 0f50 	cmp.w	r5, r0, lsr #1
 800cc5c:	d8f4      	bhi.n	800cc48 <_realloc_r+0x1e>
 800cc5e:	4629      	mov	r1, r5
 800cc60:	4640      	mov	r0, r8
 800cc62:	f7fd fc95 	bl	800a590 <_malloc_r>
 800cc66:	4607      	mov	r7, r0
 800cc68:	2800      	cmp	r0, #0
 800cc6a:	d0ec      	beq.n	800cc46 <_realloc_r+0x1c>
 800cc6c:	42b5      	cmp	r5, r6
 800cc6e:	462a      	mov	r2, r5
 800cc70:	4621      	mov	r1, r4
 800cc72:	bf28      	it	cs
 800cc74:	4632      	movcs	r2, r6
 800cc76:	f7fc fdb4 	bl	80097e2 <memcpy>
 800cc7a:	4621      	mov	r1, r4
 800cc7c:	4640      	mov	r0, r8
 800cc7e:	f7fd fc13 	bl	800a4a8 <_free_r>
 800cc82:	463c      	mov	r4, r7
 800cc84:	e7e0      	b.n	800cc48 <_realloc_r+0x1e>

0800cc86 <__ascii_wctomb>:
 800cc86:	4603      	mov	r3, r0
 800cc88:	4608      	mov	r0, r1
 800cc8a:	b141      	cbz	r1, 800cc9e <__ascii_wctomb+0x18>
 800cc8c:	2aff      	cmp	r2, #255	@ 0xff
 800cc8e:	d904      	bls.n	800cc9a <__ascii_wctomb+0x14>
 800cc90:	228a      	movs	r2, #138	@ 0x8a
 800cc92:	601a      	str	r2, [r3, #0]
 800cc94:	f04f 30ff 	mov.w	r0, #4294967295
 800cc98:	4770      	bx	lr
 800cc9a:	700a      	strb	r2, [r1, #0]
 800cc9c:	2001      	movs	r0, #1
 800cc9e:	4770      	bx	lr

0800cca0 <fiprintf>:
 800cca0:	b40e      	push	{r1, r2, r3}
 800cca2:	b503      	push	{r0, r1, lr}
 800cca4:	4601      	mov	r1, r0
 800cca6:	ab03      	add	r3, sp, #12
 800cca8:	4805      	ldr	r0, [pc, #20]	@ (800ccc0 <fiprintf+0x20>)
 800ccaa:	f853 2b04 	ldr.w	r2, [r3], #4
 800ccae:	6800      	ldr	r0, [r0, #0]
 800ccb0:	9301      	str	r3, [sp, #4]
 800ccb2:	f7ff f9b1 	bl	800c018 <_vfiprintf_r>
 800ccb6:	b002      	add	sp, #8
 800ccb8:	f85d eb04 	ldr.w	lr, [sp], #4
 800ccbc:	b003      	add	sp, #12
 800ccbe:	4770      	bx	lr
 800ccc0:	20000040 	.word	0x20000040

0800ccc4 <abort>:
 800ccc4:	b508      	push	{r3, lr}
 800ccc6:	2006      	movs	r0, #6
 800ccc8:	f000 f834 	bl	800cd34 <raise>
 800cccc:	2001      	movs	r0, #1
 800ccce:	f7f6 fbbb 	bl	8003448 <_exit>

0800ccd2 <_malloc_usable_size_r>:
 800ccd2:	f851 3c04 	ldr.w	r3, [r1, #-4]
 800ccd6:	1f18      	subs	r0, r3, #4
 800ccd8:	2b00      	cmp	r3, #0
 800ccda:	bfbc      	itt	lt
 800ccdc:	580b      	ldrlt	r3, [r1, r0]
 800ccde:	18c0      	addlt	r0, r0, r3
 800cce0:	4770      	bx	lr

0800cce2 <_raise_r>:
 800cce2:	291f      	cmp	r1, #31
 800cce4:	b538      	push	{r3, r4, r5, lr}
 800cce6:	4605      	mov	r5, r0
 800cce8:	460c      	mov	r4, r1
 800ccea:	d904      	bls.n	800ccf6 <_raise_r+0x14>
 800ccec:	2316      	movs	r3, #22
 800ccee:	6003      	str	r3, [r0, #0]
 800ccf0:	f04f 30ff 	mov.w	r0, #4294967295
 800ccf4:	bd38      	pop	{r3, r4, r5, pc}
 800ccf6:	6bc2      	ldr	r2, [r0, #60]	@ 0x3c
 800ccf8:	b112      	cbz	r2, 800cd00 <_raise_r+0x1e>
 800ccfa:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 800ccfe:	b94b      	cbnz	r3, 800cd14 <_raise_r+0x32>
 800cd00:	4628      	mov	r0, r5
 800cd02:	f000 f831 	bl	800cd68 <_getpid_r>
 800cd06:	4622      	mov	r2, r4
 800cd08:	4601      	mov	r1, r0
 800cd0a:	4628      	mov	r0, r5
 800cd0c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800cd10:	f000 b818 	b.w	800cd44 <_kill_r>
 800cd14:	2b01      	cmp	r3, #1
 800cd16:	d00a      	beq.n	800cd2e <_raise_r+0x4c>
 800cd18:	1c59      	adds	r1, r3, #1
 800cd1a:	d103      	bne.n	800cd24 <_raise_r+0x42>
 800cd1c:	2316      	movs	r3, #22
 800cd1e:	6003      	str	r3, [r0, #0]
 800cd20:	2001      	movs	r0, #1
 800cd22:	e7e7      	b.n	800ccf4 <_raise_r+0x12>
 800cd24:	2100      	movs	r1, #0
 800cd26:	f842 1024 	str.w	r1, [r2, r4, lsl #2]
 800cd2a:	4620      	mov	r0, r4
 800cd2c:	4798      	blx	r3
 800cd2e:	2000      	movs	r0, #0
 800cd30:	e7e0      	b.n	800ccf4 <_raise_r+0x12>
	...

0800cd34 <raise>:
 800cd34:	4b02      	ldr	r3, [pc, #8]	@ (800cd40 <raise+0xc>)
 800cd36:	4601      	mov	r1, r0
 800cd38:	6818      	ldr	r0, [r3, #0]
 800cd3a:	f7ff bfd2 	b.w	800cce2 <_raise_r>
 800cd3e:	bf00      	nop
 800cd40:	20000040 	.word	0x20000040

0800cd44 <_kill_r>:
 800cd44:	b538      	push	{r3, r4, r5, lr}
 800cd46:	4d07      	ldr	r5, [pc, #28]	@ (800cd64 <_kill_r+0x20>)
 800cd48:	2300      	movs	r3, #0
 800cd4a:	4604      	mov	r4, r0
 800cd4c:	4608      	mov	r0, r1
 800cd4e:	4611      	mov	r1, r2
 800cd50:	602b      	str	r3, [r5, #0]
 800cd52:	f7f6 fb69 	bl	8003428 <_kill>
 800cd56:	1c43      	adds	r3, r0, #1
 800cd58:	d102      	bne.n	800cd60 <_kill_r+0x1c>
 800cd5a:	682b      	ldr	r3, [r5, #0]
 800cd5c:	b103      	cbz	r3, 800cd60 <_kill_r+0x1c>
 800cd5e:	6023      	str	r3, [r4, #0]
 800cd60:	bd38      	pop	{r3, r4, r5, pc}
 800cd62:	bf00      	nop
 800cd64:	200007f0 	.word	0x200007f0

0800cd68 <_getpid_r>:
 800cd68:	f7f6 bb56 	b.w	8003418 <_getpid>

0800cd6c <_init>:
 800cd6c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800cd6e:	bf00      	nop
 800cd70:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800cd72:	bc08      	pop	{r3}
 800cd74:	469e      	mov	lr, r3
 800cd76:	4770      	bx	lr

0800cd78 <_fini>:
 800cd78:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800cd7a:	bf00      	nop
 800cd7c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800cd7e:	bc08      	pop	{r3}
 800cd80:	469e      	mov	lr, r3
 800cd82:	4770      	bx	lr
